{"version":3,"sources":["components/loader/data/item.js","utils/constants.js","components/loader/data/index.js","components/loader/dots.js","components/error/index.js","components/chat/messages/user/text.js","utils/logger.js","utils/data/validators.js","utils/builder.js","utils/data/storage.js","utils/hash.js","utils/params.js","utils/data/index.js","components/chat/messages/info.js","components/utils/icon/index.js","components/utils/avatar/index.js","utils/data/handlers.js","components/chat/messages/margin.js","utils/synchronizer.js","utils/player.js","components/chat/messages/message.js","components/chat/messages/user/index.js","components/chat/messages/system/poll/options.js","components/chat/messages/system/poll/question.js","components/chat/messages/system/poll/result.js","components/chat/messages/system/message.js","components/chat/messages/system/poll/index.js","components/chat/messages/system/video/url.js","components/chat/messages/system/video/index.js","components/chat/messages/index.js","components/utils/hooks/index.js","components/chat/index.js","components/notes/index.js","components/player/application/content.js","utils/layout.js","components/player/application/control.js","components/player/application/index.js","components/presentation/cursor.js","components/presentation/slide/proxy.js","components/presentation/slide/index.js","components/presentation/canvas/poll.js","components/presentation/canvas/index.js","components/presentation/index.js","components/screenshare/index.js","components/thumbnails/image.js","components/thumbnails/thumbnail.js","components/thumbnails/item.js","components/utils/button/index.js","components/thumbnails/buttons/clear.js","components/thumbnails/index.js","components/player/buttons/fullscreen.js","components/player/content/index.js","components/webcams/index.js","components/player/media/index.js","components/modals/about/body/data/item.js","components/modals/about/body/data/index.js","components/modals/about/body/shortcuts/key.js","components/modals/about/body/shortcuts/index.js","components/modals/about/body/index.js","components/modals/about/footer.js","components/modals/about/header.js","components/utils/modal/index.js","components/modals/about/index.js","components/modals/search/body.js","components/modals/search/footer.js","components/modals/search/header.js","utils/actions.js","components/modals/search/index.js","components/player/modal/index.js","components/bars/bottom.js","components/bars/top/title.js","components/bars/top/buttons/search.js","components/bars/top/buttons/section.js","components/bars/top/buttons/swap.js","components/bars/top/index.js","locales/index.js","utils/shortcuts.js","components/player/index.js","components/loader/index.js","components/router.js","locales/messages/index.js","index.js"],"names":["Item","icon","value","className","cx","loaded","style","transition","defaultProps","BUILD","process","MEDIA_ROOT_URL","REACT_APP_MEDIA_ROOT_URL","NO_ROUTER","REACT_APP_NO_ROUTER","ERROR","EVENTS","TIME_UPDATE","ID","CONTENT","LAYOUT","NUMBERS","POSITIONS","ROLES","SHAPES","ROUTER","Data","data","map","item","Dots","areEqual","React","memo","intlMessages","defineMessages","aria","id","description","Error","code","intl","useIntl","formatMessage","Text","active","hyperlink","text","options","inactive","params","URLSearchParams","window","location","search","debug","has","logger","info","console","warn","error","hasPresentation","slides","isEmpty","i","length","src","includes","hasProperty","object","property","hasOwnProperty","isActive","time","timestamp","clear","cleared","wasCleared","visible","isVisible","isCurrent","index","hasIndex","current","next","isArray","isValid","isString","isEqual","first","second","type","equal","every","valid","Array","getAttr","attr","getChildren","children","getId","match","parseInt","shift","getNumbers","trimmed","trim","replace","split","v","parseFloat","buildCanvases","group","canvases","canvas","canvasAttr","canvasId","g","drawAttr","undo","items","forEach","buildStyle","drawId","shape","image","rect","Object","assign","polyline","line","polygon","circle","path","switch","foreignObject","child","grandchildren","grandchild","join","parseText","slide","found","find","splice","buildShapes","result","svg","img","slideId","in","push","height","width","sort","a","b","buildSlides","thumbnails","reduce","build","filename","Promise","resolve","reject","fileType","getFileType","config","alternates","presentation","buildAlternates","captions","polls","buildPolls","videos","r","url","external_video_url","buildVideos","notes","buildNotes","shapes","explicitChildren","preserveChildrenOrder","charsAsChildren","getOptions","parseStringPromise","then","chat","popcorn","chattimeline","out","message","decodeXML","clearHyperlink","initials","name","slice","toLowerCase","getInitials","emphasized","chatEmphasizedText","moderator","senderRole","buildChat","cursor","recording","event","position","x","y","buildCursor","metadata","meeting","meta","end","end_time","participants","start","start_time","buildMetadata","panzooms","panzoom","viewbox","viewBox","buildPanzooms","screenshare","start_timestamp","stop_timestamp","buildScreenshare","catch","STATE","STATUS","DATA","FALLBACK","hasLoaded","keys","files","fetchFile","recordId","onUpdate","onLoaded","onError","file","buildFileURL","fetch","response","ok","json","content","fetchMedia","fetches","medias","method","all","responses","media","endsWith","tryMediaFallback","storage","status","fallback","built","this","messages","thumbnail","alt","addAlternatesToThumbnails","hash","str","charCodeAt","getMediaPath","param","getSearchParam","mediaPath","get","parseTimeToSeconds","patterns","hours","minutes","seconds","timeToSeconds","h","m","s","rootUrl","fileUrl","getBar","percentage","bar","p","half","repeat","ltr","document","dir","concat","getCurrentContent","SCREENSHARE","PRESENTATION","isEnabled","getCurrentDataIndex","stop","middle","Math","floor","pop","POLL_TYPES","YN","YNA","TF","POLL_KEYS","Info","milliseconds","getTimestampAsMilliseconds","hourCycle","hour","minute","timeZone","Icon","Avatar","getAvatarStyle","handleOnEnterPress","action","key","handleAutoScroll","fNode","cNode","direction","align","pNode","parentNode","scrollLeft","firstNode","currentNode","clientWidth","offsetLeft","spacing","parentWidth","horizontalOffset","getScrollLeft","scrollTop","clientHeight","offsetTop","parentHeight","verticalOffset","getScrollTop","Margin","onClick","onKeyPress","tabIndex","STATUSES","Synchronizer","primary","secondary","synching","init","on","play","pause","currentTime","playbackRate","addEventListener","visibilityState","PLAYERS","SYNCHRONIZER","player","webcams","synchronizer","Message","User","prevProps","nextProps","yes","no","abstention","true","false","Options","answers","label","getPollLabel","question","Question","Result","responders","total","numVotes","toFixed","Poll","Url","Video","Messages","currentIndex","setRef","getMessageType","ref","node","useCurrentContent","useState","currentContent","setCurrentContent","useEffect","handleTimeUpdate","nextContent","detail","removeEventListener","useCurrentIndex","setCurrentIndex","nextIndex","useCurrentInterval","interval","currentInterval","setCurrentInterval","sameIndex","nextInterval","currentDataInterval","getCurrentDataInterval","sameInterval","Chat","interaction","useRef","scroll","onMouseEnter","onMouseLeave","Notes","dangerouslySetInnerHTML","__html","Content","MODE","layout","mode","control","DISABLED","section","MEDIA","swap","SWAPPED","single","hasFullscreenButton","controls","fullscreen","isContentVisible","APPLICATIONS","Control","toggleApplication","application","DEFAULT","Application","setCurrent","Cursor","currentData","getCursor","cy","Proxy","Slide","href","fill","stroke","strokeWidth","transform","getCanvasData","Canvas","canvasData","j","intermediate","x1","y1","x2","y2","d","points","xmlns","buildViewBoxAttr","Presentation","currentPanzoomIndex","getViewBox","started","logo","xmlnsXlink","clipPath","Screenshare","sources","filter","source","element","video","videojs","buildOptions","dispose","playsInline","preload","Image","Thumbnail","interactive","handleOnClick","Button","disabled","solid","default","Clear","Thumbnails","handleSearch","isFiltered","restore","Fullscreen","toggleFullscreen","dispatchTimeUpdate","CustomEvent","dispatchEvent","Webcams","tracks","lang","locale","localeName","kind","srclang","controlBar","fullscreenToggle","pictureInPictureToggle","volumePanel","inline","vertical","inactivityTimeout","playbackRates","rates","frequency","getFrequency","setInterval","rps","clearInterval","getTime","duration","Media","Key","SHORTCUTS","getCode","shortcut","title","Shortcuts","Body","Footer","Header","subtitle","date","enabled","Date","day","month","year","close","Modal","onClose","About","handleClose","handleOnChange","maxLength","max","minLength","min","onChange","currentDataIndex","seek","skip","change","Search","setDisabled","setSearch","target","getValue","indexOf","getSearch","modal","Bottom","about","Title","openAbout","openSearch","Section","toggleSection","Swap","toggleSwap","Top","openModal","actions","prop","listeners","add","k","listener","e","altKey","shiftKey","Player","setFullscreen","setModal","setSection","setSwap","shortcuts","prevFullscreen","paused","prevSection","backward","forward","previous","prevSwap","destroy","Loader","counter","getRecordId","initError","setError","setUpdate","setLoaded","setTimeout","Router","basename","component","render","af","ar","az","bg_BG","bn","ca","cs_CZ","da","de","dv","el_GR","en","eo","es","es_419","es_ES","es_MX","et","eu","fa_IR","fi","fr","gl","he","hi_IN","hr","hu_HU","hy","it_IT","ja","ka","km","kn","ko_KR","lt_LT","lo_LA","lv","ml","mn_MN","nb_NO","nl","oc","pt","pt_BR","pl_PL","ro_RO","ru","sk_SK","sl","sr","sv_SE","ta","te","th","tr","tr_TR","uk_UA","vi","vi_VN","zh_CN","zh_TW","RTL_LOCALES","navigator","language","body","setAttribute","setDirection","getLocale","styles","getStyle","ReactDOM","rel","getElementById"],"mappings":"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","file":"static/js/main.cbdcba19.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst TRANSITION = .5;\n\nconst propTypes = {\n  icon: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n};\n\nconst defaultProps = {\n  icon: '',\n  value: false,\n};\n\nconst Item = ({\n  icon,\n  value,\n}) => {\n\n  return (\n    <div\n      className={cx('item', { loaded: value })}\n      style={{ transition: `opacity ${TRANSITION}s ease-in` }}\n    >\n      <div className={`icon-${icon}`} />\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","const BUILD = process.env.REACT_APP_BBB_PLAYBACK_BUILD;\nconst MEDIA_ROOT_URL = process.env.REACT_APP_MEDIA_ROOT_URL;\nconst NO_ROUTER = process.env.REACT_APP_NO_ROUTER;\n\nconst ERROR = {\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  NOT_ACCEPTABLE: 406,\n  PROXY_AUTHENTICATION_REQUIRED: 407,\n  REQUEST_TIMEOUT: 408,\n  CONFLICT: 409,\n  GONE: 410,\n};\n\nconst EVENT_PREFIX = 'bbbplayback';\n\nconst EVENTS = {\n  TIME_UPDATE: `${EVENT_PREFIX}timeupdate`,\n};\n\nconst ID = {\n  ABOUT: 'about',\n  ALTERNATES: 'alternates',\n  CANVASES: 'canvases',\n  CAPTIONS: 'captions',\n  CHAT: 'chat',\n  CURSOR: 'cursor',\n  DESKSHARE: 'deskshare',\n  ERROR: 'error',\n  LOADER: 'loader',\n  MEDIA: 'media',\n  MESSAGES: 'messages',\n  METADATA: 'metadata',\n  NOTES: 'notes',\n  PANZOOMS: 'panzooms',\n  PLAYER: 'player',\n  POLLS: 'polls',\n  PRESENTATION: 'presentation',\n  SCREENSHARE: 'screenshare',\n  SEARCH: 'search',\n  SETTINGS: 'settings',\n  SHAPES: 'shapes',\n  SLIDES: 'slides',\n  STORAGE: 'storage',\n  SWAP: 'swap',\n  THUMBNAILS: 'thumbnails',\n  USERS: 'users',\n  VIDEOS: 'videos',\n  WEBCAMS: 'webcams',\n};\n\nconst CONTENT = [\n  ID.PRESENTATION,\n  ID.CHAT,\n  ID.POLLS,\n  ID.VIDEOS,\n  ID.NOTES,\n  ID.SCREENSHARE,\n  ID.CAPTIONS,\n];\n\nconst LAYOUT = {\n  CONTENT: 'content',\n  DISABLED: 'disabled',\n  MEDIA: 'media',\n  SWAPPED: 'swapped',\n};\n\nconst NUMBERS = [\n  'zero', 'one', 'two', 'three',\n  'four', 'five', 'six', 'seven',\n  'eight', 'nine', 'ten', 'eleven',\n  'twelve', 'thirteen', 'fourteen', 'fifteen',\n];\n\nconst POSITIONS = {\n  BOTTOM: 'bottom',\n  CENTER: 'center',\n  LEFT: 'left',\n  MIDDLE: 'middle',\n  RIGHT: 'right',\n  TOP: 'top',\n};\n\nconst ROLES = {\n  MODERATOR: 'MODERATOR',\n  VIEWER: 'VIEWER',\n};\n\nconst SHAPES = {\n  CIRCLE: 'circle',\n  LINE: 'line',\n  PATH: 'path',\n  POLL: 'poll',\n  POLYGON: 'polygon',\n  POLYLINE: 'polyline',\n  TEXT: 'text',\n};\n\nconst getRouter = () => {\n  if (typeof NO_ROUTER !== 'undefined') {\n    if (NO_ROUTER) return false;\n  }\n\n  return true;\n};\n\nconst ROUTER = getRouter();\n\nexport {\n  BUILD,\n  CONTENT,\n  ERROR,\n  EVENTS,\n  ID,\n  LAYOUT,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  POSITIONS,\n  ROLES,\n  ROUTER,\n  SHAPES,\n};\n","import React from 'react';\nimport Item from './item';\nimport { CONTENT } from 'utils/constants';\nimport './index.scss';\n\nconst Data = ({ data }) => {\n\n  return (\n    <div className=\"data-wrapper\">\n       {CONTENT.map((item) => (\n        <Item\n          icon={item}\n          key={item}\n          value={data[item]}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Data;\n","import React from 'react';\nimport './index.scss';\n\nconst Dots = () => {\n\n  return (\n    <div className=\"dots-wrapper\">\n      <div className=\"first\" />\n      <div className=\"second\" />\n      <div className=\"third\" />\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Dots, areEqual);\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'error.wrapper.aria',\n    description: 'Aria label for the error wrapper',\n  },\n});\n\nconst Error = ({ code }) => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"error-wrapper\"\n      id={ID.ERROR}\n    >\n      <div className=\"error-code\">\n        {code}\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  text: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  hyperlink: false,\n  text: '',\n};\n\nconst Text = ({\n  active,\n  hyperlink,\n  text,\n}) => {\n  if (hyperlink) {\n    const options = {\n      className: cx('linkified', { inactive: !active }),\n    };\n\n    return (\n      <Linkify options={options}>\n        {text}\n      </Linkify>\n    );\n  }\n\n  return <>{text}</>;\n};\n\nText.propTypes = propTypes;\nText.defaultProps = defaultProps;\n\nexport default Text;\n","const params = new URLSearchParams(window.location.search);\nconst debug = params ? params.has('debug') : false;\n\nconst logger = {\n  info: (...msg) => console.info(...msg),\n  debug: (...msg) => debug ? console.debug(...msg) : null,\n  warn: (...msg) => debug ? console.warn(...msg) : null,\n  error: (...msg) => console.error(...msg),\n};\n\nexport default logger;\n","import { LAYOUT } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst hasIndex = (index, data) => {\n  if (index < 0) return false;\n\n  if (isEmpty(data)) return false;\n\n  if (index >= data.length) {\n    logger.error('out of bounds', index, data);\n\n    return false;\n  }\n\n  return true;\n};\n\nconst hasPresentation = slides => {\n  if (isEmpty(slides)) return false;\n\n  for (let i = 0; i < slides.length; i++) {\n    const { src } = slides[i];\n\n    if (src.includes('slide')) return true;\n  }\n\n  return false;\n};\n\nconst hasProperty = (object, property) => {\n  if (object && object.hasOwnProperty(property)) {\n    if (typeof object[property] !== 'undefined') return true;\n  }\n\n  logger.warn('missing', property, object);\n\n  return false;\n};\n\nconst isActive = (time, timestamp, clear = -1) => {\n  const cleared = wasCleared(time, clear);\n  const visible = isVisible(time, timestamp);\n\n  return visible && !cleared;\n};\n\nconst isContentVisible = (layout, swap) => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let visible;\n  switch (layout) {\n    case  CONTENT:\n      visible = !swap;\n      break;\n    case MEDIA:\n      visible = swap;\n      break;\n    default:\n      visible = false;\n  }\n\n  return visible;\n};\n\nconst isCurrent = (data, index, time) => {\n  if (!hasIndex(index, data)) return false;\n\n  const item = data[index];\n  if (!hasProperty(item, 'timestamp')) return false;\n\n  let current = false;\n  if (isVisible(time, item.timestamp)) {\n    if (index + 1 < data.length) {\n      const next = data[index + 1];\n      if (hasProperty(next, 'timestamp')) {\n        current = !isVisible(time, next.timestamp);\n      }\n    } else {\n      current = true;\n    }\n  }\n\n  return current;\n};\n\nconst isDefined = data => typeof data !== 'undefined';\n\nconst isEmpty = data => {\n  const isArray = isValid('array', data);\n  const isString = isValid('string', data);\n  if (!isArray && !isString) return true;\n\n  const empty = data.length === 0;\n\n  return empty;\n};\n\nconst isEnabled = (data, time) => {\n  if (isEmpty(data)) return false;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      // Check if it was activated and did not ended\n      if (isActive(time, timestamp, clear)) return true;\n\n      // Check if we are searching over the present time value\n      if (!isVisible(time, timestamp)) return false;\n    } else {\n      // Invalid item\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst isEqual = (first, second, type = 'array') => {\n  let equal = false;\n\n  switch (type) {\n    case 'array':\n      if (first.length === second.length) {\n        equal = first.every((value, index) => value === second[index])\n      }\n\n      return equal;\n    default:\n      return equal;\n  }\n};\n\nconst isValid = (type, data) => {\n  let valid = false;\n\n  switch (type) {\n    case 'array':\n      if (Array.isArray(data)) valid = true;\n      break;\n    case 'string':\n      if (typeof data === type) valid = true;\n      break;\n    default:\n      logger.debug('unhandled', type);\n  }\n\n  return valid;\n};\n\nconst isVisible = (time, timestamp) => timestamp <= time;\n\nconst wasCleared = (time, clear) => clear !== -1 && clear <= time;\n\nexport {\n  hasIndex,\n  hasPresentation,\n  hasProperty,\n  isActive,\n  isContentVisible,\n  isCurrent,\n  isDefined,\n  isEmpty,\n  isEnabled,\n  isEqual,\n  isValid,\n  isVisible,\n  wasCleared,\n};\n","import { parseStringPromise } from 'xml2js';\nimport { files as config } from 'config';\nimport { getFileType } from './data';\nimport {\n  hasProperty,\n  isEmpty,\n} from './data/validators';\nimport {\n  ID,\n  ROLES,\n  SHAPES,\n} from './constants';\nimport logger from './logger';\n\nconst getAttr = data => {\n  if (!data) return {};\n\n  const attr = data['$'];\n  if (!attr) return {};\n\n  return attr;\n};\n\nconst getChildren = data => {\n  if (!data) return [];\n\n  const children = data['$$'];\n  if (!children) return [];\n\n  return children;\n};\n\nconst getId = data => {\n  if (!data) return -1;\n\n  const id = data.match(/\\d+$/);\n  if (!id || id.length === 0) return -1;\n\n  return parseInt(id.shift(), 10);\n};\n\nconst getNumbers = data => {\n  if (!data) return [];\n\n  const trimmed = data.trim().replace(/  +/g, ' ');\n  if (trimmed.length === 0) return [];\n\n  const split = trimmed.split(' ');\n  const numbers = split.map(v => parseFloat(v));\n\n  return numbers;\n};\n\nconst buildAlternates = result => {\n  if (!result) return [];\n\n  let data = [];\n  for (const presentation in result) {\n    if (hasProperty(result, presentation)) {\n      const slides = result[presentation];\n\n      for (const slide in slides) {\n        if (hasProperty(slides, slide)) {\n          const text = slides[slide];\n\n          data.push({\n            src: `presentation/${presentation}/${slide}.png`,\n            text,\n          });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\n// TODO\nconst buildCaptions = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\n// TODO\nconst buildPolls = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\nconst buildVideos = result => {\n  if (!result) return [];\n\n  const data = result.map(r => {\n    return {\n      timestamp: r.timestamp,\n      url: r.external_video_url,\n    };\n  });\n\n  return data;\n};\n\nconst buildMetadata = result => {\n  let data = {};\n  const { recording } = result;\n\n  if (hasProperty(recording, 'meeting')) {\n    const attr = getAttr(recording.meeting.shift());\n    const { id } = attr;\n    const meta = recording.meta.shift();\n    const end = parseInt(recording.end_time.shift(), 10);\n    const name = meta.name ? meta.name.shift() : attr.name;\n    const participants = parseInt(recording.participants.shift(), 10);\n    const start = parseInt(recording.start_time.shift(), 10);\n\n    data = {\n      end,\n      id,\n      name,\n      participants,\n      start,\n    };\n  }\n\n  return data;\n};\n\nconst buildNotes = result => {\n  if (!result) return '';\n\n  // Extract the notes' body\n  const regex = /<body>\\n.*\\n<\\/body>/g;\n  const match = result.match(regex);\n\n  let data = '';\n  if (!isEmpty(match)) {\n    data = match.shift();\n  }\n\n  return data;\n};\n\nconst buildStyle = data => {\n  const items = data.split(';');\n  let style = {};\n\n  items.forEach(item => {\n    const trimmed = item.trim();\n\n    if (trimmed.length === 0) return;\n\n    const split = trimmed.split(':').map(i => i.trim());\n\n    // Remove visibility\n    if (split[0] === 'visibility') return;\n\n    style[split[0]] = split[1];\n  });\n\n  return style;\n};\n\nconst buildSlides = image => {\n  let slides = [];\n\n  if (image) {\n    image.forEach(img => {\n      const attr = getAttr(img);\n      const src = attr['xlink:href'];\n\n      // Skip the logo\n      if (!src) return;\n\n      // Get the number from the id name\n      const slideId = getId(attr.id);\n      const timestamps = getNumbers(attr.in);\n\n      timestamps.forEach(timestamp => {\n        slides.push({\n          id: slideId,\n          height: parseInt(attr.height),\n          src,\n          timestamp,\n          width: parseInt(attr.width),\n        });\n      });\n    });\n\n    slides = slides.sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  return slides;\n};\n\nconst buildThumbnails = slides => {\n  const prefix = 'slide-';\n  const url = 'thumbnails/thumb-';\n\n  return slides.reduce((result, slide) => {\n    const {\n      id,\n      src,\n      timestamp,\n    } = slide;\n\n    if (src.includes(ID.DESKSHARE)) {\n      result.push({\n        id,\n        src: ID.SCREENSHARE,\n        timestamp,\n      });\n    } else {\n      result.push({\n        id,\n        src: src.replace(prefix, url),\n        timestamp,\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nconst parseText = data => {\n  let text = '';\n\n  const children = getChildren(data);\n  if (!isEmpty(children)) {\n    const child = children.shift();\n    const grandchildren = getChildren(child);\n    if (!isEmpty(grandchildren)) {\n      text = grandchildren.map(grandchild => {\n        const name = grandchild['#name'];\n        if (name === 'br') return '\\r';\n\n        return grandchild['_'];\n      }).join('');\n    }\n  }\n\n  return text;\n};\n\nconst buildCanvases = (group, slides) => {\n  let canvases = [];\n\n  if (group) {\n    canvases = group.map(canvas => {\n      const canvasAttr = getAttr(canvas);\n      const canvasId = getId(canvasAttr.id);\n\n      let data = canvas.g.map(g => {\n        const drawAttr = getAttr(g);\n        const timestamp = parseFloat(drawAttr.timestamp);\n        const clear = parseFloat(drawAttr.undo);\n        const style = buildStyle(drawAttr.style);\n        const drawId = getId(drawAttr.shape);\n\n        let shape = {};\n        if (g.image) {\n          shape.type = SHAPES.POLL;\n          const image = getAttr(g.image.shift());\n          // TODO: Better adapt for old versions\n          // Versions prior to 2.3 included a rect structure along with an image\n          if (g.rect) {\n            const rect = getAttr(g.rect.shift());\n            shape.data = Object.assign({ rect }, { image });\n          } else {\n            shape.data = Object.assign({ image });\n          }\n        } else if (g.polyline) {\n          shape.type = SHAPES.POLYLINE;\n          shape.data = Object.assign({}, getAttr(g.polyline.shift()));\n        } else if (g.line) {\n          shape.type = SHAPES.LINE;\n          shape.data = Object.assign({}, getAttr(g.line.shift()));\n        } else if (g.polygon) {\n          shape.type = SHAPES.POLYGON;\n          shape.data = Object.assign({}, getAttr(g.polygon.shift()));\n        } else if (g.circle) {\n          shape.type = SHAPES.CIRCLE;\n          shape.data = Object.assign({}, getAttr(g.circle.shift()));\n        } else if (g.path) {\n          shape.type = SHAPES.PATH;\n          shape.data = Object.assign({}, getAttr(g.path.shift()));\n        } else if (g.switch) {\n          shape.type = SHAPES.TEXT;\n          const foreignObject = g.switch.shift()['foreignObject'].shift();\n          const text = parseText(foreignObject);\n          shape.data = Object.assign({ text }, getAttr(foreignObject));\n        }\n\n        return {\n          clear,\n          id: drawId,\n          shape,\n          style,\n          timestamp,\n        };\n      });\n\n      return {\n        data,\n        id: canvasId,\n      };\n    });\n  }\n\n  slides.forEach((slide, index) => {\n    const found = canvases.find(canvas => canvas.id === slide.id);\n    if (found) {\n      canvases[index].timestamp = slide.timestamp;\n    } else {\n      const canvas = {\n        data: [],\n        id: slide.id,\n        timestamp: slide.timestamp,\n      };\n\n      canvases.splice(index, 0, canvas);\n    }\n  });\n\n  return canvases;\n};\n\nconst buildShapes = result => {\n  let data = {};\n  const { svg } = result;\n\n  if (svg) {\n    const {\n      image,\n      g,\n    } = svg;\n\n    data.slides = buildSlides(image);\n    data.thumbnails = buildThumbnails(data.slides);\n    data.canvases = buildCanvases(g, data.slides);\n  }\n\n  return data;\n};\n\nconst buildPanzooms = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(panzoom => {\n      const attr = getAttr(panzoom);\n      const viewbox = getNumbers(panzoom.viewBox.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: viewbox.shift(),\n        y: viewbox.shift(),\n        width: viewbox.shift(),\n        height: viewbox.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildCursor = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(cursor => {\n      const attr = getAttr(cursor);\n      const position = getNumbers(cursor.cursor.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: position.shift(),\n        y: position.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst clearHyperlink = message => {\n  const regex = /<a href=\"(.*)\" rel=\"nofollow\"><u>\\1<\\/u><\\/a>/g;\n\n  return message.replace(regex, '$1');\n};\n\nconst decodeXML = message => {\n  return message\n    .replace(/&(quot|#34);/g, '\"')\n    .replace(/&(amp|#38);/g, '&')\n    .replace(/&(apos|#39);/g, \"'\")\n    .replace(/&(lt|#60);/g, '<')\n    .replace(/&(gt|#62);/g, '>');\n};\n\nconst getInitials = name => {\n  let initials;\n\n  if (name) {\n    initials = name\n      .slice(0, 2)\n      .toLowerCase()\n      .trim();\n  }\n\n  return initials;\n};\n\nconst buildChat = result => {\n  const { popcorn } = result;\n  let data = [];\n\n  if (hasProperty(popcorn, 'chattimeline')) {\n    const { chattimeline } = popcorn;\n    data = chattimeline.map(chat => {\n      const attr = getAttr(chat);\n      const clear = attr.out ? parseFloat(attr.out) : -1;\n      const message = decodeXML(clearHyperlink(attr.message));\n      const initials = getInitials(attr.name);\n      const emphasized = attr.chatEmphasizedText === 'true';\n      const moderator = attr.senderRole === ROLES.MODERATOR;\n\n      return {\n        clear,\n        emphasized,\n        hyperlink: message !== attr.message,\n        initials,\n        name: attr.name,\n        message,\n        moderator,\n        timestamp: parseFloat(attr.in),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildScreenshare = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(screenshare => {\n      const attr = getAttr(screenshare);\n\n      return {\n        timestamp: parseFloat(attr.start_timestamp),\n        clear: parseFloat(attr.stop_timestamp),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst getOptions = filename => {\n  let options = {};\n\n  switch (filename) {\n    case config.shapes:\n      options = {\n        explicitChildren: true,\n        preserveChildrenOrder: true,\n        charsAsChildren: true,\n      };\n      break;\n    default:\n  }\n\n  return options;\n};\n\nconst build = (filename, value) => {\n  return new Promise((resolve, reject) => {\n    let data;\n    const fileType = getFileType(filename);\n\n    if (fileType === 'json') {\n      switch (filename) {\n        case config.alternates:\n          data = buildAlternates(value);\n          break;\n        case config.captions:\n          data = buildCaptions(value);\n          break;\n        case config.polls:\n          data = buildPolls(value);\n          break;\n        case config.videos:\n          data = buildVideos(value);\n          break;\n        default:\n          logger.debug('unhandled', 'json', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else if (fileType === 'html') {\n      switch (filename) {\n        case config.notes:\n          data = buildNotes(value);\n          break;\n        default:\n          logger.debug('unhandled', 'html', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else {\n      if (!value) {\n        logger.warn('missing', filename);\n\n        return resolve(null);\n      }\n\n      // Parse XML data\n      const options = getOptions(filename);\n      parseStringPromise(value, options).then(result => {\n        switch (filename) {\n          case config.chat:\n            data = buildChat(result);\n            break;\n          case config.cursor:\n            data = buildCursor(result);\n            break;\n          case config.metadata:\n            data = buildMetadata(result);\n            break;\n          case config.panzooms:\n            data = buildPanzooms(result);\n            break;\n          case config.screenshare:\n            data = buildScreenshare(result);\n            break;\n          case config.shapes:\n            data = buildShapes(result);\n            break;\n          default:\n            logger.debug('unhandled', 'xml', filename);\n            reject(filename);\n        }\n        resolve(data);\n      }).catch(error => reject(error));\n    }\n  });\n};\n\nconst addAlternatesToThumbnails = (thumbnails, alternates) => {\n  const prefix = 'thumbnails/thumb-';\n  const url = 'slide-';\n\n  return thumbnails.map(thumbnail => {\n    const { src } = thumbnail;\n    thumbnail.alt = '';\n\n    const found = alternates.find(alt => src.replace(prefix, url) === alt.src);\n    if (found) thumbnail.alt = found.text;\n\n    return thumbnail;\n  });\n};\n\nconst mergeMessages = (chat, polls, videos) => {\n  return [\n    ...chat,\n    ...polls,\n    ...videos,\n  ].sort((a, b) => a.timestamp - b.timestamp);\n};\n\nexport {\n  addAlternatesToThumbnails,\n  build,\n  buildStyle,\n  decodeXML,\n  getAttr,\n  getId,\n  getNumbers,\n  mergeMessages,\n};\n","import {\n  files,\n  medias,\n} from 'config';\nimport {\n  addAlternatesToThumbnails,\n  build,\n  mergeMessages,\n} from 'utils/builder';\nimport {\n  ERROR,\n  ID,\n} from 'utils/constants';\nimport {\n  buildFileURL,\n  getFileType,\n} from 'utils/data';\nimport {\n  hasPresentation,\n  hasProperty,\n  isEmpty,\n} from 'utils/data/validators';\nimport logger from 'utils/logger';\n\nconst STATE = {\n  WAITING: 'waiting',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n};\n\nlet STATUS = STATE.WAITING;\n\nconst DATA = {};\n\nlet FALLBACK = false;\n\nconst hasFetched = () => {\n  if (STATUS !== STATE.WAITING) return true;\n\n  logger.debug(ID.STORAGE, STATE.LOADING);\n  STATUS = STATE.LOADING;\n\n  return false;\n}\n\nconst hasLoaded = () => {\n  const stored = Object.keys(DATA).length;\n  const data = Object.keys(files).length;\n\n  if (stored > data) {\n    logger.debug(ID.STORAGE, STATE.LOADED);\n    STATUS = STATE.LOADED;\n\n    return true;\n  }\n\n  return false;\n};\n\nconst fetchFile = (data, recordId, onUpdate, onLoaded, onError) => {\n  const file = files[data];\n  const url = buildFileURL(file, recordId);\n  fetch(url).then(response => {\n    if (response.ok) {\n      logger.debug(ID.STORAGE, file, response);\n      const fileType = getFileType(file);\n      switch (fileType) {\n        case 'json':\n          return response.json();\n        case 'html':\n          return response.text();\n        case 'svg':\n          return response.text();\n        case 'xml':\n          return response.text();\n        default:\n          onError(ERROR.BAD_REQUEST);\n          return null;\n      }\n    } else {\n      logger.warn(ID.STORAGE, file, response);\n      return null;\n    }\n  }).then(value => {\n    build(file, value).then(content => {\n      if (content) logger.debug(ID.STORAGE, 'builded', file);\n      DATA[data] = content;\n      onUpdate(data);\n      if (hasLoaded()) onLoaded();\n    }).catch(error => onError(ERROR.BAD_REQUEST));\n  }).catch(error => onError(ERROR.NOT_FOUND));\n};\n\nconst fetchMedia = (recordId, onUpdate, onLoaded, onError) => {\n  const fetches = medias.map(type => {\n    const url = buildFileURL(`video/webcams.${type}`, recordId);\n    return fetch(url, { method: 'HEAD' });\n  });\n\n  Promise.all(fetches).then(responses => {\n    const media = [];\n    responses.forEach(response => {\n      const { ok, url } = response;\n      if (ok) {\n        logger.debug(ID.STORAGE, ID.MEDIA, response);\n        media.push(medias.find(type => url.endsWith(type)));\n      }\n    });\n\n    if (media.length > 0) {\n      DATA[ID.MEDIA] = media;\n      onUpdate(ID.MEDIA);\n      if (hasLoaded()) onLoaded();\n    } else {\n      tryMediaFallback(recordId, onUpdate, onLoaded, onError);\n    }\n  });\n};\n\n// Try playing old recording formats with audio only\n// IMPORTANT: This will only work for webm format\n//\n// TODO: Add support for mp3 format\nconst tryMediaFallback = (recordId, onUpdate, onLoaded, onError) => {\n  const url = buildFileURL('audio/audio.webm', recordId);\n  fetch(url, { method: 'HEAD' }).then(response => {\n    const { ok } = response;\n    if (ok) {\n      logger.debug(ID.STORAGE, ID.MEDIA, response);\n      FALLBACK = true;\n      DATA[ID.MEDIA] = ['webm'];\n      onUpdate(ID.MEDIA);\n      if (hasLoaded()) onLoaded();\n    } else {\n      onError(ERROR.NOT_FOUND);\n    }\n  });\n};\n\nconst storage = {\n  fetch: (recordId, onUpdate, onLoaded, onError) => {\n    if (hasFetched()) return null;\n\n    for (const data in files) {\n      fetchFile(data, recordId, onUpdate, onLoaded, onError);\n    }\n\n    fetchMedia(recordId, onUpdate, onLoaded, onError);\n  },\n  get status() {\n    return STATUS;\n  },\n  get data() {\n    return DATA;\n  },\n  get fallback() {\n    return FALLBACK;\n  },\n  get built() {\n    return {\n      captions: hasProperty(DATA, ID.CAPTIONS),\n      chat: hasProperty(DATA, ID.CHAT),\n      notes: hasProperty(DATA, ID.NOTES),\n      polls: hasProperty(DATA, ID.POLLS),\n      videos: hasProperty(DATA, ID.VIDEOS),\n      presentation: hasProperty(DATA, ID.SHAPES),\n      screenshare: hasProperty(DATA, ID.SCREENSHARE),\n    };\n  },\n  get content() {\n    return {\n      captions: !isEmpty(this.captions),\n      chat: !isEmpty(this.chat),\n      notes: !isEmpty(this.notes),\n      polls: !isEmpty(this.polls),\n      videos: !isEmpty(this.videos),\n      presentation: hasPresentation(this.slides),\n      screenshare: !isEmpty(this.screenshare),\n    };\n  },\n  get alternates() {\n    return DATA[ID.ALTERNATES];\n  },\n  get captions() {\n    return DATA[ID.CAPTIONS];\n  },\n  get chat() {\n    return DATA[ID.CHAT];\n  },\n  get polls() {\n    return DATA[ID.POLLS];\n  },\n  get videos() {\n    return DATA[ID.VIDEOS];\n  },\n  get cursor() {\n    return DATA[ID.CURSOR];\n  },\n  get media() {\n    return DATA[ID.MEDIA];\n  },\n  get messages() {\n    if (!hasProperty(DATA, ID.MESSAGES)) {\n      DATA[ID.MESSAGES] = mergeMessages(\n        this.chat,\n        this.polls,\n        this.videos,\n      );\n    }\n\n    return DATA[ID.MESSAGES];\n  },\n  get metadata() {\n    return DATA[ID.METADATA];\n  },\n  get notes() {\n    return DATA[ID.NOTES];\n  },\n  get panzooms() {\n    return DATA[ID.PANZOOMS];\n  },\n  get screenshare() {\n    return DATA[ID.SCREENSHARE];\n  },\n  get shapes() {\n    return DATA[ID.SHAPES];\n  },\n  get slides() {\n    return this.shapes[ID.SLIDES];\n  },\n  get canvases() {\n    return this.shapes[ID.CANVASES];\n  },\n  get thumbnails() {\n    if (!hasProperty(DATA, ID.THUMBNAILS)) {\n      DATA[ID.THUMBNAILS] = addAlternatesToThumbnails(this.shapes[ID.THUMBNAILS], this.alternates);\n    }\n\n    return DATA[ID.THUMBNAILS];\n  },\n};\n\nexport default storage;\n","// @ironwallaby's string-hash\n// https://github.com/darkskyapp/string-hash\nconst hash = (str) => {\n  let hash = 5381;\n\n  let i = str.length;\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n};\n\nexport default hash;\n","import config from 'config';\nimport { ROUTER } from './constants';\nimport logger from './logger';\n\nconst getFrequency = () => {\n  const param = getSearchParam('f');\n\n  if (param) return parseFloat(param);\n\n  return null;\n};\n\nconst getLayout = () => {\n  const param = getSearchParam('l');\n\n  if (param) return param;\n\n  return null;\n};\n\nconst getMediaPath = () => {\n  const param = getSearchParam('p');\n\n  let mediaPath = '';\n  if (param) mediaPath = param;\n\n  return mediaPath;\n};\n\nconst getRecordId = match => {\n  if (!ROUTER) return 'local';\n\n  if (match) {\n    const { params } = match;\n    if (params && params.recordId) {\n      const { recordId } = params;\n      const regex = /^[a-z0-9]{40}-[0-9]{13}$/;\n\n      if (recordId.match(regex)) return recordId;\n    }\n  }\n\n  logger.error('missing', 'recordId');\n\n  return null;\n};\n\nconst getSearchParam = (name) => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params && params.has(name)) {\n    const param = params.get(name);\n\n    return param;\n  }\n\n  return null;\n};\n\nconst getStyle = () => {\n  const param = getSearchParam('s');\n  const { styles } = config;\n  const { url } = styles;\n\n  let style = styles.default ? `${url}/${styles.default}.css` : null;\n  if (param) {\n    const { valid } = styles;\n    if (valid.includes(param)) {\n      style = `${url}/${param}.css`;\n    }\n  }\n\n  return style;\n};\n\nconst getTime = () => {\n  const param = getSearchParam('t');\n\n  if (param) return parseTimeToSeconds(param);\n\n  return null;\n};\n\nconst parseTimeToSeconds = time => {\n  const patterns = [\n    /^(\\d+)h(\\d+)m(\\d+)s$/,\n    /^(\\d+)m(\\d+)s$/,\n    /^(\\d+)s$/,\n  ];\n\n  for (let i = 0; i < patterns.length; i++) {\n    if (time.match(patterns[i])) {\n      const hours = time.match(/(\\d+)h/);\n      const minutes = time.match(/(\\d+)m/);\n      const seconds = time.match(/(\\d+)s/);\n\n      let timeToSeconds = 0;\n\n      if (hours) {\n        const h = parseInt(hours[1]);\n        if (h >= 0) timeToSeconds += h * 3600;\n      }\n\n      if (minutes) {\n        const m = parseInt(minutes[1]);\n        if (m >= 0 && m < 60) {\n          timeToSeconds += m * 60;\n        } else {\n          return null;\n        }\n      }\n\n      if (seconds) {\n        const s = parseInt(seconds[1]);\n        if (s >= 0 && s < 60) {\n          timeToSeconds += s;\n        } else {\n          return null;\n        }\n      }\n\n      return timeToSeconds;\n    }\n  }\n\n  return null;\n};\n\nexport {\n  getFrequency,\n  getLayout,\n  getMediaPath,\n  getRecordId,\n  getStyle,\n  getSearchParam,\n  getTime,\n  parseTimeToSeconds,\n};\n","import {\n  ID,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  ROUTER,\n} from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport {\n  hasProperty,\n  isCurrent,\n  isEmpty,\n  isEnabled,\n  isVisible,\n  wasCleared,\n} from 'utils/data/validators';\nimport hash from 'utils/hash';\nimport { getMediaPath } from 'utils/params';\n\nconst buildFileURL = (file, recordId = null) => {\n  if (!ROUTER) return file;\n\n  const mediaPath = getMediaPath();\n\n  const rootUrl = MEDIA_ROOT_URL ? MEDIA_ROOT_URL : '/presentation';\n\n  const id = recordId ? recordId : storage.metadata.id;\n  let fileUrl = `${id}/${file}`;\n  if (mediaPath) fileUrl = `${mediaPath}/${fileUrl}`;\n\n  return `${rootUrl}/${fileUrl}`;\n};\n\nconst getAvatarStyle = name => {\n  const index = hash(name) % NUMBERS.length;\n\n  return `avatar-${NUMBERS[index]}`;\n};\n\nconst FULL_BLOCK = '█';\nconst LEFT_HALF_BLOCK = '▌';\nconst RIGHT_HALF_BLOCK = '▐';\nconst EMPTY_BLOCK = '-';\n\nconst getBar = (percentage) => {\n  const p = parseInt(percentage);\n\n  let bar;\n  if (p === 0) {\n    bar = EMPTY_BLOCK;\n  } else {\n    const full = p / 10;\n    const half = (p % 10) > 2;\n\n    bar = FULL_BLOCK.repeat(full);\n\n    if (half) {\n      // Add true fallback for the tests\n      const ltr = document.dir ? document.dir === 'ltr' : true;\n      bar = bar.concat(ltr ? LEFT_HALF_BLOCK : RIGHT_HALF_BLOCK);\n    }\n  }\n\n  return bar;\n};\n\nconst getCurrentContent = (time) => {\n  const {\n    SCREENSHARE,\n    PRESENTATION,\n  } = ID;\n\n  const content = isEnabled(storage.screenshare, time) ? SCREENSHARE : PRESENTATION;\n\n  return content;\n};\n\nconst getCurrentDataIndex = (data, time) => {\n  if (isEmpty(data)) return -1;\n\n  let start = 0;\n  let stop = data.length - 1;\n  let middle = Math.floor((start + stop) / 2);\n\n  while (!isCurrent(data, middle, time) && start < stop) {\n    const item = data[middle];\n    if (!hasProperty(item, 'timestamp')) return -1;\n\n    if (!isVisible(time, item.timestamp)) {\n      stop = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n\n    middle = Math.floor((start + stop) / 2);\n  }\n\n  const current = isCurrent(data, middle, time);\n\n  return (!current) ? -1 : middle;\n};\n\nconst getCurrentDataInterval = (data, time) => {\n  const currentDataInterval = [];\n\n  if (isEmpty(data)) return currentDataInterval;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      if (!isVisible(time, timestamp)) break;\n\n      currentDataInterval.push(!wasCleared(time, clear));\n    }\n  }\n\n  return currentDataInterval;\n};\n\nconst getFileType = file => file.split('.').pop();\n\nconst getPercentage = (value, total) => {\n  if (total === 0) return 0;\n\n  return ((value / total) * 100).toFixed(1);\n};\n\nconst POLL_TYPES = {\n  YN: 'YN',\n  YNA: 'YNA',\n  TF: 'TF',\n};\n\nconst POLL_KEYS = [\n  'Yes',\n  'No',\n  'Abstention',\n  'True',\n  'False',\n];\n\nconst getPollLabel = (key, type) => {\n  if (!POLL_TYPES[type]) return null;\n\n  if (!POLL_KEYS.includes(key)) return null;\n\n  return key.toLowerCase();\n};\n\nconst getMessageType = (item) => {\n  if (typeof item.message === 'string') return ID.USERS;\n  if (typeof item.question === 'string') return ID.POLLS;\n  if (typeof item.url === 'string') return ID.VIDEOS;\n\n  return 'undefined';\n};\n\nconst getTimestampAsMilliseconds = timestamp => timestamp * 1000;\n\nexport {\n  buildFileURL,\n  getAvatarStyle,\n  getBar,\n  getCurrentContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getFileType,\n  getMessageType,\n  getPercentage,\n  getPollLabel,\n  getTimestampAsMilliseconds,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedTime } from 'react-intl';\nimport cx from 'classnames';\nimport { getTimestampAsMilliseconds } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  name: '',\n  timestamp: 0,\n};\n\nconst Info = ({\n  active,\n  name,\n  timestamp,\n}) => {\n  const milliseconds = getTimestampAsMilliseconds(timestamp);\n\n  return (\n    <div className=\"info\">\n      <div className={cx('name', { inactive: !active })}>\n        {name}\n      </div>\n      <div className={cx('time', { inactive: !active })}>\n        <FormattedTime\n          hourCycle=\"h23\"\n          hour=\"numeric\"\n          minute=\"numeric\"\n          second=\"numeric\"\n          timeZone=\"UTC\"\n          value={milliseconds}\n        />\n      </div>\n    </div>\n  );\n};\n\nInfo.propTypes = propTypes;\nInfo.defaultProps = defaultProps;\n\nexport default Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nconst propTypes = { name: PropTypes.string };\n\nconst defaultProps = { name: '' };\n\nconst Icon = ({ name }) => {\n\n  return <span className={`icon-${name}`} />;\n};\n\nIcon.propTypes = propTypes;\nIcon.defaultProps = defaultProps;\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport { getAvatarStyle } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n};\n\nconst defaultProps = {\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n};\n\nconst Avatar = ({\n  circle,\n  icon,\n  initials,\n  name,\n}) => {\n  // TODO: this should become a property\n  const style = initials.length > 0 ? getAvatarStyle(name) : 'avatar-default';\n\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className={cx('avatar', { circle }, style)}>\n        {icon ? (\n          <Icon name={icon} />\n        ) : (\n          <span className=\"initials\">\n            {initials}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nAvatar.propTypes = propTypes;\nAvatar.defaultProps = defaultProps;\n\nexport default Avatar;\n","import { POSITIONS } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst getScrollLeft = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientWidth,\n    offsetLeft,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const ltr = document.dir === 'ltr';\n  const spacing = ltr ? firstNode.offsetLeft : 0;\n  const parentWidth = parentNode.clientWidth;\n\n  let horizontalOffset = 0;\n  switch (align) {\n    case POSITIONS.LEFT:\n      horizontalOffset = offsetLeft - spacing;\n      break;\n    case POSITIONS.CENTER:\n      horizontalOffset = parseInt(offsetLeft + (clientWidth - spacing - parentWidth) / 2, 10);\n      break;\n    case POSITIONS.RIGHT:\n      horizontalOffset = offsetLeft + clientWidth - parentWidth;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return horizontalOffset;\n};\n\nconst getScrollTop = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientHeight,\n    offsetTop,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetTop;\n  const parentHeight = parentNode.clientHeight;\n\n  let verticalOffset = 0;\n  switch (align) {\n    case POSITIONS.TOP:\n      verticalOffset = offsetTop - spacing;\n      break;\n    case POSITIONS.MIDDLE:\n      verticalOffset = parseInt(offsetTop + (clientHeight - spacing - parentHeight) / 2, 10);\n      break;\n    case POSITIONS.BOTTOM:\n      verticalOffset = offsetTop + clientHeight - parentHeight;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return verticalOffset;\n};\n\nconst handleOnEnterPress = (event, action) => {\n  if (event && event.key === 'Enter') {\n    if (typeof action === 'function') action();\n  }\n};\n\nconst handleAutoScroll = (fNode, cNode, direction, align) => {\n  // Auto-scroll can start after getting the first and current nodes\n  if (fNode && cNode) {\n    const { parentNode: pNode } = cNode;\n\n    switch (direction) {\n      case POSITIONS.LEFT:\n        pNode.scrollLeft = getScrollLeft(fNode, cNode, align);\n        break;\n      case POSITIONS.TOP:\n        pNode.scrollTop = getScrollTop(fNode, cNode, align);\n        break;\n      default:\n        logger.debug('unhandled', direction);\n    }\n  }\n};\n\nexport {\n  getScrollLeft,\n  getScrollTop,\n  handleAutoScroll,\n  handleOnEnterPress,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n  onClick: () => {},\n};\n\nconst Margin = ({\n  active,\n  circle,\n  icon,\n  initials,\n  name,\n  onClick,\n}) => {\n  const style = {\n    circle,\n    inactive: !active,\n  };\n\n  return (\n    <div\n      className={cx('interactive', style)}\n      onClick={onClick}\n      onKeyPress={event => handleOnEnterPress(event, onClick)}\n      tabIndex=\"0\"\n    >\n      <Avatar\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n      />\n    </div>\n  );\n};\n\nMargin.propTypes = propTypes;\nMargin.defaultProps = defaultProps;\n\nexport default Margin;\n","import logger from './logger';\n\nconst STATUSES = [\n  'canplay',\n  'seeking',\n  'waiting',\n];\n\nconst EVENTS = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'interruptbegin',\n  'interruptend',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'mozaudioavailable',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  //'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\nexport default class Synchronizer {\n  constructor(primary, secondary) {\n    this.primary = primary;\n    this.secondary = secondary;\n\n    this.status = {\n      primary: 'waiting',\n      secondary: 'waiting',\n    }\n\n    this.synching = false;\n\n    this.init();\n  }\n\n  init() {\n    STATUSES.forEach(status => {\n      this.primary.on(status, () => this.status.primary = status);\n      this.secondary.on(status, () => this.status.secondary = status);\n    });\n\n    this.primary.on('play', () => this.secondary.play());\n    this.primary.on('pause', () => this.secondary.pause());\n\n    this.primary.on('seeking', () => {\n      const currentTime = this.primary.currentTime();\n      this.secondary.currentTime(currentTime);\n    });\n\n    this.primary.on('ratechange', () => {\n      const playbackRate = this.primary.playbackRate();\n      this.secondary.playbackRate(playbackRate);\n    });\n\n    this.primary.on('waiting', () => {\n      if (!this.synching && this.status.secondary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.primary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    this.secondary.on('waiting', () => {\n      if (!this.synching && this.status.primary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.secondary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    // IMPORTANT: Blink holds the secondary media down while the document\n    // page is not visible\n    // Force medias to sync on visibility change and document is visible\n    document.addEventListener('visibilitychange', () => {\n      if (document.visibilityState === 'visible') {\n        const currentTime = this.primary.currentTime();\n        this.secondary.currentTime(currentTime);\n      }\n    });\n\n    EVENTS.forEach(event => {\n      this.primary.on(event, () => logger.debug(`primary ${event} ${this.status.primary}`));\n      this.secondary.on(event, () => logger.debug(`secondary ${event} ${this.status.secondary}`));\n    });\n  }\n}\n","import { ID } from 'utils/constants';\nimport Synchronizer from 'utils/synchronizer';\n\nconst PLAYERS = {};\nlet SYNCHRONIZER = null;\n\nconst player = {\n  get primary() {\n    return this.webcams;\n  },\n  get screenshare() {\n    return PLAYERS[ID.SCREENSHARE];\n  },\n  get synchronizer() {\n    return SYNCHRONIZER;\n  },\n  get webcams() {\n    return PLAYERS[ID.WEBCAMS];\n  },\n  set screenshare(value) {\n    if (!PLAYERS[ID.SCREENSHARE]) PLAYERS[ID.SCREENSHARE] = value;\n\n    if (this.webcams) {\n      this.synchronizer = new Synchronizer(this.webcams, this.screenshare);\n    }\n  },\n  set synchronizer(value) {\n    if (!SYNCHRONIZER) SYNCHRONIZER = value;\n  },\n  set webcams(value) {\n    if (!PLAYERS[ID.WEBCAMS]) PLAYERS[ID.WEBCAMS] = value;\n\n    if (this.screenshare) {\n      this.synchronizer = new Synchronizer(this.webcams, this.screenshare);\n    }\n  },\n};\n\nexport default player;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Info from './info';\nimport Margin from './margin';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  circle: PropTypes.bool,\n  emphasized: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  circle: false,\n  emphasized: false,\n  icon: '',\n  initials: '',\n  name: '',\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  circle,\n  emphasized,\n  icon,\n  initials,\n  name,\n  timestamp,\n}) => {\n  const handleOnClick = () => {\n    player.primary.currentTime(timestamp);\n  };\n\n  return (\n    <div className=\"message\">\n      <Margin\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n        onClick={() => handleOnClick()}\n      />\n      <div className=\"data\">\n        <Info\n          active={active}\n          name={name}\n          timestamp={timestamp}\n        />\n        <div className={cx('text', { inactive: !active, emphasized })}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from './text';\nimport Message from 'components/chat/messages/message';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  emphasized: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  moderator: PropTypes.bool,\n  text: PropTypes.string,\n  timestamp: PropTypes.timestamp,\n};\n\nconst defaultProps = {\n  active: false,\n  emphasized: false,\n  hyperlink: false,\n  initials: '',\n  name: '',\n  moderator: false,\n  text: '',\n  timestamp: 0,\n};\n\nconst User = ({\n  active,\n  emphasized,\n  hyperlink,\n  initials,\n  name,\n  moderator,\n  text,\n  timestamp,\n}) => {\n\n  return (\n    <Message\n      active={active}\n      circle={!moderator}\n      emphasized={emphasized}\n      initials={initials}\n      name={name}\n      timestamp={timestamp}\n    >\n      <Text\n        active={active}\n        hyperlink={hyperlink}\n        text={text}\n      />\n    </Message>\n  );\n};\n\nUser.propTypes = propTypes;\nUser.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  return true;\n};\n\nexport default React.memo(User, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { getPollLabel } from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  options: {\n    id: 'player.chat.message.poll.options',\n    description: 'Label for the poll message answer options',\n  },\n  yes: {\n    id: 'player.chat.message.poll.option.yes',\n    description: 'Label for poll option yes',\n  },\n  no: {\n    id: 'player.chat.message.poll.option.no',\n    description: 'Label for poll option no',\n  },\n  abstention: {\n    id: 'player.chat.message.poll.option.abstention',\n    description: 'Label for poll option abstention',\n  },\n  true: {\n    id: 'player.chat.message.poll.option.true',\n    description: 'Label for poll option true',\n  },\n  false: {\n    id: 'player.chat.message.poll.option.false',\n    description: 'Label for poll option false',\n  },\n});\n\nconst propTypes = {\n  answers: PropTypes.array,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  answers: [],\n  type: '',\n};\n\nconst Options = ({\n  answers,\n  type,\n}) => {\n  const intl = useIntl();\n\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-options\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.options)}\n      </div>\n      {answers.map((item) => {\n        const {\n          id,\n          key,\n        } = item;\n\n        const label = getPollLabel(key, type);\n\n        return(\n          <div>\n            {id + 1}: {label ? intl.formatMessage(intlMessages[label]) : key}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nOptions.propTypes = propTypes;\nOptions.defaultProps = defaultProps;\n\nexport default Options;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  question: {\n    id: 'player.chat.message.poll.question',\n    description: 'Label for the poll message question',\n  },\n});\n\nconst propTypes = { question: PropTypes.string };\n\nconst defaultProps = { question: '' };\n\nconst Question = ({ question }) => {\n  const intl = useIntl();\n\n  if (isEmpty(question)) return null;\n\n  return (\n    <div className=\"poll-question\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.question)}\n      </div>\n      {question}\n    </div>\n  );\n};\n\nQuestion.propTypes = propTypes;\nQuestion.defaultProps = defaultProps;\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  getBar,\n  getPercentage,\n} from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst propTypes = {\n  answers: PropTypes.array,\n  responders: PropTypes.number,\n};\n\nconst defaultProps = {\n  answers: [],\n  responders: 0,\n};\n\nconst Result = ({\n  answers,\n  responders,\n}) => {\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-result\">\n      {answers.map((item) => {\n        const {\n          id,\n          numVotes,\n        } = item;\n\n        const percentage = getPercentage(numVotes, responders);\n\n        return(\n          <div className=\"poll-label\">\n            {id + 1}: <span className=\"poll-bar\">{getBar(percentage)}</span> {percentage}%\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nResult.propTypes = propTypes;\nResult.defaultProps = defaultProps;\n\nexport default Result;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseMessage from 'components/chat/messages/message';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  icon: PropTypes.string,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  icon: '',\n  name: '',\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  icon,\n  name,\n  timestamp,\n}) => {\n\n  return (\n    <BaseMessage\n      active={active}\n      icon={icon}\n      name={name}\n      timestamp={timestamp}\n    >\n      <div className=\"system-message-wrapper\">\n        {children}\n      </div>\n    </BaseMessage>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Options from './options';\nimport Question from './question';\nimport Result from './result';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.poll.name',\n    description: 'Label for the poll message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  answers: PropTypes.array,\n  question: PropTypes.string,\n  responders: PropTypes.number,\n  timestamp: PropTypes.number,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  answers: [],\n  question: '',\n  responders: 0,\n  timestamp: 0,\n  type: '',\n};\n\nconst Poll = ({\n  active,\n  answers,\n  question,\n  responders,\n  timestamp,\n  type,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.POLLS}\n      name={intl.formatMessage(intlMessages.name)}\n      timestamp={timestamp}\n    >\n      <Question question={question} />\n      <Result\n        answers={answers}\n        responders={responders}\n      />\n      <Options\n        answers={answers}\n        type={type}\n      />\n    </SystemMessage>\n  );\n};\n\nPoll.propTypes = propTypes;\nPoll.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  return true;\n};\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'utils/data/validators';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  url: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  url: '',\n};\n\nconst Url = ({\n  active,\n  url,\n}) => {\n  if (isEmpty(url)) return null;\n\n  const options = {\n    className: cx('linkified', { inactive: !active }),\n  };\n\n  return (\n    <Linkify options={options}>\n      {url}\n    </Linkify>\n  );\n};\n\nUrl.propTypes = propTypes;\nUrl.defaultProps = defaultProps;\n\nexport default Url;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Url from './url';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.video.name',\n    description: 'Label for the video message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  url: PropTypes.url,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  url: '',\n  timestamp: 0,\n};\n\nconst Video = ({\n  active,\n  url,\n  timestamp,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.VIDEOS}\n      name={intl.formatMessage(intlMessages.name)}\n      timestamp={timestamp}\n    >\n      <Url\n        active={active}\n        url={url}\n      />\n    </SystemMessage>\n  );\n};\n\nVideo.propTypes = propTypes;\nVideo.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  return true;\n};\n\nexport default React.memo(Video, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserMessage from './user';\nimport PollMessage from './system/poll';\nimport VideoMessage from './system/video';\nimport { ID } from 'utils/constants';\nimport { getMessageType } from 'utils/data';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst propTypes = {\n  currentIndex: PropTypes.number,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  currentIndex: 0,\n  setRef: () => {},\n};\n\nconst Messages = ({\n  currentIndex,\n  setRef,\n}) => {\n\n  return (\n    <div className=\"list\">\n      <div className=\"message-wrapper\">\n        {storage.messages.map((item, index) => {\n          const active = index <= currentIndex;\n          const { timestamp } = item;\n          const type = getMessageType(item);\n          switch (type) {\n            case ID.USERS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <UserMessage\n                    active={active}\n                    emphasized={item.emphasized}\n                    hyperlink={item.hyperlink}\n                    initials={item.initials}\n                    moderator={item.moderator}\n                    name={item.name}\n                    text={item.message}\n                    timestamp={timestamp}\n                  />\n                </span>\n              );\n            case ID.POLLS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <PollMessage\n                    active={active}\n                    answers={item.answers}\n                    question={item.question}\n                    responders={item.responders}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            case ID.VIDEOS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <VideoMessage\n                    active={active}\n                    url={item.url}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            default:\n              return <span ref={node => setRef(node, index)} />;\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nMessages.propTypes = propTypes;\nMessages.defaultProps = defaultProps;\n\nexport default Messages;\n","import { useState, useEffect } from 'react';\nimport {\n  EVENTS,\n  ID,\n} from 'utils/constants';\nimport {\n  getCurrentContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n} from 'utils/data';\nimport { isEqual } from 'utils/data/validators';\n\nconst useCurrentContent = () => {\n  const [currentContent, setCurrentContent] = useState(ID.PRESENTATION);\n\n  useEffect(() => {\n    const handleTimeUpdate = (event) => {\n      const nextContent = getCurrentContent(event.detail.time);\n      if (currentContent !== nextContent) setCurrentContent(nextContent);\n    };\n\n    document.addEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    return () => {\n      document.removeEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    };\n  }, [currentContent]);\n\n  return currentContent;\n};\n\nconst useCurrentIndex = (data) => {\n  const [currentIndex, setCurrentIndex] = useState(-1);\n\n  useEffect(() => {\n    const handleTimeUpdate = (event) => {\n      const nextIndex = getCurrentDataIndex(data, event.detail.time);\n      if (currentIndex !== nextIndex) setCurrentIndex(nextIndex);\n    };\n\n    document.addEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    return () => {\n      document.removeEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    };\n  }, [currentIndex, data]);\n\n  return currentIndex;\n};\n\nconst useCurrentInterval = (data) => {\n  const [currentInterval, setCurrentInterval] = useState({ index: -1, interval: [] });\n\n  useEffect(() => {\n    const handleTimeUpdate = (event) => {\n      const nextIndex = getCurrentDataIndex(data, event.detail.time);\n      const sameIndex = currentInterval.index === nextIndex;\n\n      if (nextIndex !== -1) {\n        const nextInterval = getCurrentDataInterval(data[nextIndex].data, event.detail.time);\n        const sameInterval = isEqual(currentInterval.interval, nextInterval);\n        if (!sameIndex || !sameInterval) setCurrentInterval({ index: nextIndex, interval: nextInterval });\n      } else {\n        const sameInterval = isEqual(currentInterval, []);\n        if (!sameIndex || !sameInterval) setCurrentInterval({ index: -1, interval: [] });\n      }\n    };\n\n    document.addEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    return () => {\n      document.removeEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    };\n  }, [currentInterval, data]);\n\n  return currentInterval;\n};\n\nexport {\n  useCurrentContent,\n  useCurrentIndex,\n  useCurrentInterval,\n};\n","import React, { useEffect, useRef } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { chat as config } from 'config';\nimport Messages from './messages';\nimport { useCurrentIndex } from 'components/utils/hooks';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.chat.wrapper.aria',\n    description: 'Aria label for the chat wrapper',\n  },\n});\n\nconst Chat = () => {\n  const intl = useIntl();\n  const currentIndex = useCurrentIndex(storage.messages);\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.TOP, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      aria-live=\"polite\"\n      className=\"chat-wrapper\"\n      id={ID.CHAT}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      <Messages\n        currentIndex={currentIndex}\n        setRef={(node, index) => setRef(node, index)}\n      />\n    </div>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Chat, areEqual);\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.notes.wrapper.aria',\n    description: 'Aria label for the notes wrapper',\n  },\n});\n\nconst Notes = () => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"notes-wrapper\"\n      id={ID.NOTES}\n      tabIndex=\"0\"\n    >\n      <div className=\"notes\">\n        <div dangerouslySetInnerHTML={{ __html: storage.notes }} />\n      </div>\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Notes, areEqual);\n","import React from 'react';\nimport Chat from 'components/chat';\nimport Notes from 'components/notes';\nimport { ID } from 'utils/constants';\n\nconst Content = ({ current }) => {\n  switch (current) {\n    case ID.CHAT:\n\n      return <Chat />;\n    case ID.NOTES:\n\n      return <Notes />;\n    default:\n\n      return null;\n  }\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.current !== nextProps.current) return false;\n\n  return true;\n};\n\nexport default React.memo(Content, areEqual);\n","import { controls } from 'config';\nimport { LAYOUT } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport { isContentVisible } from 'utils/data/validators';\n\nlet MODE = null;\n\nconst layout = {\n  get content() {\n    return storage.content;\n  },\n  get mode() {\n    return MODE;\n  },\n  set mode(value) {\n    MODE = value;\n  },\n  get control() {\n    const { DISABLED } = LAYOUT;\n\n    let control = true;\n    switch (this.mode) {\n      case DISABLED:\n        control = false;\n        break;\n      default:\n    }\n\n    return control;\n  },\n  get section() {\n    const {\n      CONTENT,\n      MEDIA,\n    } = LAYOUT;\n\n    let section = true;\n    switch (this.mode) {\n      case CONTENT:\n        section = false;\n        break;\n      case MEDIA:\n        section = false;\n        break;\n      default:\n    }\n\n    return section;\n  },\n  get swap() {\n    const {\n      CONTENT,\n      MEDIA,\n      SWAPPED,\n    } = LAYOUT;\n\n    let swap = false;\n    switch (this.mode) {\n      case CONTENT:\n        swap = false;\n        break;\n      case MEDIA:\n      case SWAPPED:\n        swap = true;\n        break;\n      default:\n    }\n\n    return swap;\n  },\n  get screenshare() {\n    return this.content.screenshare;\n  },\n  get single() {\n    return !this.content.presentation && !this.content.screenshare;\n  },\n  hasFullscreenButton: function (content, swap) {\n    if (!this.control || !controls.fullscreen) return false;\n\n    if (!isContentVisible(content, swap || this.single)) return false;\n\n    return true;\n  },\n};\n\nexport default layout;\n","import React from 'react';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport { ID } from 'utils/constants';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst APPLICATIONS = [\n  ID.CHAT,\n  ID.NOTES,\n];\n\nconst Control = ({\n  current,\n  toggleApplication,\n}) => {\n  if (!layout.control) return null;\n\n  return (\n    <div className=\"application-control\">\n      {APPLICATIONS.map(application => {\n        const active = current === application;\n\n        return (\n          <div\n            className={cx('application-icon', { inactive: !active })}\n            onClick={() => active ? null : toggleApplication(application)}\n          >\n            <Icon name={application} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.current === nextProps.current;\n};\n\nexport default React.memo(Control, areEqual);\n","import React, { useState } from 'react';\nimport Content from './content';\nimport Control from './control';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst DEFAULT = ID.CHAT;\n\nconst Application = () => {\n  const [current, setCurrent] = useState(DEFAULT);\n\n  const toggleApplication = (application) => {\n    if (current !== application) setCurrent(application);\n  };\n\n  return (\n    <div className=\"application\">\n      <Control\n        current={current}\n        toggleApplication={toggleApplication}\n      />\n      <Content current={current} />\n    </div>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Application, areEqual);\n","import React from 'react';\nimport { useCurrentIndex } from 'components/utils/hooks';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst getCursor = (index, viewBox) => {\n  const inactive = {\n    x: -1,\n    y: -1,\n  }\n\n  if (index === -1) return inactive;\n\n  const currentData = storage.cursor[index];\n  if (currentData.x === -1 && currentData.y === -1) return inactive;\n\n  return {\n    x: viewBox.x + (currentData.x * viewBox.width),\n    y: viewBox.y + (currentData.y * viewBox.height),\n  };\n};\n\nconst Cursor = ({ viewBox }) => {\n  const currentIndex = useCurrentIndex(storage.cursor);\n  const { x, y } = getCursor(currentIndex, viewBox);\n\n  if (x === -1 || y === -1) return null;\n\n  return (\n    <circle\n      className=\"cursor\"\n      style={{ cx: x, cy: y }}\n    />\n  );\n};\n\nexport default Cursor;\n","import React from 'react';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst Proxy = ({\n  id,\n  height,\n  width,\n}) => {\n  const thumbnail = storage.thumbnails.find(thumbnails => id === thumbnails.id);\n  if (!thumbnail) return null;\n\n  const {\n    alt,\n    src,\n  } = thumbnail;\n\n  if (src === ID.SCREENSHARE) return null;\n\n  return (\n    <foreignObject\n      height={height}\n      x={0}\n      width={width}\n      y={0}\n    >\n      <img\n        alt={alt}\n        className=\"proxy\"\n        src={buildFileURL(src)}\n      />\n    </foreignObject>\n  );\n};\n\nexport default Proxy;\n","import React from 'react';\nimport Proxy from './proxy';\nimport { useCurrentIndex } from 'components/utils/hooks';\nimport { buildFileURL } from 'utils/data';\nimport storage from 'utils/data/storage';\n\nconst Slide = () => {\n  const currentIndex = useCurrentIndex(storage.slides);\n  if (currentIndex === -1) return null;\n\n  const {\n    height,\n    id,\n    src,\n    width,\n  } = storage.slides[currentIndex];\n\n  return (\n    <g>\n      <Proxy\n        id={id}\n        height={height}\n        width={width}\n      />\n      <image\n        height={height}\n        href={buildFileURL(src)}\n        x={0}\n        width={width}\n        y={0}\n      />\n    </g>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Slide, areEqual);\n","import React from 'react';\nimport { buildFileURL } from 'utils/data';\n\nconst Poll = ({\n  data,\n  style,\n}) => {\n  const {\n    image,\n    rect,\n  } = data;\n\n  // TODO: Better adapt for old versions\n  if (rect) {\n    // BigBlueButton v2.2 or lower\n    return (\n      <g style={style}>\n        <rect\n          fill={rect.fill}\n          height={rect.height}\n          stroke={rect.stroke}\n          strokeWidth={rect['stroke-width']}\n          width={rect.width}\n          x={rect.x}\n          y={rect.y}\n        />\n        <image\n          height={image.height}\n          transform={image.transform}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  } else {\n    // BigBlueButton v2.3 or higher\n     return (\n      <g style={style}>\n        <image\n          height={image.height}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  }\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport Poll from './poll';\nimport { useCurrentInterval } from 'components/utils/hooks';\nimport { SHAPES } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport { isEmpty } from 'utils/data/validators';\nimport logger from 'utils/logger';\n\nconst getCanvasData = (index) => storage.canvases[index].data;\n\nconst Canvas = () => {\n  const {\n    index,\n    interval,\n  }= useCurrentInterval(storage.canvases);\n\n  if (index === -1) return null;\n\n  if (isEmpty(interval)) return null;\n\n  const canvas = [];\n  for (let i = 0; i < interval.length; i++) {\n    if (!interval[i]) continue;\n\n    const canvasData = getCanvasData(index);\n\n    const {\n      id,\n      shape,\n      style,\n    } = canvasData[i];\n\n    const j = i + 1;\n    let intermediate = false;\n    if (j < interval.length) {\n      intermediate = canvasData[j].id === id;\n    }\n\n    if (intermediate) continue;\n\n    const {\n      data,\n      type,\n    } = shape;\n\n    switch (type) {\n      case SHAPES.CIRCLE:\n        canvas.push(\n          <circle\n            style={style}\n            cx={data.cx}\n            cy={data.cy}\n            r={data.r}\n          />\n        );\n        break;\n      case SHAPES.LINE:\n        canvas.push(\n          <line\n            style={style}\n            x1={data.x1}\n            y1={data.y1}\n            x2={data.x2}\n            y2={data.y2}\n          />\n        );\n        break;\n      case SHAPES.PATH:\n        canvas.push(\n          <path\n            style={style}\n            d={data.d}\n          />\n        );\n        break;\n      case SHAPES.POLL:\n        canvas.push(\n          <Poll\n            data={data}\n            key={id}\n            style={style}\n          />\n        );\n        break;\n      case SHAPES.POLYGON:\n        canvas.push(\n          <polygon\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.POLYLINE:\n        canvas.push(\n          <polyline\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.TEXT:\n        canvas.push(\n          <foreignObject\n            style={style}\n            height={data.height}\n            width={data.width}\n            x={data.x}\n            y={data.y}\n          >\n            <div xmlns=\"http://www.w3.org/1999/xhtml\">\n              {data.text.split('\\r').map(line => <span>{line}<br /></span>)}\n            </div>\n          </foreignObject>\n        );\n        break;\n      default:\n        logger.debug('unhandled', type);\n    }\n  }\n\n  return (\n    <g>\n      {canvas}\n    </g>\n  );\n};\n\nexport default Canvas;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport Cursor from './cursor';\nimport Slide from './slide';\nimport Canvas from './canvas';\nimport {\n  useCurrentContent,\n  useCurrentIndex,\n} from 'components/utils/hooks';\nimport { ID } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.presentation.wrapper.aria',\n    description: 'Aria label for the presentation wrapper',\n  },\n});\n\nconst buildViewBoxAttr = (viewBox) => {\n  const {\n    height,\n    x,\n    width,\n    y,\n  } = viewBox;\n\n  return `${x} ${y} ${width} ${height}`;\n};\n\nconst getViewBox = (index) => {\n  const inactive = {\n    height: 0,\n    x: 0,\n    width: 0,\n    y: 0,\n  };\n\n  if (index === -1) return inactive;\n\n  const currentData = storage.panzooms[index];\n\n  return {\n    height: currentData.height,\n    x: currentData.x,\n    width: currentData.width,\n    y: currentData.y,\n  };\n};\n\nconst Presentation = () => {\n  const intl = useIntl();\n  const currentContent = useCurrentContent();\n  const currentPanzoomIndex = useCurrentIndex(storage.panzooms);\n  const viewBox = getViewBox(currentPanzoomIndex);\n\n  const started = currentPanzoomIndex !== -1;\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('presentation-wrapper', { inactive: currentContent !== ID.PRESENTATION })}\n      id={ID.PRESENTATION}\n    >\n      <div className={cx('presentation', { logo: !started })}>\n        <svg\n          viewBox={buildViewBoxAttr(viewBox)}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <defs>\n            <clipPath id=\"viewBox\">\n              <rect\n                height={viewBox.height}\n                x={viewBox.x}\n                width={viewBox.width}\n                y={viewBox.y}\n              />\n            </clipPath>\n          </defs>\n          <g clipPath=\"url(#viewBox)\">\n            <Slide />\n            <Canvas />\n            <Cursor viewBox={viewBox} />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Presentation, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport videojs from 'video.js/core.es.js';\nimport { useCurrentContent } from 'components/utils/hooks';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport logger from 'utils/logger';\nimport storage from 'utils/data/storage';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.screenshare.wrapper.aria',\n    description: 'Aria label for the screenshare wrapper',\n  },\n});\n\nconst buildSources = () => {\n  return [\n    {\n      src: buildFileURL('deskshare/deskshare.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL('deskshare/deskshare.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => storage.media.find(m => source.type.includes(m)));\n};\n\nconst buildOptions = (sources) => {\n  return {\n    controls: false,\n    fill: true,\n    sources: sources.current,\n  };\n};\n\nconst Screenshare = () => {\n  const intl = useIntl();\n  const currentContent = useCurrentContent();\n  const sources = useRef(buildSources());\n  const element = useRef();\n\n  useEffect(() => {\n    if (!player.screenshare) {\n      const video = element.current;\n      if (!video) return;\n\n      player.screenshare = videojs(video, buildOptions(sources), () => {});\n      logger.debug(ID.SCREENSHARE, 'mounted');\n    }\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (player.screenshare) {\n        player.screenshare.dispose();\n        player.screenshare = null;\n        logger.debug(ID.SCREENSHARE, 'unmounted');\n      }\n    };\n  }, []);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('screenshare-wrapper', { inactive: currentContent !== ID.SCREENSHARE })}\n      id={ID.SCREENSHARE}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={element}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Screenshare, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  src: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  src: '',\n};\n\nconst Image = ({\n  alt,\n  src,\n}) => {\n  const screenshare = src === ID.SCREENSHARE;\n\n  if (screenshare) {\n    return (\n      <div className={cx('thumbnail-image', { screenshare })}>\n        <Icon name={ID.SCREENSHARE} />\n      </div>\n    );\n  }\n\n  const logo = src.includes('logo');\n\n  return (\n    <img\n      alt={alt}\n      className={cx('thumbnail-image', { logo })}\n      src={buildFileURL(src)}\n    />\n  );\n};\n\nImage.propTypes = propTypes;\nImage.defaultProps = defaultProps;\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './image';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  index: PropTypes.number,\n  src: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  index: 0,\n  src: '',\n};\n\nconst Thumbnail = ({\n  alt,\n  index,\n  src,\n}) => {\n\n  return (\n    <div className=\"thumbnail\">\n      <Image\n        alt={alt}\n        src={src}\n      />\n      <div className=\"thumbnail-index\">\n        {index + 1}\n      </div>\n    </div>\n  )\n};\n\nThumbnail.propTypes = propTypes;\nThumbnail.defaultProps = defaultProps;\n\nexport default Thumbnail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnail from './thumbnail';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  index: PropTypes.number,\n  interactive: PropTypes.bool,\n  item: PropTypes.object,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  index: 0,\n  interactive: false,\n  item: {},\n  setRef: () => {},\n};\n\nconst Item = ({\n  active,\n  index,\n  interactive,\n  item,\n  setRef,\n}) => {\n  if (!interactive) {\n\n    return (\n      <div\n        className=\"thumbnail-wrapper\"\n        tabIndex=\"0\"\n      >\n        <Thumbnail\n          alt={item.alt}\n          index={index}\n          src={item.src}\n        />\n      </div>\n    );\n  }\n\n  const handleOnClick = () => {\n    if (interactive) player.primary.currentTime(item.timestamp);\n  };\n\n  return (\n    <div\n      className={cx('thumbnail-wrapper', { active, interactive })}\n      onClick={() => handleOnClick()}\n      onKeyPress={event => handleOnEnterPress(event, handleOnClick)}\n      ref={node => setRef(node, index)}\n      tabIndex=\"0\"\n    >\n      <Thumbnail\n        alt={item.alt}\n        index={index}\n        src={item.src}\n      />\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport './index.scss';\n\nconst DEFAULT = 'default';\nconst SOLID = 'solid';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  aria: PropTypes.string,\n  circle: PropTypes.bool,\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  aria: '',\n  circle: false,\n  disabled: false,\n  handleOnClick: () => {},\n  icon: '',\n  type: DEFAULT,\n};\n\nconst Button = ({\n  active,\n  aria,\n  circle,\n  disabled,\n  handleOnClick,\n  icon,\n  type,\n}) => {\n  const solid = type === SOLID;\n\n  const style = {\n    default: !solid && !disabled,\n    solid: (solid || active) && !disabled,\n    circle,\n    disabled,\n  };\n\n  return (\n    <div className=\"button-wrapper\">\n      <button\n        aria-label={aria}\n        className={cx('button', style)}\n        disabled={disabled}\n        onClick={() => handleOnClick()}\n      >\n        <Icon name={icon} />\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  clear: {\n    id: 'button.clear.aria',\n    description: 'Aria label for the clear button',\n  },\n});\n\nconst propTypes = {\n  interactive: PropTypes.bool,\n  onClick: PropTypes.func,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  interactive: false,\n  onClick: () => {},\n  search: [],\n};\n\nconst Clear = ({\n  interactive,\n  onClick,\n  search,\n}) => {\n  const intl = useIntl();\n\n  if (!interactive) return null;\n\n  if (isEmpty(search)) return null;\n\n  return (\n    <div className=\"clear-button\">\n      <Button\n        aria={intl.formatMessage(intlMessages.clear)}\n        handleOnClick={onClick}\n        icon=\"close\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nClear.propTypes = propTypes;\nClear.defaultProps = defaultProps;\n\nexport default Clear;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Item from './item';\nimport ClearButton from './buttons/clear';\nimport { useCurrentIndex } from 'components/utils/hooks';\nimport { thumbnails as config } from 'config';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport storage from 'utils/data/storage';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.thumbnails.wrapper.aria',\n    description: 'Aria label for the thumbnails wrapper',\n  },\n});\n\nconst propTypes = {\n  handleSearch: PropTypes.func,\n  interactive: PropTypes.bool,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  handleSearch: () => {},\n  interactive: false,\n  search: [],\n};\n\nconst Thumbnails = ({\n  handleSearch,\n  interactive,\n  search,\n}) => {\n  const currentIndex = useCurrentIndex(storage.thumbnails);\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const intl = useIntl();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  const isFiltered = (index) => {\n    if (interactive) {\n      return !isEmpty(search) && !search.includes(index);\n    } else {\n      return !search.includes(index);\n    }\n  }\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.LEFT, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"thumbnails-wrapper\"\n      id={ID.THUMBNAILS}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      {storage.thumbnails.reduce((result, item, index) => {\n        if (!isFiltered(index)) {\n          const active = index === currentIndex;\n\n          result.push(\n            <Item\n              active={active}\n              index={index}\n              interactive={interactive}\n              item={item}\n              setRef={setRef}\n            />\n          );\n        }\n\n        return result;\n      }, [])}\n      <ClearButton\n        interactive={interactive}\n        onClick={() => handleSearch([])}\n        search={search}\n      />\n    </div>\n  );\n};\n\nThumbnails.propTypes = propTypes;\nThumbnails.defaultProps = defaultProps;\n\nconst areEqual = (prevProps, nextProps) => {\n  if (!isEqual(prevProps.search, nextProps.search)) return false;\n\n  return true;\n};\n\nexport default React.memo(Thumbnails, areEqual);\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  fullscreen: {\n    id: 'button.fullscreen.aria',\n    description: 'Aria label for the fullscreen button',\n  },\n  restore: {\n    id: 'button.restore.aria',\n    description: 'Aria label for the restore button',\n  },\n});\n\nconst Fullscreen = ({\n  content,\n  fullscreen,\n  swap,\n  toggleFullscreen,\n}) => {\n  const intl = useIntl();\n\n  if (!layout.hasFullscreenButton(content, swap)) return null;\n\n  const aria = fullscreen\n    ? intl.formatMessage(intlMessages.restore)\n    : intl.formatMessage(intlMessages.fullscreen)\n  ;\n\n  const icon = fullscreen ? 'restore' : 'fullscreen';\n\n  return (\n    <div className=\"fullscreen-button\">\n      <Button\n        aria={aria}\n        handleOnClick={() => toggleFullscreen()}\n        icon={icon}\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.content !== nextProps.content) return false;\n\n  if (prevProps.fullscreen !== nextProps.fullscreen) return false;\n\n  if (prevProps.swap !== nextProps.swap) return false;\n\n  return true;\n};\n\nexport default React.memo(Fullscreen, areEqual);\n","import React from 'react';\nimport cx from 'classnames';\nimport Presentation from 'components/presentation';\nimport Screenshare from 'components/screenshare';\nimport Thumbnails from 'components/thumbnails';\nimport FullscreenButton from 'components/player/buttons/fullscreen';\nimport { LAYOUT } from 'utils/constants';\nimport { isEqual } from 'utils/data/validators';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst Content = ({\n  fullscreen,\n  handleSearch,\n  search,\n  swap,\n  toggleFullscreen,\n}) => {\n  if (layout.single) return null;\n\n  return (\n    <div className={cx('content', { 'swapped-content': swap })}>\n      <FullscreenButton\n        content={LAYOUT.CONTENT}\n        fullscreen={fullscreen}\n        swap={swap}\n        toggleFullscreen={toggleFullscreen}\n      />\n      <div className=\"top-content\">\n        <Presentation />\n        {layout.screenshare ? <Screenshare /> : null}\n      </div>\n      <div className={cx('bottom-content', { 'inactive': fullscreen })}>\n        <Thumbnails\n          handleSearch={handleSearch}\n          interactive\n          search={search}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.fullscreen !== nextProps.fullscreen) return false;\n\n  if (prevProps.swap !== nextProps.swap) return false;\n\n  if (!isEqual(prevProps.search, nextProps.search)) return false;\n\n  return true;\n};\n\nexport default React.memo(Content, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport videojs from 'video.js/core.es.js';\nimport { player as config } from 'config';\nimport {\n  EVENTS,\n  ID,\n} from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport logger from 'utils/logger';\nimport {\n  getFrequency,\n  getTime,\n} from 'utils/params';\nimport storage from 'utils/data/storage';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.webcams.wrapper.aria',\n    description: 'Aria label for the webcams wrapper',\n  },\n});\n\nconst buildSources = () => {\n  if (storage.fallback) {\n    return [\n      {\n        src: buildFileURL('audio/audio.webm'),\n        type: 'audio/webm',\n      },\n    ];\n  }\n\n  return [\n    {\n      src: buildFileURL('video/webcams.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL('video/webcams.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => storage.media.find(m => source.type.includes(m)));\n};\n\nconst buildTracks = () => {\n  return storage.captions.map(lang => {\n    const {\n      locale,\n      localeName,\n    } = lang;\n\n    return {\n      kind: 'captions',\n      src: buildFileURL(`caption_${locale}.vtt`),\n      srclang: locale,\n      label: localeName,\n    };\n  });\n};\n\nconst buildOptions = (sources, tracks) => {\n  return {\n    controlBar: {\n      fullscreenToggle: false,\n      pictureInPictureToggle: false,\n      volumePanel: {\n        inline: false,\n        vertical: true,\n      },\n    },\n    controls: true,\n    fill: true,\n    inactivityTimeout: 0,\n    playbackRates: config.rates,\n    sources: sources.current,\n    tracks: tracks.current,\n  };\n};\n\nconst dispatchTimeUpdate = (time) => {\n  const event = new CustomEvent(EVENTS.TIME_UPDATE, { detail: { time }});\n  document.dispatchEvent(event);\n};\n\nconst Webcams = () => {\n  const intl = useIntl();\n  const sources = useRef(buildSources());\n  const tracks = useRef(buildTracks());\n  const element = useRef();\n  const interval = useRef();\n\n  useEffect(() => {\n    if (!player.webcams) {\n      const video = element.current;\n      if (!video) return;\n\n      player.webcams = videojs(video, buildOptions(sources, tracks), () => {\n        player.webcams.on('play', () => {\n          const frequency = getFrequency();\n          interval.current = setInterval(() => {\n            const currentTime = player.webcams.currentTime();\n            dispatchTimeUpdate(currentTime);\n          }, 1000 / (frequency ? frequency : config.rps));\n        });\n\n        player.webcams.on('pause', () => clearInterval(interval.current));\n\n        player.webcams.on('seeked', () => {\n          const currentTime = player.webcams.currentTime();\n          dispatchTimeUpdate(currentTime);\n        });\n\n        const time = getTime();\n        if (time) {\n          player.webcams.on('loadedmetadata', () => {\n            const duration = player.webcams.duration();\n            if (time < duration) {\n              player.webcams.currentTime(time);\n            }\n          });\n        }\n      });\n      logger.debug(ID.WEBCAMS, 'mounted');\n    }\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (player.webcams) {\n        player.webcams.dispose();\n        player.webcams = null;\n        logger.debug(ID.WEBCAMS, 'unmounted');\n      }\n    };\n  }, []);\n\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"webcams-wrapper\"\n      id={ID.WEBCAMS}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={element}\n        />\n      </div>\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Webcams, areEqual);\n","import React from 'react';\nimport cx from 'classnames';\nimport FullscreenButton from 'components/player/buttons/fullscreen';\nimport Webcams from 'components/webcams';\nimport { LAYOUT } from 'utils/constants';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst Media = ({\n  fullscreen,\n  swap,\n  toggleFullscreen,\n}) => {\n\n  return (\n    <div className={cx('media', { 'swapped-media': swap || layout.single })}>\n      <FullscreenButton\n        content={LAYOUT.MEDIA}\n        fullscreen={fullscreen}\n        swap={swap}\n        toggleFullscreen={toggleFullscreen}\n      />\n      <Webcams />\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.fullscreen !== nextProps.fullscreen) return false;\n\n  if (prevProps.swap !== nextProps.swap) return false;\n\n  return true;\n};\n\nexport default React.memo(Media, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from 'components/utils/icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n};\n\nconst defaultProps = {\n  icon: '',\n  value: false,\n};\n\nconst Item = ({\n  icon,\n  value,\n}) => {\n  let element;\n  if (typeof value === 'boolean') {\n    element = <Icon name={value ? 'check' : 'close'} />;\n  } else {\n    element = value;\n  }\n\n  return (\n    <div className=\"item\">\n      <Icon name={icon} />\n      {element}\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport Item from './item';\nimport {\n  CONTENT,\n  ID,\n} from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst Data = () => {\n\n  return (\n    <div className=\"body-data\">\n      <Item\n        icon={ID.USERS}\n        key={ID.USERS}\n        value={storage.metadata.participants}\n      />\n      {CONTENT.map((item) => (\n        <Item\n          icon={item}\n          key={item}\n          value={storage.content[item]}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Data;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nconst propTypes = { code: PropTypes.string };\n\nconst defaultProps = { code: '' };\n\nconst Key = ({ code }) => {\n\n  return (\n    <div className=\"key\">\n      {code}\n    </div>\n  );\n};\n\nKey.propTypes = propTypes;\nKey.defaultProps = defaultProps;\n\nexport default Key;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Key from './key';\nimport { shortcuts as config } from 'config';\nimport './index.scss';\n\nconst SHORTCUTS = [\n  'fullscreen',\n  'play',\n  'section',\n  'seek.backward',\n  'seek.forward',\n  'skip.next',\n  'skip.previous',\n  'swap',\n];\n\nconst getCode = (shortcut) => {\n  const path = shortcut.split('.');\n\n  let code = config[path[0]];\n  for (let i = 1; i < path.length; i++) {\n    code = code[path[i]];\n  }\n\n  return code;\n};\n\nconst intlMessages = defineMessages({\n  title: {\n    id: 'player.about.modal.shortcuts.title',\n    description: 'Label for the about modal shortcuts title',\n  },\n  alt: {\n    id: 'player.about.modal.shortcuts.alt',\n    description: 'Label for the about modal shortcuts alt key',\n  },\n  shift: {\n    id: 'player.about.modal.shortcuts.shift',\n    description: 'Label for the about modal shortcuts shift key',\n  },\n  'fullscreen': {\n    id: 'player.about.modal.shortcuts.fullscreen',\n    description: 'Label for the about modal fullscreen shortcut',\n  },\n  'play': {\n    id: 'player.about.modal.shortcuts.play',\n    description: 'Label for the about modal play shortcut',\n  },\n  'section': {\n    id: 'player.about.modal.shortcuts.section',\n    description: 'Label for the about modal section shortcut',\n  },\n  'seek.backward': {\n    id: 'player.about.modal.shortcuts.seek.backward',\n    description: 'Label for the about modal seek backward shortcut',\n  },\n  'seek.forward': {\n    id: 'player.about.modal.shortcuts.seek.forward',\n    description: 'Label for the about modal seek forward shortcut',\n  },\n  'skip.next': {\n    id: 'player.about.modal.shortcuts.skip.next',\n    description: 'Label for the about modal skip next shortcut',\n  },\n  'skip.previous': {\n    id: 'player.about.modal.shortcuts.skip.previous',\n    description: 'Label for the about modal skip previous shortcut',\n  },\n  'swap': {\n    id: 'player.about.modal.shortcuts.swap',\n    description: 'Label for the about modal swap shortcut',\n  },\n});\n\nconst Shortcuts = () => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"body-shortcuts\">\n      <div className=\"title\">\n        {intl.formatMessage(intlMessages.title)}\n      </div>\n      <div className=\"list\">\n        <div className=\"content\">\n          {SHORTCUTS.map(shortcut => {\n\n            return (\n              <div className=\"shortcut\">\n                <div className=\"label\">\n                  {intl.formatMessage(intlMessages[shortcut])}\n                </div>\n                <div className=\"keys\">\n                  <Key code={intl.formatMessage(intlMessages.alt)} />\n                  <Key code={intl.formatMessage(intlMessages.shift)} />\n                  <Key code={getCode(shortcut)} />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Shortcuts;\n","import React from 'react';\nimport Data from './data';\nimport Shortcuts from './shortcuts';\nimport './index.scss';\n\nconst Body = () => {\n\n  return (\n    <div className=\"about-body\">\n      <Data />\n      <Shortcuts />\n    </div>\n  );\n};\n\nexport default Body;\n","import React from 'react';\nimport { BUILD } from 'utils/constants';\nimport './index.scss';\n\nconst Footer = () => {\n  return (\n    <div className=\"about-footer\">\n      {BUILD ? (\n        <span className=\"revision\">\n          {BUILD}\n        </span>\n      ) : (\n        null\n      )}\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n  FormattedDate,\n  FormattedTime,\n} from 'react-intl';\nimport { date } from 'config';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst Header = () => {\n  const {\n    end,\n    name,\n    start,\n  } = storage.metadata;\n\n  const subtitle = [];\n  if (date.enabled) {\n    subtitle.push(\n      <FormattedDate\n        value={new Date(start)}\n        day=\"numeric\"\n        month=\"long\"\n        year=\"numeric\"\n      />\n    );\n\n    subtitle.push(<FormattedTime value={new Date(start)} />);\n    subtitle.push(<FormattedTime value={new Date(end)} />);\n  }\n\n  return (\n    <div className=\"about-header\">\n      <div className=\"title\">\n        {name}\n      </div>\n      <div className=\"subtitle\">\n        {subtitle.map(s => <div className=\"item\">{s}</div>)}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  close: {\n    id: 'button.close.aria',\n    description: 'Aria label for the close button',\n  },\n});\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  onClose: PropTypes.func,\n};\n\nconst defaultProps = {\n  children: null,\n  onClose: () => {},\n};\n\nconst Modal = ({\n  children,\n  onClose,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal\">\n        <div className=\"modal-control\">\n          <Button\n            aria={intl.formatMessage(intlMessages.close)}\n            circle\n            handleOnClick={onClose}\n            icon=\"close\"\n          />\n        </div>\n        <div className=\"modal-content\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport Modal from 'components/utils/modal';\nimport './index.scss';\n\nconst propTypes = { handleClose: PropTypes.func };\n\nconst defaultProps = { handleClose: () => {} };\n\nconst About = ({ handleClose }) => {\n\n  return (\n    <Modal onClose={handleClose}>\n      <Header />\n      <Body />\n      <Footer />\n    </Modal>\n  );\n};\n\nAbout.propTypes = propTypes;\nAbout.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(About, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnails from 'components/thumbnails';\nimport { search as config } from 'config';\nimport './index.scss';\n\nconst propTypes = {\n  handleOnChange: PropTypes.func,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  handleOnChange: () => {},\n  search: [],\n};\n\nconst Body = ({\n  handleOnChange,\n  search,\n}) => {\n\n  return (\n    <div className=\"search-body\">\n      <input\n        maxLength={config.length.max}\n        minLength={config.length.min}\n        onChange={(event) => handleOnChange(event)}\n        type=\"text\"\n      />\n      <div className={cx('result', { active: true })}>\n        <Thumbnails\n          currentDataIndex={0}\n          handleSearch={null}\n          player={null}\n          search={search}\n        />\n      </div>\n    </div>\n  );\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\n\nexport default Body;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = {\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  disabled: false,\n  handleOnClick: () => {},\n};\n\nconst Footer = ({\n  disabled,\n  handleOnClick,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-footer\">\n      <Button\n        aria={intl.formatMessage(intlMessages.search)}\n        disabled={disabled}\n        handleOnClick={(event) => handleOnClick(event)}\n        icon=\"search\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nFooter.propTypes = propTypes;\nFooter.defaultProps = defaultProps;\n\nexport default Footer;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  title: {\n    id: 'player.search.modal.title',\n    description: 'Label for the search modal title',\n  },\n  subtitle: {\n    id: 'player.search.modal.subtitle',\n    description: 'Label for the search modal subtitle',\n  },\n});\n\nconst Header = () => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-header\">\n      <div className=\"title\">\n        {intl.formatMessage(intlMessages.title)}\n      </div>\n      <div className=\"subtitle\">\n        {intl.formatMessage(intlMessages.subtitle)}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { getCurrentDataIndex } from 'utils/data';\nimport storage from 'utils/data/storage';\nimport player from 'utils/player';\n\nconst play = () => {\n  if (player.primary.paused()) {\n    player.primary.play();\n  } else {\n    player.primary.pause();\n  }\n};\n\nconst search = (text, thumbnails) => {\n  const result = [];\n\n  const value = text.toLowerCase();\n  thumbnails.forEach((thumbnail, index) => {\n    const { alt } = thumbnail;\n\n    if (alt.toLowerCase().indexOf(value) !== -1) {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst seek = (seconds) => {\n  const min = 0;\n  const max = player.primary.duration();\n  const time = player.primary.currentTime() + seconds;\n\n  if (time < min) {\n    player.primary.currentTime(min);\n  } else if (time > max) {\n    player.primary.currentTime(max);\n  } else {\n    player.primary.currentTime(time);\n  }\n};\n\nconst skip = (change) => {\n  const min = 0;\n  const max = storage.slides.length - 1;\n  const time = player.primary.currentTime();\n\n  const current = getCurrentDataIndex(storage.slides, time);\n  if (current === -1) return null;\n\n  const index = current + change;\n\n  let timestamp;\n  if (index < min) {\n    timestamp = storage.slides[min].timestamp;\n  } else if (index > max) {\n    timestamp = storage.slides[max].timestamp;\n  } else {\n    timestamp = storage.slides[index].timestamp;\n  }\n\n  if (typeof timestamp !== 'undefined') {\n    player.primary.currentTime(timestamp);\n  }\n};\n\nexport {\n  play,\n  search,\n  seek,\n  skip,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport { search as config } from 'config';\nimport Modal from 'components/utils/modal';\nimport { search as getSearch } from 'utils/actions';\nimport storage from 'utils/data/storage';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst getValue = (event) => {\n  if (event && event.target) return event.target.value;\n\n  return null;\n};\n\nconst isValid = (value) => {\n  if (value && typeof value === 'string') {\n    return value.length >= config.length.min;\n  }\n\n  return false;\n};\n\nconst propTypes = {\n  handleClose: PropTypes.func,\n  handleSearch: PropTypes.func,\n};\n\nconst defaultProps = {\n  handleClose: () => {},\n  handleSearch: () => {},\n};\n\nconst Search = ({\n  handleClose,\n  handleSearch,\n}) => {\n  const [disabled, setDisabled] = useState(true);\n  const [search, setSearch] = useState([]);\n\n  const handleOnChange = (event) => {\n    const value = getValue(event);\n    if (isValid(value)) {\n      const result = getSearch(value, storage.thumbnails);\n\n      // If different, update search\n      if (!isEqual(search, result)) {\n        setSearch(result);\n      }\n\n      // Check to enable\n      if (disabled) setDisabled(false);\n    } else {\n      // If not empty, clear search\n      if (!isEmpty(search)) {\n        setSearch([]);\n      }\n\n      // Chack to disable\n      if (!disabled) setDisabled(true);\n    }\n  };\n\n  const handleOnClick = () => {\n    handleSearch(search);\n    handleClose();\n  };\n\n  return (\n    <Modal onClose={handleClose}>\n      <Header />\n      <Body\n        handleOnChange={(event) => handleOnChange(event)}\n        search={search}\n      />\n      <Footer\n        disabled={disabled}\n        handleOnClick={() => handleOnClick()}\n      />\n    </Modal>\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Search, areEqual);\n","import React from 'react';\nimport AboutModal from 'components/modals/about';\nimport SearchModal from 'components/modals/search';\nimport { ID } from 'utils/constants';\n\nconst Modal = ({\n  handleClose,\n  handleSearch,\n  modal,\n}) => {\n  const open = modal.length > 0;\n\n  if (!open) return null;\n\n  switch (modal) {\n    case ID.ABOUT:\n      return (\n        <AboutModal handleClose={handleClose} />\n      );\n    case ID.SEARCH:\n      return (\n        <SearchModal\n          handleClose={handleClose}\n          handleSearch={handleSearch}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.modal !== nextProps.modal) return false;\n\n  return true;\n};\n\nexport default React.memo(Modal, areEqual);\n","import React from 'react';\nimport './index.scss';\n\nconst Bottom = () => {\n  return <div className=\"bottom-bar\" />;\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Bottom, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n  FormattedDate,\n} from 'react-intl';\nimport cx from 'classnames';\nimport {\n  controls as config,\n  date,\n} from 'config';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport storage from 'utils/data/storage';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  about: {\n    id: 'button.about.aria',\n    description: 'Aria label for the about button',\n  },\n});\n\nconst propTypes = { openAbout: PropTypes.func };\n\nconst defaultProps = { openAbout: () => {} };\n\nconst Title = ({ openAbout }) => {\n  const intl = useIntl();\n  const start = <FormattedDate value={new Date(storage.metadata.start)} />;\n\n  const interactive = layout.control && config.about;\n  if (!interactive) {\n\n    return (\n      <span className=\"title\">\n        {storage.metadata.name}\n        {date.enabled ? (\n          <> - {start}</>\n        ) : null}\n      </span>\n    );\n  }\n\n  return (\n    <span\n      aria={intl.formatMessage(intlMessages.about)}\n      className={cx('title', { interactive })}\n      onClick={openAbout}\n      onKeyPress={event => handleOnEnterPress(event, openAbout)}\n      tabIndex=\"0\"\n    >\n      {storage.metadata.name}\n      {date.enabled ? (\n        <> - {start}</>\n      ) : null}\n    </span>\n  );\n};\n\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { controls as config } from 'config';\nimport { ID } from 'utils/constants';\nimport layout from 'utils/layout';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = { openSearch: PropTypes.func };\n\nconst defaultProps = { openSearch: () => {} };\n\nconst Search = ({ openSearch }) => {\n  const intl = useIntl();\n\n  if (!layout.control && config.search && !layout.single) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.search)}\n      circle\n      handleOnClick={openSearch}\n      icon={ID.SEARCH}\n    />\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { controls as config } from 'config';\nimport layout from 'utils/layout';\n\nconst intlMessages = defineMessages({\n  section: {\n    id: 'button.section.aria',\n    description: 'Aria label for the section button',\n  },\n});\n\nconst propTypes = {\n  section: PropTypes.bool,\n  toggleSection: PropTypes.func,\n};\n\nconst defaultProps = {\n  section: true,\n  toggleSection: () => {},\n};\n\nconst Section = ({\n  section,\n  toggleSection,\n}) => {\n  const intl = useIntl();\n\n  if (!layout.control && config.section) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.section)}\n      circle\n      handleOnClick={toggleSection}\n      icon={section ? 'left' : 'right'}\n    />\n  );\n};\n\nSection.propTypes = propTypes;\nSection.defaultProps = defaultProps;\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { controls as config } from 'config';\nimport { ID } from 'utils/constants';\nimport layout from 'utils/layout';\n\nconst intlMessages = defineMessages({\n  swap: {\n    id: 'button.swap.aria',\n    description: 'Aria label for the swap button',\n  },\n});\n\nconst propTypes = { toggleSwap: PropTypes.func };\n\nconst defaultProps = { toggleSwap: () => {} };\n\nconst Swap = ({ toggleSwap }) => {\n  const intl = useIntl();\n\n  if (!layout.control && config.swap && !layout.single) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.swap)}\n      circle\n      handleOnClick={toggleSwap}\n      icon={ID.SWAP}\n    />\n  );\n};\n\nSwap.propTypes = propTypes;\nSwap.defaultProps = defaultProps;\n\nexport default Swap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Title from './title';\nimport SearchButton from './buttons/search';\nimport SectionButton from './buttons/section';\nimport SwapButton from './buttons/swap';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst propTypes = {\n  openModal: PropTypes.func,\n  section: PropTypes.bool,\n  toggleSection: PropTypes.func,\n  toggleSwap: PropTypes.func,\n};\n\nconst defaultProps = {\n  openModal: () => {},\n  section: false,\n  toggleSection: () => {},\n  toggleSwap: () => {},\n};\n\nconst Top = ({\n  openModal,\n  section,\n  toggleSection,\n  toggleSwap,\n}) => {\n\n  return (\n    <div className=\"top-bar\">\n      <div className=\"left\">\n        <SectionButton\n          section={section}\n          toggleSection={toggleSection}\n        />\n      </div>\n      <div className=\"center\">\n        <Title openAbout={() => openModal(ID.ABOUT)} />\n      </div>\n      <div className=\"right\">\n        <SearchButton openSearch={() => openModal(ID.SEARCH)} />\n        <SwapButton toggleSwap={toggleSwap} />\n      </div>\n    </div>\n  );\n};\n\nTop.propTypes = propTypes;\nTop.defaultProps = defaultProps;\n\n// Checks the side section state\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.section === nextProps.section;\n};\n\nexport default React.memo(Top, areEqual);\n","import { locale as config } from 'config';\nimport messages from './messages';\nimport { getSearchParam } from 'utils/params';\n\nconst RTL_LOCALES = ['ar', 'dv', 'fa', 'he'];\nconst FALBACK_LOCALE = 'en';\n\nconst setDirection = (language) => {\n  if (RTL_LOCALES.includes(language)) {\n    document.body.parentNode.setAttribute('dir', 'rtl');\n  } else {\n    document.body.parentNode.setAttribute('dir', 'ltr');\n  }\n};\n\nconst getLocale = () => {\n  // Try from the query params\n  let locale = getSearchParam('locale');\n\n  // If not, get browser default\n  if (!locale) locale = navigator.language;\n\n  // Sanitize\n  locale = locale.replace('-', '_');\n  let [ language, ] = locale.split('_');\n\n  // If the locale is missing, try the language fallback\n  if (!messages[locale]) {\n    if (messages[language]) {\n      locale = language;\n    } else {\n      locale = config.default;\n      [ language, ] = config.default.split('_');\n    }\n  }\n\n  setDirection(language);\n\n  return locale;\n};\n\nconst getMessages = (locale) => {\n  if (locale !== FALBACK_LOCALE) {\n    return Object.assign(messages[FALBACK_LOCALE], messages[locale]);\n  }\n\n  return messages[locale];\n};\n\nexport {\n  getLocale,\n  getMessages,\n}\n","import { shortcuts as config } from 'config';\nimport logger from './logger';\n\nexport default class Shortcuts {\n  constructor(actions) {\n    this.enabled = config.enabled;\n\n    if (!this.enabled) {\n      logger.debug('shortcuts', 'disabled');\n    } else {\n      this.init(actions);\n    }\n  }\n\n  init(actions) {\n    this.listeners = [];\n\n    for (let prop in actions) {\n      const value = actions[prop];\n      if (typeof value === 'function') {\n        const key = config[prop];\n        this.add(key, value);\n      } else {\n        for (let p in value) {\n          const k = config[prop][p];\n          const v = value[p];\n          this.add(k, v);\n        }\n      }\n    }\n  }\n\n  add(key, action) {\n    if (!key || typeof key !== 'string') {\n      logger.warn('shortcuts', 'invalid', 'key');\n      return null;\n    } else if (key.length === 0) {\n      return null;\n    }\n\n    if (!action || typeof action !== 'function') {\n      logger.warn('shortcuts', 'invalid', 'action');\n      return null;\n    }\n\n    const listener = document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.shiftKey) {\n        if (e.key === key) action();\n      }\n    });\n\n    this.listeners.push(listener);\n  }\n\n  destroy() {\n    this.listeners.forEach(listener => {\n      document.removeEventListener(listener);\n    });\n  }\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { shortcuts as config } from 'config';\nimport Application from './application';\nimport Content from './content';\nimport Media from './media';\nimport Modal from './modal';\nimport BottomBar from 'components/bars/bottom';\nimport TopBar from 'components/bars/top';\nimport {\n  play,\n  seek,\n  skip,\n} from 'utils/actions';\nimport { ID } from 'utils/constants';\nimport layout from 'utils/layout';\nimport Shortcuts from 'utils/shortcuts';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.wrapper.aria',\n    description: 'Aria label for the player wrapper',\n  },\n});\n\nconst Player = () => {\n  const intl = useIntl();\n\n  const [fullscreen, setFullscreen] = useState(false);\n  const [modal, setModal] = useState('');\n  const [search, setSearch] = useState([]);\n  const [section, setSection] = useState(layout.section);\n  const [swap, setSwap] = useState(layout.swap);\n\n  const shortcuts = useRef();\n\n  useEffect(() => {\n    const { seconds } = config.seek;\n\n    const actions = {\n      fullscreen: () => setFullscreen(prevFullscreen => !prevFullscreen),\n      play: () => play(),\n      section: () => setSection(prevSection => !prevSection),\n      seek: {\n        backward: () => seek(-seconds),\n        forward: () => seek(+seconds),\n      },\n      skip: {\n        next: () => skip(+1),\n        previous: () => skip(-1),\n      },\n      swap: () => setSwap(prevSwap => !prevSwap),\n    };\n\n    shortcuts.current = new Shortcuts(actions);\n\n    return () => {\n      if (shortcuts.current) shortcuts.current.destroy();\n    };\n  }, []);\n\n  const style = {\n    'fullscreen-content': fullscreen,\n    'hidden-section': !section,\n    'single-content': layout.single,\n  };\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('player-wrapper', style)}\n      id={ID.PLAYER}\n    >\n      <TopBar\n        openModal={(type) => setModal(type)}\n        section={section}\n        toggleSection={() => setSection(prevSection => !prevSection)}\n        toggleSwap={() => setSwap(prevSwap => !prevSwap)}\n      />\n      <Media\n        fullscreen={fullscreen}\n        swap={swap}\n        toggleFullscreen={() => setFullscreen(prevFullscreen => !prevFullscreen)}\n      />\n      <Application />\n      <Content\n        fullscreen={fullscreen}\n        handleSearch={(value) => setSearch(value)}\n        search={search}\n        swap={swap}\n        toggleFullscreen={() => setFullscreen(prevFullscreen => !prevFullscreen)}\n      />\n      <BottomBar />\n      <Modal\n        handleClose={() => setModal('')}\n        handleSearch={(value) => setSearch(value)}\n        modal={modal}\n      />\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useRef, useState } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Data from './data';\nimport Dots from './dots';\nimport Error from 'components/error';\nimport Player from 'components/player';\nimport {\n  ERROR,\n  ID,\n} from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport layout from 'utils/layout';\nimport logger from 'utils/logger';\nimport {\n  getLayout,\n  getRecordId,\n} from 'utils/params';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'loader.wrapper.aria',\n    description: 'Aria label for the loader wrapper',\n  },\n});\n\nconst FEEDBACK = 1 * 1000;\n\nconst initError = (recordId) => recordId ? null : ERROR.BAD_REQUEST;\n\nconst Loader = ({ match }) => {\n  const intl = useIntl();\n  const counter = useRef(0);\n  const recordId = useRef(getRecordId(match));\n\n  const [error, setError] = useState(initError(recordId.current));\n  const [, setUpdate] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n\n  if (error) return <Error code={error} />;\n\n  const onError = (error) => {\n    logger.error('loader', 'error', error);\n    setError(error);\n  };\n\n  const onUpdate = (data) => {\n    logger.debug('loader', 'update', data);\n    counter.current += 1;\n    setUpdate(counter.current);\n  };\n\n  const onLoaded = () => {\n    logger.debug('loader', 'loaded');\n    setTimeout(() => setLoaded(true), FEEDBACK);\n  };\n\n  storage.fetch(recordId.current, onUpdate, onLoaded, onError);\n\n  if (loaded) {\n    layout.mode = getLayout();\n\n    return <Player />;\n  }\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"loader-wrapper\"\n      id={ID.LOADER}\n    >\n      <div className=\"loader-top\" />\n      <div className=\"loader-middle\">\n        <Dots />\n      </div>\n      <div className=\"loader-bottom\">\n        <Data data={storage.built} />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { ERROR } from 'utils/constants';\nimport Error from './error';\nimport Loader from './loader';\n\nconst Router = () => {\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route\n          path=\"/:recordId\"\n          component={Loader}\n        />\n        <Route render={() => <Error code={ERROR.NOT_FOUND} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import af from './af.json';\nimport ar from './ar.json';\nimport az from './az.json';\nimport bg_BG from './bg_BG.json';\nimport bn from './bn.json';\nimport ca from './ca.json';\nimport cs_CZ from './cs_CZ.json';\nimport da from './da.json';\nimport de from './de.json';\nimport dv from './dv.json';\nimport el_GR from './el_GR.json';\nimport en from './en.json';\nimport eo from './eo.json';\nimport es from './es.json';\nimport es_419 from './es_419.json';\nimport es_ES from './es_ES.json';\nimport es_MX from './es_MX.json';\nimport et from './et.json';\nimport eu from './eu.json';\nimport fa_IR from './fa_IR.json';\nimport fi from './fi.json';\nimport fr from './fr.json';\nimport gl from './gl.json';\nimport he from './he.json';\nimport hi_IN from './hi_IN.json';\nimport hr from './hr.json';\nimport hu_HU from './hu_HU.json';\nimport hy from './hy.json';\nimport id from './id.json';\nimport it_IT from './it_IT.json';\nimport ja from './ja.json';\nimport ka from './ka.json';\nimport km from './km.json';\nimport kn from './kn.json';\nimport ko_KR from './ko_KR.json';\nimport lt_LT from './lt_LT.json';\nimport lo_LA from './lo_LA.json';\nimport lv from './lv.json';\nimport ml from './ml.json';\nimport mn_MN from './mn_MN.json';\nimport nb_NO from './nb_NO.json';\nimport nl from './nl.json';\nimport oc from './oc.json';\nimport pt from './pt.json';\nimport pt_BR from './pt_BR.json';\nimport pl_PL from './pl_PL.json';\nimport ro_RO from './ro_RO.json';\nimport ru from './ru.json';\nimport sk_SK from './sk_SK.json';\nimport sl from './sl.json';\nimport sr from './sr.json';\nimport sv_SE from './sv_SE.json';\nimport ta from './ta.json';\nimport te from './te.json';\nimport th from './th.json';\nimport tr from './tr.json';\nimport tr_TR from './tr_TR.json';\nimport uk_UA from './uk_UA.json';\nimport vi from './vi.json';\nimport vi_VN from './vi_VN.json';\nimport zh_CN from './zh_CN.json';\nimport zh_TW from './zh_TW.json';\n\nconst messages = {\n  af,\n  ar,\n  az,\n  bg_BG,\n  bn,\n  ca,\n  cs_CZ,\n  da,\n  de,\n  dv,\n  el_GR,\n  en,\n  eo,\n  es,\n  es_419,\n  es_ES,\n  es_MX,\n  et,\n  eu,\n  fa_IR,\n  fi,\n  fr,\n  gl,\n  he,\n  hi_IN,\n  hr,\n  hu_HU,\n  hy,\n  id,\n  it_IT,\n  ja,\n  ka,\n  km,\n  kn,\n  ko_KR,\n  lt_LT,\n  lo_LA,\n  lv,\n  ml,\n  mn_MN,\n  nb_NO,\n  nl,\n  oc,\n  pt,\n  pt_BR,\n  pl_PL,\n  ro_RO,\n  ru,\n  sk_SK,\n  sl,\n  sr,\n  sv_SE,\n  ta,\n  te,\n  th,\n  tr,\n  tr_TR,\n  uk_UA,\n  vi,\n  vi_VN,\n  zh_CN,\n  zh_TW,\n};\n\nexport default messages;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from \"react-intl\";\nimport Loader from 'components/loader';\nimport Router from 'components/router';\nimport {\n  getLocale,\n  getMessages,\n} from 'locales';\nimport { ROUTER } from 'utils/constants';\nimport { getStyle } from 'utils/params';\nimport './index.scss';\n\nconst locale = getLocale();\nconst style = getStyle();\n\nReactDOM.render(\n  (\n    <IntlProvider\n      locale={locale}\n      messages={getMessages(locale)}\n    >\n      {style ? <link rel=\"stylesheet\" type=\"text/css\" href={style} /> : null}\n      {ROUTER ? <Router /> : <Loader />}\n    </IntlProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}