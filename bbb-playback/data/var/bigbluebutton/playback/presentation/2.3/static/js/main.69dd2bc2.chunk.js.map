{"version":3,"sources":["components/loader/dots.js","utils/constants.js","components/error/index.js","components/chat/messages/user/text.js","utils/logger.js","utils/data/validators.js","utils/hash.js","utils/params.js","utils/data/index.js","components/chat/messages/info.js","components/utils/avatar/index.js","utils/data/handlers.js","components/chat/messages/margin.js","components/chat/messages/message.js","components/chat/messages/user/index.js","components/chat/messages/system/poll/options.js","components/chat/messages/system/poll/question.js","components/chat/messages/system/poll/result.js","components/chat/messages/system/message.js","components/chat/messages/system/poll/index.js","components/chat/messages/system/external-video/url.js","components/chat/messages/system/external-video/index.js","components/chat/messages/index.js","components/chat/index.js","components/notes/index.js","components/presentation/cursor.js","components/presentation/slide/proxy.js","components/presentation/slide/index.js","components/presentation/canvas/poll.js","components/presentation/canvas/index.js","components/presentation/index.js","components/screenshare/index.js","components/thumbnails/image.js","components/thumbnails/thumbnail.js","components/thumbnails/item.js","components/utils/button/index.js","components/thumbnails/buttons/clear.js","components/thumbnails/index.js","components/video/index.js","components/bars/bottom.js","components/bars/top/title.js","components/bars/top/buttons/search.js","components/bars/top/buttons/section.js","components/bars/top/buttons/swap.js","components/bars/top/index.js","components/modals/about/item.js","components/modals/about/body.js","components/modals/about/footer.js","components/modals/about/header.js","components/utils/modal/index.js","components/modals/about/index.js","components/modals/search/body.js","components/modals/search/footer.js","components/modals/search/header.js","utils/actions.js","components/modals/search/index.js","utils/builder.js","utils/layout.js","utils/shortcuts.js","utils/synchronizer.js","components/player.js","components/loader/index.js","components/router.js","locales/messages/index.js","locales/index.js","index.js"],"names":["Dots","className","areEqual","React","memo","BUILD","process","MEDIA_ROOT_URL","REACT_APP_MEDIA_ROOT_URL","NO_ROUTER","REACT_APP_NO_ROUTER","ERROR","ID","ABOUT","ALTERNATES","CAPTIONS","CHAT","CURSOR","DESKSHARE","LOADER","METADATA","NOTES","PANZOOMS","PLAYER","POLLS","EXTERNAL_VIDEOS","PRESENTATION","SCREENSHARE","SEARCH","SETTINGS","SHAPES","SWAP","THUMBNAILS","USERS","VIDEO","CONTENT","LAYOUT","NUMBERS","POSITIONS","ROUTER","intlMessages","defineMessages","aria","id","description","Error","code","intl","useIntl","aria-label","formatMessage","Text","active","hyperlink","text","options","cx","inactive","Fragment","defaultProps","params","URLSearchParams","window","location","search","debug","has","logger","info","console","warn","error","hasIndex","index","data","isEmpty","length","hasPresentation","slides","i","src","includes","hasProperty","object","property","hasOwnProperty","hasVideo","player","video","isActive","time","timestamp","clear","cleared","wasCleared","visible","isVisible","isCurrent","item","current","next","isArray","isValid","isString","isEqual","first","second","type","equal","every","value","valid","Array","hash","str","charCodeAt","getSearchParam","name","get","parseTimeToSeconds","patterns","match","hours","minutes","seconds","timeToSeconds","h","parseInt","m","s","buildFileURL","recordId","file","mediaPath","param","getMediaPath","rootUrl","fileUrl","getActiveContent","screenshare","isEnabled","getBar","percentage","bar","p","half","repeat","ltr","document","dir","concat","getCurrentDataIndex","start","stop","middle","Math","floor","getData","config","files","TALKERS","getFileName","canvases","thumbnails","split","shift","getFileType","pop","POLL_TYPES","YN","YNA","TF","POLL_KEYS","Info","milliseconds","getTimestampAsMilliseconds","hourCycle","hour","minute","timeZone","Avatar","circle","icon","initials","style","getAvatarStyle","handleOnEnterPress","event","action","key","handleAutoScroll","fNode","cNode","direction","align","pNode","parentNode","scrollLeft","firstNode","currentNode","clientWidth","offsetLeft","spacing","parentWidth","horizontalOffset","getScrollLeft","scrollTop","clientHeight","offsetTop","parentHeight","verticalOffset","getScrollTop","Margin","onClick","onKeyPress","tabIndex","Message","children","currentTime","User","prevProps","nextProps","yes","no","abstention","true","false","Options","answers","map","label","toLowerCase","getPollLabel","question","Question","Result","responders","total","numVotes","toFixed","Poll","Url","url","ExternalVideo","Messages","chat","currentDataIndex","setRef","message","getMessageType","ref","node","Chat","interaction","useRef","useEffect","scroll","aria-live","onMouseEnter","onMouseLeave","Notes","notes","dangerouslySetInnerHTML","__html","Cursor","x","y","cy","Proxy","height","width","thumbnail","find","alt","logo","Slide","slide","href","image","rect","fill","stroke","strokeWidth","transform","Canvas","draws","drawsInterval","canvas","shape","j","intermediate","push","r","x1","y1","x2","y2","d","points","xmlns","line","buildViewBoxAttr","viewBox","Presentation","currentCursorIndex","currentPanzoomIndex","currentSlideIndex","cursors","panzooms","slideId","getSlideId","currentData","getViewBox","cursor","getCursor","xmlnsXlink","clipPath","Screenshare","media","onPlayerReady","sources","filter","source","buildSources","element","videojs","controls","buildOptions","dispose","data-vjs-player","playsInline","preload","Image","Thumbnail","Item","interactive","handleOnClick","Button","disabled","ghost","solid","default","Clear","handleSearch","Thumbnails","reduce","result","isFiltered","Video","captions","onTimeUpdate","tracks","lang","locale","localeName","kind","srclang","buildTracks","controlBar","fullscreenToggle","pictureInPictureToggle","volumePanel","inline","vertical","inactivityTimeout","playbackRates","rates","on","setInterval","rps","clearInterval","duration","Bottom","about","Title","toggleAbout","date","Date","Search","enabled","toggleSearch","section","Section","toggleSection","swap","Swap","toggleSwap","Top","control","single","green","red","Body","content","users","Footer","Header","metadata","end","subtitle","day","month","year","close","Modal","onClose","About","toggleModal","participants","handleOnChange","maxLength","max","minLength","min","onChange","title","seek","skip","change","useState","setDisabled","setSearch","target","getValue","forEach","indexOf","getSearch","getAttr","attr","getChildren","getId","getNumbers","trimmed","trim","replace","v","parseFloat","buildCanvases","group","canvasAttr","canvasId","g","drawAttr","undo","items","buildStyle","drawId","Object","assign","polyline","polygon","path","switch","foreignObject","child","grandchildren","grandchild","join","parseText","buildShapes","svg","img","in","sort","a","b","buildSlides","build","filename","Promise","resolve","reject","fileType","alternates","presentation","buildAlternates","polls","buildPolls","externalVideos","external_video_url","buildExternalVideos","buildNotes","shapes","explicitChildren","preserveChildrenOrder","charsAsChildren","getOptions","parseStringPromise","then","popcorn","chattimeline","out","decodeXML","clearHyperlink","slice","getInitials","buildChat","recording","position","buildCursor","meeting","meta","end_time","start_time","buildMetadata","panzoom","viewbox","buildPanzooms","start_timestamp","stop_timestamp","buildScreenshare","catch","Layout","layout","this","getContentFromData","getControlFromLayout","getSectionFromLayout","getSwapFromLayout","state","fullscreen","isSingle","isContentVisible","Shortcuts","actions","init","prop","listeners","add","k","listener","addEventListener","e","altKey","shiftKey","removeEventListener","STATUSES","EVENTS","Synchronizer","primary","secondary","status","synching","play","pause","playbackRate","restore","Player","props","application","initControl","modal","initSection","initSwap","initData","handlePlayerReady","bind","handleTimeUpdate","initShortcuts","shortcuts","destroy","found","synchronizer","setState","toggleFullscreen","toggleThumbnails","previous","backward","forward","open","hasFullscreenButton","getContent","getMediaStyle","renderFullscreenButton","toggleApplication","currentChatIndex","renderApplicationIcon","renderApplicationControl","renderApplicationContent","getDraws","currentDrawsInterval","currentDataInterval","getCurrentDataInterval","hasScreenshare","getContentStyle","renderPresentation","renderScreenshare","getBottomContentStyle","renderThumbnails","getPlayerStyle","renderTopBar","renderMedia","renderApplication","renderContent","renderBottomBar","renderModal","PureComponent","Loader","counter","getRecordId","started","getTime","initError","setError","loaded","setLoaded","fetchFile","fetch","response","ok","json","update","keys","fetches","medias","method","all","responses","endsWith","fetchMedia","Router","basename","component","render","messages","ar","de","en","es","fa","fr","it","ja","pt","ru","tr","RTL_LOCALES","navigator","language","body","setAttribute","setDirection","getLocale","styles","getStyle","ReactDOM","rel","getElementById"],"mappings":"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","file":"static/js/main.69dd2bc2.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\nconst Dots = () => {\n\n  return (\n    <div className=\"dots-wrapper\">\n      <div className=\"first\" />\n      <div className=\"second\" />\n      <div className=\"third\" />\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Dots, areEqual);\n","const BUILD = process.env.REACT_APP_BBB_PLAYBACK_BUILD;\nconst MEDIA_ROOT_URL = process.env.REACT_APP_MEDIA_ROOT_URL;\nconst NO_ROUTER = process.env.REACT_APP_NO_ROUTER;\n\nconst ERROR = {\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  NOT_ACCEPTABLE: 406,\n  PROXY_AUTHENTICATION_REQUIRED: 407,\n  REQUEST_TIMEOUT: 408,\n  CONFLICT: 409,\n  GONE: 410,\n};\n\nconst ID = {\n  ABOUT: 'about',\n  ALTERNATES: 'alternates',\n  CAPTIONS: 'captions',\n  CHAT: 'chat',\n  CURSOR: 'cursor',\n  DESKSHARE: 'deskshare',\n  ERROR: 'error',\n  LOADER: 'loader',\n  METADATA: 'metadata',\n  NOTES: 'notes',\n  PANZOOMS: 'panzooms',\n  PLAYER: 'player',\n  POLLS: 'polls',\n  EXTERNAL_VIDEOS: 'externalVideos',\n  PRESENTATION: 'presentation',\n  SCREENSHARE: 'screenshare',\n  SEARCH: 'search',\n  SETTINGS: 'settings',\n  SHAPES: 'shapes',\n  SWAP: 'swap',\n  THUMBNAILS: 'thumbnails',\n  USERS: 'users',\n  VIDEO: 'video',\n};\n\nconst CONTENT = [\n  ID.PRESENTATION,\n  ID.CHAT,\n  ID.POLLS,\n  ID.EXTERNAL_VIDEOS,\n  ID.NOTES,\n  ID.SCREENSHARE,\n  ID.CAPTIONS,\n];\n\nconst LAYOUT = {\n  CONTENT: 'content',\n  DISABLED: 'disabled',\n  MEDIA: 'media',\n};\n\nconst NUMBERS = [\n  'zero', 'one', 'two', 'three',\n  'four', 'five', 'six', 'seven',\n  'eight', 'nine', 'ten', 'eleven',\n  'twelve', 'thirteen', 'fourteen', 'fifteen',\n];\n\nconst POSITIONS = {\n  BOTTOM: 'bottom',\n  CENTER: 'center',\n  LEFT: 'left',\n  MIDDLE: 'middle',\n  RIGHT: 'right',\n  TOP: 'top',\n};\n\nconst SHAPES = {\n  CIRCLE: 'circle',\n  LINE: 'line',\n  PATH: 'path',\n  POLL: 'poll',\n  POLYGON: 'polygon',\n  POLYLINE: 'polyline',\n  TEXT: 'text',\n};\n\nconst getRouter = () => {\n  if (typeof NO_ROUTER !== 'undefined') {\n    if (NO_ROUTER) return false;\n  }\n\n  return true;\n};\n\nconst ROUTER = getRouter();\n\nexport {\n  BUILD,\n  CONTENT,\n  ERROR,\n  ID,\n  LAYOUT,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  POSITIONS,\n  ROUTER,\n  SHAPES,\n};\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'error.wrapper.aria',\n    description: 'Aria label for the error wrapper',\n  },\n});\n\nconst Error = ({ code }) => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"error-wrapper\"\n      id={ID.ERROR}\n    >\n      <div className=\"error-code\">\n        {code}\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  text: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  hyperlink: false,\n  text: '',\n};\n\nconst Text = ({\n  active,\n  hyperlink,\n  text,\n}) => {\n  if (hyperlink) {\n    const options = {\n      className: cx('linkified', { inactive: !active }),\n    };\n\n    return (\n      <Linkify options={options}>\n        {text}\n      </Linkify>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {text}\n    </React.Fragment>\n  );\n};\n\nText.propTypes = propTypes;\nText.defaultProps = defaultProps;\n\nexport default Text;\n","const params = new URLSearchParams(window.location.search);\nconst debug = params ? params.has('debug') : false;\n\nconst logger = {\n  info: (...msg) => console.info(...msg),\n  debug: (...msg) => debug ? console.debug(...msg) : null,\n  warn: (...msg) => debug ? console.warn(...msg) : null,\n  error: (...msg) => console.error(...msg),\n};\n\nexport default logger;\n","import { LAYOUT } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst hasIndex = (index, data) => {\n  if (index < 0) return false;\n\n  if (isEmpty(data)) return false;\n\n  if (index >= data.length) {\n    logger.error('out of bounds', index, data);\n\n    return false;\n  }\n\n  return true;\n};\n\nconst hasPresentation = slides => {\n  if (isEmpty(slides)) return false;\n\n  for (let i = 0; i < slides.length; i++) {\n    const { src } = slides[i];\n\n    if (src.includes('slide')) return true;\n  }\n\n  return false;\n};\n\nconst hasProperty = (object, property) => {\n  if (object && object.hasOwnProperty(property)) {\n    if (typeof object[property] !== 'undefined') return true;\n  }\n\n  logger.warn('missing', property, object);\n\n  return false;\n};\n\nconst hasVideo = (player) => {\n  if (player && player.video) return true;\n\n  return false;\n};\n\nconst isActive = (time, timestamp, clear = -1) => {\n  const cleared = wasCleared(time, clear);\n  const visible = isVisible(time, timestamp);\n\n  return visible && !cleared;\n};\n\nconst isContentVisible = (layout, swap) => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let visible;\n  switch (layout) {\n    case  CONTENT:\n      visible = !swap;\n      break;\n    case MEDIA:\n      visible = swap;\n      break;\n    default:\n      visible = false;\n  }\n\n  return visible;\n};\n\nconst isCurrent = (data, index, time) => {\n  if (!hasIndex(index, data)) return false;\n\n  const item = data[index];\n  if (!hasProperty(item, 'timestamp')) return false;\n\n  let current = false;\n  if (isVisible(time, item.timestamp)) {\n    if (index + 1 < data.length) {\n      const next = data[index + 1];\n      if (hasProperty(next, 'timestamp')) {\n        current = !isVisible(time, next.timestamp);\n      }\n    } else {\n      current = true;\n    }\n  }\n\n  return current;\n};\n\nconst isDefined = data => typeof data !== 'undefined';\n\nconst isEmpty = data => {\n  const isArray = isValid('array', data);\n  const isString = isValid('string', data);\n  if (!isArray && !isString) return true;\n\n  const empty = data.length === 0;\n\n  return empty;\n};\n\nconst isEnabled = (data, time) => {\n  if (isEmpty(data)) return false;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      // Check if it was activated and did not ended\n      if (isActive(time, timestamp, clear)) return true;\n\n      // Check if we are searching over the present time value\n      if (!isVisible(time, timestamp)) return false;\n    } else {\n      // Invalid item\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst isEqual = (first, second, type = 'array') => {\n  let equal = false;\n\n  switch (type) {\n    case 'array':\n      if (first.length === second.length) {\n        equal = first.every((value, index) => value === second[index])\n      }\n\n      return equal;\n    default:\n      return equal;\n  }\n};\n\nconst isValid = (type, data) => {\n  let valid = false;\n\n  switch (type) {\n    case 'array':\n      if (Array.isArray(data)) valid = true;\n      break;\n    case 'string':\n      if (typeof data === type) valid = true;\n      break;\n    default:\n      logger.debug('unhandled', type);\n  }\n\n  return valid;\n};\n\nconst isVisible = (time, timestamp) => timestamp <= time;\n\nconst wasCleared = (time, clear) => clear !== -1 && clear <= time;\n\nexport {\n  hasIndex,\n  hasPresentation,\n  hasProperty,\n  hasVideo,\n  isActive,\n  isContentVisible,\n  isCurrent,\n  isDefined,\n  isEmpty,\n  isEnabled,\n  isEqual,\n  isValid,\n  isVisible,\n  wasCleared,\n};\n","// @ironwallaby's string-hash\n// https://github.com/darkskyapp/string-hash\nconst hash = (str) => {\n  let hash = 5381;\n\n  let i = str.length;\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n};\n\nexport default hash;\n","import config from 'config';\nimport { ROUTER } from './constants';\nimport logger from './logger';\n\nconst getLayout = () => {\n  const param = getSearchParam('l');\n\n  if (param) return param;\n\n  return null;\n};\n\nconst getMediaPath = () => {\n  const param = getSearchParam('p');\n\n  let mediaPath = '';\n  if (param) mediaPath = param;\n\n  return mediaPath;\n};\n\nconst getRecordId = match => {\n  if (!ROUTER) return 'local';\n\n  if (match) {\n    const { params } = match;\n    if (params && params.recordId) {\n      const { recordId } = params;\n      const regex = /^[a-z0-9]{40}-[0-9]{13}$/;\n\n      if (recordId.match(regex)) return recordId;\n    }\n  }\n\n  logger.error('missing', 'recordId');\n\n  return null;\n};\n\nconst getSearchParam = (name) => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params && params.has(name)) {\n    const param = params.get(name);\n\n    return param;\n  }\n\n  return null;\n};\n\nconst getStyle = () => {\n  const param = getSearchParam('s');\n  const { styles } = config;\n  const { url } = styles;\n\n  let style = styles.default ? `${url}/${styles.default}.css` : null;\n  if (param) {\n    const { valid } = styles;\n    if (valid.includes(param)) {\n      style = `${url}/${param}.css`;\n    }\n  }\n\n  return style;\n};\n\nconst getTime = () => {\n  const param = getSearchParam('t');\n\n  if (param) return parseTimeToSeconds(param);\n\n  return null;\n};\n\nconst parseTimeToSeconds = time => {\n  const patterns = [\n    /^(\\d+)h(\\d+)m(\\d+)s$/,\n    /^(\\d+)m(\\d+)s$/,\n    /^(\\d+)s$/,\n  ];\n\n  for (let i = 0; i < patterns.length; i++) {\n    if (time.match(patterns[i])) {\n      const hours = time.match(/(\\d+)h/);\n      const minutes = time.match(/(\\d+)m/);\n      const seconds = time.match(/(\\d+)s/);\n\n      let timeToSeconds = 0;\n\n      if (hours) {\n        const h = parseInt(hours[1]);\n        if (h >= 0) timeToSeconds += h * 3600;\n      }\n\n      if (minutes) {\n        const m = parseInt(minutes[1]);\n        if (m >= 0 && m < 60) {\n          timeToSeconds += m * 60;\n        } else {\n          return null;\n        }\n      }\n\n      if (seconds) {\n        const s = parseInt(seconds[1]);\n        if (s >= 0 && s < 60) {\n          timeToSeconds += s;\n        } else {\n          return null;\n        }\n      }\n\n      return timeToSeconds;\n    }\n  }\n\n  return null;\n};\n\nexport {\n  getLayout,\n  getMediaPath,\n  getRecordId,\n  getStyle,\n  getSearchParam,\n  getTime,\n  parseTimeToSeconds,\n};\n","import config from 'config';\nimport {\n  hasIndex,\n  hasPresentation,\n  hasProperty,\n  isCurrent,\n  isDefined,\n  isEmpty,\n  isEnabled,\n  isVisible,\n  wasCleared,\n} from './validators';\nimport {\n  ID,\n  LAYOUT,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  ROUTER,\n} from 'utils/constants';\nimport hash from 'utils/hash';\nimport logger from 'utils/logger';\nimport { getMediaPath } from 'utils/params';\n\nconst buildFileURL = (recordId, file) => {\n  if (!ROUTER) return file;\n\n  const mediaPath = getMediaPath();\n\n  const rootUrl = MEDIA_ROOT_URL ? MEDIA_ROOT_URL : '/presentation';\n\n  let fileUrl = `${recordId}/${file}`;\n  if (mediaPath) fileUrl = `${mediaPath}/${fileUrl}`;\n\n  return `${rootUrl}/${fileUrl}`;\n};\n\nconst getAvatarStyle = name => {\n  const index = hash(name) % NUMBERS.length;\n\n  return `avatar-${NUMBERS[index]}`;\n};\n\nconst getActiveContent = (screenshare, time) => {\n  const {\n    SCREENSHARE,\n    PRESENTATION,\n  } = ID;\n\n  const content = isEnabled(screenshare, time) ? SCREENSHARE : PRESENTATION;\n\n  return content;\n};\n\nconst FULL_BLOCK = '█';\nconst LEFT_HALF_BLOCK = '▌';\nconst RIGHT_HALF_BLOCK = '▐';\nconst EMPTY_BLOCK = '-';\n\nconst getBar = (percentage) => {\n  const p = parseInt(percentage);\n\n  let bar;\n  if (p === 0) {\n    bar = EMPTY_BLOCK;\n  } else {\n    const full = p / 10;\n    const half = (p % 10) > 2;\n\n    bar = FULL_BLOCK.repeat(full);\n\n    if (half) {\n      // Add true fallback for the tests\n      const ltr = document.dir ? document.dir === 'ltr' : true;\n      bar = bar.concat(ltr ? LEFT_HALF_BLOCK : RIGHT_HALF_BLOCK);\n    }\n  }\n\n  return bar;\n};\n\nconst getContentFromData = data => {\n  const captions = getData(data, ID.CAPTIONS);\n  const chat = getData(data, ID.CHAT);\n  const notes = getData(data, ID.NOTES);\n  const polls = getData(data, ID.POLLS);\n  const externalVideos = getData(data, ID.EXTERNAL_VIDEOS);\n  const screenshare = getData(data, ID.SCREENSHARE);\n  const shapes = getData(data, ID.SHAPES);\n  const slides = shapes.slides;\n\n  const content = {\n    captions: !isEmpty(captions),\n    chat: !isEmpty(chat),\n    notes: !isEmpty(notes),\n    polls: !isEmpty(polls),\n    externalVideos: !isEmpty(externalVideos),\n    presentation: hasPresentation(slides),\n    screenshare: !isEmpty(screenshare),\n  };\n\n  return content;\n};\n\nconst getControlFromLayout = layout => {\n  const { DISABLED } = LAYOUT;\n  let control = true;\n  switch (layout) {\n    case DISABLED:\n      control = false;\n      break;\n    default:\n  }\n\n  return control;\n};\n\nconst getCurrentDataIndex = (data, time) => {\n  if (isEmpty(data)) return -1;\n\n  let start = 0;\n  let stop = data.length - 1;\n  let middle = Math.floor((start + stop) / 2);\n\n  while (!isCurrent(data, middle, time) && start < stop) {\n    const item = data[middle];\n    if (!hasProperty(item, 'timestamp')) return -1;\n\n    if (!isVisible(time, item.timestamp)) {\n      stop = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n\n    middle = Math.floor((start + stop) / 2);\n  }\n\n  const current = isCurrent(data, middle, time);\n\n  return (!current) ? -1 : middle;\n};\n\nconst getCurrentDataInterval = (data, time) => {\n  const currentDataInterval = [];\n\n  if (isEmpty(data)) return currentDataInterval;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      if (!isVisible(time, timestamp)) break;\n\n      currentDataInterval.push(!wasCleared(time, clear));\n    }\n  }\n\n  return currentDataInterval;\n};\n\nconst getData = (data, id) => {\n  const file = config.files.data[id];\n\n  switch (id) {\n    case ID.ALTERNATES:\n    case ID.CAPTIONS:\n    case ID.CHAT:\n    case ID.CURSOR:\n    case ID.NOTES:\n    case ID.PANZOOMS:\n    case ID.POLLS:\n    case ID.EXTERNAL_VIDEOS:\n    case ID.SCREENSHARE:\n    case ID.TALKERS:\n      if (!file || data[getFileName(file)] === null) {\n        return [];\n      }\n\n      return data[getFileName(file)];\n    case ID.METADATA:\n      if (!file || data[getFileName(file)] === null) {\n        logger.error('missing', id);\n        return {};\n      }\n\n      return data[getFileName(file)];\n    case ID.SHAPES:\n      if (!file || data[getFileName(file)] === null) {\n        return {\n          canvases: [],\n          slides: [],\n          thumbnails: [],\n        };\n      }\n\n      return data[getFileName(file)];\n    default:\n      logger.debug('unhandled', id);\n      return [];\n  }\n};\n\nconst getDraws = (index, slides, canvases) => {\n  if (!hasIndex(index, slides)) return [];\n\n  const slide = slides[index];\n\n  if (isEmpty(canvases)) return [];\n\n  const canvas = canvases.find(canvas => slide.id === canvas.id);\n\n  if (!canvas) return [];\n\n  const { draws } = canvas;\n\n  return draws;\n};\n\nconst getFileName = file => file.split('.').shift();\n\nconst getFileType = file => file.split('.').pop();\n\nconst getLoadedData = data => {\n  const captions = getData(data, ID.CAPTIONS);\n  const chat = getData(data, ID.CHAT);\n  const notes = getData(data, ID.NOTES);\n  const polls = getData(data, ID.POLLS);\n  const externalVideos = getData(data, ID.EXTERNAL_VIDEOS);\n  const screenshare = getData(data, ID.SCREENSHARE);\n  const shapes = getData(data, ID.SHAPES);\n\n  const loadedData = {\n    captions: isDefined(captions),\n    chat: isDefined(chat),\n    notes: isDefined(notes),\n    polls: isDefined(polls),\n    externalVideos: isDefined(externalVideos),\n    presentation: isDefined(shapes),\n    screenshare: isDefined(screenshare),\n  };\n\n  return loadedData;\n};\n\nconst getPercentage = (value, total) => {\n  if (total === 0) return 0;\n\n  return ((value / total) * 100).toFixed(1);\n};\n\nconst POLL_TYPES = {\n  YN: 'YN',\n  YNA: 'YNA',\n  TF: 'TF',\n};\n\nconst POLL_KEYS = [\n  'Yes',\n  'No',\n  'Abstention',\n  'True',\n  'False',\n];\n\nconst getPollLabel = (key, type) => {\n  if (!POLL_TYPES[type]) return null;\n\n  if (!POLL_KEYS.includes(key)) return null;\n\n  return key.toLowerCase();\n};\n\nconst getSectionFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let section = true;\n  switch (layout) {\n    case CONTENT:\n      section = false;\n      break;\n    case MEDIA:\n      section = false;\n      break;\n    default:\n  }\n\n  return section;\n};\n\nconst getSwapFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let swap = false;\n  switch (layout) {\n    case CONTENT:\n      swap = false;\n      break;\n    case MEDIA:\n      swap = true;\n      break;\n    default:\n  }\n\n  return swap;\n};\n\nconst getMessageType = (item) => {\n  if (typeof item.message === 'string') return ID.USERS;\n  if (typeof item.question === 'string') return ID.POLLS;\n  if (typeof item.url === 'string') return ID.EXTERNAL_VIDEOS;\n\n  return 'undefined';\n};\n\nconst getTimestampAsMilliseconds = timestamp => timestamp * 1000;\n\nexport {\n  buildFileURL,\n  getAvatarStyle,\n  getActiveContent,\n  getBar,\n  getContentFromData,\n  getControlFromLayout,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  getFileName,\n  getFileType,\n  getLoadedData,\n  getMessageType,\n  getPercentage,\n  getPollLabel,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  getTimestampAsMilliseconds,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedTime } from 'react-intl';\nimport cx from 'classnames';\nimport { getTimestampAsMilliseconds } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  name: '',\n  timestamp: 0,\n};\n\nconst Info = ({\n  active,\n  name,\n  timestamp,\n}) => {\n  const milliseconds = getTimestampAsMilliseconds(timestamp);\n\n  return (\n    <div className=\"info\">\n      <div className={cx('name', { inactive: !active })}>\n        {name}\n      </div>\n      <div className={cx('time', { inactive: !active })}>\n        <FormattedTime\n          hourCycle=\"h23\"\n          hour=\"numeric\"\n          minute=\"numeric\"\n          second=\"numeric\"\n          timeZone=\"UTC\"\n          value={milliseconds}\n        />\n      </div>\n    </div>\n  );\n};\n\nInfo.propTypes = propTypes;\nInfo.defaultProps = defaultProps;\n\nexport default Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { getAvatarStyle } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n};\n\nconst defaultProps = {\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n};\n\nconst Avatar = ({\n  circle,\n  icon,\n  initials,\n  name,\n}) => {\n  const style = circle ? getAvatarStyle(name) : 'avatar-default';\n\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className={cx('avatar', { circle }, style)}>\n        {icon ? (\n          <span className={`icon-${icon}`} />\n        ) : (\n          <span className=\"initials\">\n            {initials}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nAvatar.propTypes = propTypes;\nAvatar.defaultProps = defaultProps;\n\nexport default Avatar;\n","import { POSITIONS } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst getScrollLeft = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientWidth,\n    offsetLeft,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const ltr = document.dir === 'ltr';\n  const spacing = ltr ? firstNode.offsetLeft : 0;\n  const parentWidth = parentNode.clientWidth;\n\n  let horizontalOffset = 0;\n  switch (align) {\n    case POSITIONS.LEFT:\n      horizontalOffset = offsetLeft - spacing;\n      break;\n    case POSITIONS.CENTER:\n      horizontalOffset = parseInt(offsetLeft + (clientWidth - spacing - parentWidth) / 2, 10);\n      break;\n    case POSITIONS.RIGHT:\n      horizontalOffset = offsetLeft + clientWidth - parentWidth;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return horizontalOffset;\n};\n\nconst getScrollTop = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientHeight,\n    offsetTop,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetTop;\n  const parentHeight = parentNode.clientHeight;\n\n  let verticalOffset = 0;\n  switch (align) {\n    case POSITIONS.TOP:\n      verticalOffset = offsetTop - spacing;\n      break;\n    case POSITIONS.MIDDLE:\n      verticalOffset = parseInt(offsetTop + (clientHeight - spacing - parentHeight) / 2, 10);\n      break;\n    case POSITIONS.BOTTOM:\n      verticalOffset = offsetTop + clientHeight - parentHeight;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return verticalOffset;\n};\n\nconst handleOnEnterPress = (event, action) => {\n  if (event && event.key === 'Enter') {\n    if (typeof action === 'function') action();\n  }\n};\n\nconst handleAutoScroll = (fNode, cNode, direction, align) => {\n  // Auto-scroll can start after getting the first and current nodes\n  if (fNode && cNode) {\n    const { parentNode: pNode } = cNode;\n\n    switch (direction) {\n      case POSITIONS.LEFT:\n        pNode.scrollLeft = getScrollLeft(fNode, cNode, align);\n        break;\n      case POSITIONS.TOP:\n        pNode.scrollTop = getScrollTop(fNode, cNode, align);\n        break;\n      default:\n        logger.debug('unhandled', direction);\n    }\n  }\n};\n\nexport {\n  getScrollLeft,\n  getScrollTop,\n  handleAutoScroll,\n  handleOnEnterPress,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n  onClick: () => {},\n};\n\nconst Margin = ({\n  active,\n  circle,\n  icon,\n  initials,\n  name,\n  onClick,\n}) => {\n  const style = {\n    circle,\n    inactive: !active,\n  };\n\n  return (\n    <div\n      className={cx('interactive', style)}\n      onClick={onClick}\n      onKeyPress={event => handleOnEnterPress(event, onClick)}\n      tabIndex=\"0\"\n    >\n      <Avatar\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n      />\n    </div>\n  );\n};\n\nMargin.propTypes = propTypes;\nMargin.defaultProps = defaultProps;\n\nexport default Margin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Info from './info';\nimport Margin from './margin';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  player: PropTypes.object,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n  player: {},\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  circle,\n  icon,\n  initials,\n  name,\n  player,\n  timestamp,\n}) => {\n  const handleOnClick = () => {\n    if (player) player.currentTime(timestamp);\n  };\n\n  return (\n    <div className=\"message\">\n      <Margin\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n        onClick={() => handleOnClick()}\n      />\n      <div className=\"data\">\n        <Info\n          active={active}\n          name={name}\n          timestamp={timestamp}\n        />\n        <div className={cx('text', { inactive: !active })}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from './text';\nimport Message from 'components/chat/messages/message';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  player: PropTypes.object,\n  text: PropTypes.string,\n  timestamp: PropTypes.timestamp,\n};\n\nconst defaultProps = {\n  active: false,\n  hyperlink: false,\n  initials: '',\n  name: '',\n  player: {},\n  text: '',\n  timestamp: 0,\n};\n\nconst User = ({\n  active,\n  hyperlink,\n  initials,\n  name,\n  player,\n  text,\n  timestamp,\n}) => {\n\n  return (\n    <Message\n      active={active}\n      circle\n      initials={initials}\n      name={name}\n      player={player}\n      timestamp={timestamp}\n    >\n      <Text\n        active={active}\n        hyperlink={hyperlink}\n        text={text}\n      />\n    </Message>\n  );\n};\n\nUser.propTypes = propTypes;\nUser.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(User, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { getPollLabel } from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  options: {\n    id: 'player.chat.message.poll.options',\n    description: 'Label for the poll message answer options',\n  },\n  yes: {\n    id: 'player.chat.message.poll.option.yes',\n    description: 'Label for poll option yes',\n  },\n  no: {\n    id: 'player.chat.message.poll.option.no',\n    description: 'Label for poll option no',\n  },\n  abstention: {\n    id: 'player.chat.message.poll.option.abstention',\n    description: 'Label for poll option abstention',\n  },\n  true: {\n    id: 'player.chat.message.poll.option.true',\n    description: 'Label for poll option true',\n  },\n  false: {\n    id: 'player.chat.message.poll.option.false',\n    description: 'Label for poll option false',\n  },\n});\n\nconst propTypes = {\n  answers: PropTypes.array,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  answers: [],\n  type: '',\n};\n\nconst Options = ({\n  answers,\n  type,\n}) => {\n  const intl = useIntl();\n\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-options\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.options)}\n      </div>\n      {answers.map((item) => {\n        const {\n          id,\n          key,\n        } = item;\n\n        const label = getPollLabel(key, type);\n\n        return(\n          <div>\n            {id + 1}: {label ? intl.formatMessage(intlMessages[label]) : key}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nOptions.propTypes = propTypes;\nOptions.defaultProps = defaultProps;\n\nexport default Options;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  question: {\n    id: 'player.chat.message.poll.question',\n    description: 'Label for the poll message question',\n  },\n});\n\nconst propTypes = { question: PropTypes.string };\n\nconst defaultProps = { question: '' };\n\nconst Question = ({ question }) => {\n  const intl = useIntl();\n\n  if (isEmpty(question)) return null;\n\n  return (\n    <div className=\"poll-question\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.question)}\n      </div>\n      {question}\n    </div>\n  );\n};\n\nQuestion.propTypes = propTypes;\nQuestion.defaultProps = defaultProps;\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  getBar,\n  getPercentage,\n} from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst propTypes = {\n  answers: PropTypes.array,\n  responders: PropTypes.number,\n};\n\nconst defaultProps = {\n  answers: [],\n  responders: 0,\n};\n\nconst Result = ({\n  answers,\n  responders,\n}) => {\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-result\">\n      {answers.map((item) => {\n        const {\n          id,\n          numVotes,\n        } = item;\n\n        const percentage = getPercentage(numVotes, responders);\n\n        return(\n          <div className=\"poll-label\">\n            {id + 1}: <span className=\"poll-bar\">{getBar(percentage)}</span> {percentage}%\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nResult.propTypes = propTypes;\nResult.defaultProps = defaultProps;\n\nexport default Result;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseMessage from 'components/chat/messages/message';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  icon: PropTypes.string,\n  name: PropTypes.string,\n  player: PropTypes.object,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  icon: '',\n  name: '',\n  player: {},\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  icon,\n  name,\n  player,\n  timestamp,\n}) => {\n\n  return (\n    <BaseMessage\n      active={active}\n      icon={icon}\n      name={name}\n      player={player}\n      timestamp={timestamp}\n    >\n      <div className=\"system-message-wrapper\">\n        {children}\n      </div>\n    </BaseMessage>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Options from './options';\nimport Question from './question';\nimport Result from './result';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.poll.name',\n    description: 'Label for the poll message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  answers: PropTypes.array,\n  player: PropTypes.object,\n  question: PropTypes.string,\n  responders: PropTypes.number,\n  timestamp: PropTypes.number,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  answers: [],\n  player: {},\n  question: '',\n  responders: 0,\n  timestamp: 0,\n  type: '',\n};\n\nconst Poll = ({\n  active,\n  answers,\n  player,\n  question,\n  responders,\n  timestamp,\n  type,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.POLLS}\n      name={intl.formatMessage(intlMessages.name)}\n      player={player}\n      timestamp={timestamp}\n    >\n      <Question question={question} />\n      <Result\n        answers={answers}\n        responders={responders}\n      />\n      <Options\n        answers={answers}\n        type={type}\n      />\n    </SystemMessage>\n  );\n};\n\nPoll.propTypes = propTypes;\nPoll.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'utils/data/validators';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  url: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  url: '',\n};\n\nconst Url = ({\n  active,\n  url,\n}) => {\n  if (isEmpty(url)) return null;\n\n  const options = {\n    className: cx('linkified', { inactive: !active }),\n  };\n\n  return (\n    <Linkify options={options}>\n      {url}\n    </Linkify>\n  );\n};\n\nUrl.propTypes = propTypes;\nUrl.defaultProps = defaultProps;\n\nexport default Url;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Url from './url';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.externalVideo.name',\n    description: 'Label for the external video message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  player: PropTypes.object,\n  url: PropTypes.url,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  player: {},\n  url: '',\n  timestamp: 0,\n};\n\nconst ExternalVideo = ({\n  active,\n  player,\n  url,\n  timestamp,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.EXTERNAL_VIDEOS}\n      name={intl.formatMessage(intlMessages.name)}\n      player={player}\n      timestamp={timestamp}\n    >\n      <Url\n        active={active}\n        url={url}\n      />\n    </SystemMessage>\n  );\n};\n\nExternalVideo.propTypes = propTypes;\nExternalVideo.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(ExternalVideo, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserMessage from './user';\nimport PollMessage from './system/poll';\nimport ExternalVideoMessage from './system/external-video';\nimport { ID } from 'utils/constants';\nimport { getMessageType } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  chat: PropTypes.array,\n  currentDataIndex: PropTypes.number,\n  player: PropTypes.object,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  chat: [],\n  currentDataIndex: 0,\n  player: {},\n  setRef: () => {},\n};\n\nconst Messages = ({\n  chat,\n  currentDataIndex,\n  player,\n  setRef,\n}) => {\n\n  return (\n    <div className=\"list\">\n      <div className=\"message-wrapper\">\n        {chat.map((item, index) => {\n          const active = index <= currentDataIndex;\n          const { timestamp } = item;\n          const type = getMessageType(item);\n          switch (type) {\n            case ID.USERS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <UserMessage\n                    active={active}\n                    hyperlink={item.hyperlink}\n                    initials={item.initials}\n                    name={item.name}\n                    player={player}\n                    text={item.message}\n                    timestamp={timestamp}\n                  />\n                </span>\n              );\n            case ID.POLLS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <PollMessage\n                    active={active}\n                    answers={item.answers}\n                    player={player}\n                    question={item.question}\n                    responders={item.responders}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            case ID.EXTERNAL_VIDEOS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <ExternalVideoMessage\n                    active={active}\n                    player={player}\n                    url={item.url}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            default:\n              return <span ref={node => setRef(node, index)} />;\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nMessages.propTypes = propTypes;\nMessages.defaultProps = defaultProps;\n\nexport default Messages;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { chat as config } from 'config';\nimport Messages from './messages';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.chat.wrapper.aria',\n    description: 'Aria label for the chat wrapper',\n  },\n});\n\nconst propTypes = {\n  chat: PropTypes.array,\n  currentDataIndex: PropTypes.number,\n  player: PropTypes.object,\n};\n\nconst defaultProps = {\n  chat: [],\n  currentDataIndex: 0,\n  player: {},\n};\n\nconst Chat = ({\n  chat,\n  currentDataIndex,\n  player,\n}) => {\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const intl = useIntl();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentDataIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.TOP, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      aria-live=\"polite\"\n      className=\"chat-wrapper\"\n      id={ID.CHAT}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      <Messages\n        chat={chat}\n        currentDataIndex={currentDataIndex}\n        player={player}\n        setRef={(node, index) => setRef(node, index)}\n      />\n    </div>\n  );\n};\n\nChat.propTypes = propTypes;\nChat.defaultProps = defaultProps;\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.currentDataIndex !== nextProps.currentDataIndex) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(Chat, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.notes.wrapper.aria',\n    description: 'Aria label for the notes wrapper',\n  },\n});\n\nconst propTypes = { notes: PropTypes.text };\n\nconst defaultProps = { notes: '' };\n\nconst Notes = ({ notes }) => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"notes-wrapper\"\n      id={ID.NOTES}\n      tabIndex=\"0\"\n    >\n      <div className=\"notes\">\n        <div dangerouslySetInnerHTML={{ __html: notes }} />\n      </div>\n    </div>\n  );\n};\n\nNotes.propTypes = propTypes;\nNotes.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Notes, areEqual);\n","import React from 'react';\nimport './index.scss';\n\nconst Cursor = ({\n  x,\n  y,\n}) => {\n\n  if (x === -1 || y === -1) return null;\n\n  return (\n    <circle\n      className=\"cursor\"\n      style={{ cx: x, cy: y }}\n    />\n  );\n};\n\nexport default Cursor;\n","import React from 'react';\nimport cx from 'classnames';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst Proxy = ({\n  id,\n  height,\n  recordId,\n  thumbnails,\n  width,\n}) => {\n  const thumbnail = thumbnails.find(thumbnails => id === thumbnails.id);\n  if (!thumbnail) return null;\n\n  const {\n    alt,\n    src,\n  } = thumbnail;\n\n  if (src === ID.SCREENSHARE) return null;\n\n  const logo = src.includes('logo');\n\n  return (\n    <foreignObject\n      height={height}\n      x={0}\n      width={width}\n      y={0}\n    >\n      <img\n        alt={alt}\n        className={cx('proxy', { logo })}\n        src={buildFileURL(recordId, src)}\n      />\n    </foreignObject>\n  );\n};\n\nexport default Proxy;\n","import React from 'react';\nimport Proxy from './proxy';\nimport { buildFileURL } from 'utils/data';\n\nconst Slide = ({\n  id,\n  recordId,\n  slides,\n  thumbnails,\n}) => {\n  const current = slides.find(slide => id === slide.id);\n  if (!current) return null;\n\n  const {\n    height,\n    src,\n    width,\n  } = current;\n\n  return (\n    <g>\n      <Proxy\n        id={id}\n        height={height}\n        recordId={recordId}\n        thumbnails={thumbnails}\n        width={width}\n      />\n      <image\n        height={height}\n        href={buildFileURL(recordId, src)}\n        x={0}\n        width={width}\n        y={0}\n      />\n    </g>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.id === nextProps.id;\n};\n\nexport default React.memo(Slide, areEqual);\n","import React from 'react';\nimport { buildFileURL } from 'utils/data';\n\nconst Poll = ({\n  data,\n  recordId,\n  style,\n}) => {\n  const {\n    image,\n    rect,\n  } = data;\n\n  // TODO: Better adapt for old versions\n  if (rect) {\n    // BigBlueButton v2.2 or lower\n    return (\n      <g style={style}>\n        <rect\n          fill={rect.fill}\n          height={rect.height}\n          stroke={rect.stroke}\n          strokeWidth={rect['stroke-width']}\n          width={rect.width}\n          x={rect.x}\n          y={rect.y}\n        />\n        <image\n          height={image.height}\n          transform={image.transform}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(recordId, image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  } else {\n    // BigBlueButton v2.3 or higher\n     return (\n      <g style={style}>\n        <image\n          height={image.height}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(recordId, image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  }\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport Poll from './poll';\nimport { SHAPES } from 'utils/constants';\nimport { isEmpty } from 'utils/data/validators';\nimport logger from 'utils/logger';\n\nconst Canvas = ({\n  draws,\n  drawsInterval,\n  recordId,\n}) => {\n  if (isEmpty(drawsInterval)) return null;\n\n  const canvas = [];\n\n  for (let i = 0; i < drawsInterval.length; i++) {\n    if (!drawsInterval[i]) continue;\n\n    const {\n      id,\n      shape,\n      style,\n    } = draws[i];\n\n    const j = i + 1;\n    let intermediate = false;\n    if (j < drawsInterval.length) {\n      intermediate = draws[j].id === id;\n    }\n\n    if (intermediate) continue;\n\n    const {\n      data,\n      type,\n    } = shape;\n\n    switch (type) {\n      case SHAPES.CIRCLE:\n        canvas.push(\n          <circle\n            style={style}\n            cx={data.cx}\n            cy={data.cy}\n            r={data.r}\n          />\n        );\n        break;\n      case SHAPES.LINE:\n        canvas.push(\n          <line\n            style={style}\n            x1={data.x1}\n            y1={data.y1}\n            x2={data.x2}\n            y2={data.y2}\n          />\n        );\n        break;\n      case SHAPES.PATH:\n        canvas.push(\n          <path\n            style={style}\n            d={data.d}\n          />\n        );\n        break;\n      case SHAPES.POLL:\n        canvas.push(\n          <Poll\n            data={data}\n            key={id}\n            recordId={recordId}\n            style={style}\n          />\n        );\n        break;\n      case SHAPES.POLYGON:\n        canvas.push(\n          <polygon\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.POLYLINE:\n        canvas.push(\n          <polyline\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.TEXT:\n        canvas.push(\n          <foreignObject\n            style={style}\n            height={data.height}\n            width={data.width}\n            x={data.x}\n            y={data.y}\n          >\n            <div xmlns=\"http://www.w3.org/1999/xhtml\">\n              {data.text.split('\\r').map(line => <span>{line}<br /></span>)}\n            </div>\n          </foreignObject>\n        );\n        break;\n      default:\n        logger.debug('unhandled', type);\n    }\n  }\n\n  return (\n    <g>\n      {canvas}\n    </g>\n  );\n};\n\nexport default Canvas;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport Cursor from './cursor';\nimport Slide from './slide';\nimport Canvas from './canvas';\nimport { ID } from 'utils/constants';\nimport { isEqual } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.presentation.wrapper.aria',\n    description: 'Aria label for the presentation wrapper',\n  },\n});\n\nconst buildViewBoxAttr = (viewBox) => {\n  const {\n    height,\n    x,\n    width,\n    y,\n  } = viewBox;\n\n  return `${x} ${y} ${width} ${height}`;\n};\n\nconst getCursor = (cursors, index, viewBox) => {\n  const inactive = {\n    x: -1,\n    y: -1,\n  }\n\n  if (index === -1) return inactive;\n\n  const currentData = cursors[index];\n  if (currentData.x === -1 && currentData.y === -1) return inactive;\n\n  return {\n    x: viewBox.x + (currentData.x * viewBox.width),\n    y: viewBox.y + (currentData.y * viewBox.height),\n  };\n};\n\nconst getSlideId = (index, slides) => {\n  const inactive = -1;\n  if (index === -1) return inactive;\n\n  const currentData = slides[index];\n\n  return currentData.id;\n};\n\nconst getViewBox = (index, panzooms) => {\n  const inactive = {\n    height: 0,\n    x: 0,\n    width: 0,\n    y: 0,\n  };\n\n  if (index === -1) return inactive;\n\n  const currentData = panzooms[index];\n\n  return {\n    height: currentData.height,\n    x: currentData.x,\n    width: currentData.width,\n    y: currentData.y,\n  };\n};\n\nconst Presentation = ({\n  active,\n  currentCursorIndex,\n  currentPanzoomIndex,\n  currentSlideIndex,\n  cursors,\n  draws,\n  drawsInterval,\n  panzooms,\n  recordId,\n  slides,\n  thumbnails,\n}) => {\n  const intl = useIntl();\n  const slideId = getSlideId(currentSlideIndex, slides);\n  const viewBox = getViewBox(currentPanzoomIndex, panzooms);\n  const cursor = getCursor(cursors, currentCursorIndex, viewBox);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('presentation-wrapper', { inactive: !active })}\n      id={ID.PRESENTATION}\n    >\n      <div className=\"presentation\">\n        <svg\n          viewBox={buildViewBoxAttr(viewBox)}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <defs>\n            <clipPath id=\"viewBox\">\n              <rect\n                height={viewBox.height}\n                x={viewBox.x}\n                width={viewBox.width}\n                y={viewBox.y}\n              />\n            </clipPath>\n          </defs>\n          <g clipPath=\"url(#viewBox)\">\n            <Slide\n              id={slideId}\n              recordId={recordId}\n              slides={slides}\n              thumbnails={thumbnails}\n            />\n            <Canvas\n              draws={draws}\n              drawsInterval={drawsInterval}\n              recordId={recordId}\n            />\n            <Cursor\n              x={cursor.x}\n              y={cursor.y}\n            />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  if (prevProps.currentCursorIndex !== nextProps.currentCursorIndex) return false;\n\n  if (prevProps.currentPanzoomIndex !== nextProps.currentPanzoomIndex) return false;\n\n  if (prevProps.currentSlideIndex !== nextProps.currentSlideIndex) return false;\n\n  if (!isEqual(prevProps.draws, nextProps.draws)) return false;\n\n  if (!isEqual(prevProps.drawsInterval, nextProps.drawsInterval)) return false;\n\n  return true;\n};\n\nexport default React.memo(Presentation, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport videojs from 'video.js/core.es.js';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.screenshare.wrapper.aria',\n    description: 'Aria label for the screenshare wrapper',\n  },\n});\n\nconst buildSources = (media, recordId) => {\n  return [\n    {\n      src: buildFileURL(recordId, 'deskshare/deskshare.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL(recordId, 'deskshare/deskshare.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => media.find(m => source.type.includes(m)));\n};\n\nconst buildOptions = (sources) => {\n  return {\n    controls: false,\n    fill: true,\n    sources: sources.current,\n  };\n};\n\nconst Screenshare = ({\n  active,\n  media,\n  onPlayerReady,\n  recordId,\n}) => {\n  const intl = useIntl();\n  const sources = useRef(buildSources(media, recordId));\n  const player = useRef();\n  const element = useRef();\n\n  useEffect(() => {\n    if (!player.current) {\n      player.current = videojs(element.current, buildOptions(sources), () => {\n        if (onPlayerReady) onPlayerReady(ID.SCREENSHARE, player.current);\n      });\n    }\n\n    return () => {\n      if (player.current) {\n        player.current.dispose();\n      }\n    };\n  }, [ onPlayerReady ]);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('screenshare-wrapper', { inactive: !active })}\n      id={ID.SCREENSHARE}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={node => element.current = node}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.active === nextProps.active;\n};\n\nexport default React.memo(Screenshare, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  src: PropTypes.string,\n  recordId: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  src: '',\n  recordId: '',\n};\n\nconst Image = ({\n  alt,\n  src,\n  recordId,\n}) => {\n  const screenshare = src === ID.SCREENSHARE;\n\n  if (screenshare) {\n    return (\n      <div className={cx('thumbnail-image', { screenshare })}>\n        <span className=\"icon-screenshare\" />\n      </div>\n    );\n  }\n\n  const logo = src.includes('logo');\n\n  return (\n    <img\n      alt={alt}\n      className={cx('thumbnail-image', { logo })}\n      src={buildFileURL(recordId, src)}\n    />\n  );\n};\n\nImage.propTypes = propTypes;\nImage.defaultProps = defaultProps;\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './image';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  index: PropTypes.number,\n  recordId: PropTypes.string,\n  src: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  index: 0,\n  recordId: '',\n  src: '',\n};\n\nconst Thumbnail = ({\n  alt,\n  index,\n  recordId,\n  src,\n}) => {\n\n  return (\n    <div className=\"thumbnail\">\n      <Image\n        alt={alt}\n        recordId={recordId}\n        src={src}\n      />\n      <div className=\"thumbnail-index\">\n        {index + 1}\n      </div>\n    </div>\n  )\n};\n\nThumbnail.propTypes = propTypes;\nThumbnail.defaultProps = defaultProps;\n\nexport default Thumbnail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnail from './thumbnail';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  index: PropTypes.number,\n  interactive: PropTypes.bool,\n  item: PropTypes.object,\n  player: PropTypes.object,\n  recordId: PropTypes.string,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  index: 0,\n  interactive: false,\n  item: {},\n  player: {},\n  recordId: '',\n  setRef: () => {},\n};\n\nconst Item = ({\n  active,\n  index,\n  interactive,\n  item,\n  player,\n  recordId,\n  setRef,\n}) => {\n  if (!interactive) {\n\n    return (\n      <div\n        className=\"thumbnail-wrapper\"\n        tabIndex=\"0\"\n      >\n        <Thumbnail\n          alt={item.alt}\n          index={index}\n          recordId={recordId}\n          src={item.src}\n        />\n      </div>\n    );\n  }\n\n  const handleOnClick = () => {\n    if (player) player.currentTime(item.timestamp);\n  };\n\n  return (\n    <div\n      className={cx('thumbnail-wrapper', { active, interactive })}\n      onClick={() => handleOnClick()}\n      onKeyPress={event => handleOnEnterPress(event, handleOnClick)}\n      ref={node => setRef(node, index)}\n      tabIndex=\"0\"\n    >\n      <Thumbnail\n        alt={item.alt}\n        index={index}\n        recordId={recordId}\n        src={item.src}\n      />\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst DEFAULT = 'default';\nconst GHOST = 'ghost';\nconst SOLID = 'solid';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  aria: PropTypes.string,\n  circle: PropTypes.bool,\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  aria: '',\n  circle: false,\n  disabled: false,\n  handleOnClick: () => {},\n  icon: '',\n  type: DEFAULT,\n};\n\nconst Button = ({\n  active,\n  aria,\n  circle,\n  disabled,\n  handleOnClick,\n  icon,\n  type,\n}) => {\n  const ghost = type === GHOST;\n  const solid = type === SOLID;\n\n  const style = {\n    default: !ghost && !solid && !disabled,\n    ghost: ghost && !active && !disabled,\n    solid: (solid || active) && !disabled,\n    circle,\n    disabled,\n  };\n\n  return (\n    <div className=\"button-wrapper\">\n      <button\n        aria-label={aria}\n        className={cx('button', style)}\n        disabled={disabled}\n        onClick={() => handleOnClick()}\n      >\n        <span className={`icon-${icon}`} />\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  clear: {\n    id: 'button.clear.aria',\n    description: 'Aria label for the clear button',\n  },\n});\n\nconst propTypes = {\n  interactive: PropTypes.bool,\n  handleSearch: PropTypes.func,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  interactive: false,\n  handleSearch: () => {},\n  search: [],\n};\n\nconst Clear = ({\n  interactive,\n  handleSearch,\n  search,\n}) => {\n  const intl = useIntl();\n\n  if (!interactive) return null;\n\n  if (isEmpty(search)) return null;\n\n  return (\n    <div className=\"clear-button\">\n      <Button\n        aria={intl.formatMessage(intlMessages.clear)}\n        handleOnClick={() => handleSearch([])}\n        icon=\"close\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nClear.propTypes = propTypes;\nClear.defaultProps = defaultProps;\n\nexport default Clear;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Item from './item';\nimport ClearButton from './buttons/clear';\nimport { thumbnails as config } from 'config';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.thumbnails.wrapper.aria',\n    description: 'Aria label for the thumbnails wrapper',\n  },\n});\n\nconst propTypes = {\n  currentDataIndex: PropTypes.number,\n  handleSearch: PropTypes.func,\n  interactive: PropTypes.bool,\n  player: PropTypes.object,\n  recordId: PropTypes.string,\n  search: PropTypes.array,\n  thumbnails: PropTypes.array,\n};\n\nconst defaultProps = {\n  currentDataIndex: 0,\n  handleSearch: () => {},\n  interactive: false,\n  player: {},\n  recordId: '',\n  search: [],\n  thumbnails: [],\n};\n\nconst Thumbnails = ({\n  currentDataIndex,\n  handleSearch,\n  interactive,\n  player,\n  recordId,\n  search,\n  thumbnails,\n}) => {\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const intl = useIntl();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentDataIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  const isFiltered = (index) => {\n    if (interactive) {\n      return !isEmpty(search) && !search.includes(index);\n    } else {\n      return !search.includes(index);\n    }\n  }\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.LEFT, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"thumbnails-wrapper\"\n      id={ID.THUMBNAILS}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      {thumbnails.reduce((result, item, index) => {\n        if (!isFiltered(index)) {\n          const active = index === currentDataIndex;\n\n          result.push(\n            <Item\n              active={active}\n              index={index}\n              interactive={interactive}\n              item={item}\n              player={player}\n              recordId={recordId}\n              setRef={setRef}\n            />\n          );\n        }\n\n        return result;\n      }, [])}\n      <ClearButton\n        interactive={interactive}\n        handleSearch={handleSearch}\n        search={search}\n      />\n    </div>\n  );\n};\n\nThumbnails.propTypes = propTypes;\nThumbnails.defaultProps = defaultProps;\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.currentDataIndex !== nextProps.currentDataIndex) return false;\n\n  if (!isEqual(prevProps.search, nextProps.search)) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(Thumbnails, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport videojs from 'video.js/core.es.js';\nimport { video as config } from 'config';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.video.wrapper.aria',\n    description: 'Aria label for the video wrapper',\n  },\n});\n\nconst buildSources = (media, recordId) => {\n  return [\n    {\n      src: buildFileURL(recordId, 'video/webcams.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL(recordId, 'video/webcams.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => media.find(m => source.type.includes(m)));\n};\n\nconst buildTracks = (captions, recordId) => {\n  return captions.map(lang => {\n    const {\n      locale,\n      localeName,\n    } = lang;\n\n    return {\n      kind: 'captions',\n      src: buildFileURL(recordId, `caption_${locale}.vtt`),\n      srclang: locale,\n      label: localeName,\n    };\n  });\n};\n\nconst buildOptions = (sources, tracks) => {\n  return {\n    controlBar: {\n      fullscreenToggle: false,\n      pictureInPictureToggle: false,\n      volumePanel: {\n        inline: false,\n        vertical: true,\n      },\n    },\n    controls: true,\n    fill: true,\n    inactivityTimeout: 0,\n    playbackRates: config.rates,\n    sources: sources.current,\n    tracks: tracks.current,\n  };\n};\n\nconst propTypes = {\n  captions: PropTypes.array,\n  media: PropTypes.array,\n  onPlayerReady: PropTypes.func,\n  onTimeUpdate: PropTypes.func,\n  recordId: PropTypes.string,\n  time: PropTypes.number,\n};\n\nconst defaultProps = {\n  captions: [],\n  media: [],\n  onPlayerReady: () => {},\n  onTimeUpdate: () => {},\n  recordId: '',\n  time: 0,\n};\n\nconst Video = ({\n  captions,\n  media,\n  onPlayerReady,\n  onTimeUpdate,\n  recordId,\n  time,\n}) => {\n  const intl = useIntl();\n  const sources = useRef(buildSources(media, recordId));\n  const tracks = useRef(buildTracks(captions, recordId));\n  const player = useRef();\n  const element = useRef();\n\n  useEffect(() => {\n    if (!player.current) {\n      player.current = videojs(element.current, buildOptions(sources, tracks), () => {\n        // Set clock tick\n        if (onTimeUpdate) {\n          player.current.on('play', () => {\n            setInterval(() => {\n              const currentTime = player.current.currentTime();\n              onTimeUpdate(currentTime);\n            }, 1000 / config.rps);\n          });\n\n          player.current.on('pause', () => clearInterval());\n        }\n\n        // Set starting point\n        if (time) {\n          player.current.on('loadedmetadata', () => {\n            const duration = player.current.duration();\n            if (time < duration) {\n              player.current.currentTime(time);\n            }\n          });\n        }\n\n        // Set ready\n        if (onPlayerReady) onPlayerReady(ID.VIDEO, player.current);\n      });\n    }\n\n    return () => {\n      if (player.current) {\n        player.current.dispose();\n      }\n    };\n  }, [ onTimeUpdate, time, onPlayerReady ]);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"video-wrapper\"\n      id={ID.VIDEO}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={node => element.current = node}\n        />\n      </div>\n    </div>\n  );\n};\n\nVideo.propTypes = propTypes;\nVideo.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Video, areEqual);\n","import React from 'react';\nimport './index.scss';\n\nconst Bottom = () => {\n  return <div className=\"bottom-bar\" />;\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Bottom, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n  FormattedDate,\n} from 'react-intl';\nimport cx from 'classnames';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  about: {\n    id: 'button.about.aria',\n    description: 'Aria label for the about button',\n  },\n});\n\nconst propTypes = {\n  interactive: PropTypes.bool,\n  name: PropTypes.string,\n  start: PropTypes.number,\n  toggleAbout: PropTypes.func,\n};\n\nconst defaultProps = {\n  interactive: false,\n  name: '',\n  start: 0,\n  toggleAbout: () => {},\n};\n\nconst Title = ({\n  interactive,\n  name,\n  start,\n  toggleAbout,\n}) => {\n  const intl = useIntl();\n  const date = <FormattedDate value={new Date(start)} />;\n\n  if (!interactive) {\n\n    return (\n      <span className=\"title\">\n        {name} - {date}\n      </span>\n    );\n  }\n\n  return (\n    <span\n      aria={intl.formatMessage(intlMessages.about)}\n      className={cx('title', { interactive })}\n      onClick={toggleAbout}\n      onKeyPress={event => handleOnEnterPress(event, toggleAbout)}\n      tabIndex=\"0\"\n    >\n      {name} - {date}\n    </span>\n  );\n};\n\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = {\n  enabled: PropTypes.bool,\n  toggleSearch: PropTypes.func,\n};\n\nconst defaultProps = {\n  enabled: false,\n  toggleSearch: () => {},\n};\n\nconst Search = ({\n  enabled,\n  toggleSearch,\n}) => {\n  const intl = useIntl();\n\n  if (!enabled) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.search)}\n      circle\n      handleOnClick={toggleSearch}\n      icon={ID.SEARCH}\n    />\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\n\nconst intlMessages = defineMessages({\n  section: {\n    id: 'button.section.aria',\n    description: 'Aria label for the section button',\n  },\n});\n\nconst propTypes = {\n  enabled: PropTypes.bool,\n  section: PropTypes.bool,\n  toggleSection: PropTypes.func,\n};\n\nconst defaultProps = {\n  enabled: false,\n  section: true,\n  toggleSection: () => {},\n};\n\nconst Section = ({\n  enabled,\n  section,\n  toggleSection,\n}) => {\n  const intl = useIntl();\n\n  if (!enabled) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.section)}\n      circle\n      handleOnClick={toggleSection}\n      icon={section ? 'arrowLeft' : 'arrowRight'}\n    />\n  );\n};\n\nSection.propTypes = propTypes;\nSection.defaultProps = defaultProps;\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  swap: {\n    id: 'button.swap.aria',\n    description: 'Aria label for the swap button',\n  },\n});\n\nconst propTypes = {\n  enabled: PropTypes.bool,\n  toggleSwap: PropTypes.func,\n};\n\nconst defaultProps = {\n  enabled: false,\n  toggleSwap: () => {},\n};\n\nconst Swap = ({\n  enabled,\n  toggleSwap,\n}) => {\n  const intl = useIntl();\n\n  if (!enabled) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.swap)}\n      circle\n      handleOnClick={toggleSwap}\n      icon={ID.SWAP}\n    />\n  );\n};\n\nSwap.propTypes = propTypes;\nSwap.defaultProps = defaultProps;\n\nexport default Swap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Title from './title';\nimport SearchButton from './buttons/search';\nimport SectionButton from './buttons/section';\nimport SwapButton from './buttons/swap';\nimport { controls as config } from 'config';\nimport './index.scss';\n\nconst propTypes = {\n  control: PropTypes.bool,\n  name: PropTypes.string,\n  section: PropTypes.bool,\n  single: PropTypes.bool,\n  start: PropTypes.number,\n  toggleAbout: PropTypes.func,\n  toggleSearch: PropTypes.func,\n  toggleSection: PropTypes.func,\n  toggleSwap: PropTypes.func,\n};\n\nconst defaultProps = {\n  control: false,\n  name: '',\n  section: false,\n  single: false,\n  start: 0,\n  toggleAbout: () => {},\n  toggleSearch: () => {},\n  toggleSection: () => {},\n  toggleSwap: () => {},\n};\n\nconst Top = ({\n  control,\n  name,\n  section,\n  single,\n  start,\n  toggleAbout,\n  toggleSearch,\n  toggleSection,\n  toggleSwap,\n}) => {\n\n  return (\n    <div className=\"top-bar\">\n      <div className=\"left\">\n        <SectionButton\n          enabled={control && config.section}\n          section={section}\n          toggleSection={toggleSection}\n        />\n      </div>\n      <div className=\"center\">\n        <Title\n          interactive={control && config.about}\n          name={name}\n          start={start}\n          toggleAbout={toggleAbout}\n        />\n      </div>\n      <div className=\"right\">\n        <SearchButton\n          enabled={control && config.search && !single}\n          toggleSearch={toggleSearch}\n        />\n        <SwapButton\n          enabled={control && config.swap && !single}\n          toggleSwap={toggleSwap}\n        />\n      </div>\n    </div>\n  );\n};\n\nTop.propTypes = propTypes;\nTop.defaultProps = defaultProps;\n\n// Checks the side section state\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.section === nextProps.section;\n};\n\nexport default React.memo(Top, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n};\n\nconst defaultProps = {\n  icon: '',\n  value: false,\n};\n\nconst Item = ({\n  icon,\n  value,\n}) => {\n  let element;\n  if (typeof value === 'boolean') {\n    const icon = value ? 'icon-check' : 'icon-close';\n\n    const style = {\n      green: value,\n      red: !value,\n    };\n\n    element = <div className={cx(icon, style)} />;\n  } else {\n    element = value;\n  }\n\n  return (\n    <div className=\"item\">\n      <div className={`icon-${icon}`} />\n      <div className=\"value\">\n        {element}\n      </div>\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Item from './item';\nimport {\n  CONTENT,\n  ID,\n} from 'utils/constants';\nimport './index.scss';\n\nconst propTypes = {\n  content: PropTypes.object,\n  users: PropTypes.number,\n};\n\nconst defaultProps = {\n  content: {},\n  users: 0,\n};\n\nconst Body = ({\n  content,\n  users,\n}) => {\n\n  return (\n    <div className=\"about-body\">\n      <Item\n        icon={ID.USERS}\n        key={ID.USERS}\n        value={users}\n      />\n      {CONTENT.map((item) => (\n        <Item\n          icon={item}\n          key={item}\n          value={content[item]}\n        />\n      ))}\n    </div>\n  );\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\n\nexport default Body;\n","import React from 'react';\nimport Item from './item';\nimport {\n  BUILD,\n  ID,\n} from 'utils/constants';\nimport './index.scss';\n\nconst Footer = () => {\n  return (\n    <div className=\"about-footer\">\n      {BUILD ? (\n        <Item\n          icon={ID.SETTINGS}\n          value={BUILD}\n        />\n      ) : (\n        null\n      )}\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormattedDate,\n  FormattedTime,\n} from 'react-intl';\nimport './index.scss';\n\nconst propTypes = { metadata: PropTypes.object };\n\nconst defaultProps = { metadata: {} };\n\nconst Header = ({ metadata }) => {\n  const {\n    end,\n    name,\n    start,\n  } = metadata;\n\n  const subtitle = [];\n  subtitle.push(\n    <FormattedDate\n      value={new Date(start)}\n      day=\"numeric\"\n      month=\"long\"\n      year=\"numeric\"\n    />\n  );\n\n  subtitle.push(<FormattedTime value={new Date(start)} />);\n  subtitle.push(<FormattedTime value={new Date(end)} />);\n\n  return (\n    <div className=\"about-header\">\n      <div className=\"title\">\n        {name}\n      </div>\n      <div className=\"subtitle\">\n        {subtitle.map(s => <div className=\"item\">{s}</div>)}\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = propTypes;\nHeader.defaultProps = defaultProps;\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  close: {\n    id: 'button.close.aria',\n    description: 'Aria label for the close button',\n  },\n});\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  onClose: PropTypes.func,\n};\n\nconst defaultProps = {\n  children: null,\n  onClose: () => {},\n};\n\nconst Modal = ({\n  children,\n  onClose,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal\">\n        <div className=\"modal-control\">\n          <Button\n            aria={intl.formatMessage(intlMessages.close)}\n            circle\n            handleOnClick={onClose}\n            icon=\"close\"\n          />\n        </div>\n        <div className=\"modal-content\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport Modal from 'components/utils/modal';\nimport './index.scss';\n\nconst propTypes = {\n  content: PropTypes.object,\n  metadata: PropTypes.object,\n  toggleModal: PropTypes.func,\n};\n\nconst defaultProps = {\n  content: {},\n  metadata: {},\n  toggleModal: () => {},\n};\n\nconst About = ({\n  content,\n  metadata,\n  toggleModal,\n}) => {\n\n  return (\n    <Modal onClose={toggleModal}>\n      <Header metadata={metadata} />\n      <Body\n        content={content}\n        users={metadata.participants}\n      />\n      <Footer />\n    </Modal>\n  );\n};\n\nAbout.propTypes = propTypes;\nAbout.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(About, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnails from 'components/thumbnails';\nimport { search as config } from 'config';\nimport './index.scss';\n\nconst propTypes = {\n  handleOnChange: PropTypes.func,\n  metadata: PropTypes.object,\n  search: PropTypes.array,\n  thumbnails: PropTypes.array,\n};\n\nconst defaultProps = {\n  handleOnChange: () => {},\n  metadata: {},\n  search: [],\n  thumbnails: [],\n};\n\nconst Body = ({\n  handleOnChange,\n  metadata,\n  search,\n  thumbnails,\n}) => {\n\n  return (\n    <div className=\"search-body\">\n      <input\n        maxLength={config.length.max}\n        minLength={config.length.min}\n        onChange={(event) => handleOnChange(event)}\n        type=\"text\"\n      />\n      <div className={cx('result', { active: true })}>\n        <Thumbnails\n          currentDataIndex={0}\n          handleSearch={null}\n          interactive={false}\n          player={null}\n          recordId={metadata.id}\n          search={search}\n          thumbnails={thumbnails}\n        />\n      </div>\n    </div>\n  );\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\n\nexport default Body;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = {\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  disabled: false,\n  handleOnClick: () => {},\n};\n\nconst Footer = ({\n  disabled,\n  handleOnClick,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-footer\">\n      <Button\n        aria={intl.formatMessage(intlMessages.search)}\n        disabled={disabled}\n        handleOnClick={(event) => handleOnClick(event)}\n        icon=\"search\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nFooter.propTypes = propTypes;\nFooter.defaultProps = defaultProps;\n\nexport default Footer;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  title: {\n    id: 'player.search.modal.title',\n    description: 'Label for the search modal title',\n  },\n  subtitle: {\n    id: 'player.search.modal.subtitle',\n    description: 'Label for the search modal subtitle',\n  },\n});\n\nconst Header = () => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-header\">\n      <div className=\"title\">\n        {intl.formatMessage(intlMessages.title)}\n      </div>\n      <div className=\"subtitle\">\n        {intl.formatMessage(intlMessages.subtitle)}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { getCurrentDataIndex } from './data';\nimport { hasVideo } from './data/validators';\n\nconst search = (text, thumbnails) => {\n  const result = [];\n\n  const value = text.toLowerCase();\n  thumbnails.forEach((thumbnail, index) => {\n    const { alt } = thumbnail;\n\n    if (alt.toLowerCase().indexOf(value) !== -1) {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst seek = (player, seconds) => {\n  if (!hasVideo(player)) return null;\n\n  const min = 0;\n  const max = player.video.duration();\n  const time = player.video.currentTime() + seconds;\n\n  if (time < min) {\n    player.video.currentTime(min);\n  } else if (time > max) {\n    player.video.currentTime(max);\n  } else {\n    player.video.currentTime(time);\n  }\n};\n\nconst skip = (player, data, change) => {\n  if (!hasVideo(player)) return null;\n\n  const min = 0;\n  const max = data.length - 1;\n  const time = player.video.currentTime();\n\n  const current = getCurrentDataIndex(data, time);\n  if (current === -1) return null;\n\n  const index = current + change;\n\n  let timestamp;\n  if (index < min) {\n    timestamp = data[min].timestamp;\n  } else if (index > max) {\n    timestamp = data[max].timestamp;\n  } else {\n    timestamp = data[index].timestamp;\n  }\n\n  if (typeof timestamp !== 'undefined') {\n    player.video.currentTime(timestamp);\n  }\n};\n\nexport {\n  search,\n  seek,\n  skip,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport { search as config } from 'config';\nimport Modal from 'components/utils/modal';\nimport { search as getSearch } from 'utils/actions';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst getValue = (event) => {\n  if (event && event.target) return event.target.value;\n\n  return null;\n};\n\nconst isValid = (value) => {\n  if (value && typeof value === 'string') {\n    return value.length >= config.length.min;\n  }\n\n  return false;\n};\n\nconst propTypes = {\n  handleSearch: PropTypes.func,\n  metadata: PropTypes.object,\n  thumbnails: PropTypes.array,\n  toggleModal: PropTypes.func,\n};\n\nconst defaultProps = {\n  handleSearch: () => {},\n  metadata: {},\n  thumbnails: [],\n  toggleModal: () => {},\n};\n\nconst Search = ({\n  handleSearch,\n  metadata,\n  thumbnails,\n  toggleModal,\n}) => {\n  const [disabled, setDisabled] = useState(true);\n  const [search, setSearch] = useState([]);\n\n  const handleOnChange = (event) => {\n    const value = getValue(event);\n    if (isValid(value)) {\n      const result = getSearch(value, thumbnails);\n\n      // If different, update search\n      if (!isEqual(search, result)) {\n        setSearch(result);\n      }\n\n      // Check to enable\n      if (disabled) setDisabled(false);\n    } else {\n      // If not empty, clear search\n      if (!isEmpty(search)) {\n        setSearch([]);\n      }\n\n      // Chack to disable\n      if (!disabled) setDisabled(true);\n    }\n  };\n\n  const handleOnClick = () => {\n    handleSearch(search);\n    toggleModal();\n  };\n\n  return (\n    <Modal onClose={toggleModal}>\n      <Header />\n      <Body\n        handleOnChange={(event) => handleOnChange(event)}\n        metadata={metadata}\n        search={search}\n        thumbnails={thumbnails}\n      />\n      <Footer\n        disabled={disabled}\n        handleOnClick={() => handleOnClick()}\n      />\n    </Modal>\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Search, areEqual);\n","import { parseStringPromise } from 'xml2js';\nimport { files as config } from 'config';\nimport { getFileType } from './data';\nimport {\n  hasProperty,\n  isEmpty,\n} from './data/validators';\nimport {\n  ID,\n  SHAPES,\n} from './constants';\nimport logger from './logger';\n\nconst getAttr = data => {\n  if (!data) return {};\n\n  const attr = data['$'];\n  if (!attr) return {};\n\n  return attr;\n};\n\nconst getChildren = data => {\n  if (!data) return [];\n\n  const children = data['$$'];\n  if (!children) return [];\n\n  return children;\n};\n\nconst getId = data => {\n  if (!data) return -1;\n\n  const id = data.match(/\\d+$/);\n  if (!id || id.length === 0) return -1;\n\n  return parseInt(id.shift(), 10);\n};\n\nconst getNumbers = data => {\n  if (!data) return [];\n\n  const trimmed = data.trim().replace(/  +/g, ' ');\n  if (trimmed.length === 0) return [];\n\n  const split = trimmed.split(' ');\n  const numbers = split.map(v => parseFloat(v));\n\n  return numbers;\n};\n\nconst buildAlternates = result => {\n  if (!result) return [];\n\n  let data = [];\n  for (const presentation in result) {\n    if (hasProperty(result, presentation)) {\n      const slides = result[presentation];\n\n      for (const slide in slides) {\n        if (hasProperty(slides, slide)) {\n          const text = slides[slide];\n\n          data.push({\n            src: `presentation/${presentation}/${slide}.png`,\n            text,\n          });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\n// TODO\nconst buildCaptions = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\n// TODO\nconst buildPolls = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\nconst buildExternalVideos = result => {\n  if (!result) return [];\n\n  const data = result.map(r => {\n    return {\n      timestamp: r.timestamp,\n      url: r.external_video_url,\n    };\n  });\n\n  return data;\n};\n\nconst buildMetadata = result => {\n  let data = {};\n  const { recording } = result;\n\n  if (hasProperty(recording, 'meeting')) {\n    const attr = getAttr(recording.meeting.shift());\n    const { id } = attr;\n    const meta = recording.meta.shift();\n    const end = parseInt(recording.end_time.shift(), 10);\n    const name = meta.name ? meta.name.shift() : attr.name;\n    const participants = parseInt(recording.participants.shift(), 10);\n    const start = parseInt(recording.start_time.shift(), 10);\n\n    data = {\n      end,\n      id,\n      name,\n      participants,\n      start,\n    };\n  }\n\n  return data;\n};\n\nconst buildNotes = result => {\n  if (!result) return '';\n\n  // Extract the notes' body\n  const regex = /<body>\\n.*\\n<\\/body>/g;\n  const match = result.match(regex);\n\n  let data = '';\n  if (!isEmpty(match)) {\n    data = match.shift();\n  }\n\n  return data;\n};\n\nconst buildStyle = data => {\n  const items = data.split(';');\n  let style = {};\n\n  items.forEach(item => {\n    const trimmed = item.trim();\n\n    if (trimmed.length === 0) return;\n\n    const split = trimmed.split(':').map(i => i.trim());\n\n    // Remove visibility\n    if (split[0] === 'visibility') return;\n\n    style[split[0]] = split[1];\n  });\n\n  return style;\n};\n\nconst buildSlides = image => {\n  let slides = [];\n\n  if (image) {\n    image.forEach(img => {\n      const attr = getAttr(img);\n      const src = attr['xlink:href'];\n\n      // Skip the logo\n      if (!src) return;\n\n      // Get the number from the id name\n      const slideId = getId(attr.id);\n      const timestamps = getNumbers(attr.in);\n\n      timestamps.forEach(timestamp => {\n        slides.push({\n          id: slideId,\n          height: parseInt(attr.height),\n          src,\n          timestamp,\n          width: parseInt(attr.width),\n        });\n      });\n    });\n\n    slides = slides.sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  return slides;\n};\n\nconst buildThumbnails = slides => {\n  const prefix = 'slide-';\n  const url = 'thumbnails/thumb-';\n\n  return slides.reduce((result, slide) => {\n    const {\n      id,\n      src,\n      timestamp,\n    } = slide;\n\n    if (src.includes(ID.DESKSHARE)) {\n      result.push({\n        id,\n        src: ID.SCREENSHARE,\n        timestamp,\n      });\n    } else {\n      result.push({\n        id,\n        src: src.replace(prefix, url),\n        timestamp,\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nconst parseText = data => {\n  let text = '';\n\n  const children = getChildren(data);\n  if (!isEmpty(children)) {\n    const child = children.shift();\n    const grandchildren = getChildren(child);\n    if (!isEmpty(grandchildren)) {\n      text = grandchildren.map(grandchild => {\n        const name = grandchild['#name'];\n        if (name === 'br') return '\\r';\n\n        return grandchild['_'];\n      }).join('');\n    }\n  }\n\n  return text;\n};\n\nconst buildCanvases = group => {\n  let canvases = [];\n\n  if (group) {\n    canvases = group.map(canvas => {\n      const canvasAttr = getAttr(canvas);\n      // Get the number from the id name\n      const canvasId = getId(canvasAttr.id);\n\n      let draws = canvas.g.map(g => {\n        const drawAttr = getAttr(g);\n        const timestamp = parseFloat(drawAttr.timestamp);\n        const clear = parseFloat(drawAttr.undo);\n        const style = buildStyle(drawAttr.style);\n        const drawId = getId(drawAttr.shape);\n\n        let shape = {};\n        if (g.image) {\n          shape.type = SHAPES.POLL;\n          const image = getAttr(g.image.shift());\n          // TODO: Better adapt for old versions\n          // Versions prior to 2.3 included a rect structure along with an image\n          if (g.rect) {\n            const rect = getAttr(g.rect.shift());\n            shape.data = Object.assign({ rect }, { image });\n          } else {\n            shape.data = Object.assign({ image });\n          }\n        } else if (g.polyline) {\n          shape.type = SHAPES.POLYLINE;\n          shape.data = Object.assign({}, getAttr(g.polyline.shift()));\n        } else if (g.line) {\n          shape.type = SHAPES.LINE;\n          shape.data = Object.assign({}, getAttr(g.line.shift()));\n        } else if (g.polygon) {\n          shape.type = SHAPES.POLYGON;\n          shape.data = Object.assign({}, getAttr(g.polygon.shift()));\n        } else if (g.circle) {\n          shape.type = SHAPES.CIRCLE;\n          shape.data = Object.assign({}, getAttr(g.circle.shift()));\n        } else if (g.path) {\n          shape.type = SHAPES.PATH;\n          shape.data = Object.assign({}, getAttr(g.path.shift()));\n        } else if (g.switch) {\n          shape.type = SHAPES.TEXT;\n          const foreignObject = g.switch.shift()['foreignObject'].shift();\n          const text = parseText(foreignObject);\n          shape.data = Object.assign({ text }, getAttr(foreignObject));\n        }\n\n        return {\n          clear,\n          id: drawId,\n          shape,\n          style,\n          timestamp,\n        };\n      });\n\n      return {\n        draws,\n        id: canvasId,\n      };\n    });\n  }\n\n  return canvases;\n};\n\nconst buildShapes = result => {\n  let data = {};\n  const { svg } = result;\n\n  if (svg) {\n    const {\n      image,\n      g,\n    } = svg;\n\n    data.slides = buildSlides(image);\n    data.thumbnails = buildThumbnails(data.slides);\n    data.canvases = buildCanvases(g);\n  }\n\n  return data;\n};\n\nconst buildPanzooms = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(panzoom => {\n      const attr = getAttr(panzoom);\n      const viewbox = getNumbers(panzoom.viewBox.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: viewbox.shift(),\n        y: viewbox.shift(),\n        width: viewbox.shift(),\n        height: viewbox.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildCursor = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(cursor => {\n      const attr = getAttr(cursor);\n      const position = getNumbers(cursor.cursor.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: position.shift(),\n        y: position.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst clearHyperlink = message => {\n  const regex = /<a href=\"(.*)\" rel=\"nofollow\"><u>\\1<\\/u><\\/a>/g;\n\n  return message.replace(regex, '$1');\n};\n\nconst decodeXML = message => {\n  return message\n    .replace(/&(quot|#34);/g, '\"')\n    .replace(/&(amp|#38);/g, '&')\n    .replace(/&(apos|#39);/g, \"'\")\n    .replace(/&(lt|#60);/g, '<')\n    .replace(/&(gt|#62);/g, '>');\n};\n\nconst getInitials = name => {\n  let initials;\n\n  if (name) {\n    initials = name\n      .slice(0, 2)\n      .toLowerCase()\n      .trim();\n  }\n\n  return initials;\n};\n\nconst buildChat = result => {\n  const { popcorn } = result;\n  let data = [];\n\n  if (hasProperty(popcorn, 'chattimeline')) {\n    const { chattimeline } = popcorn;\n    data = chattimeline.map(chat => {\n      const attr = getAttr(chat);\n      const clear = attr.out ? parseFloat(attr.out) : -1;\n      const message = decodeXML(clearHyperlink(attr.message));\n      const initials = getInitials(attr.name);\n\n      return {\n        clear,\n        hyperlink: message !== attr.message,\n        initials,\n        name: attr.name,\n        message,\n        timestamp: parseFloat(attr.in),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildScreenshare = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(screenshare => {\n      const attr = getAttr(screenshare);\n\n      return {\n        timestamp: parseFloat(attr.start_timestamp),\n        clear: parseFloat(attr.stop_timestamp),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst getOptions = filename => {\n  let options = {};\n\n  switch (filename) {\n    case config.data.shapes:\n      options = {\n        explicitChildren: true,\n        preserveChildrenOrder: true,\n        charsAsChildren: true,\n      };\n      break;\n    default:\n  }\n\n  return options;\n};\n\nconst build = (filename, value) => {\n  return new Promise((resolve, reject) => {\n    let data;\n    const fileType = getFileType(filename);\n\n    if (fileType === 'json') {\n      switch (filename) {\n        case config.data.alternates:\n          data = buildAlternates(value);\n          break;\n        case config.data.captions:\n          data = buildCaptions(value);\n          break;\n        case config.data.polls:\n          data = buildPolls(value);\n          break;\n        case config.data.externalVideos:\n          data = buildExternalVideos(value);\n          break;\n        default:\n          logger.debug('unhandled', 'json', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else if (fileType === 'html') {\n      switch (filename) {\n        case config.data.notes:\n          data = buildNotes(value);\n          break;\n        default:\n          logger.debug('unhandled', 'html', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else {\n      if (!value) {\n        logger.warn('missing', filename);\n\n        return resolve(null);\n      }\n\n      // Parse XML data\n      const options = getOptions(filename);\n      parseStringPromise(value, options).then(result => {\n        switch (filename) {\n          case config.data.chat:\n            data = buildChat(result);\n            break;\n          case config.data.cursor:\n            data = buildCursor(result);\n            break;\n          case config.data.metadata:\n            data = buildMetadata(result);\n            break;\n          case config.data.panzooms:\n            data = buildPanzooms(result);\n            break;\n          case config.data.screenshare:\n            data = buildScreenshare(result);\n            break;\n          case config.data.shapes:\n            data = buildShapes(result);\n            break;\n          default:\n            logger.debug('unhandled', 'xml', filename);\n            reject(filename);\n        }\n        resolve(data);\n      }).catch(error => reject(error));\n    }\n  });\n};\n\nconst addAlternatesToThumbnails = (thumbnails, alternates) => {\n  const prefix = 'thumbnails/thumb-';\n  const url = 'slide-';\n\n  return thumbnails.map(thumbnail => {\n    const { src } = thumbnail;\n    thumbnail.alt = '';\n\n    const found = alternates.find(alt => src.replace(prefix, url) === alt.src);\n    if (found) thumbnail.alt = found.text;\n\n    return thumbnail;\n  });\n};\n\nconst mergeChatContent = (chat, polls, externalVideos) => {\n  return [\n    ...chat,\n    ...externalVideos,\n    ...polls,\n  ].sort((a, b) => a.timestamp - b.timestamp);\n};\n\nexport {\n  addAlternatesToThumbnails,\n  build,\n  buildStyle,\n  decodeXML,\n  getAttr,\n  getId,\n  getNumbers,\n  mergeChatContent,\n};\n","import { controls } from 'config';\nimport {\n  getContentFromData,\n  getControlFromLayout,\n  getSectionFromLayout,\n  getSwapFromLayout,\n} from './data';\nimport { isContentVisible } from './data/validators';\n\nexport default class Layout {\n  constructor(data, layout) {\n    this.content = getContentFromData(data);\n    this.layout = layout;\n  }\n\n  getContent() {\n    return this.content;\n  }\n\n  initControl() {\n    return getControlFromLayout(this.layout);\n  }\n\n  initSection() {\n    return getSectionFromLayout(this.layout);\n  }\n\n  initSwap() {\n    return getSwapFromLayout(this.layout);\n  }\n\n  getBottomContentStyle(state) {\n    const {\n      fullscreen,\n      thumbnails,\n    } = state;\n\n    const bottom = thumbnails && !fullscreen;\n    const style = { 'inactive': !bottom };\n\n    return style;\n  }\n\n  getContentStyle(state) {\n    const { swap } = state;\n    const style = { 'swapped-content': swap };\n\n    return style;\n  }\n\n  getMediaStyle(state) {\n    const { swap } = state;\n    const single = this.isSingle();\n    const style = { 'swapped-media': swap || single };\n\n    return style;\n  }\n\n  getPlayerStyle(state) {\n    const {\n      fullscreen,\n      section,\n    } = state;\n\n    const single = this.isSingle();\n\n    const style = {\n      'fullscreen-content': fullscreen,\n      'hidden-section': !section,\n      'single-content': single,\n    };\n\n    return style;\n  }\n\n  hasFullscreenButton(layout, state) {\n    const {\n      control,\n      swap,\n    } = state;\n\n    if (!control || !controls.fullscreen) return false;\n\n    const single = this.isSingle();\n    if (!isContentVisible(layout, swap || single)) return false;\n\n    return true;\n  }\n\n  hasScreenshare() {\n    const { screenshare } = this.content;\n\n    return screenshare;\n  }\n\n  isSingle() {\n    const {\n      presentation,\n      screenshare,\n    } = this.content;\n\n    return !presentation && !screenshare;\n  }\n}\n","import { shortcuts as config } from 'config';\nimport logger from './logger';\n\nexport default class Shortcuts {\n  constructor(actions) {\n    this.enabled = config.enabled;\n\n    if (!this.enabled) {\n      logger.debug('shortcuts', 'disabled');\n    } else {\n      this.init(actions);\n    }\n  }\n\n  init(actions) {\n    this.listeners = [];\n\n    for (let prop in actions) {\n      const value = actions[prop];\n      if (typeof value === 'function') {\n        const key = config[prop];\n        this.add(key, value);\n      } else {\n        for (let p in value) {\n          const k = config[prop][p];\n          const v = value[p];\n          this.add(k, v);\n        }\n      }\n    }\n  }\n\n  add(key, action) {\n    if (!key || typeof key !== 'string') {\n      logger.warn('shortcuts', 'invalid', 'key');\n      return null;\n    } else if (key.length === 0) {\n      return null;\n    }\n\n    if (!action || typeof action !== 'function') {\n      logger.warn('shortcuts', 'invalid', 'action');\n      return null;\n    }\n\n    const listener = document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.shiftKey) {\n        if (e.key === key) action();\n      }\n    });\n\n    this.listeners.push(listener);\n  }\n\n  destroy() {\n    this.listeners.forEach(listener => {\n      document.removeEventListener(listener);\n    });\n  }\n}\n","import logger from './logger';\n\nconst STATUSES = [\n  'canplay',\n  'seeking',\n  'waiting',\n];\n\nconst EVENTS = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'interruptbegin',\n  'interruptend',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'mozaudioavailable',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  //'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\nexport default class Synchronizer {\n  constructor(primary, secondary) {\n    this.primary = primary;\n    this.secondary = secondary;\n\n    this.status = {\n      primary: 'waiting',\n      secondary: 'waiting',\n    }\n\n    this.synching = false;\n\n    this.init();\n  }\n\n  init() {\n    STATUSES.forEach(status => {\n      this.primary.on(status, () => this.status.primary = status);\n      this.secondary.on(status, () => this.status.secondary = status);\n    });\n\n    this.primary.on('play', () => this.secondary.play());\n    this.primary.on('pause', () => this.secondary.pause());\n\n    this.primary.on('seeking', () => {\n      const currentTime = this.primary.currentTime();\n      this.secondary.currentTime(currentTime);\n    });\n\n    this.primary.on('ratechange', () => {\n      const playbackRate = this.primary.playbackRate();\n      this.secondary.playbackRate(playbackRate);\n    });\n\n    this.primary.on('waiting', () => {\n      if (!this.synching && this.status.secondary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.primary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    this.secondary.on('waiting', () => {\n      if (!this.synching && this.status.primary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.secondary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    EVENTS.forEach(event => {\n      this.primary.on(event, () => logger.debug(`primary ${event} ${this.status.primary}`));\n      this.secondary.on(event, () => logger.debug(`secondary ${event} ${this.status.secondary}`));\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { shortcuts } from 'config';\nimport Chat from './chat';\nimport Notes from './notes';\nimport Presentation from './presentation';\nimport Screenshare from './screenshare';\nimport Thumbnails from './thumbnails';\nimport Video from './video';\nimport BottomBar from './bars/bottom';\nimport TopBar from './bars/top';\nimport AboutModal from './modals/about';\nimport SearchModal from './modals/search';\nimport Button from './utils/button';\nimport {\n  seek,\n  skip,\n} from 'utils/actions';\nimport {\n  addAlternatesToThumbnails,\n  mergeChatContent,\n} from 'utils/builder';\nimport {\n  ID,\n  LAYOUT,\n} from 'utils/constants';\nimport {\n  getActiveContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n} from 'utils/data';\nimport { isEqual } from 'utils/data/validators';\nimport Layout from 'utils/layout';\nimport logger from 'utils/logger';\nimport Shortcuts from 'utils/shortcuts';\nimport Synchronizer from 'utils/synchronizer';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.wrapper.aria',\n    description: 'Aria label for the player wrapper',\n  },\n  fullscreen: {\n    id: 'button.fullscreen.aria',\n    description: 'Aria label for the fullscreen button',\n  },\n  restore: {\n    id: 'button.restore.aria',\n    description: 'Aria label for the restore button',\n  },\n});\n\nexport default class Player extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      data,\n      layout,\n    } = props;\n\n    this.layout = new Layout(data, layout);\n\n    this.state = {\n      application: ID.CHAT,\n      control: this.layout.initControl(),\n      fullscreen: false,\n      modal: '',\n      search: [],\n      section: this.layout.initSection(),\n      swap: this.layout.initSwap(),\n      thumbnails: true,\n      time: 0,\n    }\n\n    this.player = {\n      video: null,\n      screenshare: null,\n    };\n\n    this.initData(data);\n\n    this.handlePlayerReady = this.handlePlayerReady.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.initShortcuts();\n  }\n\n  componentWillUnmount() {\n    if (this.shortcuts) {\n      this.shortcuts.destroy();\n    }\n  }\n\n  initData(data) {\n    this.alternates = getData(data, ID.ALTERNATES);\n    this.captions = getData(data, ID.CAPTIONS);\n    this.chat = mergeChatContent(\n      getData(data, ID.CHAT),\n      getData(data, ID.POLLS),\n      getData(data, ID.EXTERNAL_VIDEOS),\n    );\n    this.cursor = getData(data, ID.CURSOR);\n    this.metadata = getData(data, ID.METADATA);\n    this.notes = getData(data, ID.NOTES);\n    this.panzooms = getData(data, ID.PANZOOMS);\n    this.screenshare = getData(data, ID.SCREENSHARE);\n    this.shapes = getData(data, ID.SHAPES);\n\n    this.canvases = this.shapes.canvases;\n    this.slides = this.shapes.slides;\n    this.thumbnails = addAlternatesToThumbnails(this.shapes.thumbnails, this.alternates);\n\n    logger.debug(ID.PLAYER, data);\n  }\n\n  handlePlayerReady(media, player) {\n    switch (media) {\n      case ID.VIDEO:\n        logger.debug(ID.PLAYER, 'ready', ID.VIDEO);\n        this.player.video = player;\n        break;\n      case ID.SCREENSHARE:\n        logger.debug(ID.PLAYER, 'ready', ID.SCREENSHARE);\n        this.player.screenshare = player;\n        break;\n      default:\n        logger.debug('unhandled', media);\n    }\n\n    if (this.player.video && this.player.screenshare) {\n      this.synchronizer = new Synchronizer(this.player.video, this.player.screenshare);\n    }\n  }\n\n  handleSearch(value) {\n    const { search } = this.state;\n\n    if (!isEqual(search, value)) {\n      this.setState({ search: value });\n    }\n  }\n\n  handleTimeUpdate(value) {\n    const { time } = this.state;\n\n    if (time !== value) {\n      this.setState({ time: value });\n    }\n  }\n\n  initShortcuts() {\n    const { seconds } = shortcuts.video;\n\n    const actions = {\n      fullscreen: () => this.toggleFullscreen(),\n      section: () => this.toggleSection(),\n      swap: () => this.toggleSwap(),\n      thumbnails: () => this.toggleThumbnails(),\n      slides: {\n        next: () => skip(this.player, this.slides, +1),\n        previous: () => skip(this.player, this.slides, -1),\n      },\n      video: {\n        backward: () => seek(this.player, -seconds),\n        forward: () => seek(this.player, +seconds),\n      },\n    };\n\n    this.shortcuts = new Shortcuts(actions);\n  }\n\n  toggleApplication(type) {\n    const { application } = this.state;\n\n    if (application === type) return null;\n\n    this.setState({ application: type });\n  }\n\n  toggleFullscreen() {\n    const { fullscreen } = this.state;\n\n    this.setState({ fullscreen: !fullscreen });\n  }\n\n  toggleModal(type) {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    this.setState({ modal: open ? '' : type });\n  }\n\n  toggleSection() {\n    const { section } = this.state;\n\n    this.setState({ section: !section });\n  }\n\n  toggleSwap() {\n    const { swap } = this.state;\n\n    this.setState({ swap: !swap });\n  }\n\n  toggleThumbnails() {\n    const { thumbnails } = this.state;\n\n    this.setState({ thumbnails: !thumbnails });\n  }\n\n  renderFullscreenButton(layout) {\n    if (!this.layout.hasFullscreenButton(layout, this.state)) return null;\n\n    const { intl } = this.props;\n    const { fullscreen } = this.state;\n\n    const aria = fullscreen\n      ? intl.formatMessage(intlMessages.restore)\n      : intl.formatMessage(intlMessages.fullscreen)\n    ;\n\n    const icon = fullscreen ? 'restore' : 'fullscreen';\n\n    return (\n      <div className=\"fullscreen-button\">\n        <Button\n          aria={aria}\n          handleOnClick={() => this.toggleFullscreen()}\n          icon={icon}\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  renderModal() {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    if (!open) return null;\n\n    const content = this.layout.getContent();\n\n    switch (modal) {\n      case ID.ABOUT:\n        return (\n          <AboutModal\n            content={content}\n            metadata={this.metadata}\n            toggleModal={() => this.toggleModal(ID.ABOUT)}\n          />\n        );\n      case ID.SEARCH:\n        return (\n          <SearchModal\n            handleSearch={this.handleSearch}\n            metadata={this.metadata}\n            thumbnails={this.thumbnails}\n            toggleModal={() => this.toggleModal(ID.SEARCH)}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderThumbnails() {\n    const {\n      search,\n      time,\n    } = this.state;\n\n    const { video } = this.player;\n\n    const currentDataIndex = getCurrentDataIndex(this.thumbnails, time);\n\n    return (\n      <Thumbnails\n        currentDataIndex={currentDataIndex}\n        handleSearch={this.handleSearch}\n        interactive={true}\n        player={video}\n        recordId={this.metadata.id}\n        search={search}\n        thumbnails={this.thumbnails}\n      />\n    );\n  }\n\n  renderTopBar() {\n    const {\n      control,\n      section,\n    } = this.state;\n\n    const {\n      name,\n      start,\n    } = this.metadata;\n\n    const single = this.layout.isSingle();\n\n    return (\n      <TopBar\n        control={control}\n        name={name}\n        section={section}\n        single={single}\n        start={start}\n        toggleAbout={() => this.toggleModal(ID.ABOUT)}\n        toggleSearch={() => this.toggleModal(ID.SEARCH)}\n        toggleSection={() => this.toggleSection()}\n        toggleSwap={() => this.toggleSwap()}\n      />\n    );\n  }\n\n  renderMedia() {\n    const {\n      data,\n      time,\n    } = this.props;\n\n    const { media } = data;\n\n    return (\n      <div className={cx('media', this.layout.getMediaStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.MEDIA)}\n        <Video\n          captions={this.captions}\n          key={ID.VIDEO}\n          media={media}\n          onPlayerReady={this.handlePlayerReady}\n          onTimeUpdate={this.handleTimeUpdate}\n          recordId={this.metadata.id}\n          time={time}\n        />\n      </div>\n    );\n  }\n\n  renderApplicationIcon(type) {\n    const { application } = this.state;\n    const active = application === type;\n\n    return (\n      <div\n        className={cx('application-icon', { inactive: !active })}\n        onClick={() => active ? null : this.toggleApplication(type)}\n      >\n        <span className={`icon-${type}`} />\n      </div>\n    );\n  }\n\n  renderApplicationContent() {\n    const { application } = this.state;\n\n    switch (application) {\n      case ID.CHAT:\n        const { time } = this.state;\n        const { video } = this.player;\n        const currentChatIndex = getCurrentDataIndex(this.chat, time);\n\n        return (\n          <Chat\n            chat={this.chat}\n            currentDataIndex={currentChatIndex}\n            player={video}\n          />\n        );\n      case ID.NOTES:\n        return (\n          <Notes notes={this.notes} />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderApplicationControl() {\n    const { control } = this.state;\n\n    if (!control) return null;\n\n    return (\n      <div className=\"application-control\">\n        {this.renderApplicationIcon(ID.CHAT)}\n        {this.renderApplicationIcon(ID.NOTES)}\n      </div>\n    );\n  }\n\n  renderApplication() {\n    return (\n      <div className=\"application\">\n        {this.renderApplicationControl()}\n        {this.renderApplicationContent()}\n      </div>\n    );\n  }\n\n  renderPresentation(active) {\n    const { time } = this.state;\n\n    const currentSlideIndex = getCurrentDataIndex(this.slides, time);\n    const currentPanzoomIndex = getCurrentDataIndex(this.panzooms, time);\n    const currentCursorIndex = getCurrentDataIndex(this.cursor, time);\n    const draws = getDraws(currentSlideIndex, this.slides, this.canvases);\n    const currentDrawsInterval = getCurrentDataInterval(draws, time);\n\n    return (\n      <Presentation\n        active={active}\n        currentCursorIndex={currentCursorIndex}\n        currentPanzoomIndex={currentPanzoomIndex}\n        currentSlideIndex={currentSlideIndex}\n        cursors={this.cursor}\n        draws={draws}\n        drawsInterval={currentDrawsInterval}\n        panzooms={this.panzooms}\n        recordId={this.metadata.id}\n        slides={this.slides}\n        thumbnails={this.thumbnails}\n      />\n    )\n  }\n\n  renderScreenshare(active) {\n    if (!this.layout.hasScreenshare()) return null;\n\n    const { data } = this.props;\n\n    const { media } = data;\n\n    return (\n      <Screenshare\n        active={active}\n        key={ID.SCREENSHARE}\n        media={media}\n        onPlayerReady={this.handlePlayerReady}\n        recordId={this.metadata.id}\n      />\n    );\n  }\n\n  renderContent() {\n    if (this.layout.isSingle()) return null;\n\n    const { time } = this.state;\n    const content = getActiveContent(this.screenshare, time);\n\n    return (\n      <div className={cx('content', this.layout.getContentStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.CONTENT)}\n        <div className=\"top-content\">\n          {this.renderPresentation(content === ID.PRESENTATION)}\n          {this.renderScreenshare(content === ID.SCREENSHARE)}\n        </div>\n        <div className={cx('bottom-content', this.layout.getBottomContentStyle(this.state))}>\n          {this.renderThumbnails()}\n        </div>\n      </div>\n    );\n  }\n\n  renderBottomBar() {\n    return <BottomBar />;\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('player-wrapper', this.layout.getPlayerStyle(this.state))}\n        id={ID.PLAYER}\n      >\n        {this.renderTopBar()}\n        {this.renderMedia()}\n        {this.renderApplication()}\n        {this.renderContent()}\n        {this.renderBottomBar()}\n        {this.renderModal()}\n      </div>\n    );\n  }\n}\n","import React, { useRef, useState } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport config from 'config';\n//import Data from './data';\nimport Dots from './dots';\nimport Error from 'components/error';\nimport Player from 'components/player';\nimport { build } from 'utils/builder';\nimport {\n  ERROR,\n  ID,\n} from 'utils/constants';\nimport {\n  buildFileURL,\n  getFileName,\n  getFileType,\n//  getLoadedData,\n} from 'utils/data';\nimport {\n  getLayout,\n  getRecordId,\n  getTime,\n} from 'utils/params';\nimport logger from 'utils/logger';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'loader.wrapper.aria',\n    description: 'Aria label for the loader wrapper',\n  },\n});\n\nconst initError = (recordId) => recordId ? null : ERROR.BAD_REQUEST;\n\nconst Loader = ({ match }) => {\n  const intl = useIntl();\n  const counter = useRef(0);\n  const data = useRef({});\n  const layout = useRef(getLayout());\n  const recordId = useRef(getRecordId(match));\n  const started = useRef(false);\n  const time = useRef(getTime());\n\n  const [error, setError] = useState(initError(recordId.current));\n  const [loaded, setLoaded] = useState(false);\n\n  const fetchFile = (file) => {\n    const url = buildFileURL(recordId.current, file);\n    fetch(url).then(response => {\n      if (response.ok) {\n        logger.debug(ID.LOADER, file, response);\n        const fileType = getFileType(file);\n        switch (fileType) {\n          case 'json':\n            return response.json();\n          case 'html':\n            return response.text();\n          case 'svg':\n            return response.text();\n          case 'xml':\n            return response.text();\n          default:\n            setError(ERROR.BAD_REQUEST);\n            return null;\n        }\n      } else {\n        logger.warn('loader', file, response);\n        return null;\n      }\n    }).then(value => {\n      build(file, value).then(content => {\n        if (content) logger.debug(ID.LOADER, 'builded', file);\n        data.current[getFileName(file)] = content;\n        update();\n      }).catch(error => setError(ERROR.BAD_REQUEST));\n    }).catch(error => setError(ERROR.NOT_FOUND));\n  };\n\n  const fetchMedia = () => {\n    const fetches = config.medias.map(type => {\n      const url = buildFileURL(recordId.current, `video/webcams.${type}`);\n      return fetch(url, { method: 'HEAD' });\n    });\n\n    Promise.all(fetches).then(responses => {\n      const media = [];\n      responses.forEach(response => {\n        const { ok, url } = response;\n        if (ok) {\n          logger.debug(ID.LOADER, 'media', response);\n          media.push(config.medias.find(type => url.endsWith(type)));\n        }\n      });\n\n      if (media.length > 0) {\n        data.current.media = media;\n        update();\n      } else {\n        // TODO: Handle audio medias\n        setError(ERROR.NOT_FOUND);\n      }\n    });\n  };\n\n  const update = () => {\n    counter.current = counter.current + 1;\n    // TODO: Better control\n    if (counter.current > Object.keys(config.files.data).length) {\n      if (!loaded) setLoaded(true);\n    }\n  };\n\n  if (!started.current) {\n    started.current = true;\n\n    if (recordId.current) {\n      for (const file in config.files.data) {\n        fetchFile(config.files.data[file]);\n      }\n\n      fetchMedia();\n    }\n  }\n\n  if (error) return <Error code={error} />;\n\n  if (loaded) {\n    return (\n      <Player\n        data={data.current}\n        intl={intl}\n        layout={layout.current}\n        time={time.current}\n      />\n    );\n  }\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"loader-wrapper\"\n      id={ID.LOADER}\n    >\n      <div className=\"loader-top\" />\n      <div className=\"loader-middle\">\n        <Dots />\n      </div>\n      <div className=\"loader-bottom\">\n        {/*<Data data={getLoadedData(data.current)} />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { ERROR } from 'utils/constants';\nimport Error from './error';\nimport Loader from './loader';\n\nconst Router = () => {\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route\n          path=\"/:recordId\"\n          component={Loader}\n        />\n        <Route render={() => <Error code={ERROR.NOT_FOUND} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import ar from './ar.json';\nimport de from './de.json';\nimport en from './en.json';\nimport es from './es.json';\nimport fa from './fa.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport ja from './ja.json';\nimport pt from './pt.json';\nimport ru from './ru.json';\nimport tr from './tr.json';\n\nconst messages = {\n  ar,\n  de,\n  en,\n  es,\n  fa,\n  fr,\n  it,\n  ja,\n  pt,\n  ru,\n  tr,\n};\n\nexport default messages;\n","import { locale as config } from 'config';\nimport messages from './messages';\nimport { getSearchParam } from 'utils/params';\n\nconst RTL_LOCALES = ['ar', 'fa'];\n\nconst setDirection = (locale) => {\n  if (RTL_LOCALES.includes(locale)) {\n    document.body.parentNode.setAttribute('dir', 'rtl');\n  } else {\n    document.body.parentNode.setAttribute('dir', 'ltr');\n  }\n};\n\nconst getLocale = () => {\n  // Try from the query params\n  let locale = getSearchParam('locale');\n\n  // If not, get browser default\n  if (!locale) locale = navigator.language;\n\n  // Sanitize\n  locale = locale.split(/[-_]/)[0];\n\n  // If the locale is missing, use the default fallback\n  if (!messages[locale]) locale = config.default.split(/[-_]/)[0];\n\n  setDirection(locale);\n\n  return locale;\n};\n\nconst getMessages = () => {\n  return messages;\n};\n\nexport {\n  getLocale,\n  getMessages,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from \"react-intl\";\nimport Loader from 'components/loader';\nimport Router from 'components/router';\nimport {\n  getLocale,\n  getMessages,\n} from 'locales';\nimport { ROUTER } from 'utils/constants';\nimport { getStyle } from 'utils/params';\nimport './index.scss';\n\nconst locale = getLocale();\nconst messages = getMessages();\nconst style = getStyle();\n\nReactDOM.render(\n  (\n    <IntlProvider\n      locale={locale}\n      messages={messages[locale]}\n    >\n      {style ? <link rel=\"stylesheet\" type=\"text/css\" href={style} /> : null}\n      {ROUTER ? <Router /> : <Loader />}\n    </IntlProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}