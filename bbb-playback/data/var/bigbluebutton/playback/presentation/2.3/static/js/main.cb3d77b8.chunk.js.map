{"version":3,"sources":["utils/logger.js","utils/data.js","components/error.js","components/utils/button/index.js","components/utils/modal/index.js","components/about/index.js","components/utils/avatar/index.js","components/chat/message.js","components/chat/index.js","components/notes/index.js","components/presentation/cursor.js","components/presentation/slide.js","components/presentation/canvas.js","components/presentation/index.js","components/thumbnails/index.js","components/search/index.js","components/screenshare/index.js","components/talkers/index.js","components/video/index.js","components/bars/bottom.js","components/bars/top.js","utils/builder.js","utils/layout.js","utils/monitor.js","utils/shortcuts.js","utils/synchronizer.js","components/player.js","components/loader.js","components/router.js","locales/messages/index.js","locales/index.js","index.js"],"names":["params","URLSearchParams","window","location","search","debug","has","logger","info","console","warn","error","LAYOUT","ID","NUMBERS","ROUTER","process","REACT_APP_NO_ROUTER","buildFileURL","recordId","file","getAvatarStyle","name","index","stringHash","length","getCurrentDataIndex","data","time","isEmpty","start","stop","middle","Math","floor","isCurrent","item","hasProperty","isVisible","timestamp","getData","id","config","files","getFileName","canvases","slides","thumbnails","split","shift","getFileType","pop","hasIndex","hasPresentation","i","src","includes","object","property","hasOwnProperty","isActive","clear","cleared","wasCleared","visible","isContentVisible","layout","swap","current","next","isArray","isValid","isString","isEnabled","isEqual","first","second","type","equal","every","value","valid","Array","parseTimeToSeconds","patterns","match","hours","minutes","seconds","timeToSeconds","h","parseInt","m","s","seek","player","video","max","duration","currentTime","skip","change","intlMessages","defineMessages","aria","description","Error","props","code","intl","aria-label","formatMessage","className","defaultProps","active","circle","disabled","Button","this","handleOnClick","icon","ghost","solid","style","default","cx","onClick","PureComponent","close","More","children","onClose","About","key","element","green","red","metadata","content","captions","chat","notes","presentation","screenshare","renderItem","participants","end","subtitle","push","Date","day","month","year","map","toggleModal","renderHeader","renderBody","renderFooter","Avatar","initials","Message","nextProps","inactive","onKeyPress","e","tabIndex","text","options","hyperlink","milliseconds","getTimestampAsMilliseconds","hourCycle","hour","minute","timeZone","renderHyperlink","renderAvatar","renderContent","Component","Chat","handleAutoScroll","currentDataIndex","scroll","firstNode","currentNode","parentNode","scrollTop","align","clientHeight","offsetTop","spacing","parentHeight","verticalOffset","getScrollTop","node","message","ref","setRef","aria-live","renderMessages","Notes","dangerouslySetInnerHTML","__html","Cursor","x","y","cy","Slide","height","width","thumbnail","find","alt","logo","slide","getProxy","href","Canvas","points","x1","y1","x2","y2","d","r","xmlns","line","image","rect","fill","stroke","strokeWidth","transform","drawsInterval","draws","canvas","shape","j","intermediate","renderPoll","renderPolyline","renderLine","renderPolygon","renderPath","renderCircle","renderText","renderCanvas","Presentation","currentSlideIndex","currentPanzoomIndex","panzooms","currentData","viewBox","currentCursorIndex","cursor","slideId","getSlideId","getViewBox","getCursor","canvasId","buildViewBoxAttr","xmlnsXlink","clipPath","Thumbnails","scrollLeft","clientWidth","offsetLeft","document","dir","parentWidth","horizontalOffset","getScrollLeft","interactive","renderImage","styles","reduce","result","isFiltered","renderThumbnail","handleSearch","renderThumbnails","renderClearButton","Search","state","event","target","min","setState","toLowerCase","forEach","indexOf","maxLength","minLength","onChange","handleOnChange","Screenshare","media","sources","filter","controls","videojs","onPlayerReady","dispose","data-vjs-player","playsInline","preload","Talkers","talkers","talker","renderTalkers","Video","tracks","lang","locale","localeName","kind","srclang","label","controlBar","fullscreenToggle","pictureInPictureToggle","volumePanel","inline","vertical","inactivityTimeout","playbackRates","rates","onTimeUpdate","on","setInterval","rps","clearInterval","about","section","TopBar","enabled","toggleSearch","toggleSection","toggleSwap","date","toggleAbout","control","single","renderSectionButton","renderTitle","renderSearchButton","renderSwapButton","getAttr","attr","getChildren","getId","getNumbers","trimmed","trim","replace","v","parseFloat","buildCanvases","group","canvasAttr","g","drawAttr","undo","items","buildStyle","drawId","Object","assign","polyline","polygon","path","switch","foreignObject","child","grandchildren","grandchild","join","parseText","buildShapes","svg","img","in","sort","a","b","buildSlides","build","filename","Promise","resolve","reject","fileType","alternates","buildAlternates","buildCaptions","buildNotes","shapes","explicitChildren","preserveChildrenOrder","charsAsChildren","getOptions","parseStringPromise","then","popcorn","chattimeline","out","decodeXML","clearHyperlink","slice","getInitials","buildChat","recording","position","buildCursor","meeting","meta","end_time","start_time","buildMetadata","panzoom","viewbox","buildPanzooms","start_timestamp","stop_timestamp","buildScreenshare","catch","Layout","getContentFromData","getControlFromLayout","getSectionFromLayout","getSwapFromLayout","fullscreen","isSingle","Monitor","interval","url","JSON","stringify","request","send","fetch","method","headers","body","buildBody","Shortcuts","actions","init","prop","listeners","add","p","k","action","listener","addEventListener","altKey","shiftKey","removeEventListener","STATUSES","EVENTS","Synchronizer","primary","secondary","status","synching","play","pause","playbackRate","restore","Player","application","initControl","modal","initSection","initSwap","initData","handlePlayerReady","bind","handleTimeUpdate","initMonitor","initShortcuts","shortcuts","destroy","found","synchronizer","monitor","collect","toggleFullscreen","toggleThumbnails","previous","backward","forward","open","hasFullscreenButton","getContent","hasTalkers","getMediaStyle","renderFullscreenButton","toggleApplication","currentChatIndex","renderApplicationIcon","renderApplicationContent","getDraws","currentDrawsInterval","currentDataInterval","getCurrentDataInterval","hasScreenshare","SCREENSHARE","PRESENTATION","getActiveContent","getContentStyle","renderPresentation","renderScreenshare","getBottomContentStyle","getPlayerStyle","renderTopBar","renderMedia","renderApplication","renderBottomBar","renderModal","Loader","counter","l","qs","parse","ignoreQueryPrefix","getLayout","getRecordId","t","getTime","loaded","fetchFile","fetchMedia","response","ok","json","update","fetches","medias","all","responses","endsWith","keys","injectIntl","Router","basename","component","render","ar","de","en","es","fr","it","ja","pt","ru","tr","RTL_LOCALES","navigator","language","setAttribute","setDirection","messages","getLocale","get","getStyle","ReactDOM","rel","getElementById"],"mappings":"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","file":"static/js/main.cb3d77b8.chunk.js","sourcesContent":["const params = new URLSearchParams(window.location.search);\nconst debug = params ? params.has('debug') : false;\n\nconst logger = {\n  info: (...msg) => console.info(...msg),\n  debug: (...msg) => debug ? console.debug(...msg) : null,\n  warn: (...msg) => debug ? console.warn(...msg) : null,\n  error: (...msg) => console.error(...msg),\n};\n\nexport default logger;\n","import config from 'config';\nimport qs from 'qs';\nimport stringHash from 'string-hash';\nimport logger from './logger';\n\nconst LAYOUT = {\n  CONTENT: 'content',\n  DISABLED: 'disabled',\n  MEDIA: 'media',\n};\n\nconst ID = {\n  ABOUT: 'about',\n  ALTERNATES: 'alternates',\n  CAPTIONS: 'captions',\n  CHAT: 'chat',\n  CURSOR: 'cursor',\n  ERROR: 'error',\n  LOADER: 'loader',\n  METADATA: 'metadata',\n  NOTES: 'notes',\n  PANZOOMS: 'panzooms',\n  PLAYER: 'player',\n  PRESENTATION: 'presentation',\n  SCREENSHARE: 'screenshare',\n  SEARCH: 'search',\n  SHAPES: 'shapes',\n  TALKERS: 'talkers',\n  THUMBNAILS: 'thumbnails',\n  VIDEO: 'video',\n};\n\nconst NUMBERS = [\n  'zero', 'one', 'two', 'three',\n  'four', 'five', 'six', 'seven',\n  'eight', 'nine', 'ten', 'eleven',\n  'twelve', 'thirteen', 'fourteen', 'fifteen',\n];\n\nconst getRouter = () => {\n  if (typeof process.env.REACT_APP_NO_ROUTER !== 'undefined') {\n    if (process.env.REACT_APP_NO_ROUTER) return false;\n  }\n\n  return true;\n};\n\nconst ROUTER = getRouter();\n\nconst buildFileURL = (recordId, file) => {\n  if (!ROUTER) return file;\n\n  return `/presentation/${recordId}/${file}`;\n};\n\nconst getAvatarStyle = name => {\n  const index = stringHash(name) % NUMBERS.length;\n\n  return `avatar-${NUMBERS[index]}`;\n};\n\nconst getActiveContent = (screenshare, time) => {\n  const {\n    SCREENSHARE,\n    PRESENTATION,\n  } = ID;\n\n  const content = isEnabled(screenshare, time) ? SCREENSHARE : PRESENTATION;\n\n  return content;\n};\n\nconst getContentFromData = data => {\n  const captions = getData(data, ID.CAPTIONS);\n  const chat = getData(data, ID.CHAT);\n  const notes = getData(data, ID.NOTES);\n  const screenshare = getData(data, ID.SCREENSHARE);\n  const shapes = getData(data, ID.SHAPES);\n  const slides = shapes.slides;\n\n  const content = {\n    captions: !isEmpty(captions),\n    chat: !isEmpty(chat),\n    notes: !isEmpty(notes),\n    presentation: hasPresentation(slides),\n    screenshare: !isEmpty(screenshare),\n  };\n\n  return content;\n};\n\nconst getControlFromLayout = layout => {\n  const { DISABLED } = LAYOUT;\n  let control = true;\n  switch (layout) {\n    case DISABLED:\n      control = false;\n      break;\n    default:\n  }\n\n  return control;\n};\n\nconst getCurrentDataIndex = (data, time) => {\n  if (isEmpty(data)) return -1;\n\n  let start = 0;\n  let stop = data.length - 1;\n  let middle = Math.floor((start + stop) / 2);\n\n  while (!isCurrent(data, middle, time) && start < stop) {\n    const item = data[middle];\n    if (!hasProperty(item, 'timestamp')) return -1;\n\n    if (!isVisible(time, item.timestamp)) {\n      stop = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n\n    middle = Math.floor((start + stop) / 2);\n  }\n\n  const current = isCurrent(data, middle, time);\n\n  return (!current) ? -1 : middle;\n};\n\nconst getCurrentDataInterval = (data, time) => {\n  const currentDataInterval = [];\n\n  if (isEmpty(data)) return currentDataInterval;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      if (!isVisible(time, timestamp)) break;\n\n      currentDataInterval.push(!wasCleared(time, clear));\n    }\n  }\n\n  return currentDataInterval;\n};\n\nconst getData = (data, id) => {\n  const file = config.files.data[id];\n\n  switch (id) {\n    case ID.ALTERNATES:\n    case ID.CAPTIONS:\n    case ID.CHAT:\n    case ID.CURSOR:\n    case ID.NOTES:\n    case ID.PANZOOMS:\n    case ID.SCREENSHARE:\n    case ID.TALKERS:\n      if (!file || data[getFileName(file)] === null) {\n        return [];\n      }\n\n      return data[getFileName(file)];\n    case ID.METADATA:\n      if (!file || data[getFileName(file)] === null) {\n        logger.error('missing', id);\n        return {};\n      }\n\n      return data[getFileName(file)];\n    case ID.SHAPES:\n      if (!file || data[getFileName(file)] === null) {\n        return {\n          canvases: [],\n          slides: [],\n          thumbnails: [],\n        };\n      }\n\n      return data[getFileName(file)];\n    default:\n      logger.debug('unhandled', id);\n      return [];\n  }\n};\n\nconst getDraws = (index, slides, canvases) => {\n  if (!hasIndex(index, slides)) return [];\n\n  const slide = slides[index];\n\n  if (isEmpty(canvases)) return [];\n\n  const canvas = canvases.find(canvas => slide.id === canvas.id);\n\n  if (!canvas) return [];\n\n  const { draws } = canvas;\n\n  return draws;\n};\n\nconst getFileName = file => file.split('.').shift();\n\nconst getFileType = file => file.split('.').pop();\n\nconst getLayout = location => {\n  if (location) {\n    const { search } = location;\n    if (search) {\n      const { l } = qs.parse(search, { ignoreQueryPrefix: true });\n\n      if (l) return l;\n    }\n  }\n\n  return null;\n};\n\nconst getRecordId = match => {\n  if (!ROUTER) return 'local';\n\n  if (match) {\n    const { params } = match;\n    if (params && params.recordId) {\n      const { recordId } = params;\n      const regex = /^[a-z0-9]{40}-[0-9]{13}$/;\n\n      if (recordId.match(regex)) return recordId;\n    }\n  }\n\n  logger.error('missing', 'recordId');\n\n  return null;\n};\n\nconst getSectionFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let section = true;\n  switch (layout) {\n    case CONTENT:\n      section = false;\n      break;\n    case MEDIA:\n      section = false;\n      break;\n    default:\n  }\n\n  return section;\n};\n\nconst getSwapFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let swap = false;\n  switch (layout) {\n    case CONTENT:\n      swap = false;\n      break;\n    case MEDIA:\n      swap = true;\n      break;\n    default:\n  }\n\n  return swap;\n};\n\nconst getScrollLeft = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientWidth,\n    offsetLeft,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const ltr = document.dir === 'ltr';\n  const spacing = ltr ? firstNode.offsetLeft : 0;\n  const parentWidth = parentNode.clientWidth;\n\n  let horizontalOffset = 0;\n  switch (align) {\n    case 'left':\n      horizontalOffset = offsetLeft - spacing;\n      break;\n    case 'center':\n      horizontalOffset = parseInt(offsetLeft + (clientWidth - spacing - parentWidth) / 2, 10);\n      break;\n    case 'right':\n      horizontalOffset = offsetLeft + clientWidth - parentWidth;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return horizontalOffset;\n};\n\nconst getScrollTop = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientHeight,\n    offsetTop,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetTop;\n  const parentHeight = parentNode.clientHeight;\n\n  let verticalOffset = 0;\n  switch (align) {\n    case 'top':\n      verticalOffset = offsetTop - spacing;\n      break;\n    case 'middle':\n      verticalOffset = parseInt(offsetTop + (clientHeight - spacing - parentHeight) / 2, 10);\n      break;\n    case 'bottom':\n      verticalOffset = offsetTop + clientHeight - parentHeight;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return verticalOffset;\n};\n\nconst getStyle = () => {\n  const params = new URLSearchParams(window.location.search);\n  const { styles } = config;\n  const { url } = styles;\n\n  let style = styles.default ? `${url}/${styles.default}.css` : null;\n  if (params && params.has('s')) {\n    const { valid } = styles;\n    const value = params.get('s');\n    if (valid.includes(value)) {\n      style = `${url}/${value}.css`;\n    }\n  }\n\n  return style;\n};\n\nconst getTime = location => {\n  if (location) {\n    const { search } = location;\n    if (search) {\n      const { t } = qs.parse(search, { ignoreQueryPrefix: true });\n\n      if (t) return parseTimeToSeconds(t);\n    }\n  }\n\n  return null;\n};\n\nconst getTimestampAsMilliseconds = timestamp => timestamp * 1000;\n\nconst hasIndex = (index, data) => {\n  if (index < 0) return false;\n\n  if (isEmpty(data)) return false;\n\n  if (index >= data.length) {\n    logger.error('out of bounds', index, data);\n\n    return false;\n  }\n\n  return true;\n};\n\nconst hasPresentation = slides => {\n  if (isEmpty(slides)) return false;\n\n  for (let i = 0; i < slides.length; i++) {\n    const { src } = slides[i];\n\n    if (src.includes('slide')) return true;\n  }\n\n  return false;\n};\n\nconst hasProperty = (object, property) => {\n  if (object && object.hasOwnProperty(property)) {\n    if (typeof object[property] !== 'undefined') return true;\n  }\n\n  logger.warn('missing', property, object);\n\n  return false;\n};\n\nconst isActive = (time, timestamp, clear = -1) => {\n  const cleared = wasCleared(time, clear);\n  const visible = isVisible(time, timestamp);\n\n  return visible && !cleared;\n};\n\nconst isContentVisible = (layout, swap) => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let visible;\n  switch (layout) {\n    case  CONTENT:\n      visible = !swap;\n      break;\n    case MEDIA:\n      visible = swap;\n      break;\n    default:\n      visible = false;\n  }\n\n  return visible;\n};\n\nconst isCurrent = (data, index, time) => {\n  if (!hasIndex(index, data)) return false;\n\n  const item = data[index];\n  if (!hasProperty(item, 'timestamp')) return false;\n\n  let current = false;\n  if (isVisible(time, item.timestamp)) {\n    if (index + 1 < data.length) {\n      const next = data[index + 1];\n      if (hasProperty(next, 'timestamp')) {\n        current = !isVisible(time, next.timestamp);\n      }\n    } else {\n      current = true;\n    }\n  }\n\n  return current;\n};\n\nconst isEmpty = data => {\n  const isArray = isValid('array', data);\n  const isString = isValid('string', data);\n  if (!isArray && !isString) return true;\n\n  const empty = data.length === 0;\n\n  return empty;\n};\n\nconst isEnabled = (data, time) => {\n  if (isEmpty(data)) return false;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      // Check if it was activated and did not ended\n      if (isActive(time, timestamp, clear)) return true;\n\n      // Check if we are searching over the present time value\n      if (!isVisible(time, timestamp)) return false;\n    } else {\n      // Invalid item\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst isEqual = (first, second, type) => {\n  let equal = false;\n\n  switch (type) {\n    case 'array':\n      if (first.length === second.length) {\n        equal = first.every((value, index) => value === second[index])\n      }\n\n      return equal;\n    default:\n      return equal;\n  }\n};\n\nconst isValid = (type, data) => {\n  let valid = false;\n\n  switch (type) {\n    case 'array':\n      if (Array.isArray(data)) valid = true;\n      break;\n    case 'string':\n      if (typeof data === type) valid = true;\n      break;\n    default:\n      logger.debug('unhandled', type);\n  }\n\n  return valid;\n};\n\nconst isVisible = (time, timestamp) => timestamp <= time;\n\nconst parseTimeToSeconds = time => {\n  const patterns = [\n    /^(\\d+)h(\\d+)m(\\d+)s$/,\n    /^(\\d+)m(\\d+)s$/,\n    /^(\\d+)s$/,\n  ];\n\n  for (let i = 0; i < patterns.length; i++) {\n    if (time.match(patterns[i])) {\n      const hours = time.match(/(\\d+)h/);\n      const minutes = time.match(/(\\d+)m/);\n      const seconds = time.match(/(\\d+)s/);\n\n      let timeToSeconds = 0;\n\n      if (hours) {\n        const h = parseInt(hours[1]);\n        if (h >= 0) timeToSeconds += h * 3600;\n      }\n\n      if (minutes) {\n        const m = parseInt(minutes[1]);\n        if (m >= 0 && m < 60) {\n          timeToSeconds += m * 60;\n        } else {\n          return null;\n        }\n      }\n\n      if (seconds) {\n        const s = parseInt(seconds[1]);\n        if (s >= 0 && s < 60) {\n          timeToSeconds += s;\n        } else {\n          return null;\n        }\n      }\n\n      return timeToSeconds;\n    }\n  }\n\n  return null;\n};\n\nconst search = (text, thumbnails) => {\n  const result = [];\n\n  const value = text.toLowerCase();\n  thumbnails.forEach((thumbnail, index) => {\n    const { alt } = thumbnail;\n\n    if (alt.toLowerCase().indexOf(value) !== -1) {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst seek = (player, seconds) => {\n  if (player.video) {\n    const min = 0;\n    const max = player.video.duration();\n    const time = player.video.currentTime() + seconds;\n\n    if (time < min) {\n      player.video.currentTime(min);\n    } else if (time > max) {\n      player.video.currentTime(max);\n    } else {\n      player.video.currentTime(time);\n    }\n  }\n};\n\nconst skip = (player, data, change) => {\n  const min = 0;\n  const max = data.length - 1;\n  const time = player.video.currentTime();\n\n  const current = getCurrentDataIndex(data, time);\n  if (current === -1) return null;\n\n  const index = current + change;\n\n  let timestamp;\n  if (index < min) {\n    timestamp = data[min].timestamp;\n  } else if (index > max) {\n    timestamp = data[max].timestamp;\n  } else {\n    timestamp = data[index].timestamp;\n  }\n\n  if (typeof timestamp !== 'undefined') {\n    player.video.currentTime(timestamp);\n  }\n};\n\nconst wasCleared = (time, clear) => clear !== -1 && clear <= time;\n\nexport {\n  LAYOUT,\n  ID,\n  ROUTER,\n  buildFileURL,\n  getAvatarStyle,\n  getActiveContent,\n  getContentFromData,\n  getControlFromLayout,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  getFileName,\n  getFileType,\n  getLayout,\n  getRecordId,\n  getScrollLeft,\n  getScrollTop,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  getStyle,\n  getTime,\n  getTimestampAsMilliseconds,\n  hasPresentation,\n  hasProperty,\n  isActive,\n  isContentVisible,\n  isEmpty,\n  isEnabled,\n  isEqual,\n  isValid,\n  parseTimeToSeconds,\n  search,\n  seek,\n  skip,\n};\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'error.wrapper.aria',\n    description: 'Aria label for the error wrapper',\n  },\n});\n\nexport default function Error(props) {\n  const {\n    code,\n    intl,\n  } = props;\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"error-wrapper\"\n      id={ID.ERROR}\n    >\n      <div className=\"error-code\">\n        {code}\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst DEFAULT = 'default';\nconst GHOST = 'ghost';\nconst SOLID = 'solid';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  aria: PropTypes.string,\n  circle: PropTypes.bool,\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  circle: false,\n  disabled: false,\n  type: DEFAULT,\n};\n\nclass Button extends PureComponent {\n  render() {\n    const {\n      active,\n      aria,\n      circle,\n      disabled,\n      handleOnClick,\n      icon,\n      type,\n    } = this.props;\n\n    if (!handleOnClick) return null;\n\n    const ghost = type === GHOST;\n    const solid = type === SOLID;\n\n    const style = {\n      default: !ghost && !solid && !disabled,\n      ghost: ghost && !active && !disabled,\n      solid: (solid || active) && !disabled,\n      circle,\n      disabled,\n    };\n\n    return (\n      <div className=\"button-wrapper\">\n        <button\n          aria-label={aria}\n          className={cx('button', style)}\n          disabled={disabled}\n          onClick={() => handleOnClick()}\n        >\n          <span className={`icon-${icon}`} />\n        </button>\n      </div>\n    );\n  };\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  close: {\n    id: 'button.close.aria',\n    description: 'Aria label for the close button',\n  },\n});\n\nexport default class More extends PureComponent {\n  render() {\n    const {\n      children,\n      intl,\n      onClose,\n    } = this.props;\n\n    return (\n      <div className=\"modal-wrapper\">\n        <div className=\"modal\">\n          <div className=\"modal-control\">\n            <Button\n              aria={intl.formatMessage(intlMessages.close)}\n              circle\n              handleOnClick={onClose}\n              icon=\"close\"\n            />\n          </div>\n          <div className=\"modal-content\">\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  FormattedDate,\n  FormattedTime,\n} from 'react-intl';\nimport cx from 'classnames';\nimport Modal from 'components/utils/modal';\nimport './index.scss';\n\nconst BUILD = process.env.REACT_APP_BBB_PLAYBACK_BUILD;\n\nexport default class About extends PureComponent {\n  renderItem(key, value) {\n    let element;\n    if (typeof value === 'boolean') {\n      const icon = value ? 'icon-check' : 'icon-close';\n      element = <div className={cx(icon, { green: value, red: !value})} />;\n    } else {\n      element = value;\n    }\n\n    return (\n      <div className=\"item\">\n        <div className={`icon-${key}`} />\n        <div className=\"value\">\n          {element}\n        </div>\n      </div>\n    );\n  }\n\n  renderBody(metadata) {\n    const { content } = this.props;\n\n    const {\n      captions,\n      chat,\n      notes,\n      presentation,\n      screenshare,\n    } = content;\n\n    return (\n      <div className=\"about-body\">\n        {this.renderItem('users', metadata.participants)}\n        {this.renderItem('presentation', presentation)}\n        {this.renderItem('chat', chat)}\n        {this.renderItem('notes', notes)}\n        {this.renderItem('screenshare', screenshare)}\n        {this.renderItem('captions', captions)}\n      </div>\n    );\n  }\n\n  renderHeader(metadata) {\n    const {\n      end,\n      name,\n      start,\n    } = metadata;\n\n    const subtitle = [];\n    subtitle.push(\n      <FormattedDate\n        value={new Date(start)}\n        day=\"numeric\"\n        month=\"long\"\n        year=\"numeric\"\n      />\n    );\n\n    subtitle.push(<FormattedTime value={new Date(start)} />);\n    subtitle.push(<FormattedTime value={new Date(end)} />);\n\n    return (\n      <div className=\"about-header\">\n        <div className=\"title\">\n          {name}\n        </div>\n        <div className=\"subtitle\">\n          {subtitle.map(s => <div className=\"item\">{s}</div>)}\n        </div>\n      </div>\n    );\n  }\n\n  renderFooter() {\n    return (\n      <div className=\"about-footer\">\n        {BUILD ? this.renderItem('settings', BUILD) : null}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      metadata,\n      toggleModal,\n    } = this.props;\n\n    return (\n      <Modal\n        intl={intl}\n        onClose={toggleModal}\n      >\n        {this.renderHeader(metadata)}\n        {this.renderBody(metadata)}\n        {this.renderFooter()}\n      </Modal>\n    );\n  }\n}\n","import React from 'react';\nimport cx from 'classnames';\nimport { getAvatarStyle } from 'utils/data';\nimport './index.scss';\n\nconst Avatar = (props) => {\n  const {\n    initials,\n    name,\n  } = props;\n\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className={cx('avatar', getAvatarStyle(name))}>\n        <span className=\"initials\">\n          {initials}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport { FormattedTime } from 'react-intl';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport { getTimestampAsMilliseconds } from 'utils/data';\nimport './index.scss';\n\nexport default class Message extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { active } = this.props;\n\n    if (active !== nextProps.active) return true;\n\n    return false;\n  }\n\n  renderAvatar(active, name) {\n    const {\n      initials,\n      onClick,\n    } = this.props;\n\n    return (\n      <div\n        className={cx('interactive', { inactive: !active })}\n        onClick={onClick}\n        onKeyPress={(e) => e.key === 'Enter' ? onClick() : null}\n        tabIndex=\"0\"\n      >\n        <Avatar\n          active={active}\n          initials={initials}\n          name={name}\n        />\n      </div>\n    );\n  }\n\n  renderHyperlink(active, text) {\n    const options = {\n      className: cx('linkified', { inactive: !active }),\n    };\n\n    return (\n      <Linkify options={options}>\n        {text}\n      </Linkify>\n    );\n  }\n\n  renderContent(active, name) {\n    const {\n      hyperlink,\n      text,\n      timestamp,\n    } = this.props;\n\n    const milliseconds = getTimestampAsMilliseconds(timestamp);\n\n    return (\n      <div className=\"data\">\n        <div className=\"info\">\n          <div className={cx('name', { inactive: !active })}>\n            {name}\n          </div>\n          <div className={cx('time', { inactive: !active })}>\n            <FormattedTime\n              hourCycle=\"h23\"\n              hour=\"numeric\"\n              minute=\"numeric\"\n              second=\"numeric\"\n              timeZone=\"UTC\"\n              value={milliseconds}\n            />\n          </div>\n        </div>\n        <div className={cx('text', { inactive: !active })}>\n          {hyperlink ? this.renderHyperlink(active, text) : text}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      active,\n      name,\n    } = this.props;\n\n    return (\n      <div className=\"message\">\n        {this.renderAvatar(active, name)}\n        {this.renderContent(active, name)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { chat as config } from 'config';\nimport Message from './message';\nimport {\n  ID,\n  getScrollTop,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.chat.wrapper.aria',\n    description: 'Aria label for the chat wrapper',\n  },\n});\n\nexport default class Chat extends Component {\n  componentDidMount() {\n    this.handleAutoScroll();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { currentDataIndex } = this.props;\n\n    if (currentDataIndex !== nextProps.currentDataIndex) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.handleAutoScroll();\n  }\n\n  handleAutoScroll() {\n    if (!config.scroll) return;\n\n    // Auto-scroll can start after getting the first and current nodes\n    if (this.firstNode && this.currentNode) {\n      const { parentNode } = this.currentNode;\n\n      parentNode.scrollTop = getScrollTop(this.firstNode, this.currentNode, config.align);\n    }\n  }\n\n  handleOnClick(timestamp) {\n    const { player } = this.props;\n\n    if (!player) return null;\n\n    player.currentTime(timestamp);\n  }\n\n  // Set node as ref so we can manage auto-scroll\n  setRef(node, index) {\n    const { currentDataIndex } = this.props;\n\n    if (index === 0) {\n      this.firstNode = node;\n    }\n\n    if (index === currentDataIndex) {\n      this.currentNode = node;\n    }\n  }\n\n  renderMessages() {\n    const {\n      chat,\n      currentDataIndex,\n    } = this.props;\n\n    return chat.map((item, index) => {\n      const {\n        hyperlink,\n        initials,\n        message,\n        name,\n        timestamp,\n      } = item;\n\n      const active = index <= currentDataIndex;\n\n      return (\n        <span ref={node => this.setRef(node, index)}>\n          <Message\n            active={active}\n            hyperlink={hyperlink}\n            initials={initials}\n            name={name}\n            onClick={() => this.handleOnClick(timestamp)}\n            text={message}\n            timestamp={timestamp}\n          />\n        </span>\n      );\n    });\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        aria-live=\"polite\"\n        className=\"chat-wrapper\"\n        id={ID.CHAT}\n        tabIndex=\"0\"\n      >\n        <div className=\"list\">\n          <div className=\"message-wrapper\">\n            {this.renderMessages()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.notes.wrapper.aria',\n    description: 'Aria label for the notes wrapper',\n  },\n});\n\nexport default class Notes extends PureComponent {\n  render() {\n    const {\n      intl,\n      notes,\n    } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"notes-wrapper\"\n        id={ID.NOTES}\n        tabIndex=\"0\"\n      >\n        <div className=\"notes\">\n          <div dangerouslySetInnerHTML={{ __html: notes }} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport './index.scss';\n\nexport default class Cursor extends PureComponent {\n  render() {\n    const {\n      x,\n      y,\n    } = this.props;\n\n    if (x === -1 || y === -1) return null;\n\n    return (\n      <circle\n        className=\"cursor\"\n        style={{ cx: x, cy: y }}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst SCREENSHARE = 'deskshare';\n\nexport default class Slide extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  getProxy(id, height, width) {\n    const { thumbnails } = this.props;\n\n    const thumbnail = thumbnails.find(thumbnails => id === thumbnails.id);\n    if (!thumbnail) return null;\n\n    const {\n      alt,\n      src,\n    } = thumbnail;\n\n    if (src === SCREENSHARE) return null;\n\n    const logo = src.includes('logo');\n\n    return (\n      <foreignObject\n        height={height}\n        x={0}\n        width={width}\n        y={0}\n      >\n        <img\n          alt={alt}\n          className={cx('proxy', { logo })}\n          src={buildFileURL(this.recordId, src)}\n        />\n      </foreignObject>\n    );\n  }\n\n  render() {\n    const {\n      id,\n      slides,\n    } = this.props;\n\n    const current = slides.find(slide => id === slide.id);\n    if (!current) return null;\n\n    const {\n      height,\n      src,\n      width,\n    } = current;\n\n    return (\n      <g>\n        {this.getProxy(id, height, width)}\n        <image\n          height={height}\n          href={buildFileURL(this.recordId, src)}\n          x={0}\n          width={width}\n          y={0}\n        />\n      </g>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nexport default class Canvas extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  renderPolyline(style, data) {\n    return <polyline\n      style={style}\n      points={data.points}\n    />;\n  }\n\n  renderLine(style, data) {\n    return <line\n      style={style}\n      x1={data.x1}\n      y1={data.y1}\n      x2={data.x2}\n      y2={data.y2}\n    />;\n  }\n\n  renderPolygon(style, data) {\n    return <polygon\n      style={style}\n      points={data.points}\n    />;\n  }\n\n  renderPath(style, data) {\n    return <path\n      style={style}\n      d={data.d}\n    />;\n  }\n\n  renderCircle(style, data) {\n    return <circle\n      style={style}\n      cx={data.cx}\n      cy={data.cy}\n      r={data.r}\n    />;\n  }\n\n  renderText(style, data) {\n    return (\n      <foreignObject\n        style={style}\n        height={data.height}\n        width={data.width}\n        x={data.x}\n        y={data.y}\n      >\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">\n          {data.text.split('\\r').map(line => <span>{line}<br /></span>)}\n        </div>\n      </foreignObject>\n    );\n  }\n\n  renderPoll(style, data) {\n    const {\n      image,\n      rect,\n    } = data;\n\n    return (\n      <g style={style}>\n        <rect\n          fill={rect.fill}\n          height={rect.height}\n          stroke={rect.stroke}\n          strokeWidth={rect['stroke-width']}\n          width={rect.width}\n          x={rect.x}\n          y={rect.y}\n        />\n        <image\n          height={image.height}\n          transform={image.transform}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(this.recordId, image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  }\n\n  renderCanvas(drawsInterval) {\n    const { draws } = this.props;\n    const canvas = [];\n\n    for (let i = 0; i < drawsInterval.length; i++) {\n      if (!drawsInterval[i]) continue;\n\n      const {\n        id,\n        shape,\n        style,\n      } = draws[i];\n\n      const j = i + 1;\n      let intermediate = false;\n      if (j < drawsInterval.length) {\n        intermediate = draws[j].id === id;\n      }\n\n      if (intermediate) continue;\n\n      const {\n        data,\n        type,\n      } = shape;\n\n      switch (type) {\n        case 'poll':\n          canvas.push(this.renderPoll(style, data));\n          break;\n        case 'polyline':\n          canvas.push(this.renderPolyline(style, data));\n          break;\n        case 'line':\n          canvas.push(this.renderLine(style, data));\n          break;\n        case 'polygon':\n          canvas.push(this.renderPolygon(style, data));\n          break;\n        case 'path':\n          canvas.push(this.renderPath(style, data));\n          break;\n        case 'circle':\n          canvas.push(this.renderCircle(style, data));\n          break;\n        case 'text':\n          canvas.push(this.renderText(style, data));\n          break;\n        default:\n      }\n    }\n\n    return canvas;\n  }\n\n  render() {\n    const { drawsInterval } = this.props;\n\n    if (drawsInterval.length === 0) return null;\n\n    return (\n      <g>\n        {this.renderCanvas(drawsInterval)}\n      </g>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Cursor from './cursor';\nimport Slide from './slide';\nimport Canvas from './canvas';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.presentation.wrapper.aria',\n    description: 'Aria label for the presentation wrapper',\n  },\n});\n\nexport default class Presentation extends PureComponent {\n  getSlideId() {\n    const {\n      currentSlideIndex,\n      slides,\n    } = this.props;\n\n    const inactive = -1;\n    if (currentSlideIndex === -1) return inactive;\n\n    const currentData = slides[currentSlideIndex];\n\n    return currentData.id;\n  }\n\n  getViewBox() {\n    const {\n      currentPanzoomIndex,\n      panzooms,\n    } = this.props;\n\n    const inactive = {\n      height: 0,\n      x: 0,\n      width: 0,\n      y: 0,\n    };\n\n    if (currentPanzoomIndex === -1) return inactive;\n\n    const currentData = panzooms[currentPanzoomIndex];\n\n    return {\n      height: currentData.height,\n      x: currentData.x,\n      width: currentData.width,\n      y: currentData.y,\n    };\n  }\n\n  buildViewBoxAttr(viewBox) {\n    const {\n      height,\n      x,\n      width,\n      y,\n    } = viewBox;\n\n    return `${x} ${y} ${width} ${height}`;\n  }\n\n  getCursor(viewBox) {\n    const {\n      currentCursorIndex,\n      cursor,\n    } = this.props;\n\n    const inactive = {\n      x: -1,\n      y: -1,\n    }\n\n    if (currentCursorIndex === -1) return inactive;\n\n    const currentData = cursor[currentCursorIndex];\n    if (currentData.x === -1 && currentData.y === -1) return inactive;\n\n    return {\n      x: viewBox.x + (currentData.x * viewBox.width),\n      y: viewBox.y + (currentData.y * viewBox.height),\n    };\n  }\n\n  render() {\n    const {\n      active,\n      draws,\n      drawsInterval,\n      intl,\n      metadata,\n      slides,\n      thumbnails,\n    } = this.props;\n\n    const slideId = this.getSlideId();\n    const viewBox = this.getViewBox();\n    const cursor = this.getCursor(viewBox);\n    const canvasId = slideId;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('presentation-wrapper', { inactive: !active })}\n        id={ID.PRESENTATION}\n      >\n        <div className=\"presentation\">\n          <svg\n            viewBox={this.buildViewBoxAttr(viewBox)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <defs>\n              <clipPath id=\"viewBox\">\n                <rect\n                  height={viewBox.height}\n                  x={viewBox.x}\n                  width={viewBox.width}\n                  y={viewBox.y}\n                />\n              </clipPath>\n            </defs>\n            <g clipPath=\"url(#viewBox)\">\n              <Slide\n                id={slideId}\n                metadata={metadata}\n                slides={slides}\n                thumbnails={thumbnails}\n              />\n              <Canvas\n                draws={draws}\n                drawsInterval={drawsInterval}\n                id={canvasId}\n                metadata={metadata}\n              />\n              <Cursor\n                x={cursor.x}\n                y={cursor.y}\n              />\n            </g>\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { thumbnails as config } from 'config';\nimport Button from 'components/utils/button';\nimport {\n  ID,\n  buildFileURL,\n  getScrollLeft,\n  isEmpty,\n  isEqual,\n} from 'utils/data';\nimport './index.scss';\n\nconst SCREENSHARE = 'deskshare';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.thumbnails.wrapper.aria',\n    description: 'Aria label for the thumbnails wrapper',\n  },\n  clear: {\n    id: 'button.clear.aria',\n    description: 'Aria label for the clear button',\n  },\n});\n\nexport default class Thumbnails extends Component {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  componentDidMount() {\n    this.handleAutoScroll();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      currentDataIndex,\n      search,\n    } = this.props;\n\n    if (currentDataIndex !== nextProps.currentDataIndex) {\n      return true;\n    }\n\n    if (!isEqual(search, nextProps.search)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.handleAutoScroll();\n  }\n\n  handleOnClick(timestamp) {\n    const { player } = this.props;\n\n    if (!player) return null;\n\n    player.currentTime(timestamp);\n  }\n\n  handleAutoScroll() {\n    if (!config.scroll) return;\n\n    // Auto-scroll can start after getting the first and current nodes\n    if (this.firstNode && this.currentNode) {\n      const { parentNode } = this.currentNode;\n\n      parentNode.scrollLeft = getScrollLeft(this.firstNode, this.currentNode, config.align);\n    }\n  }\n\n  // Set node as ref so we can manage auto-scroll\n  setRef(node, index) {\n    const { currentDataIndex } = this.props;\n\n    if (index === 0) {\n      this.firstNode = node;\n    }\n\n    if (index === currentDataIndex) {\n      this.currentNode = node;\n    }\n  }\n\n  isFiltered(index) {\n    const {\n      interactive,\n      search,\n    } = this.props;\n\n    if (interactive) {\n      return !isEmpty(search) && !search.includes(index);\n    } else {\n      return !search.includes(index);\n    }\n  }\n\n  renderImage(item) {\n    const {\n      alt,\n      src,\n    } = item;\n\n    const screenshare = src === SCREENSHARE;\n\n    if (screenshare) {\n      return (\n        <div className={cx('thumbnail-image', { screenshare })}>\n          <span className=\"icon-screenshare\" />\n        </div>\n      );\n    }\n\n    const logo = src.includes('logo');\n\n    return (\n      <img\n        alt={alt}\n        className={cx('thumbnail-image', { logo })}\n        src={buildFileURL(this.recordId, src)}\n      />\n    );\n  }\n\n  renderThumbnail(item, index) {\n    const {\n      currentDataIndex,\n      interactive,\n    } = this.props;\n\n    if (!interactive) {\n      return (\n        <div\n          className=\"thumbnail-wrapper\"\n          tabIndex=\"0\"\n        >\n          <div className=\"thumbnail\">\n            {this.renderImage(item)}\n            <div className=\"thumbnail-index\">\n              {index + 1}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    const active = index === currentDataIndex;\n    const onClick = () => this.handleOnClick(item.timestamp);\n\n    const styles = {\n      active,\n      interactive,\n    };\n\n    return (\n      <div\n        className={cx('thumbnail-wrapper', styles)}\n        onClick={onClick}\n        onKeyPress={(e) => e.key === 'Enter' ? onClick() : null}\n        ref={node => this.setRef(node, index)}\n        tabIndex=\"0\"\n      >\n        <div className=\"thumbnail\">\n          {this.renderImage(item)}\n          <div className=\"thumbnail-index\">\n            {index + 1}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderThumbnails() {\n    const { thumbnails } = this.props;\n\n    return thumbnails.reduce((result, item, index) => {\n      if (!this.isFiltered(index)) {\n        result.push(this.renderThumbnail(item, index));\n      }\n\n      return result;\n    }, []);\n  }\n\n  renderClearButton() {\n    const { interactive } = this.props;\n    if (!interactive) return null;\n\n    const { search } = this.props;\n    if (isEmpty(search)) return null;\n\n    const {\n      handleSearch,\n      intl,\n    } = this.props;\n\n    return (\n      <div className=\"clear-button\">\n        <Button\n          aria={intl.formatMessage(intlMessages.clear)}\n          handleOnClick={() => handleSearch ? handleSearch([]) : null}\n          icon=\"close\"\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"thumbnails-wrapper\"\n        id={ID.THUMBNAILS}\n        tabIndex=\"0\"\n      >\n        {this.renderThumbnails()}\n        {this.renderClearButton()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Thumbnails from 'components/thumbnails';\nimport { search as config } from 'config';\nimport Button from 'components/utils/button';\nimport Modal from 'components/utils/modal';\nimport {\n  isEmpty,\n  isEqual,\n  search,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'player.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nexport default class Search extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      disabled: true,\n      search: [],\n    };\n  }\n\n  handleOnChange(event) {\n    if (!event || !event.target) return null;\n\n    const { value } = event.target;\n    if (value) {\n      const disabled = value.length < config.length.min;\n      if (!disabled) {\n        const { thumbnails } = this.props;\n        const result = search(value, thumbnails);\n\n        if (!isEqual(this.state.search, result, 'array')) {\n          this.setState({ search: result });\n        }\n      } else {\n        if (!isEmpty(this.state.search)) {\n          this.setState({ search: [] });\n        }\n      }\n\n      if (this.state.disabled !== disabled) {\n        this.setState({ disabled });\n      }\n    }\n  }\n\n  handleOnClick(event) {\n    const {\n      handleSearch,\n      toggleModal,\n    } = this.props;\n\n    const { search } = this.state;\n\n    handleSearch(search);\n    toggleModal();\n  }\n\n  renderBody() {\n    const {\n      intl,\n      metadata,\n      thumbnails,\n    } = this.props;\n\n    const { search } = this.state;\n\n    return (\n      <div className=\"search-body\">\n        <input\n          maxLength={config.length.max}\n          minLength={config.length.min}\n          onChange={(event) => this.handleOnChange(event)}\n          type=\"text\"\n        />\n        <div className={cx('result', { active: true })}>\n          <Thumbnails\n            currentDataIndex={0}\n            handleSearch={null}\n            interactive={false}\n            intl={intl}\n            metadata={metadata}\n            player={null}\n            search={search}\n            thumbnails={thumbnails}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderFooter() {\n    const { intl } = this.props;\n    const { disabled } = this.state;\n\n    return (\n      <div className=\"search-footer\">\n        <Button\n          aria={intl.formatMessage(intlMessages.search)}\n          disabled={disabled}\n          handleOnClick={(event) => this.handleOnClick(event)}\n          icon=\"search\"\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      toggleModal,\n    } = this.props;\n\n    return (\n      <Modal\n        intl={intl}\n        onClose={toggleModal}\n      >\n        {this.renderBody()}\n        {this.renderFooter()}\n      </Modal>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport videojs from 'video.js/core.es.js';\nimport {\n  ID,\n  buildFileURL,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.screenshare.wrapper.aria',\n    description: 'Aria label for the screenshare wrapper',\n  },\n});\n\nexport default class Screenshare extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      media,\n      metadata,\n    } = props;\n\n    const sources = [\n      {\n        src: buildFileURL(metadata.id, 'deskshare/deskshare.mp4'),\n        type: `video/mp4`,\n      }, {\n        src: buildFileURL(metadata.id, 'deskshare/deskshare.webm'),\n        type: `video/webm`,\n      },\n    ].filter(src => {\n      const { type } = src;\n\n      return media.find(m => type.includes(m));\n    });\n\n    this.options = {\n      controls: false,\n      fill: true,\n      sources,\n    };\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.node, this.options, () => {\n      const { onPlayerReady } = this.props;\n\n      if (onPlayerReady) onPlayerReady(ID.SCREENSHARE, this.player);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const {\n      active,\n      intl,\n    } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('screenshare-wrapper', { inactive: !active })}\n        id={ID.SCREENSHARE}\n      >\n        <div data-vjs-player>\n          <video\n            className=\"video-js\"\n            playsInline\n            preload=\"auto\"\n            ref={node => this.node = node}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport {\n  ID,\n  isEmpty,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.talkers.wrapper.aria',\n    description: 'Aria label for the talkers wrapper',\n  },\n});\n\nexport default class Talkers extends PureComponent {\n  renderTalkers(talkers) {\n    return (\n      <div className=\"talkers\">\n        {talkers.map(talker => {\n          const {\n            active,\n            initials,\n            name,\n          } = talker;\n\n          return (\n            <div\n              className={cx('talker', { inactive: !active })}>\n              <Avatar\n                initials={initials}\n                name={name}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      talkers,\n    } = this.props;\n\n    if (isEmpty(talkers)) return null;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"talkers-wrapper\"\n        id={ID.TALKERS}\n        tabIndex=\"0\"\n      >\n        {this.renderTalkers(talkers)}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport videojs from 'video.js/core.es.js';\nimport { video as config } from 'config';\nimport {\n  ID,\n  buildFileURL,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.video.wrapper.aria',\n    description: 'Aria label for the video wrapper',\n  },\n});\n\nexport default class Video extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      captions,\n      media,\n      metadata,\n    } = props;\n\n    const sources = [\n      {\n        src: buildFileURL(metadata.id, 'video/webcams.mp4'),\n        type: 'video/mp4',\n      }, {\n        src: buildFileURL(metadata.id, 'video/webcams.webm'),\n        type: 'video/webm',\n      },\n    ].filter(src => {\n      const { type } = src;\n\n      return media.find(m => type.includes(m));\n    });\n\n    const tracks = captions.map(lang => {\n      const {\n        locale,\n        localeName,\n      } = lang;\n\n      return {\n        kind: 'captions',\n        src: buildFileURL(metadata.id, `caption_${locale}.vtt`),\n        srclang: locale,\n        label: localeName,\n      };\n    });\n\n    this.options = {\n      controlBar: {\n        fullscreenToggle: false,\n        pictureInPictureToggle: false,\n        volumePanel: {\n          inline: false,\n          vertical: true,\n        },\n      },\n      controls: true,\n      fill: true,\n      inactivityTimeout: 0,\n      playbackRates: config.rates,\n      sources,\n      tracks,\n    };\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.node, this.options, () => {\n      const {\n        onPlayerReady,\n        onTimeUpdate,\n        time,\n      } = this.props;\n\n      if (onTimeUpdate) {\n        this.player.on('play', () => {\n          setInterval(() => {\n            const time = this.player.currentTime();\n            onTimeUpdate(time);\n          }, 1000 / config.rps);\n        });\n\n        this.player.on('pause', () => clearInterval());\n      }\n\n      if (time) {\n        this.player.on('loadedmetadata', () => {\n          const duration = this.player.duration();\n          if (time < duration) {\n            this.player.currentTime(time);\n          }\n        });\n      }\n\n      if (onPlayerReady) onPlayerReady(ID.VIDEO, this.player);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"video-wrapper\"\n        id={ID.VIDEO}\n      >\n        <div data-vjs-player>\n          <video\n            className=\"video-js\"\n            playsInline\n            preload=\"auto\"\n            ref={node => this.node = node}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './index.scss';\n\nexport default () => {\n  return <div className=\"bottom-bar\" />;\n}\n","import React, { PureComponent } from 'react';\nimport {\n  defineMessages,\n  FormattedDate,\n} from 'react-intl';\nimport cx from 'classnames';\nimport { controls as config } from 'config';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  about: {\n    id: 'button.about.aria',\n    description: 'Aria label for the about button',\n  },\n  section: {\n    id: 'button.section.aria',\n    description: 'Aria label for the section button',\n  },\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n  swap: {\n    id: 'button.swap.aria',\n    description: 'Aria label for the swap button',\n  },\n});\n\nexport default class TopBar extends PureComponent {\n  renderSearchButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      toggleSearch,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.search)}\n        circle\n        handleOnClick={toggleSearch}\n        icon=\"search\"\n      />\n    );\n  }\n\n  renderSectionButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      section,\n      toggleSection,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.section)}\n        circle\n        handleOnClick={toggleSection}\n        icon={section ? 'arrow-left' : 'arrow-right'}\n      />\n    );\n  }\n\n  renderSwapButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      toggleSwap,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.swap)}\n        circle\n        handleOnClick={toggleSwap}\n        icon=\"swap\"\n      />\n    );\n  }\n\n  renderTitle(interactive) {\n    const {\n      name,\n      start,\n    } = this.props;\n\n    const date = <FormattedDate value={new Date(start)} />;\n\n    if (interactive) {\n      const {\n        intl,\n        toggleAbout,\n      } = this.props;\n\n      return (\n        <span\n          aria={intl.formatMessage(intlMessages.about)}\n          className={cx('title', { interactive })}\n          onClick={toggleAbout}\n          onKeyPress={(e) => e.key === 'Enter' ? toggleAbout() : null}\n          tabIndex=\"0\"\n        >\n          {name} - {date}\n        </span>\n      );\n    }\n\n    return (\n      <span className=\"title\">\n        {name} - {date}\n      </span>\n    );\n  }\n\n  render() {\n    const {\n      control,\n      single,\n    } = this.props;\n\n    const {\n      about,\n      search,\n      section,\n      swap,\n    } = config;\n\n    return (\n      <div className=\"top-bar\">\n        <div className=\"left\">\n          {this.renderSectionButton(control && section)}\n        </div>\n        <div className=\"center\">\n          {this.renderTitle(control && about)}\n        </div>\n        <div className=\"right\">\n          {this.renderSearchButton(control && search && !single)}\n          {this.renderSwapButton(control && swap && !single)}\n        </div>\n      </div>\n    );\n  }\n}\n","import { parseStringPromise } from 'xml2js';\nimport { files as config } from 'config';\nimport {\n  getFileType,\n  hasProperty,\n  isEmpty,\n} from './data';\nimport logger from './logger';\n\nconst getAttr = data => {\n  if (!data) return {};\n\n  const attr = data['$'];\n  if (!attr) return {};\n\n  return attr;\n};\n\nconst getChildren = data => {\n  if (!data) return [];\n\n  const children = data['$$'];\n  if (!children) return [];\n\n  return children;\n};\n\nconst getId = data => {\n  if (!data) return -1;\n\n  const id = data.match(/\\d+$/);\n  if (!id || id.length === 0) return -1;\n\n  return parseInt(id.shift(), 10);\n};\n\nconst getNumbers = data => {\n  if (!data) return [];\n\n  const trimmed = data.trim().replace(/  +/g, ' ');\n  if (trimmed.length === 0) return [];\n\n  const split = trimmed.split(' ');\n  const numbers = split.map(v => parseFloat(v));\n\n  return numbers;\n};\n\nconst buildAlternates = result => {\n  if (!result) return [];\n\n  let data = [];\n  for (const presentation in result) {\n    if (hasProperty(result, presentation)) {\n      const slides = result[presentation];\n\n      for (const slide in slides) {\n        if (hasProperty(slides, slide)) {\n          const text = slides[slide];\n\n          data.push({\n            src: `presentation/${presentation}/${slide}.png`,\n            text,\n          });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\n// TODO\nconst buildCaptions = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\nconst buildMetadata = result => {\n  let data = {};\n  const { recording } = result;\n\n  if (hasProperty(recording, 'meeting')) {\n    const attr = getAttr(recording.meeting.shift());\n    const { id } = attr;\n    const meta = recording.meta.shift();\n    const end = parseInt(recording.end_time.shift(), 10);\n    const name = meta.name ? meta.name.shift() : attr.name;\n    const participants = parseInt(recording.participants.shift(), 10);\n    const start = parseInt(recording.start_time.shift(), 10);\n\n    data = {\n      end,\n      id,\n      name,\n      participants,\n      start,\n    };\n  }\n\n  return data;\n};\n\nconst buildNotes = result => {\n  if (!result) return '';\n\n  // Extract the notes' body\n  const regex = /<body>\\n.*\\n<\\/body>/g;\n  const match = result.match(regex);\n\n  let data = '';\n  if (!isEmpty(match)) {\n    data = match.shift();\n  }\n\n  return data;\n};\n\nconst buildStyle = data => {\n  const items = data.split(';');\n  let style = {};\n\n  items.forEach(item => {\n    const trimmed = item.trim();\n\n    if (trimmed.length === 0) return;\n\n    const split = trimmed.split(':').map(i => i.trim());\n\n    // Remove visibility\n    if (split[0] === 'visibility') return;\n\n    style[split[0]] = split[1];\n  });\n\n  return style;\n};\n\nconst buildSlides = image => {\n  let slides = [];\n\n  if (image) {\n    image.forEach(img => {\n      const attr = getAttr(img);\n      const src = attr['xlink:href'];\n\n      // Skip the logo\n      if (!src) return;\n\n      // Get the number from the id name\n      const slideId = getId(attr.id);\n      const timestamps = getNumbers(attr.in);\n\n      timestamps.forEach(timestamp => {\n        slides.push({\n          id: slideId,\n          height: parseInt(attr.height),\n          src,\n          timestamp,\n          width: parseInt(attr.width),\n        });\n      });\n    });\n\n    slides = slides.sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  return slides;\n};\n\nconst buildTalkers = result => {\n  const data = [];\n\n  return data;\n};\n\nconst buildThumbnails = slides => {\n  const screenshare = 'deskshare';\n  const prefix = 'slide-';\n  const url = 'thumbnails/thumb-';\n\n  return slides.reduce((result, slide) => {\n    const {\n      id,\n      src,\n      timestamp,\n    } = slide;\n\n    if (src.includes(screenshare)) {\n      result.push({\n        id,\n        src: screenshare,\n        timestamp,\n      });\n    } else {\n      result.push({\n        id,\n        src: src.replace(prefix, url),\n        timestamp,\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nconst parseText = data => {\n  let text = '';\n\n  const children = getChildren(data);\n  if (!isEmpty(children)) {\n    const child = children.shift();\n    const grandchildren = getChildren(child);\n    if (!isEmpty(grandchildren)) {\n      text = grandchildren.map(grandchild => {\n        const name = grandchild['#name'];\n        if (name === 'br') return '\\r';\n\n        return grandchild['_'];\n      }).join('');\n    }\n  }\n\n  return text;\n};\n\nconst buildCanvases = group => {\n  let canvases = [];\n\n  if (group) {\n    canvases = group.map(canvas => {\n      const canvasAttr = getAttr(canvas);\n      // Get the number from the id name\n      const canvasId = getId(canvasAttr.id);\n\n      let draws = canvas.g.map(g => {\n        const drawAttr = getAttr(g);\n        const timestamp = parseFloat(drawAttr.timestamp);\n        const clear = parseFloat(drawAttr.undo);\n        const style = buildStyle(drawAttr.style);\n        const drawId = getId(drawAttr.shape);\n\n        let shape = {};\n        if (g.rect && g.image) {\n          shape.type = 'poll';\n          const rect = getAttr(g.rect.shift());\n          const image = getAttr(g.image.shift());\n          shape.data = Object.assign({ rect }, { image });\n        } else if (g.polyline) {\n          shape.type = 'polyline';\n          shape.data = Object.assign({}, getAttr(g.polyline.shift()));\n        } else if (g.line) {\n          shape.type = 'line';\n          shape.data = Object.assign({}, getAttr(g.line.shift()));\n        } else if (g.polygon) {\n          shape.type = 'polygon';\n          shape.data = Object.assign({}, getAttr(g.polygon.shift()));\n        } else if (g.circle) {\n          shape.type = 'circle';\n          shape.data = Object.assign({}, getAttr(g.circle.shift()));\n        } else if (g.path) {\n          shape.type = 'path';\n          shape.data = Object.assign({}, getAttr(g.path.shift()));\n        } else if (g.switch) {\n          shape.type = 'text';\n          const foreignObject = g.switch.shift()['foreignObject'].shift();\n          const text = parseText(foreignObject);\n          shape.data = Object.assign({ text }, getAttr(foreignObject));\n        }\n\n        return {\n          clear,\n          id: drawId,\n          shape,\n          style,\n          timestamp,\n        };\n      });\n\n      return {\n        draws,\n        id: canvasId,\n      };\n    });\n  }\n\n  return canvases;\n};\n\nconst buildShapes = result => {\n  let data = {};\n  const { svg } = result;\n\n  if (svg) {\n    const {\n      image,\n      g,\n    } = svg;\n\n    data.slides = buildSlides(image);\n    data.thumbnails = buildThumbnails(data.slides);\n    data.canvases = buildCanvases(g);\n  }\n\n  return data;\n};\n\nconst buildPanzooms = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(panzoom => {\n      const attr = getAttr(panzoom);\n      const viewbox = getNumbers(panzoom.viewBox.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: viewbox.shift(),\n        y: viewbox.shift(),\n        width: viewbox.shift(),\n        height: viewbox.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildCursor = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(cursor => {\n      const attr = getAttr(cursor);\n      const position = getNumbers(cursor.cursor.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: position.shift(),\n        y: position.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst clearHyperlink = message => {\n  const regex = /<a href=\"(.*)\" rel=\"nofollow\"><u>\\1<\\/u><\\/a>/g;\n\n  return message.replace(regex, '$1');\n};\n\nconst decodeXML = message => {\n  return message\n    .replace(/&(quot|#34);/g, '\"')\n    .replace(/&(amp|#38);/g, '&')\n    .replace(/&(apos|#39);/g, \"'\")\n    .replace(/&(lt|#60);/g, '<')\n    .replace(/&(gt|#62);/g, '>');\n};\n\nconst getInitials = name => {\n  let initials;\n\n  if (name) {\n    initials = name\n      .slice(0, 2)\n      .toLowerCase()\n      .trim();\n  }\n\n  return initials;\n};\n\nconst buildChat = result => {\n  const { popcorn } = result;\n  let data = [];\n\n  if (hasProperty(popcorn, 'chattimeline')) {\n    const { chattimeline } = popcorn;\n    data = chattimeline.map(chat => {\n      const attr = getAttr(chat);\n      const clear = attr.out ? parseFloat(attr.out) : -1;\n      const message = decodeXML(clearHyperlink(attr.message));\n      const initials = getInitials(attr.name);\n\n      return {\n        clear,\n        hyperlink: message !== attr.message,\n        initials,\n        name: attr.name,\n        message,\n        timestamp: parseFloat(attr.in),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildScreenshare = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(screenshare => {\n      const attr = getAttr(screenshare);\n\n      return {\n        timestamp: parseFloat(attr.start_timestamp),\n        clear: parseFloat(attr.stop_timestamp),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst getOptions = filename => {\n  let options = {};\n\n  switch (filename) {\n    case config.data.shapes:\n      options = {\n        explicitChildren: true,\n        preserveChildrenOrder: true,\n        charsAsChildren: true,\n      };\n      break;\n    default:\n  }\n\n  return options;\n};\n\nconst build = (filename, value) => {\n  return new Promise((resolve, reject) => {\n    let data;\n    const fileType = getFileType(filename);\n\n    if (fileType === 'json') {\n      switch (filename) {\n        case config.data.alternates:\n          data = buildAlternates(value);\n          break;\n        case config.data.captions:\n          data = buildCaptions(value);\n          break;\n        case config.data.talkers:\n          data = buildTalkers(value);\n          break;\n        default:\n          logger.debug('unhandled', 'json', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else if (fileType === 'html') {\n      switch (filename) {\n        case config.data.notes:\n          data = buildNotes(value);\n          break;\n        default:\n          logger.debug('unhandled', 'html', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else {\n      if (!value) {\n        logger.warn('missing', filename);\n\n        return resolve(null);\n      }\n\n      // Parse XML data\n      const options = getOptions(filename);\n      parseStringPromise(value, options).then(result => {\n        switch (filename) {\n          case config.data.chat:\n            data = buildChat(result);\n            break;\n          case config.data.cursor:\n            data = buildCursor(result);\n            break;\n          case config.data.metadata:\n            data = buildMetadata(result);\n            break;\n          case config.data.panzooms:\n            data = buildPanzooms(result);\n            break;\n          case config.data.screenshare:\n            data = buildScreenshare(result);\n            break;\n          case config.data.shapes:\n            data = buildShapes(result);\n            break;\n          default:\n            logger.debug('unhandled', 'xml', filename);\n            reject(filename);\n        }\n        resolve(data);\n      }).catch(error => reject(error));\n    }\n  });\n};\n\nconst addAlternatesToThumbnails = (thumbnails, alternates) => {\n  const prefix = 'thumbnails/thumb-';\n  const url = 'slide-';\n\n  return thumbnails.map(thumbnail => {\n    const { src } = thumbnail;\n    thumbnail.alt = '';\n\n    const found = alternates.find(alt => src.replace(prefix, url) === alt.src);\n    if (found) thumbnail.alt = found.text;\n\n    return thumbnail;\n  });\n};\n\nexport {\n  addAlternatesToThumbnails,\n  build,\n  buildStyle,\n  decodeXML,\n  getAttr,\n  getId,\n  getNumbers,\n};\n","import { controls } from 'config';\nimport {\n  getContentFromData,\n  getControlFromLayout,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  isContentVisible,\n} from 'utils/data';\n\nexport default class Layout {\n  constructor(data, layout) {\n    this.content = getContentFromData(data);\n    this.layout = layout;\n  }\n\n  getContent() {\n    return this.content;\n  }\n\n  initControl() {\n    return getControlFromLayout(this.layout);\n  }\n\n  initSection() {\n    return getSectionFromLayout(this.layout);\n  }\n\n  initSwap() {\n    return getSwapFromLayout(this.layout);\n  }\n\n  getBottomContentStyle(state) {\n    const {\n      fullscreen,\n      thumbnails,\n    } = state;\n\n    const bottom = thumbnails && !fullscreen;\n    const style = { 'inactive': !bottom };\n\n    return style;\n  }\n\n  getContentStyle(state) {\n    const { swap } = state;\n    const style = { 'swapped-content': swap };\n\n    return style;\n  }\n\n  getMediaStyle(state) {\n    const { swap } = state;\n    const single = this.isSingle();\n    const style = { 'swapped-media': swap || single };\n\n    return style;\n  }\n\n  getPlayerStyle(state) {\n    const {\n      fullscreen,\n      section,\n    } = state;\n\n    const single = this.isSingle();\n\n    const style = {\n      'fullscreen-content': fullscreen,\n      'hidden-section': !section,\n      'single-content': single,\n    };\n\n    return style;\n  }\n\n  hasFullscreenButton(layout, state) {\n    const {\n      control,\n      swap,\n    } = state;\n\n    if (!control || !controls.fullscreen) return false;\n\n    const single = this.isSingle();\n    if (!isContentVisible(layout, swap || single)) return false;\n\n    return true;\n  }\n\n  hasScreenshare() {\n    const { screenshare } = this.content;\n\n    return screenshare;\n  }\n\n  hasTalkers(layout, state) {\n    const { swap } = state;\n    const single = this.isSingle();\n\n    if (!isContentVisible(layout, swap || single)) return false;\n\n    return true;\n  }\n\n  isSingle() {\n    const {\n      presentation,\n      screenshare,\n    } = this.content;\n\n    return !presentation && !screenshare;\n  }\n}\n","import { monitor as config } from 'config';\nimport logger from './logger';\n\nexport default class Monitor {\n  constructor(id) {\n    this.enabled = config.enabled;\n    this.id = id;\n    this.interval = config.interval * 1000;\n    this.url = config.url;\n  }\n\n  buildBody(message) {\n    return JSON.stringify(\n      Object.assign(\n        { id: this.id },\n        message,\n      )\n    );\n  }\n\n  collect(request) {\n    if (!this.enabled) return null;\n\n    setInterval(() => {\n      const message = request();\n      logger.debug('monitor', message);\n      this.send(message);\n    }, this.interval);\n  }\n\n  send(message) {\n    fetch(this.url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: this.buildBody(message),\n    });\n  }\n}\n","import { shortcuts as config } from 'config';\nimport logger from './logger';\n\nexport default class Shortcuts {\n  constructor(actions) {\n    this.enabled = config.enabled;\n\n    if (!this.enabled) {\n      logger.debug('shortcuts', 'disabled');\n    } else {\n      this.init(actions);\n    }\n  }\n\n  init(actions) {\n    this.listeners = [];\n\n    for (let prop in actions) {\n      const value = actions[prop];\n      if (typeof value === 'function') {\n        const key = config[prop];\n        this.add(key, value);\n      } else {\n        for (let p in value) {\n          const k = config[prop][p];\n          const v = value[p];\n          this.add(k, v);\n        }\n      }\n    }\n  }\n\n  add(key, action) {\n    if (!key || typeof key !== 'string') {\n      logger.warn('shortcuts', 'invalid', 'key');\n      return null;\n    } else if (key.length === 0) {\n      return null;\n    }\n\n    if (!action || typeof action !== 'function') {\n      logger.warn('shortcuts', 'invalid', 'action');\n      return null;\n    }\n\n    const listener = document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.shiftKey) {\n        if (e.key === key) action();\n      }\n    });\n\n    this.listeners.push(listener);\n  }\n\n  destroy() {\n    this.listeners.forEach(listener => {\n      document.removeEventListener(listener);\n    });\n  }\n}\n","import logger from './logger';\n\nconst STATUSES = [\n  'canplay',\n  'seeking',\n  'waiting',\n];\n\nconst EVENTS = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'interruptbegin',\n  'interruptend',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'mozaudioavailable',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  //'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\nexport default class Synchronizer {\n  constructor(primary, secondary) {\n    this.primary = primary;\n    this.secondary = secondary;\n\n    this.status = {\n      primary: 'waiting',\n      secondary: 'waiting',\n    }\n\n    this.synching = false;\n\n    this.init();\n  }\n\n  init() {\n    STATUSES.forEach(status => {\n      this.primary.on(status, () => this.status.primary = status);\n      this.secondary.on(status, () => this.status.secondary = status);\n    });\n\n    this.primary.on('play', () => this.secondary.play());\n    this.primary.on('pause', () => this.secondary.pause());\n\n    this.primary.on('seeking', () => {\n      const currentTime = this.primary.currentTime();\n      this.secondary.currentTime(currentTime);\n    });\n\n    this.primary.on('ratechange', () => {\n      const playbackRate = this.primary.playbackRate();\n      this.secondary.playbackRate(playbackRate);\n    });\n\n    this.primary.on('waiting', () => {\n      if (!this.synching && this.status.secondary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.primary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    this.secondary.on('waiting', () => {\n      if (!this.synching && this.status.primary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.secondary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    EVENTS.forEach(event => {\n      this.primary.on(event, () => logger.debug(`primary ${event} ${this.status.primary}`));\n      this.secondary.on(event, () => logger.debug(`secondary ${event} ${this.status.secondary}`));\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { shortcuts } from 'config';\nimport About from './about';\nimport Chat from './chat';\nimport Notes from './notes';\nimport Presentation from './presentation';\nimport Search from './search';\nimport Screenshare from './screenshare';\nimport Talkers from './talkers';\nimport Thumbnails from './thumbnails';\nimport Video from './video';\nimport BottomBar from './bars/bottom';\nimport TopBar from './bars/top';\nimport Button from './utils/button';\nimport { addAlternatesToThumbnails } from 'utils/builder';\nimport {\n  ID,\n  LAYOUT,\n  getActiveContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  isEqual,\n  seek,\n  skip,\n} from 'utils/data';\nimport Layout from 'utils/layout';\nimport logger from 'utils/logger';\nimport Monitor from 'utils/monitor';\nimport Shortcuts from 'utils/shortcuts';\nimport Synchronizer from 'utils/synchronizer';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.wrapper.aria',\n    description: 'Aria label for the player wrapper',\n  },\n  fullscreen: {\n    id: 'button.fullscreen.aria',\n    description: 'Aria label for the fullscreen button',\n  },\n  restore: {\n    id: 'button.restore.aria',\n    description: 'Aria label for the restore button',\n  },\n});\n\nexport default class Player extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      data,\n      layout,\n    } = props;\n\n    this.layout = new Layout(data, layout);\n\n    this.state = {\n      application: ID.CHAT,\n      control: this.layout.initControl(),\n      fullscreen: false,\n      modal: '',\n      search: [],\n      section: this.layout.initSection(),\n      swap: this.layout.initSwap(),\n      thumbnails: true,\n      time: 0,\n    }\n\n    this.player = {\n      video: null,\n      screenshare: null,\n    };\n\n    this.initData(data);\n\n    this.handlePlayerReady = this.handlePlayerReady.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.initMonitor();\n    this.initShortcuts();\n  }\n\n  componentWillUnmount() {\n    if (this.shortcuts) {\n      this.shortcuts.destroy();\n    }\n  }\n\n  initData(data) {\n    this.alternates = getData(data, ID.ALTERNATES);\n    this.captions = getData(data, ID.CAPTIONS);\n    this.chat = getData(data, ID.CHAT);\n    this.cursor = getData(data, ID.CURSOR);\n    this.metadata = getData(data, ID.METADATA);\n    this.notes = getData(data, ID.NOTES);\n    this.panzooms = getData(data, ID.PANZOOMS);\n    this.screenshare = getData(data, ID.SCREENSHARE);\n    this.shapes = getData(data, ID.SHAPES);\n    this.talkers = getData(data, ID.TALKERS);\n\n    this.canvases = this.shapes.canvases;\n    this.slides = this.shapes.slides;\n    this.thumbnails = addAlternatesToThumbnails(this.shapes.thumbnails, this.alternates);\n\n    logger.debug(ID.PLAYER, data);\n  }\n\n  handlePlayerReady(media, player) {\n    switch (media) {\n      case ID.VIDEO:\n        logger.debug(ID.PLAYER, 'ready', ID.VIDEO);\n        this.player.video = player;\n        break;\n      case ID.SCREENSHARE:\n        logger.debug(ID.PLAYER, 'ready', ID.SCREENSHARE);\n        this.player.screenshare = player;\n        break;\n      default:\n        logger.debug('unhandled', media);\n    }\n\n    if (this.player.video && this.player.screenshare) {\n      this.synchronizer = new Synchronizer(this.player.video, this.player.screenshare);\n    }\n  }\n\n  handleSearch(value) {\n    const { search } = this.state;\n\n    if (!isEqual(search, value, 'array')) {\n      this.setState({ search: value });\n    }\n  }\n\n  handleTimeUpdate(value) {\n    const { time } = this.state;\n\n    if (time !== value) {\n      this.setState({ time: value });\n    }\n  }\n\n  initMonitor() {\n    this.monitor = new Monitor(this.metadata.id);\n    this.monitor.collect(() => {\n      const { video } = this.player;\n      if (!video) return {};\n\n      const time = video.currentTime();\n      return { time };\n    });\n  }\n\n  initShortcuts() {\n    const { seconds } = shortcuts.video;\n\n    const actions = {\n      fullscreen: () => this.toggleFullscreen(),\n      section: () => this.toggleSection(),\n      swap: () => this.toggleSwap(),\n      thumbnails: () => this.toggleThumbnails(),\n      slides: {\n        next: () => skip(this.player, this.slides, +1),\n        previous: () => skip(this.player, this.slides, -1),\n      },\n      video: {\n        backward: () => seek(this.player, -seconds),\n        forward: () => seek(this.player, +seconds),\n      },\n    };\n\n    this.shortcuts = new Shortcuts(actions);\n  }\n\n  toggleApplication(type) {\n    const { application } = this.state;\n\n    if (application === type) return null;\n\n    this.setState({ application: type });\n  }\n\n  toggleFullscreen() {\n    const { fullscreen } = this.state;\n\n    this.setState({ fullscreen: !fullscreen });\n  }\n\n  toggleModal(type) {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    this.setState({ modal: open ? '' : type });\n  }\n\n  toggleSection() {\n    const { section } = this.state;\n\n    this.setState({ section: !section });\n  }\n\n  toggleSwap() {\n    const { swap } = this.state;\n\n    this.setState({ swap: !swap });\n  }\n\n  toggleThumbnails() {\n    const { thumbnails } = this.state;\n\n    this.setState({ thumbnails: !thumbnails });\n  }\n\n  renderFullscreenButton(layout) {\n    if (!this.layout.hasFullscreenButton(layout, this.state)) return null;\n\n    const { intl } = this.props;\n    const { fullscreen } = this.state;\n\n    const aria = fullscreen\n      ? intl.formatMessage(intlMessages.restore)\n      : intl.formatMessage(intlMessages.fullscreen)\n    ;\n\n    const icon = fullscreen ? 'restore' : 'fullscreen';\n\n    return (\n      <div className=\"fullscreen-button\">\n        <Button\n          aria={aria}\n          handleOnClick={() => this.toggleFullscreen()}\n          icon={icon}\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  renderModal() {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    if (!open) return null;\n\n    const { intl } = this.props;\n    const content = this.layout.getContent();\n\n    switch (modal) {\n      case ID.ABOUT:\n        return (\n          <About\n            content={content}\n            intl={intl}\n            metadata={this.metadata}\n            toggleModal={() => this.toggleModal(ID.ABOUT)}\n          />\n        );\n      case ID.SEARCH:\n        return (\n          <Search\n            intl={intl}\n            handleSearch={this.handleSearch}\n            metadata={this.metadata}\n            thumbnails={this.thumbnails}\n            toggleModal={() => this.toggleModal(ID.SEARCH)}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderTalkers(layout) {\n    const { intl } = this.props;\n\n    if (!this.layout.hasTalkers(layout, this.state)) return null;\n\n    return (\n      <Talkers\n        intl={intl}\n        talkers={this.talkers}\n      />\n    );\n  }\n\n  renderThumbnails() {\n    const { intl } = this.props;\n\n    const {\n      search,\n      time,\n    } = this.state;\n\n    const { video } = this.player;\n\n    const currentDataIndex = getCurrentDataIndex(this.thumbnails, time);\n\n    return (\n      <Thumbnails\n        currentDataIndex={currentDataIndex}\n        handleSearch={this.handleSearch}\n        interactive={true}\n        intl={intl}\n        metadata={this.metadata}\n        player={video}\n        search={search}\n        thumbnails={this.thumbnails}\n      />\n    );\n  }\n\n  renderTopBar() {\n    const { intl } = this.props;\n\n    const {\n      control,\n      section,\n    } = this.state;\n\n    const {\n      name,\n      start,\n    } = this.metadata;\n\n    const single = this.layout.isSingle();\n\n    return (\n      <TopBar\n        control={control}\n        intl={intl}\n        name={name}\n        section={section}\n        single={single}\n        start={start}\n        toggleAbout={() => this.toggleModal(ID.ABOUT)}\n        toggleSearch={() => this.toggleModal(ID.SEARCH)}\n        toggleSection={() => this.toggleSection()}\n        toggleSwap={() => this.toggleSwap()}\n      />\n    );\n  }\n\n  renderMedia() {\n    const {\n      data,\n      intl,\n      time,\n    } = this.props;\n\n    const { media } = data;\n\n    return (\n      <div className={cx('media', this.layout.getMediaStyle(this.state))}>\n        {this.renderTalkers(LAYOUT.MEDIA)}\n        {this.renderFullscreenButton(LAYOUT.MEDIA)}\n        <Video\n          captions={this.captions}\n          intl={intl}\n          media={media}\n          metadata={this.metadata}\n          onPlayerReady={this.handlePlayerReady}\n          onTimeUpdate={this.handleTimeUpdate}\n          time={time}\n        />\n      </div>\n    );\n  }\n\n  renderApplicationIcon(type) {\n    const { application } = this.state;\n    const active = application === type;\n\n    return (\n      <div\n        className={cx('application-icon', { inactive: !active })}\n        onClick={() => active ? null : this.toggleApplication(type)}\n      >\n        <span className={`icon-${type}`} />\n      </div>\n    );\n  }\n\n  renderApplicationContent() {\n    const { intl } = this.props;\n    const { application } = this.state;\n\n    switch (application) {\n      case ID.CHAT:\n        const { time } = this.state;\n        const { video } = this.player;\n        const currentChatIndex = getCurrentDataIndex(this.chat, time);\n\n        return (\n          <Chat\n            chat={this.chat}\n            currentDataIndex={currentChatIndex}\n            intl={intl}\n            player={video}\n          />\n        );\n      case ID.NOTES:\n        return (\n          <Notes\n            notes={this.notes}\n            intl={intl}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderApplication() {\n    return (\n      <div className=\"application\">\n        <div className=\"application-control\">\n          {this.renderApplicationIcon(ID.CHAT)}\n          {this.renderApplicationIcon(ID.NOTES)}\n        </div>\n        {this.renderApplicationContent()}\n      </div>\n    );\n  }\n\n  renderPresentation(active) {\n    const { intl } = this.props;\n    const { time } = this.state;\n\n    const currentSlideIndex = getCurrentDataIndex(this.slides, time);\n    const currentPanzoomIndex = getCurrentDataIndex(this.panzooms, time);\n    const currentCursorIndex = getCurrentDataIndex(this.cursor, time);\n    const draws = getDraws(currentSlideIndex, this.slides, this.canvases);\n    const currentDrawsInterval = getCurrentDataInterval(draws, time);\n\n    return (\n      <Presentation\n        active={active}\n        currentCursorIndex={currentCursorIndex}\n        currentPanzoomIndex={currentPanzoomIndex}\n        currentSlideIndex={currentSlideIndex}\n        cursor={this.cursor}\n        draws={draws}\n        drawsInterval={currentDrawsInterval}\n        intl={intl}\n        metadata={this.metadata}\n        panzooms={this.panzooms}\n        slides={this.slides}\n        thumbnails={this.thumbnails}\n      />\n    )\n  }\n\n  renderScreenshare(active) {\n    if (!this.layout.hasScreenshare()) return null;\n\n    const {\n      intl,\n      data,\n    } = this.props;\n\n    const { media } = data;\n\n    return (\n      <Screenshare\n        active={active}\n        intl={intl}\n        media={media}\n        metadata={this.metadata}\n        onPlayerReady={this.handlePlayerReady}\n      />\n    );\n  }\n\n  renderContent() {\n    if (this.layout.isSingle()) return null;\n\n    const { time } = this.state;\n    const content = getActiveContent(this.screenshare, time);\n\n    return (\n      <div className={cx('content', this.layout.getContentStyle(this.state))}>\n        {this.renderTalkers(LAYOUT.CONTENT)}\n        {this.renderFullscreenButton(LAYOUT.CONTENT)}\n        <div className=\"top-content\">\n          {this.renderPresentation(content === ID.PRESENTATION)}\n          {this.renderScreenshare(content === ID.SCREENSHARE)}\n        </div>\n        <div className={cx('bottom-content', this.layout.getBottomContentStyle(this.state))}>\n          {this.renderThumbnails()}\n        </div>\n      </div>\n    );\n  }\n\n  renderBottomBar() {\n    return <BottomBar />;\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('player-wrapper', this.layout.getPlayerStyle(this.state))}\n        id={ID.PLAYER}\n      >\n        {this.renderTopBar()}\n        {this.renderMedia()}\n        {this.renderApplication()}\n        {this.renderContent()}\n        {this.renderBottomBar()}\n        {this.renderModal()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  defineMessages,\n  injectIntl,\n} from 'react-intl';\nimport config from 'config';\nimport Error from './error';\nimport Player from './player';\nimport { build } from 'utils/builder';\nimport {\n  ID,\n  buildFileURL,\n  getFileName,\n  getFileType,\n  getLayout,\n  getRecordId,\n  getTime,\n} from 'utils/data';\nimport logger from 'utils/logger';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'loader.wrapper.aria',\n    description: 'Aria label for the loader wrapper',\n  },\n});\n\nclass Loader extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      location,\n      match,\n    } = props;\n\n    this.counter = 0;\n    this.data = {};\n    this.layout = getLayout(location);\n    this.recordId = getRecordId(match);\n    this.time = getTime(location);\n\n    this.state = {\n      error: this.recordId ? null : config.error['NOT_FOUND'],\n      loaded: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.recordId) return;\n\n    const { data } = config.files;\n\n    for (const file in data) {\n      this.fetchFile(this.recordId, data[file]);\n    }\n\n    this.fetchMedia();\n  }\n\n  fetchFile(recordId, file) {\n    const url = buildFileURL(recordId, file);\n    fetch(url).then(response => {\n      if (response.ok) {\n        logger.debug(ID.LOADER, file, response);\n        const fileType = getFileType(file);\n        switch (fileType) {\n          case 'json':\n            return response.json();\n          case 'html':\n            return response.text();\n          case 'svg':\n            return response.text();\n          case 'xml':\n            return response.text();\n          default:\n            this.setState({ error: config.error['BAD_REQUEST'] });\n            throw Error(file);\n        }\n      } else {\n        logger.warn('loader', file, response);\n        return null;\n      }\n    }).then(value => {\n      build(file, value).then(data => {\n        if (data) logger.debug(ID.LOADER, 'builded', file);\n        this.data[getFileName(file)] = data;\n        this.update();\n      }).catch(error => this.setState({ error: config.error['BAD_REQUEST'] }));\n    }).catch(error => this.setState({ error: config.error['NOT_FOUND'] }));\n  }\n\n  fetchMedia() {\n    const fetches = config.medias.map(type => {\n      const url = buildFileURL(this.recordId, `video/webcams.${type}`);\n      return fetch(url, { method: 'HEAD' });\n    });\n\n    Promise.all(fetches).then(responses => {\n      const media = [];\n      responses.forEach(response => {\n        const { ok, url } = response;\n        if (ok) {\n          logger.debug(ID.LOADER, 'media', response);\n          media.push(config.medias.find(type => url.endsWith(type)));\n        }\n      });\n\n      if (media.length > 0) {\n        this.data.media = media;\n        this.update();\n      } else {\n        // TODO: Handle audio medias\n        this.setState({ error: config.error['NOT_FOUND'] });\n      }\n    });\n  }\n\n  update() {\n    this.counter = this.counter + 1;\n    // TODO: Better control\n    if (this.counter > Object.keys(config.files.data).length) {\n      const { loaded } = this.state;\n      if (!loaded) this.setState({ loaded: true });\n    }\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    const {\n      error,\n      loaded,\n    } = this.state;\n\n    if (error) {\n      return (\n        <Error\n          code={error}\n          intl={intl}\n        />\n      );\n    }\n\n    if (loaded) {\n      return (\n        <Player\n          data={this.data}\n          intl={intl}\n          layout={this.layout}\n          time={this.time}\n        />\n      );\n    }\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"loader-wrapper\"\n        id={ID.LOADER}\n      >\n        <div className=\"loading-dots\">\n          <div className=\"first\" />\n          <div className=\"second\" />\n          <div className=\"third\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Loader);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { error } from 'config';\nimport Error from 'components/error';\nimport Loader from './loader';\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route\n          path=\"/:recordId\"\n          component={Loader}\n        />\n        <Route render={(props) => <Error {...props} code={error['NOT_FOUND']} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import ar from './ar.json';\nimport de from './de.json';\nimport en from './en.json';\nimport es from './es.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport ja from './ja.json';\nimport pt from './pt.json';\nimport ru from './ru.json';\nimport tr from './tr.json';\n\nexport default {\n  ar,\n  de,\n  en,\n  es,\n  fr,\n  it,\n  ja,\n  pt,\n  ru,\n  tr,\n};\n","import messages from './messages';\n\nconst DEFAULT_LOCALE = 'en';\n\nconst RTL_LOCALES = ['ar'];\n\nconst setDirection = (locale) => {\n  if (RTL_LOCALES.includes(locale)) {\n    document.body.parentNode.setAttribute('dir', 'rtl');\n  } else {\n    document.body.parentNode.setAttribute('dir', 'ltr');\n  }\n};\n\nconst getLocale = () => {\n  const locale = navigator.language.split(/[-_]/)[0];\n\n  setDirection(locale);\n\n  if (!messages[locale]) return DEFAULT_LOCALE;\n\n  return locale;\n};\n\nconst getMessages = () => {\n  return messages;\n};\n\nexport {\n  getLocale,\n  getMessages,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from \"react-intl\";\nimport Loader from 'components/loader';\nimport Router from 'components/router';\nimport {\n  getLocale,\n  getMessages,\n} from 'locales';\nimport {\n  ROUTER,\n  getStyle,\n} from 'utils/data';\nimport './index.scss';\n\nconst locale = getLocale();\nconst messages = getMessages();\nconst style = getStyle();\n\nReactDOM.render(\n  (\n    <IntlProvider\n      locale={locale}\n      messages={messages[locale]}\n    >\n      {style ? <link rel=\"stylesheet\" type=\"text/css\" href={style} /> : null}\n      {ROUTER ? <Router /> : <Loader />}\n    </IntlProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}