{"version":3,"sources":["components/loader/data/item.js","utils/constants.js","components/loader/data/index.js","components/loader/dots.js","components/error/index.js","config.js","components/chat/messages/user/text.js","utils/logger.js","utils/data/validators.js","utils/builder.js","utils/data/storage.js","utils/hash.js","utils/params.js","utils/data/index.js","components/chat/messages/info.js","components/utils/icon/index.js","components/utils/avatar/index.js","utils/data/handlers.js","components/chat/messages/margin.js","utils/synchronizer.js","utils/player.js","components/chat/messages/message.js","components/chat/messages/user/index.js","components/chat/messages/system/poll/options.js","components/chat/messages/system/poll/question.js","components/chat/messages/system/poll/result.js","components/chat/messages/system/message.js","components/chat/messages/system/poll/index.js","components/chat/messages/system/video/url.js","components/chat/messages/system/video/index.js","components/chat/messages/index.js","components/utils/hooks/index.js","components/chat/index.js","components/notes/index.js","components/player/application/content.js","utils/layout.js","components/player/application/control.js","components/player/application/index.js","components/presentation/cursor.js","components/presentation/slide/proxy.js","components/presentation/slide/index.js","components/presentation/canvas/poll.js","components/presentation/canvas/index.js","components/presentation/index.js","components/screenshare/index.js","components/thumbnails/image.js","components/thumbnails/thumbnail.js","components/thumbnails/item.js","components/utils/button/index.js","components/thumbnails/buttons/clear.js","components/thumbnails/index.js","components/player/buttons/fullscreen.js","components/player/content/index.js","components/webcams/index.js","components/player/media/index.js","components/modals/about/body/data/item.js","components/modals/about/body/data/index.js","components/modals/about/body/shortcuts/key.js","components/modals/about/body/shortcuts/index.js","components/modals/about/body/index.js","components/modals/about/footer.js","components/modals/about/header.js","components/utils/modal/index.js","components/modals/about/index.js","components/modals/search/body.js","components/modals/search/footer.js","components/modals/search/header.js","utils/actions.js","components/modals/search/index.js","components/player/modal/index.js","components/bars/bottom.js","components/bars/top/title.js","components/bars/top/buttons/search.js","components/bars/top/buttons/section.js","components/bars/top/buttons/swap.js","components/bars/top/buttons/theme.js","components/bars/top/index.js","utils/shortcuts.js","components/player/index.js","components/loader/index.js","components/router.js","locales/messages/index.js","locales/index.js","index.js"],"names":["Item","icon","value","className","cx","loaded","style","transition","defaultProps","BUILD","process","MEDIA_ROOT_URL","REACT_APP_MEDIA_ROOT_URL","NO_ROUTER","REACT_APP_NO_ROUTER","ERROR","EVENTS","TIME_UPDATE","ID","CONTENT","LAYOUT","NUMBERS","POSITIONS","ROLES","SHAPES","THEME","ROUTER","Data","data","map","item","Dots","areEqual","React","memo","intlMessages","defineMessages","aria","id","description","Error","code","intl","useIntl","formatMessage","chat","controls","date","files","alternates","captions","cursor","metadata","notes","panzooms","polls","screenshare","shapes","videos","locale","default","medias","player","rps","rates","search","min","max","shortcuts","enabled","fullscreen","play","section","seek","backward","forward","seconds","skip","next","previous","swap","styles","thumbnails","Text","active","hyperlink","text","options","inactive","target","params","URLSearchParams","window","location","debug","has","logger","info","console","warn","error","hasPresentation","slides","isEmpty","i","length","src","includes","hasProperty","object","property","hasOwnProperty","isActive","time","timestamp","clear","cleared","wasCleared","visible","isVisible","isCurrent","index","hasIndex","current","isArray","isValid","isString","isEqual","first","second","type","equal","every","valid","Array","getAttr","attr","getChildren","children","getId","match","parseInt","shift","getNumbers","trimmed","trim","replace","split","v","parseFloat","buildCanvases","group","canvases","canvas","canvasAttr","canvasId","g","drawAttr","undo","items","forEach","buildStyle","drawId","shape","image","rect","Object","assign","polyline","line","polygon","circle","path","switch","foreignObject","child","grandchildren","grandchild","join","parseText","slide","found","find","splice","buildShapes","result","svg","img","slideId","in","push","height","width","sort","a","b","buildSlides","reduce","build","filename","Promise","resolve","reject","fileType","getFileType","config","presentation","buildAlternates","buildPolls","r","url","external_video_url","buildVideos","buildNotes","explicitChildren","preserveChildrenOrder","charsAsChildren","getOptions","parseStringPromise","then","popcorn","chattimeline","out","message","decodeXML","clearHyperlink","initials","name","slice","toLowerCase","getInitials","emphasized","chatEmphasizedText","moderator","senderRole","buildChat","recording","event","position","x","y","buildCursor","meeting","meta","end","end_time","participants","start","start_time","buildMetadata","panzoom","viewbox","viewBox","buildPanzooms","start_timestamp","stop_timestamp","buildScreenshare","catch","STATE","STATUS","DATA","FALLBACK","hasLoaded","keys","fetchFile","recordId","onUpdate","onLoaded","onError","file","buildFileURL","fetch","response","ok","json","content","fetchMedia","fetches","method","all","responses","media","endsWith","tryMediaFallback","storage","status","fallback","built","this","messages","thumbnail","alt","addAlternatesToThumbnails","hash","str","charCodeAt","getMediaPath","param","getSearchParam","mediaPath","get","parseTimeToSeconds","patterns","hours","minutes","timeToSeconds","h","m","s","rootUrl","fileUrl","getBar","percentage","bar","p","half","repeat","ltr","document","dir","concat","getCurrentContent","SCREENSHARE","PRESENTATION","isEnabled","getCurrentDataIndex","stop","middle","Math","floor","pop","POLL_TYPES","YN","YNA","TF","POLL_KEYS","Info","milliseconds","getTimestampAsMilliseconds","hourCycle","hour","minute","timeZone","Icon","Avatar","getAvatarStyle","handleOnEnterPress","action","key","handleAutoScroll","fNode","cNode","direction","align","pNode","parentNode","scrollLeft","firstNode","currentNode","clientWidth","offsetLeft","spacing","parentWidth","horizontalOffset","getScrollLeft","scrollTop","clientHeight","offsetTop","parentHeight","verticalOffset","getScrollTop","Margin","onClick","onKeyPress","tabIndex","STATUSES","Synchronizer","primary","secondary","synching","init","on","pause","currentTime","playbackRate","addEventListener","visibilityState","PLAYERS","SYNCHRONIZER","webcams","synchronizer","Message","User","prevProps","nextProps","yes","no","abstention","true","false","Options","answers","label","getPollLabel","question","Question","Result","responders","total","numVotes","toFixed","Poll","Url","Video","Messages","currentIndex","setRef","getMessageType","ref","node","useCurrentContent","useState","currentContent","setCurrentContent","useEffect","handleTimeUpdate","nextContent","detail","removeEventListener","useCurrentIndex","setCurrentIndex","nextIndex","useCurrentInterval","interval","currentInterval","setCurrentInterval","sameIndex","nextInterval","currentDataInterval","getCurrentDataInterval","sameInterval","Chat","interaction","useRef","onMouseEnter","onMouseLeave","Notes","dangerouslySetInnerHTML","__html","Content","MODE","layout","mode","control","DISABLED","MEDIA","SWAPPED","single","hasFullscreenButton","isContentVisible","APPLICATIONS","Control","toggleApplication","application","DEFAULT","Application","setCurrent","Cursor","currentData","getCursor","cy","Proxy","Slide","href","fill","stroke","strokeWidth","transform","getCanvasData","Canvas","canvasData","j","intermediate","x1","y1","x2","y2","d","points","xmlns","buildViewBoxAttr","Presentation","currentPanzoomIndex","getViewBox","started","logo","xmlnsXlink","clipPath","Screenshare","sources","filter","source","element","video","videojs","buildOptions","dispose","playsInline","preload","Image","Thumbnail","interactive","handleOnClick","Button","disabled","solid","Clear","Thumbnails","handleSearch","isFiltered","restore","Fullscreen","toggleFullscreen","dispatchTimeUpdate","CustomEvent","dispatchEvent","Webcams","tracks","lang","localeName","kind","srclang","controlBar","fullscreenToggle","pictureInPictureToggle","volumePanel","inline","vertical","inactivityTimeout","playbackRates","frequency","getFrequency","setInterval","clearInterval","getTime","duration","Media","Key","SHORTCUTS","getCode","shortcut","title","Shortcuts","Body","Footer","Header","subtitle","Date","day","month","year","close","Modal","onClose","About","handleClose","handleOnChange","maxLength","minLength","onChange","currentDataIndex","change","Search","setDisabled","setSearch","getValue","indexOf","getSearch","modal","Bottom","about","Title","openAbout","openSearch","Section","toggleSection","Swap","toggleSwap","theme","themeOptions","fixes","css","ignoreInlineStyle","Theme","dark","setDark","disable","enable","prevDark","Top","openModal","actions","prop","listeners","add","k","listener","e","altKey","shiftKey","Player","setFullscreen","setModal","setSection","setSwap","prevFullscreen","paused","prevSection","prevSwap","destroy","Loader","useParams","parseRecordId","counter","initError","setError","setUpdate","setLoaded","setTimeout","Router","basename","render","af","ar","az","bg_BG","bn","ca","cs_CZ","da","de","dv","el_GR","en","eo","es","es_419","es_ES","es_MX","et","eu","fa_IR","fi","fr","gl","he","hi_IN","hr","hu_HU","hy","it_IT","ja","ka","km","kn","ko_KR","lt_LT","lo_LA","lv","ml","mn_MN","nb_NO","nl","oc","pt","pt_BR","pl_PL","ro_RO","ru","sk_SK","sl","sr","sv_SE","ta","te","th","tr","tr_TR","uk_UA","vi","vi_VN","zh_CN","zh_TW","RTL_LOCALES","localeToFile","navigator","language","body","setAttribute","setDirection","fileToLocale","getLocale","getStyle","ReactDOM","getMessages","rel","getElementById"],"mappings":"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","file":"static/js/main.3c763ebe.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst TRANSITION = .5;\n\nconst propTypes = {\n  icon: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n};\n\nconst defaultProps = {\n  icon: '',\n  value: false,\n};\n\nconst Item = ({\n  icon,\n  value,\n}) => {\n\n  return (\n    <div\n      className={cx('item', { loaded: value })}\n      style={{ transition: `opacity ${TRANSITION}s ease-in` }}\n    >\n      <div className={`icon-${icon}`} />\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","const BUILD = process.env.REACT_APP_BBB_PLAYBACK_BUILD;\nconst MEDIA_ROOT_URL = process.env.REACT_APP_MEDIA_ROOT_URL;\nconst NO_ROUTER = process.env.REACT_APP_NO_ROUTER;\n\nconst ERROR = {\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  NOT_ACCEPTABLE: 406,\n  PROXY_AUTHENTICATION_REQUIRED: 407,\n  REQUEST_TIMEOUT: 408,\n  CONFLICT: 409,\n  GONE: 410,\n};\n\nconst EVENT_PREFIX = 'bbbplayback';\n\nconst EVENTS = {\n  TIME_UPDATE: `${EVENT_PREFIX}timeupdate`,\n};\n\nconst ID = {\n  ABOUT: 'about',\n  ALTERNATES: 'alternates',\n  CANVASES: 'canvases',\n  CAPTIONS: 'captions',\n  CHAT: 'chat',\n  CURSOR: 'cursor',\n  DESKSHARE: 'deskshare',\n  ERROR: 'error',\n  LOADER: 'loader',\n  MEDIA: 'media',\n  MESSAGES: 'messages',\n  METADATA: 'metadata',\n  NOTES: 'notes',\n  PANZOOMS: 'panzooms',\n  PLAYER: 'player',\n  POLLS: 'polls',\n  PRESENTATION: 'presentation',\n  SCREENSHARE: 'screenshare',\n  SEARCH: 'search',\n  SETTINGS: 'settings',\n  SHAPES: 'shapes',\n  SLIDES: 'slides',\n  STORAGE: 'storage',\n  SWAP: 'swap',\n  THUMBNAILS: 'thumbnails',\n  USERS: 'users',\n  VIDEOS: 'videos',\n  WEBCAMS: 'webcams',\n};\n\nconst CONTENT = [\n  ID.PRESENTATION,\n  ID.CHAT,\n  ID.POLLS,\n  ID.VIDEOS,\n  ID.NOTES,\n  ID.SCREENSHARE,\n  ID.CAPTIONS,\n];\n\nconst LAYOUT = {\n  CONTENT: 'content',\n  DISABLED: 'disabled',\n  MEDIA: 'media',\n  SWAPPED: 'swapped',\n};\n\nconst NUMBERS = [\n  'zero', 'one', 'two', 'three',\n  'four', 'five', 'six', 'seven',\n  'eight', 'nine', 'ten', 'eleven',\n  'twelve', 'thirteen', 'fourteen', 'fifteen',\n];\n\nconst POSITIONS = {\n  BOTTOM: 'bottom',\n  CENTER: 'center',\n  LEFT: 'left',\n  MIDDLE: 'middle',\n  RIGHT: 'right',\n  TOP: 'top',\n};\n\nconst ROLES = {\n  MODERATOR: 'MODERATOR',\n  VIEWER: 'VIEWER',\n};\n\nconst SHAPES = {\n  CIRCLE: 'circle',\n  LINE: 'line',\n  PATH: 'path',\n  POLL: 'poll',\n  POLYGON: 'polygon',\n  POLYLINE: 'polyline',\n  TEXT: 'text',\n};\n\nconst THEME = {\n  DARK: 'dark',\n  LIGHT: 'light',\n};\n\nconst getRouter = () => {\n  if (typeof NO_ROUTER !== 'undefined') {\n    if (NO_ROUTER) return false;\n  }\n\n  return true;\n};\n\nconst ROUTER = getRouter();\n\nexport {\n  BUILD,\n  CONTENT,\n  ERROR,\n  EVENTS,\n  ID,\n  LAYOUT,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  POSITIONS,\n  ROLES,\n  ROUTER,\n  SHAPES,\n  THEME,\n};\n","import React from 'react';\nimport Item from './item';\nimport { CONTENT } from 'utils/constants';\nimport './index.scss';\n\nconst Data = ({ data }) => {\n\n  return (\n    <div className=\"data-wrapper\">\n       {CONTENT.map((item) => (\n        <Item\n          icon={item}\n          key={item}\n          value={data[item]}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Data;\n","import React from 'react';\nimport './index.scss';\n\nconst Dots = () => {\n\n  return (\n    <div className=\"dots-wrapper\">\n      <div className=\"first\" />\n      <div className=\"second\" />\n      <div className=\"third\" />\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Dots, areEqual);\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'error.wrapper.aria',\n    description: 'Aria label for the error wrapper',\n  },\n});\n\nconst Error = ({ code }) => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"error-wrapper\"\n      id={ID.ERROR}\n    >\n      <div className=\"error-code\">\n        {code}\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","const chat = {\n  align: 'bottom',\n  scroll: true,\n};\n\nconst controls = {\n  about: true,\n  fullscreen: true,\n  search: true,\n  section: true,\n  swap: true,\n  theme: true,\n};\n\nconst date = { enabled: true };\n\nconst files = {\n  alternates: 'presentation_text.json',\n  captions: 'captions.json',\n  chat: 'slides_new.xml',\n  cursor: 'cursor.xml',\n  metadata: 'metadata.xml',\n  notes: 'notes.html',\n  panzooms: 'panzooms.xml',\n  polls: 'polls.json',\n  screenshare: 'deskshare.xml',\n  shapes: 'shapes.svg',\n  videos: 'external_videos.json',\n};\n\nconst locale = { default: 'en' };\n\nconst medias = [\n  'mp4',\n  'webm',\n]\n\nconst player = {\n  rps: 10,\n  rates: [ 0.5, 1, 1.25, 1.5, 1.75, 2 ],\n};\n\nconst search = {\n  length: {\n    min: 3,\n    max: 32,\n  },\n};\n\nconst shortcuts = {\n  enabled: true,\n  fullscreen: 'K',\n  play: 'Enter',\n  section: 'L',\n  seek: {\n    backward: 'ArrowLeft',\n    forward: 'ArrowRight',\n    seconds: 15,\n  },\n  skip: {\n    next: 'ArrowUp',\n    previous: 'ArrowDown',\n  },\n  swap: 'M',\n};\n\nconst styles = {\n  default: null,\n  url: 'HOST',\n  valid: [],\n};\n\nconst thumbnails = {\n  align: 'center',\n  scroll: true,\n};\n\nexport {\n  chat,\n  controls,\n  date,\n  files,\n  locale,\n  medias,\n  player,\n  search,\n  shortcuts,\n  styles,\n  thumbnails,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Linkify from 'linkify-react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  text: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  hyperlink: false,\n  text: '',\n};\n\nconst Text = ({\n  active,\n  hyperlink,\n  text,\n}) => {\n  if (hyperlink) {\n    const options = {\n      className: cx('linkified', { inactive: !active }),\n      target: '_blank',\n    };\n\n    return (\n      <Linkify options={options}>\n        {text}\n      </Linkify>\n    );\n  }\n\n  return <>{text}</>;\n};\n\nText.propTypes = propTypes;\nText.defaultProps = defaultProps;\n\nexport default Text;\n","const params = new URLSearchParams(window.location.search);\nconst debug = params ? params.has('debug') : false;\n\nconst logger = {\n  info: (...msg) => console.info(...msg),\n  debug: (...msg) => debug ? console.debug(...msg) : null,\n  warn: (...msg) => debug ? console.warn(...msg) : null,\n  error: (...msg) => console.error(...msg),\n};\n\nexport default logger;\n","import { LAYOUT } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst hasIndex = (index, data) => {\n  if (index < 0) return false;\n\n  if (isEmpty(data)) return false;\n\n  if (index >= data.length) {\n    logger.error('out of bounds', index, data);\n\n    return false;\n  }\n\n  return true;\n};\n\nconst hasPresentation = slides => {\n  if (isEmpty(slides)) return false;\n\n  for (let i = 0; i < slides.length; i++) {\n    const { src } = slides[i];\n\n    if (src.includes('slide')) return true;\n  }\n\n  return false;\n};\n\nconst hasProperty = (object, property) => {\n  if (object && object.hasOwnProperty(property)) {\n    if (typeof object[property] !== 'undefined') return true;\n  }\n\n  logger.warn('missing', property, object);\n\n  return false;\n};\n\nconst isActive = (time, timestamp, clear = -1) => {\n  const cleared = wasCleared(time, clear);\n  const visible = isVisible(time, timestamp);\n\n  return visible && !cleared;\n};\n\nconst isContentVisible = (layout, swap) => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let visible;\n  switch (layout) {\n    case  CONTENT:\n      visible = !swap;\n      break;\n    case MEDIA:\n      visible = swap;\n      break;\n    default:\n      visible = false;\n  }\n\n  return visible;\n};\n\nconst isCurrent = (data, index, time) => {\n  if (!hasIndex(index, data)) return false;\n\n  const item = data[index];\n  if (!hasProperty(item, 'timestamp')) return false;\n\n  let current = false;\n  if (isVisible(time, item.timestamp)) {\n    if (index + 1 < data.length) {\n      const next = data[index + 1];\n      if (hasProperty(next, 'timestamp')) {\n        current = !isVisible(time, next.timestamp);\n      }\n    } else {\n      current = true;\n    }\n  }\n\n  return current;\n};\n\nconst isDefined = data => typeof data !== 'undefined';\n\nconst isEmpty = data => {\n  const isArray = isValid('array', data);\n  const isString = isValid('string', data);\n  if (!isArray && !isString) return true;\n\n  const empty = data.length === 0;\n\n  return empty;\n};\n\nconst isEnabled = (data, time) => {\n  if (isEmpty(data)) return false;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      // Check if it was activated and did not ended\n      if (isActive(time, timestamp, clear)) return true;\n\n      // Check if we are searching over the present time value\n      if (!isVisible(time, timestamp)) return false;\n    } else {\n      // Invalid item\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst isEqual = (first, second, type = 'array') => {\n  let equal = false;\n\n  switch (type) {\n    case 'array':\n      if (first.length === second.length) {\n        equal = first.every((value, index) => value === second[index])\n      }\n\n      return equal;\n    default:\n      return equal;\n  }\n};\n\nconst isValid = (type, data) => {\n  let valid = false;\n\n  switch (type) {\n    case 'array':\n      if (Array.isArray(data)) valid = true;\n      break;\n    case 'string':\n      if (typeof data === type) valid = true;\n      break;\n    default:\n      logger.debug('unhandled', type);\n  }\n\n  return valid;\n};\n\nconst isVisible = (time, timestamp) => timestamp <= time;\n\nconst wasCleared = (time, clear) => clear !== -1 && clear <= time;\n\nexport {\n  hasIndex,\n  hasPresentation,\n  hasProperty,\n  isActive,\n  isContentVisible,\n  isCurrent,\n  isDefined,\n  isEmpty,\n  isEnabled,\n  isEqual,\n  isValid,\n  isVisible,\n  wasCleared,\n};\n","import { parseStringPromise } from 'xml2js';\nimport { files as config } from 'config';\nimport { getFileType } from './data';\nimport {\n  hasProperty,\n  isEmpty,\n} from './data/validators';\nimport {\n  ID,\n  ROLES,\n  SHAPES,\n} from './constants';\nimport logger from './logger';\n\nconst getAttr = data => {\n  if (!data) return {};\n\n  const attr = data['$'];\n  if (!attr) return {};\n\n  return attr;\n};\n\nconst getChildren = data => {\n  if (!data) return [];\n\n  const children = data['$$'];\n  if (!children) return [];\n\n  return children;\n};\n\nconst getId = data => {\n  if (!data) return -1;\n\n  const id = data.match(/\\d+$/);\n  if (!id || id.length === 0) return -1;\n\n  return parseInt(id.shift(), 10);\n};\n\nconst getNumbers = data => {\n  if (!data) return [];\n\n  const trimmed = data.trim().replace(/  +/g, ' ');\n  if (trimmed.length === 0) return [];\n\n  const split = trimmed.split(' ');\n  const numbers = split.map(v => parseFloat(v));\n\n  return numbers;\n};\n\nconst buildAlternates = result => {\n  if (!result) return [];\n\n  let data = [];\n  for (const presentation in result) {\n    if (hasProperty(result, presentation)) {\n      const slides = result[presentation];\n\n      for (const slide in slides) {\n        if (hasProperty(slides, slide)) {\n          const text = slides[slide];\n\n          data.push({\n            src: `presentation/${presentation}/${slide}.png`,\n            text,\n          });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\n// TODO\nconst buildCaptions = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\n// TODO\nconst buildPolls = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\nconst buildVideos = result => {\n  if (!result) return [];\n\n  const data = result.map(r => {\n    return {\n      timestamp: r.timestamp,\n      url: r.external_video_url,\n    };\n  });\n\n  return data;\n};\n\nconst buildMetadata = result => {\n  let data = {};\n  const { recording } = result;\n\n  if (hasProperty(recording, 'meeting')) {\n    const attr = getAttr(recording.meeting.shift());\n    const { id } = attr;\n    const meta = recording.meta.shift();\n    const end = parseInt(recording.end_time.shift(), 10);\n    const name = meta.name ? meta.name.shift() : attr.name;\n    const participants = parseInt(recording.participants.shift(), 10);\n    const start = parseInt(recording.start_time.shift(), 10);\n\n    data = {\n      end,\n      id,\n      name,\n      participants,\n      start,\n    };\n  }\n\n  return data;\n};\n\nconst buildNotes = result => {\n  if (!result) return '';\n\n  // Extract the notes' body\n  const regex = /<body>\\n.*\\n<\\/body>/g;\n  const match = result.match(regex);\n\n  let data = '';\n  if (!isEmpty(match)) {\n    data = match.shift();\n  }\n\n  return data;\n};\n\nconst buildStyle = data => {\n  const items = data.split(';');\n  let style = {};\n\n  items.forEach(item => {\n    const trimmed = item.trim();\n\n    if (trimmed.length === 0) return;\n\n    const split = trimmed.split(':').map(i => i.trim());\n\n    // Remove visibility\n    if (split[0] === 'visibility') return;\n\n    style[split[0]] = split[1];\n  });\n\n  return style;\n};\n\nconst buildSlides = image => {\n  let slides = [];\n\n  if (image) {\n    image.forEach(img => {\n      const attr = getAttr(img);\n      const src = attr['xlink:href'];\n\n      // Skip the logo\n      if (!src) return;\n\n      // Get the number from the id name\n      const slideId = getId(attr.id);\n      const timestamps = getNumbers(attr.in);\n\n      timestamps.forEach(timestamp => {\n        slides.push({\n          id: slideId,\n          height: parseInt(attr.height),\n          src,\n          timestamp,\n          width: parseInt(attr.width),\n        });\n      });\n    });\n\n    slides = slides.sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  return slides;\n};\n\nconst buildThumbnails = slides => {\n  const prefix = 'slide-';\n  const url = 'thumbnails/thumb-';\n\n  return slides.reduce((result, slide) => {\n    const {\n      id,\n      src,\n      timestamp,\n    } = slide;\n\n    if (src.includes(ID.DESKSHARE)) {\n      result.push({\n        id,\n        src: ID.SCREENSHARE,\n        timestamp,\n      });\n    } else {\n      result.push({\n        id,\n        src: src.replace(prefix, url),\n        timestamp,\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nconst parseText = data => {\n  let text = '';\n\n  const children = getChildren(data);\n  if (!isEmpty(children)) {\n    const child = children.shift();\n    const grandchildren = getChildren(child);\n    if (!isEmpty(grandchildren)) {\n      text = grandchildren.map(grandchild => {\n        const name = grandchild['#name'];\n        if (name === 'br') return '\\r';\n\n        return grandchild['_'];\n      }).join('');\n    }\n  }\n\n  return text;\n};\n\nconst buildCanvases = (group, slides) => {\n  let canvases = [];\n\n  if (group) {\n    canvases = group.map(canvas => {\n      const canvasAttr = getAttr(canvas);\n      const canvasId = getId(canvasAttr.id);\n\n      let data = canvas.g.map(g => {\n        const drawAttr = getAttr(g);\n        const timestamp = parseFloat(drawAttr.timestamp);\n        const clear = parseFloat(drawAttr.undo);\n        const style = buildStyle(drawAttr.style);\n        const drawId = getId(drawAttr.shape);\n\n        let shape = {};\n        if (g.image) {\n          shape.type = SHAPES.POLL;\n          const image = getAttr(g.image.shift());\n          // TODO: Better adapt for old versions\n          // Versions prior to 2.3 included a rect structure along with an image\n          if (g.rect) {\n            const rect = getAttr(g.rect.shift());\n            shape.data = Object.assign({ rect }, { image });\n          } else {\n            shape.data = Object.assign({ image });\n          }\n        } else if (g.polyline) {\n          shape.type = SHAPES.POLYLINE;\n          shape.data = Object.assign({}, getAttr(g.polyline.shift()));\n        } else if (g.line) {\n          shape.type = SHAPES.LINE;\n          shape.data = Object.assign({}, getAttr(g.line.shift()));\n        } else if (g.polygon) {\n          shape.type = SHAPES.POLYGON;\n          shape.data = Object.assign({}, getAttr(g.polygon.shift()));\n        } else if (g.circle) {\n          shape.type = SHAPES.CIRCLE;\n          shape.data = Object.assign({}, getAttr(g.circle.shift()));\n        } else if (g.path) {\n          shape.type = SHAPES.PATH;\n          shape.data = Object.assign({}, getAttr(g.path.shift()));\n        } else if (g.switch) {\n          shape.type = SHAPES.TEXT;\n          const foreignObject = g.switch.shift()['foreignObject'].shift();\n          const text = parseText(foreignObject);\n          shape.data = Object.assign({ text }, getAttr(foreignObject));\n        }\n\n        return {\n          clear,\n          id: drawId,\n          shape,\n          style,\n          timestamp,\n        };\n      });\n\n      return {\n        data,\n        id: canvasId,\n      };\n    });\n  }\n\n  slides.forEach((slide, index) => {\n    const found = canvases.find(canvas => canvas.id === slide.id);\n    if (found) {\n      canvases[index].timestamp = slide.timestamp;\n    } else {\n      const canvas = {\n        data: [],\n        id: slide.id,\n        timestamp: slide.timestamp,\n      };\n\n      canvases.splice(index, 0, canvas);\n    }\n  });\n\n  return canvases;\n};\n\nconst buildShapes = result => {\n  let data = {};\n  const { svg } = result;\n\n  if (svg) {\n    const {\n      image,\n      g,\n    } = svg;\n\n    data.slides = buildSlides(image);\n    data.thumbnails = buildThumbnails(data.slides);\n    data.canvases = buildCanvases(g, data.slides);\n  }\n\n  return data;\n};\n\nconst buildPanzooms = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(panzoom => {\n      const attr = getAttr(panzoom);\n      const viewbox = getNumbers(panzoom.viewBox.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: viewbox.shift(),\n        y: viewbox.shift(),\n        width: viewbox.shift(),\n        height: viewbox.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildCursor = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(cursor => {\n      const attr = getAttr(cursor);\n      const position = getNumbers(cursor.cursor.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: position.shift(),\n        y: position.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst clearHyperlink = message => {\n  const regex = /<a href=\"(.*)\" rel=\"nofollow\"><u>\\1<\\/u><\\/a>/g;\n\n  return message.replace(regex, '$1');\n};\n\nconst decodeXML = message => {\n  return message\n    .replace(/&(quot|#34);/g, '\"')\n    .replace(/&(amp|#38);/g, '&')\n    .replace(/&(apos|#39);/g, \"'\")\n    .replace(/&(lt|#60);/g, '<')\n    .replace(/&(gt|#62);/g, '>');\n};\n\nconst getInitials = name => {\n  let initials;\n\n  if (name) {\n    initials = name\n      .slice(0, 2)\n      .toLowerCase()\n      .trim();\n  }\n\n  return initials;\n};\n\nconst buildChat = result => {\n  const { popcorn } = result;\n  let data = [];\n\n  if (hasProperty(popcorn, 'chattimeline')) {\n    const { chattimeline } = popcorn;\n    data = chattimeline.map(chat => {\n      const attr = getAttr(chat);\n      const clear = attr.out ? parseFloat(attr.out) : -1;\n      const message = decodeXML(clearHyperlink(attr.message));\n      const initials = getInitials(attr.name);\n      const emphasized = attr.chatEmphasizedText === 'true';\n      const moderator = attr.senderRole === ROLES.MODERATOR;\n\n      return {\n        clear,\n        emphasized,\n        hyperlink: message !== attr.message,\n        initials,\n        name: attr.name,\n        message,\n        moderator,\n        timestamp: parseFloat(attr.in),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildScreenshare = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(screenshare => {\n      const attr = getAttr(screenshare);\n\n      return {\n        timestamp: parseFloat(attr.start_timestamp),\n        clear: parseFloat(attr.stop_timestamp),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst getOptions = filename => {\n  let options = {};\n\n  switch (filename) {\n    case config.shapes:\n      options = {\n        explicitChildren: true,\n        preserveChildrenOrder: true,\n        charsAsChildren: true,\n      };\n      break;\n    default:\n  }\n\n  return options;\n};\n\nconst build = (filename, value) => {\n  return new Promise((resolve, reject) => {\n    let data;\n    const fileType = getFileType(filename);\n\n    if (fileType === 'json') {\n      switch (filename) {\n        case config.alternates:\n          data = buildAlternates(value);\n          break;\n        case config.captions:\n          data = buildCaptions(value);\n          break;\n        case config.polls:\n          data = buildPolls(value);\n          break;\n        case config.videos:\n          data = buildVideos(value);\n          break;\n        default:\n          logger.debug('unhandled', 'json', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else if (fileType === 'html') {\n      switch (filename) {\n        case config.notes:\n          data = buildNotes(value);\n          break;\n        default:\n          logger.debug('unhandled', 'html', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else {\n      if (!value) {\n        logger.warn('missing', filename);\n\n        return resolve(null);\n      }\n\n      // Parse XML data\n      const options = getOptions(filename);\n      parseStringPromise(value, options).then(result => {\n        switch (filename) {\n          case config.chat:\n            data = buildChat(result);\n            break;\n          case config.cursor:\n            data = buildCursor(result);\n            break;\n          case config.metadata:\n            data = buildMetadata(result);\n            break;\n          case config.panzooms:\n            data = buildPanzooms(result);\n            break;\n          case config.screenshare:\n            data = buildScreenshare(result);\n            break;\n          case config.shapes:\n            data = buildShapes(result);\n            break;\n          default:\n            logger.debug('unhandled', 'xml', filename);\n            reject(filename);\n        }\n        resolve(data);\n      }).catch(error => reject(error));\n    }\n  });\n};\n\nconst addAlternatesToThumbnails = (thumbnails, alternates) => {\n  const prefix = 'thumbnails/thumb-';\n  const url = 'slide-';\n\n  return thumbnails.map(thumbnail => {\n    const { src } = thumbnail;\n    thumbnail.alt = '';\n\n    const found = alternates.find(alt => src.replace(prefix, url) === alt.src);\n    if (found) thumbnail.alt = found.text;\n\n    return thumbnail;\n  });\n};\n\nconst mergeMessages = (chat, polls, videos) => {\n  return [\n    ...chat,\n    ...polls,\n    ...videos,\n  ].sort((a, b) => a.timestamp - b.timestamp);\n};\n\nexport {\n  addAlternatesToThumbnails,\n  build,\n  buildStyle,\n  decodeXML,\n  getAttr,\n  getId,\n  getNumbers,\n  mergeMessages,\n};\n","import {\n  files,\n  medias,\n} from 'config';\nimport {\n  addAlternatesToThumbnails,\n  build,\n  mergeMessages,\n} from 'utils/builder';\nimport {\n  ERROR,\n  ID,\n} from 'utils/constants';\nimport {\n  buildFileURL,\n  getFileType,\n} from 'utils/data';\nimport {\n  hasPresentation,\n  hasProperty,\n  isEmpty,\n} from 'utils/data/validators';\nimport logger from 'utils/logger';\n\nconst STATE = {\n  WAITING: 'waiting',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n};\n\nlet STATUS = STATE.WAITING;\n\nconst DATA = {};\n\nlet FALLBACK = false;\n\nconst hasFetched = () => {\n  if (STATUS !== STATE.WAITING) return true;\n\n  logger.debug(ID.STORAGE, STATE.LOADING);\n  STATUS = STATE.LOADING;\n\n  return false;\n}\n\nconst hasLoaded = () => {\n  const stored = Object.keys(DATA).length;\n  const data = Object.keys(files).length;\n\n  if (stored > data) {\n    logger.debug(ID.STORAGE, STATE.LOADED);\n    STATUS = STATE.LOADED;\n\n    return true;\n  }\n\n  return false;\n};\n\nconst fetchFile = (data, recordId, onUpdate, onLoaded, onError) => {\n  const file = files[data];\n  const url = buildFileURL(file, recordId);\n  fetch(url).then(response => {\n    if (response.ok) {\n      logger.debug(ID.STORAGE, file, response);\n      const fileType = getFileType(file);\n      switch (fileType) {\n        case 'json':\n          return response.json();\n        case 'html':\n          return response.text();\n        case 'svg':\n          return response.text();\n        case 'xml':\n          return response.text();\n        default:\n          onError(ERROR.BAD_REQUEST);\n          return null;\n      }\n    } else {\n      logger.warn(ID.STORAGE, file, response);\n      return null;\n    }\n  }).then(value => {\n    build(file, value).then(content => {\n      if (content) logger.debug(ID.STORAGE, 'builded', file);\n      DATA[data] = content;\n      onUpdate(data);\n      if (hasLoaded()) onLoaded();\n    }).catch(error => onError(ERROR.BAD_REQUEST));\n  }).catch(error => onError(ERROR.NOT_FOUND));\n};\n\nconst fetchMedia = (recordId, onUpdate, onLoaded, onError) => {\n  const fetches = medias.map(type => {\n    const url = buildFileURL(`video/webcams.${type}`, recordId);\n    return fetch(url, { method: 'HEAD' });\n  });\n\n  Promise.all(fetches).then(responses => {\n    const media = [];\n    responses.forEach(response => {\n      const { ok, url } = response;\n      if (ok) {\n        logger.debug(ID.STORAGE, ID.MEDIA, response);\n        media.push(medias.find(type => url.endsWith(type)));\n      }\n    });\n\n    if (media.length > 0) {\n      DATA[ID.MEDIA] = media;\n      onUpdate(ID.MEDIA);\n      if (hasLoaded()) onLoaded();\n    } else {\n      tryMediaFallback(recordId, onUpdate, onLoaded, onError);\n    }\n  });\n};\n\n// Try playing old recording formats with audio only\n// IMPORTANT: This will only work for webm format\n//\n// TODO: Add support for mp3 format\nconst tryMediaFallback = (recordId, onUpdate, onLoaded, onError) => {\n  const url = buildFileURL('audio/audio.webm', recordId);\n  fetch(url, { method: 'HEAD' }).then(response => {\n    const { ok } = response;\n    if (ok) {\n      logger.debug(ID.STORAGE, ID.MEDIA, response);\n      FALLBACK = true;\n      DATA[ID.MEDIA] = ['webm'];\n      onUpdate(ID.MEDIA);\n      if (hasLoaded()) onLoaded();\n    } else {\n      onError(ERROR.NOT_FOUND);\n    }\n  });\n};\n\nconst storage = {\n  fetch: (recordId, onUpdate, onLoaded, onError) => {\n    if (hasFetched()) return null;\n\n    for (const data in files) {\n      fetchFile(data, recordId, onUpdate, onLoaded, onError);\n    }\n\n    fetchMedia(recordId, onUpdate, onLoaded, onError);\n  },\n  get status() {\n    return STATUS;\n  },\n  get data() {\n    return DATA;\n  },\n  get fallback() {\n    return FALLBACK;\n  },\n  get built() {\n    return {\n      captions: hasProperty(DATA, ID.CAPTIONS),\n      chat: hasProperty(DATA, ID.CHAT),\n      notes: hasProperty(DATA, ID.NOTES),\n      polls: hasProperty(DATA, ID.POLLS),\n      videos: hasProperty(DATA, ID.VIDEOS),\n      presentation: hasProperty(DATA, ID.SHAPES),\n      screenshare: hasProperty(DATA, ID.SCREENSHARE),\n    };\n  },\n  get content() {\n    return {\n      captions: !isEmpty(this.captions),\n      chat: !isEmpty(this.chat),\n      notes: !isEmpty(this.notes),\n      polls: !isEmpty(this.polls),\n      videos: !isEmpty(this.videos),\n      presentation: hasPresentation(this.slides),\n      screenshare: !isEmpty(this.screenshare),\n    };\n  },\n  get alternates() {\n    return DATA[ID.ALTERNATES];\n  },\n  get captions() {\n    return DATA[ID.CAPTIONS];\n  },\n  get chat() {\n    return DATA[ID.CHAT];\n  },\n  get polls() {\n    return DATA[ID.POLLS];\n  },\n  get videos() {\n    return DATA[ID.VIDEOS];\n  },\n  get cursor() {\n    return DATA[ID.CURSOR];\n  },\n  get media() {\n    return DATA[ID.MEDIA];\n  },\n  get messages() {\n    if (!hasProperty(DATA, ID.MESSAGES)) {\n      DATA[ID.MESSAGES] = mergeMessages(\n        this.chat,\n        this.polls,\n        this.videos,\n      );\n    }\n\n    return DATA[ID.MESSAGES];\n  },\n  get metadata() {\n    return DATA[ID.METADATA];\n  },\n  get notes() {\n    return DATA[ID.NOTES];\n  },\n  get panzooms() {\n    return DATA[ID.PANZOOMS];\n  },\n  get screenshare() {\n    return DATA[ID.SCREENSHARE];\n  },\n  get shapes() {\n    return DATA[ID.SHAPES];\n  },\n  get slides() {\n    return this.shapes[ID.SLIDES];\n  },\n  get canvases() {\n    return this.shapes[ID.CANVASES];\n  },\n  get thumbnails() {\n    if (!hasProperty(DATA, ID.THUMBNAILS)) {\n      DATA[ID.THUMBNAILS] = addAlternatesToThumbnails(this.shapes[ID.THUMBNAILS], this.alternates);\n    }\n\n    return DATA[ID.THUMBNAILS];\n  },\n};\n\nexport default storage;\n","// @ironwallaby's string-hash\n// https://github.com/darkskyapp/string-hash\nconst hash = (str) => {\n  let hash = 5381;\n\n  let i = str.length;\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n};\n\nexport default hash;\n","import { styles } from 'config';\nimport { ROUTER } from './constants';\nimport logger from './logger';\n\nconst getFrequency = () => {\n  const param = getSearchParam('f');\n\n  if (param) return parseFloat(param);\n\n  return null;\n};\n\nconst getLayout = () => {\n  const param = getSearchParam('l');\n\n  if (param) return param;\n\n  return null;\n};\n\nconst getMediaPath = () => {\n  const param = getSearchParam('p');\n\n  let mediaPath = '';\n  if (param) mediaPath = param;\n\n  return mediaPath;\n};\n\nconst getSearchParam = (name) => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params && params.has(name)) {\n    const param = params.get(name);\n\n    return param;\n  }\n\n  return null;\n};\n\nconst getStyle = () => {\n  const param = getSearchParam('s');\n  const { url } = styles;\n\n  let style = styles.default ? `${url}/${styles.default}.css` : null;\n  if (param) {\n    const { valid } = styles;\n    if (valid.includes(param)) {\n      style = `${url}/${param}.css`;\n    }\n  }\n\n  return style;\n};\n\nconst getTime = () => {\n  const param = getSearchParam('t');\n\n  if (param) return parseTimeToSeconds(param);\n\n  return null;\n};\n\nconst parseRecordId = params => {\n  if (!ROUTER) return 'local';\n\n  if (params) {\n    const { recordId } = params;\n    if (recordId) {\n      const regex = /^[a-z0-9]{40}-[0-9]{13}$/;\n\n      if (recordId.match(regex)) return recordId;\n    }\n  }\n\n  logger.error('missing', 'recordId');\n\n  return null;\n};\n\nconst parseTimeToSeconds = time => {\n  const patterns = [\n    /^(\\d+)h(\\d+)m(\\d+)s$/,\n    /^(\\d+)m(\\d+)s$/,\n    /^(\\d+)s$/,\n  ];\n\n  for (let i = 0; i < patterns.length; i++) {\n    if (time.match(patterns[i])) {\n      const hours = time.match(/(\\d+)h/);\n      const minutes = time.match(/(\\d+)m/);\n      const seconds = time.match(/(\\d+)s/);\n\n      let timeToSeconds = 0;\n\n      if (hours) {\n        const h = parseInt(hours[1]);\n        if (h >= 0) timeToSeconds += h * 3600;\n      }\n\n      if (minutes) {\n        const m = parseInt(minutes[1]);\n        if (m >= 0 && m < 60) {\n          timeToSeconds += m * 60;\n        } else {\n          return null;\n        }\n      }\n\n      if (seconds) {\n        const s = parseInt(seconds[1]);\n        if (s >= 0 && s < 60) {\n          timeToSeconds += s;\n        } else {\n          return null;\n        }\n      }\n\n      return timeToSeconds;\n    }\n  }\n\n  return null;\n};\n\nexport {\n  getFrequency,\n  getLayout,\n  getMediaPath,\n  getStyle,\n  getSearchParam,\n  getTime,\n  parseRecordId,\n  parseTimeToSeconds,\n};\n","import {\n  ID,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  ROUTER,\n} from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport {\n  hasProperty,\n  isCurrent,\n  isEmpty,\n  isEnabled,\n  isVisible,\n  wasCleared,\n} from 'utils/data/validators';\nimport hash from 'utils/hash';\nimport { getMediaPath } from 'utils/params';\n\nconst buildFileURL = (file, recordId = null) => {\n  if (!ROUTER) return file;\n\n  const mediaPath = getMediaPath();\n\n  const rootUrl = MEDIA_ROOT_URL ? MEDIA_ROOT_URL : '/presentation';\n\n  const id = recordId ? recordId : storage.metadata.id;\n  let fileUrl = `${id}/${file}`;\n  if (mediaPath) fileUrl = `${mediaPath}/${fileUrl}`;\n\n  return `${rootUrl}/${fileUrl}`;\n};\n\nconst getAvatarStyle = name => {\n  const index = hash(name) % NUMBERS.length;\n\n  return `avatar-${NUMBERS[index]}`;\n};\n\nconst FULL_BLOCK = '█';\nconst LEFT_HALF_BLOCK = '▌';\nconst RIGHT_HALF_BLOCK = '▐';\nconst EMPTY_BLOCK = '-';\n\nconst getBar = (percentage) => {\n  const p = parseInt(percentage);\n\n  let bar;\n  if (p === 0) {\n    bar = EMPTY_BLOCK;\n  } else {\n    const full = p / 10;\n    const half = (p % 10) > 2;\n\n    bar = FULL_BLOCK.repeat(full);\n\n    if (half) {\n      // Add true fallback for the tests\n      const ltr = document.dir ? document.dir === 'ltr' : true;\n      bar = bar.concat(ltr ? LEFT_HALF_BLOCK : RIGHT_HALF_BLOCK);\n    }\n  }\n\n  return bar;\n};\n\nconst getCurrentContent = (time) => {\n  const {\n    SCREENSHARE,\n    PRESENTATION,\n  } = ID;\n\n  const content = isEnabled(storage.screenshare, time) ? SCREENSHARE : PRESENTATION;\n\n  return content;\n};\n\nconst getCurrentDataIndex = (data, time) => {\n  if (isEmpty(data)) return -1;\n\n  let start = 0;\n  let stop = data.length - 1;\n  let middle = Math.floor((start + stop) / 2);\n\n  while (!isCurrent(data, middle, time) && start < stop) {\n    const item = data[middle];\n    if (!hasProperty(item, 'timestamp')) return -1;\n\n    if (!isVisible(time, item.timestamp)) {\n      stop = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n\n    middle = Math.floor((start + stop) / 2);\n  }\n\n  const current = isCurrent(data, middle, time);\n\n  return (!current) ? -1 : middle;\n};\n\nconst getCurrentDataInterval = (data, time) => {\n  const currentDataInterval = [];\n\n  if (isEmpty(data)) return currentDataInterval;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      if (!isVisible(time, timestamp)) break;\n\n      currentDataInterval.push(!wasCleared(time, clear));\n    }\n  }\n\n  return currentDataInterval;\n};\n\nconst getFileType = file => file.split('.').pop();\n\nconst getPercentage = (value, total) => {\n  if (total === 0) return 0;\n\n  return ((value / total) * 100).toFixed(1);\n};\n\nconst POLL_TYPES = {\n  YN: 'YN',\n  YNA: 'YNA',\n  TF: 'TF',\n};\n\nconst POLL_KEYS = [\n  'Yes',\n  'No',\n  'Abstention',\n  'True',\n  'False',\n];\n\nconst getPollLabel = (key, type) => {\n  if (!POLL_TYPES[type]) return null;\n\n  if (!POLL_KEYS.includes(key)) return null;\n\n  return key.toLowerCase();\n};\n\nconst getMessageType = (item) => {\n  if (typeof item.message === 'string') return ID.USERS;\n  if (typeof item.question === 'string') return ID.POLLS;\n  if (typeof item.url === 'string') return ID.VIDEOS;\n\n  return 'undefined';\n};\n\nconst getTimestampAsMilliseconds = timestamp => timestamp * 1000;\n\nexport {\n  buildFileURL,\n  getAvatarStyle,\n  getBar,\n  getCurrentContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getFileType,\n  getMessageType,\n  getPercentage,\n  getPollLabel,\n  getTimestampAsMilliseconds,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedTime } from 'react-intl';\nimport cx from 'classnames';\nimport { getTimestampAsMilliseconds } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  name: '',\n  timestamp: 0,\n};\n\nconst Info = ({\n  active,\n  name,\n  timestamp,\n}) => {\n  const milliseconds = getTimestampAsMilliseconds(timestamp);\n\n  return (\n    <div className=\"info\">\n      <div className={cx('name', { inactive: !active })}>\n        {name}\n      </div>\n      <div className={cx('time', { inactive: !active })}>\n        <FormattedTime\n          hourCycle=\"h23\"\n          hour=\"numeric\"\n          minute=\"numeric\"\n          second=\"numeric\"\n          timeZone=\"UTC\"\n          value={milliseconds}\n        />\n      </div>\n    </div>\n  );\n};\n\nInfo.propTypes = propTypes;\nInfo.defaultProps = defaultProps;\n\nexport default Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nconst propTypes = { name: PropTypes.string };\n\nconst defaultProps = { name: '' };\n\nconst Icon = ({ name }) => {\n\n  return <span className={`icon-${name}`} />;\n};\n\nIcon.propTypes = propTypes;\nIcon.defaultProps = defaultProps;\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport { getAvatarStyle } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n};\n\nconst defaultProps = {\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n};\n\nconst Avatar = ({\n  circle,\n  icon,\n  initials,\n  name,\n}) => {\n  // TODO: this should become a property\n  const style = initials.length > 0 ? getAvatarStyle(name) : 'avatar-default';\n\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className={cx('avatar', { circle }, style)}>\n        {icon ? (\n          <Icon name={icon} />\n        ) : (\n          <span className=\"initials\">\n            {initials}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nAvatar.propTypes = propTypes;\nAvatar.defaultProps = defaultProps;\n\nexport default Avatar;\n","import { POSITIONS } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst getScrollLeft = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientWidth,\n    offsetLeft,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const ltr = document.dir === 'ltr';\n  const spacing = ltr ? firstNode.offsetLeft : 0;\n  const parentWidth = parentNode.clientWidth;\n\n  let horizontalOffset = 0;\n  switch (align) {\n    case POSITIONS.LEFT:\n      horizontalOffset = offsetLeft - spacing;\n      break;\n    case POSITIONS.CENTER:\n      horizontalOffset = parseInt(offsetLeft + (clientWidth - spacing - parentWidth) / 2, 10);\n      break;\n    case POSITIONS.RIGHT:\n      horizontalOffset = offsetLeft + clientWidth - parentWidth;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return horizontalOffset;\n};\n\nconst getScrollTop = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientHeight,\n    offsetTop,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetTop;\n  const parentHeight = parentNode.clientHeight;\n\n  let verticalOffset = 0;\n  switch (align) {\n    case POSITIONS.TOP:\n      verticalOffset = offsetTop - spacing;\n      break;\n    case POSITIONS.MIDDLE:\n      verticalOffset = parseInt(offsetTop + (clientHeight - spacing - parentHeight) / 2, 10);\n      break;\n    case POSITIONS.BOTTOM:\n      verticalOffset = offsetTop + clientHeight - parentHeight;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return verticalOffset;\n};\n\nconst handleOnEnterPress = (event, action) => {\n  if (event && event.key === 'Enter') {\n    if (typeof action === 'function') action();\n  }\n};\n\nconst handleAutoScroll = (fNode, cNode, direction, align) => {\n  // Auto-scroll can start after getting the first and current nodes\n  if (fNode && cNode) {\n    const { parentNode: pNode } = cNode;\n\n    switch (direction) {\n      case POSITIONS.LEFT:\n        pNode.scrollLeft = getScrollLeft(fNode, cNode, align);\n        break;\n      case POSITIONS.TOP:\n        pNode.scrollTop = getScrollTop(fNode, cNode, align);\n        break;\n      default:\n        logger.debug('unhandled', direction);\n    }\n  }\n};\n\nexport {\n  getScrollLeft,\n  getScrollTop,\n  handleAutoScroll,\n  handleOnEnterPress,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n  onClick: () => {},\n};\n\nconst Margin = ({\n  active,\n  circle,\n  icon,\n  initials,\n  name,\n  onClick,\n}) => {\n  const style = {\n    circle,\n    inactive: !active,\n  };\n\n  return (\n    <div\n      className={cx('interactive', style)}\n      onClick={onClick}\n      onKeyPress={event => handleOnEnterPress(event, onClick)}\n      tabIndex=\"0\"\n    >\n      <Avatar\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n      />\n    </div>\n  );\n};\n\nMargin.propTypes = propTypes;\nMargin.defaultProps = defaultProps;\n\nexport default Margin;\n","import logger from './logger';\n\nconst STATUSES = [\n  'canplay',\n  'seeking',\n  'waiting',\n];\n\nconst EVENTS = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'interruptbegin',\n  'interruptend',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'mozaudioavailable',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  //'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\nexport default class Synchronizer {\n  constructor(primary, secondary) {\n    this.primary = primary;\n    this.secondary = secondary;\n\n    this.status = {\n      primary: 'waiting',\n      secondary: 'waiting',\n    }\n\n    this.synching = false;\n\n    this.init();\n  }\n\n  init() {\n    STATUSES.forEach(status => {\n      this.primary.on(status, () => this.status.primary = status);\n      this.secondary.on(status, () => this.status.secondary = status);\n    });\n\n    this.primary.on('play', () => this.secondary.play());\n    this.primary.on('pause', () => this.secondary.pause());\n\n    this.primary.on('seeking', () => {\n      const currentTime = this.primary.currentTime();\n      this.secondary.currentTime(currentTime);\n    });\n\n    this.primary.on('ratechange', () => {\n      const playbackRate = this.primary.playbackRate();\n      this.secondary.playbackRate(playbackRate);\n    });\n\n    this.primary.on('waiting', () => {\n      if (!this.synching && this.status.secondary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.primary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    this.secondary.on('waiting', () => {\n      if (!this.synching && this.status.primary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.secondary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    // IMPORTANT: Blink holds the secondary media down while the document\n    // page is not visible\n    // Force medias to sync on visibility change and document is visible\n    document.addEventListener('visibilitychange', () => {\n      if (document.visibilityState === 'visible') {\n        const currentTime = this.primary.currentTime();\n        this.secondary.currentTime(currentTime);\n      }\n    });\n\n    EVENTS.forEach(event => {\n      this.primary.on(event, () => logger.debug(`primary ${event} ${this.status.primary}`));\n      this.secondary.on(event, () => logger.debug(`secondary ${event} ${this.status.secondary}`));\n    });\n  }\n}\n","import { ID } from 'utils/constants';\nimport Synchronizer from 'utils/synchronizer';\n\nconst PLAYERS = {};\nlet SYNCHRONIZER = null;\n\nconst player = {\n  get primary() {\n    return this.webcams;\n  },\n  get screenshare() {\n    return PLAYERS[ID.SCREENSHARE];\n  },\n  get synchronizer() {\n    return SYNCHRONIZER;\n  },\n  get webcams() {\n    return PLAYERS[ID.WEBCAMS];\n  },\n  set screenshare(value) {\n    if (!PLAYERS[ID.SCREENSHARE]) PLAYERS[ID.SCREENSHARE] = value;\n\n    if (this.webcams) {\n      this.synchronizer = new Synchronizer(this.webcams, this.screenshare);\n    }\n  },\n  set synchronizer(value) {\n    if (!SYNCHRONIZER) SYNCHRONIZER = value;\n  },\n  set webcams(value) {\n    if (!PLAYERS[ID.WEBCAMS]) PLAYERS[ID.WEBCAMS] = value;\n\n    if (this.screenshare) {\n      this.synchronizer = new Synchronizer(this.webcams, this.screenshare);\n    }\n  },\n};\n\nexport default player;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Info from './info';\nimport Margin from './margin';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  circle: PropTypes.bool,\n  emphasized: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  circle: false,\n  emphasized: false,\n  icon: '',\n  initials: '',\n  name: '',\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  circle,\n  emphasized,\n  icon,\n  initials,\n  name,\n  timestamp,\n}) => {\n  const handleOnClick = () => {\n    player.primary.currentTime(timestamp);\n  };\n\n  return (\n    <div className=\"message\">\n      <Margin\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n        onClick={() => handleOnClick()}\n      />\n      <div className=\"data\">\n        <Info\n          active={active}\n          name={name}\n          timestamp={timestamp}\n        />\n        <div className={cx('text', { inactive: !active, emphasized })}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from './text';\nimport Message from 'components/chat/messages/message';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  emphasized: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  moderator: PropTypes.bool,\n  text: PropTypes.string,\n  timestamp: PropTypes.timestamp,\n};\n\nconst defaultProps = {\n  active: false,\n  emphasized: false,\n  hyperlink: false,\n  initials: '',\n  name: '',\n  moderator: false,\n  text: '',\n  timestamp: 0,\n};\n\nconst User = ({\n  active,\n  emphasized,\n  hyperlink,\n  initials,\n  name,\n  moderator,\n  text,\n  timestamp,\n}) => {\n\n  return (\n    <Message\n      active={active}\n      circle={!moderator}\n      emphasized={emphasized}\n      initials={initials}\n      name={name}\n      timestamp={timestamp}\n    >\n      <Text\n        active={active}\n        hyperlink={hyperlink}\n        text={text}\n      />\n    </Message>\n  );\n};\n\nUser.propTypes = propTypes;\nUser.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  return true;\n};\n\nexport default React.memo(User, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { getPollLabel } from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  options: {\n    id: 'player.chat.message.poll.options',\n    description: 'Label for the poll message answer options',\n  },\n  yes: {\n    id: 'player.chat.message.poll.option.yes',\n    description: 'Label for poll option yes',\n  },\n  no: {\n    id: 'player.chat.message.poll.option.no',\n    description: 'Label for poll option no',\n  },\n  abstention: {\n    id: 'player.chat.message.poll.option.abstention',\n    description: 'Label for poll option abstention',\n  },\n  true: {\n    id: 'player.chat.message.poll.option.true',\n    description: 'Label for poll option true',\n  },\n  false: {\n    id: 'player.chat.message.poll.option.false',\n    description: 'Label for poll option false',\n  },\n});\n\nconst propTypes = {\n  answers: PropTypes.array,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  answers: [],\n  type: '',\n};\n\nconst Options = ({\n  answers,\n  type,\n}) => {\n  const intl = useIntl();\n\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-options\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.options)}\n      </div>\n      {answers.map((item) => {\n        const {\n          id,\n          key,\n        } = item;\n\n        const label = getPollLabel(key, type);\n\n        return(\n          <div>\n            {id + 1}: {label ? intl.formatMessage(intlMessages[label]) : key}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nOptions.propTypes = propTypes;\nOptions.defaultProps = defaultProps;\n\nexport default Options;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  question: {\n    id: 'player.chat.message.poll.question',\n    description: 'Label for the poll message question',\n  },\n});\n\nconst propTypes = { question: PropTypes.string };\n\nconst defaultProps = { question: '' };\n\nconst Question = ({ question }) => {\n  const intl = useIntl();\n\n  if (isEmpty(question)) return null;\n\n  return (\n    <div className=\"poll-question\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.question)}\n      </div>\n      {question}\n    </div>\n  );\n};\n\nQuestion.propTypes = propTypes;\nQuestion.defaultProps = defaultProps;\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  getBar,\n  getPercentage,\n} from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst propTypes = {\n  answers: PropTypes.array,\n  responders: PropTypes.number,\n};\n\nconst defaultProps = {\n  answers: [],\n  responders: 0,\n};\n\nconst Result = ({\n  answers,\n  responders,\n}) => {\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-result\">\n      {answers.map((item) => {\n        const {\n          id,\n          numVotes,\n        } = item;\n\n        const percentage = getPercentage(numVotes, responders);\n\n        return(\n          <div className=\"poll-label\">\n            {id + 1}: <span className=\"poll-bar\">{getBar(percentage)}</span> {percentage}%\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nResult.propTypes = propTypes;\nResult.defaultProps = defaultProps;\n\nexport default Result;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseMessage from 'components/chat/messages/message';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  icon: PropTypes.string,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  icon: '',\n  name: '',\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  icon,\n  name,\n  timestamp,\n}) => {\n\n  return (\n    <BaseMessage\n      active={active}\n      icon={icon}\n      name={name}\n      timestamp={timestamp}\n    >\n      <div className=\"system-message-wrapper\">\n        {children}\n      </div>\n    </BaseMessage>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Options from './options';\nimport Question from './question';\nimport Result from './result';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.poll.name',\n    description: 'Label for the poll message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  answers: PropTypes.array,\n  question: PropTypes.string,\n  responders: PropTypes.number,\n  timestamp: PropTypes.number,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  answers: [],\n  question: '',\n  responders: 0,\n  timestamp: 0,\n  type: '',\n};\n\nconst Poll = ({\n  active,\n  answers,\n  question,\n  responders,\n  timestamp,\n  type,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.POLLS}\n      name={intl.formatMessage(intlMessages.name)}\n      timestamp={timestamp}\n    >\n      <Question question={question} />\n      <Result\n        answers={answers}\n        responders={responders}\n      />\n      <Options\n        answers={answers}\n        type={type}\n      />\n    </SystemMessage>\n  );\n};\n\nPoll.propTypes = propTypes;\nPoll.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  return true;\n};\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'utils/data/validators';\nimport Linkify from 'linkify-react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  url: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  url: '',\n};\n\nconst Url = ({\n  active,\n  url,\n}) => {\n  if (isEmpty(url)) return null;\n\n  const options = {\n    className: cx('linkified', { inactive: !active }),\n    target: '_blank',\n  };\n\n  return (\n    <Linkify options={options}>\n      {url}\n    </Linkify>\n  );\n};\n\nUrl.propTypes = propTypes;\nUrl.defaultProps = defaultProps;\n\nexport default Url;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Url from './url';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.video.name',\n    description: 'Label for the video message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  url: PropTypes.url,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  url: '',\n  timestamp: 0,\n};\n\nconst Video = ({\n  active,\n  url,\n  timestamp,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.VIDEOS}\n      name={intl.formatMessage(intlMessages.name)}\n      timestamp={timestamp}\n    >\n      <Url\n        active={active}\n        url={url}\n      />\n    </SystemMessage>\n  );\n};\n\nVideo.propTypes = propTypes;\nVideo.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  return true;\n};\n\nexport default React.memo(Video, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserMessage from './user';\nimport PollMessage from './system/poll';\nimport VideoMessage from './system/video';\nimport { ID } from 'utils/constants';\nimport { getMessageType } from 'utils/data';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst propTypes = {\n  currentIndex: PropTypes.number,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  currentIndex: 0,\n  setRef: () => {},\n};\n\nconst Messages = ({\n  currentIndex,\n  setRef,\n}) => {\n\n  return (\n    <div className=\"list\">\n      <div className=\"message-wrapper\">\n        {storage.messages.map((item, index) => {\n          const active = index <= currentIndex;\n          const { timestamp } = item;\n          const type = getMessageType(item);\n          switch (type) {\n            case ID.USERS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <UserMessage\n                    active={active}\n                    emphasized={item.emphasized}\n                    hyperlink={item.hyperlink}\n                    initials={item.initials}\n                    moderator={item.moderator}\n                    name={item.name}\n                    text={item.message}\n                    timestamp={timestamp}\n                  />\n                </span>\n              );\n            case ID.POLLS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <PollMessage\n                    active={active}\n                    answers={item.answers}\n                    question={item.question}\n                    responders={item.responders}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            case ID.VIDEOS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <VideoMessage\n                    active={active}\n                    url={item.url}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            default:\n              return <span ref={node => setRef(node, index)} />;\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nMessages.propTypes = propTypes;\nMessages.defaultProps = defaultProps;\n\nexport default Messages;\n","import { useState, useEffect } from 'react';\nimport {\n  EVENTS,\n  ID,\n} from 'utils/constants';\nimport {\n  getCurrentContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n} from 'utils/data';\nimport { isEqual } from 'utils/data/validators';\n\nconst useCurrentContent = () => {\n  const [currentContent, setCurrentContent] = useState(ID.PRESENTATION);\n\n  useEffect(() => {\n    const handleTimeUpdate = (event) => {\n      const nextContent = getCurrentContent(event.detail.time);\n      if (currentContent !== nextContent) setCurrentContent(nextContent);\n    };\n\n    document.addEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    return () => {\n      document.removeEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    };\n  }, [currentContent]);\n\n  return currentContent;\n};\n\nconst useCurrentIndex = (data) => {\n  const [currentIndex, setCurrentIndex] = useState(-1);\n\n  useEffect(() => {\n    const handleTimeUpdate = (event) => {\n      const nextIndex = getCurrentDataIndex(data, event.detail.time);\n      if (currentIndex !== nextIndex) setCurrentIndex(nextIndex);\n    };\n\n    document.addEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    return () => {\n      document.removeEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    };\n  }, [currentIndex, data]);\n\n  return currentIndex;\n};\n\nconst useCurrentInterval = (data) => {\n  const [currentInterval, setCurrentInterval] = useState({ index: -1, interval: [] });\n\n  useEffect(() => {\n    const handleTimeUpdate = (event) => {\n      const nextIndex = getCurrentDataIndex(data, event.detail.time);\n      const sameIndex = currentInterval.index === nextIndex;\n\n      if (nextIndex !== -1) {\n        const nextInterval = getCurrentDataInterval(data[nextIndex].data, event.detail.time);\n        const sameInterval = isEqual(currentInterval.interval, nextInterval);\n        if (!sameIndex || !sameInterval) setCurrentInterval({ index: nextIndex, interval: nextInterval });\n      } else {\n        const sameInterval = isEqual(currentInterval, []);\n        if (!sameIndex || !sameInterval) setCurrentInterval({ index: -1, interval: [] });\n      }\n    };\n\n    document.addEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    return () => {\n      document.removeEventListener(EVENTS.TIME_UPDATE, handleTimeUpdate);\n    };\n  }, [currentInterval, data]);\n\n  return currentInterval;\n};\n\nexport {\n  useCurrentContent,\n  useCurrentIndex,\n  useCurrentInterval,\n};\n","import React, { useEffect, useRef } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { chat as config } from 'config';\nimport Messages from './messages';\nimport { useCurrentIndex } from 'components/utils/hooks';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.chat.wrapper.aria',\n    description: 'Aria label for the chat wrapper',\n  },\n});\n\nconst Chat = () => {\n  const intl = useIntl();\n  const currentIndex = useCurrentIndex(storage.messages);\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.TOP, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      aria-live=\"polite\"\n      className=\"chat-wrapper\"\n      id={ID.CHAT}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      <Messages\n        currentIndex={currentIndex}\n        setRef={(node, index) => setRef(node, index)}\n      />\n    </div>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Chat, areEqual);\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.notes.wrapper.aria',\n    description: 'Aria label for the notes wrapper',\n  },\n});\n\nconst Notes = () => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"notes-wrapper\"\n      id={ID.NOTES}\n      tabIndex=\"0\"\n    >\n      <div className=\"notes\">\n        <div\n          dangerouslySetInnerHTML={{ __html: storage.notes }}\n          style={{ width: '100%' }}\n        />\n      </div>\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Notes, areEqual);\n","import React from 'react';\nimport Chat from 'components/chat';\nimport Notes from 'components/notes';\nimport { ID } from 'utils/constants';\n\nconst Content = ({ current }) => {\n  switch (current) {\n    case ID.CHAT:\n\n      return <Chat />;\n    case ID.NOTES:\n\n      return <Notes />;\n    default:\n\n      return null;\n  }\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.current !== nextProps.current) return false;\n\n  return true;\n};\n\nexport default React.memo(Content, areEqual);\n","import { controls } from 'config';\nimport { LAYOUT } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport { isContentVisible } from 'utils/data/validators';\n\nlet MODE = null;\n\nconst layout = {\n  get content() {\n    return storage.content;\n  },\n  get mode() {\n    return MODE;\n  },\n  set mode(value) {\n    MODE = value;\n  },\n  get control() {\n    const { DISABLED } = LAYOUT;\n\n    let control = true;\n    switch (this.mode) {\n      case DISABLED:\n        control = false;\n        break;\n      default:\n    }\n\n    return control;\n  },\n  get section() {\n    const {\n      CONTENT,\n      MEDIA,\n    } = LAYOUT;\n\n    let section = true;\n    switch (this.mode) {\n      case CONTENT:\n        section = false;\n        break;\n      case MEDIA:\n        section = false;\n        break;\n      default:\n    }\n\n    return section;\n  },\n  get swap() {\n    const {\n      CONTENT,\n      MEDIA,\n      SWAPPED,\n    } = LAYOUT;\n\n    let swap = false;\n    switch (this.mode) {\n      case CONTENT:\n        swap = false;\n        break;\n      case MEDIA:\n      case SWAPPED:\n        swap = true;\n        break;\n      default:\n    }\n\n    return swap;\n  },\n  get screenshare() {\n    return this.content.screenshare;\n  },\n  get single() {\n    return !this.content.presentation && !this.content.screenshare;\n  },\n  hasFullscreenButton: function (content, swap) {\n    if (!this.control || !controls.fullscreen) return false;\n\n    if (!isContentVisible(content, swap || this.single)) return false;\n\n    return true;\n  },\n};\n\nexport default layout;\n","import React from 'react';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport { ID } from 'utils/constants';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst APPLICATIONS = [\n  ID.CHAT,\n  ID.NOTES,\n];\n\nconst Control = ({\n  current,\n  toggleApplication,\n}) => {\n  if (!layout.control) return null;\n\n  return (\n    <div className=\"application-control\">\n      {APPLICATIONS.map(application => {\n        const active = current === application;\n\n        return (\n          <div\n            className={cx('application-icon', { inactive: !active })}\n            onClick={() => active ? null : toggleApplication(application)}\n          >\n            <Icon name={application} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.current === nextProps.current;\n};\n\nexport default React.memo(Control, areEqual);\n","import React, { useState } from 'react';\nimport Content from './content';\nimport Control from './control';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst DEFAULT = ID.CHAT;\n\nconst Application = () => {\n  const [current, setCurrent] = useState(DEFAULT);\n\n  const toggleApplication = (application) => {\n    if (current !== application) setCurrent(application);\n  };\n\n  return (\n    <div className=\"application\">\n      <Control\n        current={current}\n        toggleApplication={toggleApplication}\n      />\n      <Content current={current} />\n    </div>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Application, areEqual);\n","import React from 'react';\nimport { useCurrentIndex } from 'components/utils/hooks';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst getCursor = (index, viewBox) => {\n  const inactive = {\n    x: -1,\n    y: -1,\n  }\n\n  if (index === -1) return inactive;\n\n  const currentData = storage.cursor[index];\n  if (currentData.x === -1 && currentData.y === -1) return inactive;\n\n  return {\n    x: viewBox.x + (currentData.x * viewBox.width),\n    y: viewBox.y + (currentData.y * viewBox.height),\n  };\n};\n\nconst Cursor = ({ viewBox }) => {\n  const currentIndex = useCurrentIndex(storage.cursor);\n  const { x, y } = getCursor(currentIndex, viewBox);\n\n  if (x === -1 || y === -1) return null;\n\n  return (\n    <circle\n      className=\"cursor\"\n      style={{ cx: x, cy: y }}\n    />\n  );\n};\n\nexport default Cursor;\n","import React from 'react';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst Proxy = ({\n  id,\n  height,\n  width,\n}) => {\n  const thumbnail = storage.thumbnails.find(thumbnails => id === thumbnails.id);\n  if (!thumbnail) return null;\n\n  const {\n    alt,\n    src,\n  } = thumbnail;\n\n  if (src === ID.SCREENSHARE) return null;\n\n  return (\n    <foreignObject\n      height={height}\n      x={0}\n      width={width}\n      y={0}\n    >\n      <img\n        alt={alt}\n        className=\"proxy\"\n        src={buildFileURL(src)}\n      />\n    </foreignObject>\n  );\n};\n\nexport default Proxy;\n","import React from 'react';\nimport Proxy from './proxy';\nimport { useCurrentIndex } from 'components/utils/hooks';\nimport { buildFileURL } from 'utils/data';\nimport storage from 'utils/data/storage';\n\nconst Slide = () => {\n  const currentIndex = useCurrentIndex(storage.slides);\n  if (currentIndex === -1) return null;\n\n  const {\n    height,\n    id,\n    src,\n    width,\n  } = storage.slides[currentIndex];\n\n  return (\n    <g>\n      <Proxy\n        id={id}\n        height={height}\n        width={width}\n      />\n      <image\n        height={height}\n        href={buildFileURL(src)}\n        x={0}\n        width={width}\n        y={0}\n      />\n    </g>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Slide, areEqual);\n","import React from 'react';\nimport { buildFileURL } from 'utils/data';\n\nconst Poll = ({\n  data,\n  style,\n}) => {\n  const {\n    image,\n    rect,\n  } = data;\n\n  // TODO: Better adapt for old versions\n  if (rect) {\n    // BigBlueButton v2.2 or lower\n    return (\n      <g style={style}>\n        <rect\n          fill={rect.fill}\n          height={rect.height}\n          stroke={rect.stroke}\n          strokeWidth={rect['stroke-width']}\n          width={rect.width}\n          x={rect.x}\n          y={rect.y}\n        />\n        <image\n          height={image.height}\n          transform={image.transform}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  } else {\n    // BigBlueButton v2.3 or higher\n     return (\n      <g style={style}>\n        <image\n          height={image.height}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  }\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport Poll from './poll';\nimport { useCurrentInterval } from 'components/utils/hooks';\nimport { SHAPES } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport { isEmpty } from 'utils/data/validators';\nimport logger from 'utils/logger';\n\nconst getCanvasData = (index) => storage.canvases[index].data;\n\nconst Canvas = () => {\n  const {\n    index,\n    interval,\n  }= useCurrentInterval(storage.canvases);\n\n  if (index === -1) return null;\n\n  if (isEmpty(interval)) return null;\n\n  const canvas = [];\n  for (let i = 0; i < interval.length; i++) {\n    if (!interval[i]) continue;\n\n    const canvasData = getCanvasData(index);\n\n    const {\n      id,\n      shape,\n      style,\n    } = canvasData[i];\n\n    const j = i + 1;\n    let intermediate = false;\n    if (j < interval.length) {\n      intermediate = canvasData[j].id === id;\n    }\n\n    if (intermediate) continue;\n\n    const {\n      data,\n      type,\n    } = shape;\n\n    switch (type) {\n      case SHAPES.CIRCLE:\n        canvas.push(\n          <circle\n            style={style}\n            cx={data.cx}\n            cy={data.cy}\n            r={data.r}\n          />\n        );\n        break;\n      case SHAPES.LINE:\n        canvas.push(\n          <line\n            style={style}\n            x1={data.x1}\n            y1={data.y1}\n            x2={data.x2}\n            y2={data.y2}\n          />\n        );\n        break;\n      case SHAPES.PATH:\n        canvas.push(\n          <path\n            style={style}\n            d={data.d}\n          />\n        );\n        break;\n      case SHAPES.POLL:\n        canvas.push(\n          <Poll\n            data={data}\n            key={id}\n            style={style}\n          />\n        );\n        break;\n      case SHAPES.POLYGON:\n        canvas.push(\n          <polygon\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.POLYLINE:\n        canvas.push(\n          <polyline\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.TEXT:\n        canvas.push(\n          <foreignObject\n            style={style}\n            height={data.height}\n            width={data.width}\n            x={data.x}\n            y={data.y}\n          >\n            <div xmlns=\"http://www.w3.org/1999/xhtml\">\n              {data.text.split('\\r').map(line => <span>{line}<br /></span>)}\n            </div>\n          </foreignObject>\n        );\n        break;\n      default:\n        logger.debug('unhandled', type);\n    }\n  }\n\n  return (\n    <g>\n      {canvas}\n    </g>\n  );\n};\n\nexport default Canvas;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport Cursor from './cursor';\nimport Slide from './slide';\nimport Canvas from './canvas';\nimport {\n  useCurrentContent,\n  useCurrentIndex,\n} from 'components/utils/hooks';\nimport { ID } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.presentation.wrapper.aria',\n    description: 'Aria label for the presentation wrapper',\n  },\n});\n\nconst buildViewBoxAttr = (viewBox) => {\n  const {\n    height,\n    x,\n    width,\n    y,\n  } = viewBox;\n\n  return `${x} ${y} ${width} ${height}`;\n};\n\nconst getViewBox = (index) => {\n  const inactive = {\n    height: 0,\n    x: 0,\n    width: 0,\n    y: 0,\n  };\n\n  if (index === -1) return inactive;\n\n  const currentData = storage.panzooms[index];\n\n  return {\n    height: currentData.height,\n    x: currentData.x,\n    width: currentData.width,\n    y: currentData.y,\n  };\n};\n\nconst Presentation = () => {\n  const intl = useIntl();\n  const currentContent = useCurrentContent();\n  const currentPanzoomIndex = useCurrentIndex(storage.panzooms);\n  const viewBox = getViewBox(currentPanzoomIndex);\n\n  const started = currentPanzoomIndex !== -1;\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('presentation-wrapper', { inactive: currentContent !== ID.PRESENTATION })}\n      id={ID.PRESENTATION}\n    >\n      <div className={cx('presentation', { logo: !started })}>\n        <svg\n          viewBox={buildViewBoxAttr(viewBox)}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <defs>\n            <clipPath id=\"viewBox\">\n              <rect\n                height={viewBox.height}\n                x={viewBox.x}\n                width={viewBox.width}\n                y={viewBox.y}\n              />\n            </clipPath>\n          </defs>\n          <g clipPath=\"url(#viewBox)\">\n            <Slide />\n            <Canvas />\n            <Cursor viewBox={viewBox} />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Presentation, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport videojs from 'video.js/core.es.js';\nimport { useCurrentContent } from 'components/utils/hooks';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport logger from 'utils/logger';\nimport storage from 'utils/data/storage';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.screenshare.wrapper.aria',\n    description: 'Aria label for the screenshare wrapper',\n  },\n});\n\nconst buildSources = () => {\n  return [\n    {\n      src: buildFileURL('deskshare/deskshare.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL('deskshare/deskshare.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => storage.media.find(m => source.type.includes(m)));\n};\n\nconst buildOptions = (sources) => {\n  return {\n    controls: false,\n    fill: true,\n    sources: sources.current,\n  };\n};\n\nconst Screenshare = () => {\n  const intl = useIntl();\n  const currentContent = useCurrentContent();\n  const sources = useRef(buildSources());\n  const element = useRef();\n\n  useEffect(() => {\n    if (!player.screenshare) {\n      const video = element.current;\n      if (!video) return;\n\n      player.screenshare = videojs(video, buildOptions(sources), () => {});\n      logger.debug(ID.SCREENSHARE, 'mounted');\n    }\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (player.screenshare) {\n        player.screenshare.dispose();\n        player.screenshare = null;\n        logger.debug(ID.SCREENSHARE, 'unmounted');\n      }\n    };\n  }, []);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('screenshare-wrapper', { inactive: currentContent !== ID.SCREENSHARE })}\n      id={ID.SCREENSHARE}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={element}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = () => true;\n\nexport default React.memo(Screenshare, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  src: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  src: '',\n};\n\nconst Image = ({\n  alt,\n  src,\n}) => {\n  const screenshare = src === ID.SCREENSHARE;\n\n  if (screenshare) {\n    return (\n      <div className={cx('thumbnail-image', { screenshare })}>\n        <Icon name={ID.SCREENSHARE} />\n      </div>\n    );\n  }\n\n  const logo = src.includes('logo');\n\n  return (\n    <img\n      alt={alt}\n      className={cx('thumbnail-image', { logo })}\n      src={buildFileURL(src)}\n    />\n  );\n};\n\nImage.propTypes = propTypes;\nImage.defaultProps = defaultProps;\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './image';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  index: PropTypes.number,\n  src: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  index: 0,\n  src: '',\n};\n\nconst Thumbnail = ({\n  alt,\n  index,\n  src,\n}) => {\n\n  return (\n    <div className=\"thumbnail\">\n      <Image\n        alt={alt}\n        src={src}\n      />\n      <div className=\"thumbnail-index\">\n        {index + 1}\n      </div>\n    </div>\n  )\n};\n\nThumbnail.propTypes = propTypes;\nThumbnail.defaultProps = defaultProps;\n\nexport default Thumbnail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnail from './thumbnail';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  index: PropTypes.number,\n  interactive: PropTypes.bool,\n  item: PropTypes.object,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  index: 0,\n  interactive: false,\n  item: {},\n  setRef: () => {},\n};\n\nconst Item = ({\n  active,\n  index,\n  interactive,\n  item,\n  setRef,\n}) => {\n  if (!interactive) {\n\n    return (\n      <div\n        className=\"thumbnail-wrapper\"\n        tabIndex=\"0\"\n      >\n        <Thumbnail\n          alt={item.alt}\n          index={index}\n          src={item.src}\n        />\n      </div>\n    );\n  }\n\n  const handleOnClick = () => {\n    if (interactive) player.primary.currentTime(item.timestamp);\n  };\n\n  return (\n    <div\n      className={cx('thumbnail-wrapper', { active, interactive })}\n      onClick={() => handleOnClick()}\n      onKeyPress={event => handleOnEnterPress(event, handleOnClick)}\n      ref={node => setRef(node, index)}\n      tabIndex=\"0\"\n    >\n      <Thumbnail\n        alt={item.alt}\n        index={index}\n        src={item.src}\n      />\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport './index.scss';\n\nconst DEFAULT = 'default';\nconst SOLID = 'solid';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  aria: PropTypes.string,\n  circle: PropTypes.bool,\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  aria: '',\n  circle: false,\n  disabled: false,\n  handleOnClick: () => {},\n  icon: '',\n  type: DEFAULT,\n};\n\nconst Button = ({\n  active,\n  aria,\n  circle,\n  disabled,\n  handleOnClick,\n  icon,\n  type,\n}) => {\n  const solid = type === SOLID;\n\n  const style = {\n    default: !solid && !disabled,\n    solid: (solid || active) && !disabled,\n    circle,\n    disabled,\n  };\n\n  return (\n    <div className=\"button-wrapper\">\n      <button\n        aria-label={aria}\n        className={cx('button', style)}\n        disabled={disabled}\n        onClick={() => handleOnClick()}\n      >\n        <Icon name={icon} />\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  clear: {\n    id: 'button.clear.aria',\n    description: 'Aria label for the clear button',\n  },\n});\n\nconst propTypes = {\n  interactive: PropTypes.bool,\n  onClick: PropTypes.func,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  interactive: false,\n  onClick: () => {},\n  search: [],\n};\n\nconst Clear = ({\n  interactive,\n  onClick,\n  search,\n}) => {\n  const intl = useIntl();\n\n  if (!interactive) return null;\n\n  if (isEmpty(search)) return null;\n\n  return (\n    <div className=\"clear-button\">\n      <Button\n        aria={intl.formatMessage(intlMessages.clear)}\n        handleOnClick={onClick}\n        icon=\"close\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nClear.propTypes = propTypes;\nClear.defaultProps = defaultProps;\n\nexport default Clear;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Item from './item';\nimport ClearButton from './buttons/clear';\nimport { useCurrentIndex } from 'components/utils/hooks';\nimport { thumbnails as config } from 'config';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport storage from 'utils/data/storage';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.thumbnails.wrapper.aria',\n    description: 'Aria label for the thumbnails wrapper',\n  },\n});\n\nconst propTypes = {\n  handleSearch: PropTypes.func,\n  interactive: PropTypes.bool,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  handleSearch: () => {},\n  interactive: false,\n  search: [],\n};\n\nconst Thumbnails = ({\n  handleSearch,\n  interactive,\n  search,\n}) => {\n  const currentIndex = useCurrentIndex(storage.thumbnails);\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const intl = useIntl();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  const isFiltered = (index) => {\n    if (interactive) {\n      return !isEmpty(search) && !search.includes(index);\n    } else {\n      return !search.includes(index);\n    }\n  }\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.LEFT, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"thumbnails-wrapper\"\n      id={ID.THUMBNAILS}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      {storage.thumbnails.reduce((result, item, index) => {\n        if (!isFiltered(index)) {\n          const active = index === currentIndex;\n\n          result.push(\n            <Item\n              active={active}\n              index={index}\n              interactive={interactive}\n              item={item}\n              setRef={setRef}\n            />\n          );\n        }\n\n        return result;\n      }, [])}\n      <ClearButton\n        interactive={interactive}\n        onClick={() => handleSearch([])}\n        search={search}\n      />\n    </div>\n  );\n};\n\nThumbnails.propTypes = propTypes;\nThumbnails.defaultProps = defaultProps;\n\nconst areEqual = (prevProps, nextProps) => {\n  if (!isEqual(prevProps.search, nextProps.search)) return false;\n\n  return true;\n};\n\nexport default React.memo(Thumbnails, areEqual);\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  fullscreen: {\n    id: 'button.fullscreen.aria',\n    description: 'Aria label for the fullscreen button',\n  },\n  restore: {\n    id: 'button.restore.aria',\n    description: 'Aria label for the restore button',\n  },\n});\n\nconst Fullscreen = ({\n  content,\n  fullscreen,\n  swap,\n  toggleFullscreen,\n}) => {\n  const intl = useIntl();\n\n  if (!layout.hasFullscreenButton(content, swap)) return null;\n\n  const aria = fullscreen\n    ? intl.formatMessage(intlMessages.restore)\n    : intl.formatMessage(intlMessages.fullscreen)\n  ;\n\n  const icon = fullscreen ? 'restore' : 'fullscreen';\n\n  return (\n    <div className=\"fullscreen-button\">\n      <Button\n        aria={aria}\n        handleOnClick={() => toggleFullscreen()}\n        icon={icon}\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.content !== nextProps.content) return false;\n\n  if (prevProps.fullscreen !== nextProps.fullscreen) return false;\n\n  if (prevProps.swap !== nextProps.swap) return false;\n\n  return true;\n};\n\nexport default React.memo(Fullscreen, areEqual);\n","import React from 'react';\nimport cx from 'classnames';\nimport Presentation from 'components/presentation';\nimport Screenshare from 'components/screenshare';\nimport Thumbnails from 'components/thumbnails';\nimport FullscreenButton from 'components/player/buttons/fullscreen';\nimport { LAYOUT } from 'utils/constants';\nimport { isEqual } from 'utils/data/validators';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst Content = ({\n  fullscreen,\n  handleSearch,\n  search,\n  swap,\n  toggleFullscreen,\n}) => {\n  if (layout.single) return null;\n\n  return (\n    <div className={cx('content', { 'swapped-content': swap })}>\n      <FullscreenButton\n        content={LAYOUT.CONTENT}\n        fullscreen={fullscreen}\n        swap={swap}\n        toggleFullscreen={toggleFullscreen}\n      />\n      <div className=\"top-content\">\n        <Presentation />\n        {layout.screenshare ? <Screenshare /> : null}\n      </div>\n      <div className={cx('bottom-content', { 'inactive': fullscreen })}>\n        <Thumbnails\n          handleSearch={handleSearch}\n          interactive\n          search={search}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.fullscreen !== nextProps.fullscreen) return false;\n\n  if (prevProps.swap !== nextProps.swap) return false;\n\n  if (!isEqual(prevProps.search, nextProps.search)) return false;\n\n  return true;\n};\n\nexport default React.memo(Content, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport videojs from 'video.js/core.es.js';\nimport { player as config } from 'config';\nimport {\n  EVENTS,\n  ID,\n} from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport logger from 'utils/logger';\nimport {\n  getFrequency,\n  getTime,\n} from 'utils/params';\nimport storage from 'utils/data/storage';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.webcams.wrapper.aria',\n    description: 'Aria label for the webcams wrapper',\n  },\n});\n\nconst buildSources = () => {\n  if (storage.fallback) {\n    return [\n      {\n        src: buildFileURL('audio/audio.webm'),\n        type: 'audio/webm',\n      },\n    ];\n  }\n\n  return [\n    {\n      src: buildFileURL('video/webcams.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL('video/webcams.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => storage.media.find(m => source.type.includes(m)));\n};\n\nconst buildTracks = () => {\n  return storage.captions.map(lang => {\n    const {\n      locale,\n      localeName,\n    } = lang;\n\n    return {\n      kind: 'captions',\n      src: buildFileURL(`caption_${locale}.vtt`),\n      srclang: locale,\n      label: localeName,\n    };\n  });\n};\n\nconst buildOptions = (sources, tracks) => {\n  return {\n    controlBar: {\n      fullscreenToggle: false,\n      pictureInPictureToggle: false,\n      volumePanel: {\n        inline: false,\n        vertical: true,\n      },\n    },\n    controls: true,\n    fill: true,\n    inactivityTimeout: 0,\n    playbackRates: config.rates,\n    sources: sources.current,\n    tracks: tracks.current,\n  };\n};\n\nconst dispatchTimeUpdate = (time) => {\n  const event = new CustomEvent(EVENTS.TIME_UPDATE, { detail: { time }});\n  document.dispatchEvent(event);\n};\n\nconst Webcams = () => {\n  const intl = useIntl();\n  const sources = useRef(buildSources());\n  const tracks = useRef(buildTracks());\n  const element = useRef();\n  const interval = useRef();\n\n  useEffect(() => {\n    if (!player.webcams) {\n      const video = element.current;\n      if (!video) return;\n\n      player.webcams = videojs(video, buildOptions(sources, tracks), () => {\n        player.webcams.on('play', () => {\n          const frequency = getFrequency();\n          interval.current = setInterval(() => {\n            const currentTime = player.webcams.currentTime();\n            dispatchTimeUpdate(currentTime);\n          }, 1000 / (frequency ? frequency : config.rps));\n        });\n\n        player.webcams.on('pause', () => clearInterval(interval.current));\n\n        player.webcams.on('seeked', () => {\n          const currentTime = player.webcams.currentTime();\n          dispatchTimeUpdate(currentTime);\n        });\n\n        const time = getTime();\n        if (time) {\n          player.webcams.on('loadedmetadata', () => {\n            const duration = player.webcams.duration();\n            if (time < duration) {\n              player.webcams.currentTime(time);\n            }\n          });\n        }\n      });\n      logger.debug(ID.WEBCAMS, 'mounted');\n    }\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (player.webcams) {\n        player.webcams.dispose();\n        player.webcams = null;\n        logger.debug(ID.WEBCAMS, 'unmounted');\n      }\n    };\n  }, []);\n\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"webcams-wrapper\"\n      id={ID.WEBCAMS}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={element}\n        />\n      </div>\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Webcams, areEqual);\n","import React from 'react';\nimport cx from 'classnames';\nimport FullscreenButton from 'components/player/buttons/fullscreen';\nimport Webcams from 'components/webcams';\nimport { LAYOUT } from 'utils/constants';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst Media = ({\n  fullscreen,\n  swap,\n  toggleFullscreen,\n}) => {\n\n  return (\n    <div className={cx('media', { 'swapped-media': swap || layout.single })}>\n      <FullscreenButton\n        content={LAYOUT.MEDIA}\n        fullscreen={fullscreen}\n        swap={swap}\n        toggleFullscreen={toggleFullscreen}\n      />\n      <Webcams />\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.fullscreen !== nextProps.fullscreen) return false;\n\n  if (prevProps.swap !== nextProps.swap) return false;\n\n  return true;\n};\n\nexport default React.memo(Media, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from 'components/utils/icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n};\n\nconst defaultProps = {\n  icon: '',\n  value: false,\n};\n\nconst Item = ({\n  icon,\n  value,\n}) => {\n  let element;\n  if (typeof value === 'boolean') {\n    element = <Icon name={value ? 'check' : 'close'} />;\n  } else {\n    element = value;\n  }\n\n  return (\n    <div className=\"item\">\n      <Icon name={icon} />\n      {element}\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport Item from './item';\nimport {\n  CONTENT,\n  ID,\n} from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst Data = () => {\n\n  return (\n    <div className=\"body-data\">\n      <Item\n        icon={ID.USERS}\n        key={ID.USERS}\n        value={storage.metadata.participants}\n      />\n      {CONTENT.map((item) => (\n        <Item\n          icon={item}\n          key={item}\n          value={storage.content[item]}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Data;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nconst propTypes = { code: PropTypes.string };\n\nconst defaultProps = { code: '' };\n\nconst Key = ({ code }) => {\n\n  return (\n    <div className=\"key\">\n      {code}\n    </div>\n  );\n};\n\nKey.propTypes = propTypes;\nKey.defaultProps = defaultProps;\n\nexport default Key;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Key from './key';\nimport { shortcuts as config } from 'config';\nimport './index.scss';\n\nconst SHORTCUTS = [\n  'fullscreen',\n  'play',\n  'section',\n  'seek.backward',\n  'seek.forward',\n  'skip.next',\n  'skip.previous',\n  'swap',\n];\n\nconst getCode = (shortcut) => {\n  const path = shortcut.split('.');\n\n  let code = config[path[0]];\n  for (let i = 1; i < path.length; i++) {\n    code = code[path[i]];\n  }\n\n  return code;\n};\n\nconst intlMessages = defineMessages({\n  title: {\n    id: 'player.about.modal.shortcuts.title',\n    description: 'Label for the about modal shortcuts title',\n  },\n  alt: {\n    id: 'player.about.modal.shortcuts.alt',\n    description: 'Label for the about modal shortcuts alt key',\n  },\n  shift: {\n    id: 'player.about.modal.shortcuts.shift',\n    description: 'Label for the about modal shortcuts shift key',\n  },\n  'fullscreen': {\n    id: 'player.about.modal.shortcuts.fullscreen',\n    description: 'Label for the about modal fullscreen shortcut',\n  },\n  'play': {\n    id: 'player.about.modal.shortcuts.play',\n    description: 'Label for the about modal play shortcut',\n  },\n  'section': {\n    id: 'player.about.modal.shortcuts.section',\n    description: 'Label for the about modal section shortcut',\n  },\n  'seek.backward': {\n    id: 'player.about.modal.shortcuts.seek.backward',\n    description: 'Label for the about modal seek backward shortcut',\n  },\n  'seek.forward': {\n    id: 'player.about.modal.shortcuts.seek.forward',\n    description: 'Label for the about modal seek forward shortcut',\n  },\n  'skip.next': {\n    id: 'player.about.modal.shortcuts.skip.next',\n    description: 'Label for the about modal skip next shortcut',\n  },\n  'skip.previous': {\n    id: 'player.about.modal.shortcuts.skip.previous',\n    description: 'Label for the about modal skip previous shortcut',\n  },\n  'swap': {\n    id: 'player.about.modal.shortcuts.swap',\n    description: 'Label for the about modal swap shortcut',\n  },\n});\n\nconst Shortcuts = () => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"body-shortcuts\">\n      <div className=\"title\">\n        {intl.formatMessage(intlMessages.title)}\n      </div>\n      <div className=\"list\">\n        <div className=\"content\">\n          {SHORTCUTS.map(shortcut => {\n\n            return (\n              <div className=\"shortcut\">\n                <div className=\"label\">\n                  {intl.formatMessage(intlMessages[shortcut])}\n                </div>\n                <div className=\"keys\">\n                  <Key code={intl.formatMessage(intlMessages.alt)} />\n                  <Key code={intl.formatMessage(intlMessages.shift)} />\n                  <Key code={getCode(shortcut)} />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Shortcuts;\n","import React from 'react';\nimport Data from './data';\nimport Shortcuts from './shortcuts';\nimport './index.scss';\n\nconst Body = () => {\n\n  return (\n    <div className=\"about-body\">\n      <Data />\n      <Shortcuts />\n    </div>\n  );\n};\n\nexport default Body;\n","import React from 'react';\nimport { BUILD } from 'utils/constants';\nimport './index.scss';\n\nconst Footer = () => {\n  return (\n    <div className=\"about-footer\">\n      {BUILD ? (\n        <span className=\"revision\">\n          {BUILD}\n        </span>\n      ) : (\n        null\n      )}\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n  FormattedDate,\n  FormattedTime,\n} from 'react-intl';\nimport { date } from 'config';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst Header = () => {\n  const {\n    end,\n    name,\n    start,\n  } = storage.metadata;\n\n  const subtitle = [];\n  if (date.enabled) {\n    subtitle.push(\n      <FormattedDate\n        value={new Date(start)}\n        day=\"numeric\"\n        month=\"long\"\n        year=\"numeric\"\n      />\n    );\n\n    subtitle.push(<FormattedTime value={new Date(start)} />);\n    subtitle.push(<FormattedTime value={new Date(end)} />);\n  }\n\n  return (\n    <div className=\"about-header\">\n      <div className=\"title\">\n        {name}\n      </div>\n      <div className=\"subtitle\">\n        {subtitle.map(s => <div className=\"item\">{s}</div>)}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  close: {\n    id: 'button.close.aria',\n    description: 'Aria label for the close button',\n  },\n});\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  onClose: PropTypes.func,\n};\n\nconst defaultProps = {\n  children: null,\n  onClose: () => {},\n};\n\nconst Modal = ({\n  children,\n  onClose,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal\">\n        <div className=\"modal-control\">\n          <Button\n            aria={intl.formatMessage(intlMessages.close)}\n            circle\n            handleOnClick={onClose}\n            icon=\"close\"\n          />\n        </div>\n        <div className=\"modal-content\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport Modal from 'components/utils/modal';\nimport './index.scss';\n\nconst propTypes = { handleClose: PropTypes.func };\n\nconst defaultProps = { handleClose: () => {} };\n\nconst About = ({ handleClose }) => {\n\n  return (\n    <Modal onClose={handleClose}>\n      <Header />\n      <Body />\n      <Footer />\n    </Modal>\n  );\n};\n\nAbout.propTypes = propTypes;\nAbout.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(About, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnails from 'components/thumbnails';\nimport { search as config } from 'config';\nimport './index.scss';\n\nconst propTypes = {\n  handleOnChange: PropTypes.func,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  handleOnChange: () => {},\n  search: [],\n};\n\nconst Body = ({\n  handleOnChange,\n  search,\n}) => {\n\n  return (\n    <div className=\"search-body\">\n      <input\n        maxLength={config.length.max}\n        minLength={config.length.min}\n        onChange={(event) => handleOnChange(event)}\n        type=\"text\"\n      />\n      <div className={cx('result', { active: true })}>\n        <Thumbnails\n          currentDataIndex={0}\n          handleSearch={null}\n          player={null}\n          search={search}\n        />\n      </div>\n    </div>\n  );\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\n\nexport default Body;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = {\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  disabled: false,\n  handleOnClick: () => {},\n};\n\nconst Footer = ({\n  disabled,\n  handleOnClick,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-footer\">\n      <Button\n        aria={intl.formatMessage(intlMessages.search)}\n        disabled={disabled}\n        handleOnClick={(event) => handleOnClick(event)}\n        icon=\"search\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nFooter.propTypes = propTypes;\nFooter.defaultProps = defaultProps;\n\nexport default Footer;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  title: {\n    id: 'player.search.modal.title',\n    description: 'Label for the search modal title',\n  },\n  subtitle: {\n    id: 'player.search.modal.subtitle',\n    description: 'Label for the search modal subtitle',\n  },\n});\n\nconst Header = () => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-header\">\n      <div className=\"title\">\n        {intl.formatMessage(intlMessages.title)}\n      </div>\n      <div className=\"subtitle\">\n        {intl.formatMessage(intlMessages.subtitle)}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { getCurrentDataIndex } from 'utils/data';\nimport storage from 'utils/data/storage';\nimport player from 'utils/player';\n\nconst play = () => {\n  if (player.primary.paused()) {\n    player.primary.play();\n  } else {\n    player.primary.pause();\n  }\n};\n\nconst search = (text, thumbnails) => {\n  const result = [];\n\n  const value = text.toLowerCase();\n  thumbnails.forEach((thumbnail, index) => {\n    const { alt } = thumbnail;\n\n    if (alt.toLowerCase().indexOf(value) !== -1) {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst seek = (seconds) => {\n  const min = 0;\n  const max = player.primary.duration();\n  const time = player.primary.currentTime() + seconds;\n\n  if (time < min) {\n    player.primary.currentTime(min);\n  } else if (time > max) {\n    player.primary.currentTime(max);\n  } else {\n    player.primary.currentTime(time);\n  }\n};\n\nconst skip = (change) => {\n  const min = 0;\n  const max = storage.slides.length - 1;\n  const time = player.primary.currentTime();\n\n  const current = getCurrentDataIndex(storage.slides, time);\n  if (current === -1) return null;\n\n  const index = current + change;\n\n  let timestamp;\n  if (index < min) {\n    timestamp = storage.slides[min].timestamp;\n  } else if (index > max) {\n    timestamp = storage.slides[max].timestamp;\n  } else {\n    timestamp = storage.slides[index].timestamp;\n  }\n\n  if (typeof timestamp !== 'undefined') {\n    player.primary.currentTime(timestamp);\n  }\n};\n\nexport {\n  play,\n  search,\n  seek,\n  skip,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport { search as config } from 'config';\nimport Modal from 'components/utils/modal';\nimport { search as getSearch } from 'utils/actions';\nimport storage from 'utils/data/storage';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst getValue = (event) => {\n  if (event && event.target) return event.target.value;\n\n  return null;\n};\n\nconst isValid = (value) => {\n  if (value && typeof value === 'string') {\n    return value.length >= config.length.min;\n  }\n\n  return false;\n};\n\nconst propTypes = {\n  handleClose: PropTypes.func,\n  handleSearch: PropTypes.func,\n};\n\nconst defaultProps = {\n  handleClose: () => {},\n  handleSearch: () => {},\n};\n\nconst Search = ({\n  handleClose,\n  handleSearch,\n}) => {\n  const [disabled, setDisabled] = useState(true);\n  const [search, setSearch] = useState([]);\n\n  const handleOnChange = (event) => {\n    const value = getValue(event);\n    if (isValid(value)) {\n      const result = getSearch(value, storage.thumbnails);\n\n      // If different, update search\n      if (!isEqual(search, result)) {\n        setSearch(result);\n      }\n\n      // Check to enable\n      if (disabled) setDisabled(false);\n    } else {\n      // If not empty, clear search\n      if (!isEmpty(search)) {\n        setSearch([]);\n      }\n\n      // Chack to disable\n      if (!disabled) setDisabled(true);\n    }\n  };\n\n  const handleOnClick = () => {\n    handleSearch(search);\n    handleClose();\n  };\n\n  return (\n    <Modal onClose={handleClose}>\n      <Header />\n      <Body\n        handleOnChange={(event) => handleOnChange(event)}\n        search={search}\n      />\n      <Footer\n        disabled={disabled}\n        handleOnClick={() => handleOnClick()}\n      />\n    </Modal>\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Search, areEqual);\n","import React from 'react';\nimport AboutModal from 'components/modals/about';\nimport SearchModal from 'components/modals/search';\nimport { ID } from 'utils/constants';\n\nconst Modal = ({\n  handleClose,\n  handleSearch,\n  modal,\n}) => {\n  const open = modal.length > 0;\n\n  if (!open) return null;\n\n  switch (modal) {\n    case ID.ABOUT:\n      return (\n        <AboutModal handleClose={handleClose} />\n      );\n    case ID.SEARCH:\n      return (\n        <SearchModal\n          handleClose={handleClose}\n          handleSearch={handleSearch}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.modal !== nextProps.modal) return false;\n\n  return true;\n};\n\nexport default React.memo(Modal, areEqual);\n","import React from 'react';\nimport './index.scss';\n\nconst Bottom = () => {\n  return <div className=\"bottom-bar\" />;\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Bottom, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n  FormattedDate,\n} from 'react-intl';\nimport cx from 'classnames';\nimport {\n  controls as config,\n  date,\n} from 'config';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport storage from 'utils/data/storage';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  about: {\n    id: 'button.about.aria',\n    description: 'Aria label for the about button',\n  },\n});\n\nconst propTypes = { openAbout: PropTypes.func };\n\nconst defaultProps = { openAbout: () => {} };\n\nconst Title = ({ openAbout }) => {\n  const intl = useIntl();\n  const start = <FormattedDate value={new Date(storage.metadata.start)} />;\n\n  const interactive = layout.control && config.about;\n  if (!interactive) {\n\n    return (\n      <span className=\"title\">\n        {storage.metadata.name}\n        {date.enabled ? (\n          <> - {start}</>\n        ) : null}\n      </span>\n    );\n  }\n\n  return (\n    <span\n      aria={intl.formatMessage(intlMessages.about)}\n      className={cx('title', { interactive })}\n      onClick={openAbout}\n      onKeyPress={event => handleOnEnterPress(event, openAbout)}\n      tabIndex=\"0\"\n    >\n      {storage.metadata.name}\n      {date.enabled ? (\n        <> - {start}</>\n      ) : null}\n    </span>\n  );\n};\n\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { controls as config } from 'config';\nimport { ID } from 'utils/constants';\nimport layout from 'utils/layout';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = { openSearch: PropTypes.func };\n\nconst defaultProps = { openSearch: () => {} };\n\nconst Search = ({ openSearch }) => {\n  const intl = useIntl();\n\n  if (!layout.control || !config.search || layout.single) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.search)}\n      circle\n      handleOnClick={openSearch}\n      icon={ID.SEARCH}\n    />\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { controls as config } from 'config';\nimport layout from 'utils/layout';\n\nconst intlMessages = defineMessages({\n  section: {\n    id: 'button.section.aria',\n    description: 'Aria label for the section button',\n  },\n});\n\nconst propTypes = {\n  section: PropTypes.bool,\n  toggleSection: PropTypes.func,\n};\n\nconst defaultProps = {\n  section: true,\n  toggleSection: () => {},\n};\n\nconst Section = ({\n  section,\n  toggleSection,\n}) => {\n  const intl = useIntl();\n\n  if (!layout.control || !config.section) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.section)}\n      circle\n      handleOnClick={toggleSection}\n      icon={section ? 'left' : 'right'}\n    />\n  );\n};\n\nSection.propTypes = propTypes;\nSection.defaultProps = defaultProps;\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { controls as config } from 'config';\nimport { ID } from 'utils/constants';\nimport layout from 'utils/layout';\n\nconst intlMessages = defineMessages({\n  swap: {\n    id: 'button.swap.aria',\n    description: 'Aria label for the swap button',\n  },\n});\n\nconst propTypes = { toggleSwap: PropTypes.func };\n\nconst defaultProps = { toggleSwap: () => {} };\n\nconst Swap = ({ toggleSwap }) => {\n  const intl = useIntl();\n\n  if (!layout.control || !config.swap || layout.single) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.swap)}\n      circle\n      handleOnClick={toggleSwap}\n      icon={ID.SWAP}\n    />\n  );\n};\n\nSwap.propTypes = propTypes;\nSwap.defaultProps = defaultProps;\n\nexport default Swap;\n","import React, { useState } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport {\n  enable,\n  disable,\n} from 'darkreader';\nimport Button from 'components/utils/button';\nimport { controls as config } from 'config';\nimport { THEME } from 'utils/constants';\nimport layout from 'utils/layout';\n\nconst intlMessages = defineMessages({\n  theme: {\n    id: 'button.theme.aria',\n    description: 'Aria label for the theme button',\n  },\n});\n\nconst themeOptions = {};\n\nconst css = `\n.video-js .vjs-volume-level,\n.video-js .vjs-play-progress {\n  background-color: white;\n}\n`;\n\nconst ignoreInlineStyle = [\n  'g > circle',\n  'g > line',\n  'g > path',\n  'g > polygon',\n  'g > polyline',\n  'g > foreignObject',\n];\n\nconst fixes = {\n  css,\n  ignoreInlineStyle,\n};\n\nconst Theme = () => {\n  const intl = useIntl();\n  const [dark, setDark] = useState(false);\n\n  const toggleTheme = () => {\n    dark ? disable() : enable(themeOptions, fixes);\n    setDark(prevDark => !prevDark);\n  };\n\n  if (!layout.control || !config.theme) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.theme)}\n      circle\n      handleOnClick={toggleTheme}\n      icon={dark ? THEME.LIGHT : THEME.DARK}\n    />\n  );\n};\n\nexport default Theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Title from './title';\nimport SearchButton from './buttons/search';\nimport SectionButton from './buttons/section';\nimport SwapButton from './buttons/swap';\nimport ThemeButton from './buttons/theme';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst propTypes = {\n  openModal: PropTypes.func,\n  section: PropTypes.bool,\n  toggleSection: PropTypes.func,\n  toggleSwap: PropTypes.func,\n};\n\nconst defaultProps = {\n  openModal: () => {},\n  section: false,\n  toggleSection: () => {},\n  toggleSwap: () => {},\n};\n\nconst Top = ({\n  openModal,\n  section,\n  toggleSection,\n  toggleSwap,\n}) => {\n\n  return (\n    <div className=\"top-bar\">\n      <div className=\"left\">\n        <SectionButton\n          section={section}\n          toggleSection={toggleSection}\n        />\n      </div>\n      <div className=\"center\">\n        <Title openAbout={() => openModal(ID.ABOUT)} />\n      </div>\n      <div className=\"right\">\n        <ThemeButton />\n        <SearchButton openSearch={() => openModal(ID.SEARCH)} />\n        <SwapButton toggleSwap={toggleSwap} />\n      </div>\n    </div>\n  );\n};\n\nTop.propTypes = propTypes;\nTop.defaultProps = defaultProps;\n\n// Checks the side section state\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.section === nextProps.section;\n};\n\nexport default React.memo(Top, areEqual);\n","import { shortcuts as config } from 'config';\nimport logger from './logger';\n\nexport default class Shortcuts {\n  constructor(actions) {\n    this.enabled = config.enabled;\n\n    if (!this.enabled) {\n      logger.debug('shortcuts', 'disabled');\n    } else {\n      this.init(actions);\n    }\n  }\n\n  init(actions) {\n    this.listeners = [];\n\n    for (let prop in actions) {\n      const value = actions[prop];\n      if (typeof value === 'function') {\n        const key = config[prop];\n        this.add(key, value);\n      } else {\n        for (let p in value) {\n          const k = config[prop][p];\n          const v = value[p];\n          this.add(k, v);\n        }\n      }\n    }\n  }\n\n  add(key, action) {\n    if (!key || typeof key !== 'string') {\n      logger.warn('shortcuts', 'invalid', 'key');\n      return null;\n    } else if (key.length === 0) {\n      return null;\n    }\n\n    if (!action || typeof action !== 'function') {\n      logger.warn('shortcuts', 'invalid', 'action');\n      return null;\n    }\n\n    const listener = document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.shiftKey) {\n        if (e.key === key) action();\n      }\n    });\n\n    this.listeners.push(listener);\n  }\n\n  destroy() {\n    this.listeners.forEach(listener => {\n      document.removeEventListener(listener);\n    });\n  }\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { shortcuts as config } from 'config';\nimport Application from './application';\nimport Content from './content';\nimport Media from './media';\nimport Modal from './modal';\nimport BottomBar from 'components/bars/bottom';\nimport TopBar from 'components/bars/top';\nimport {\n  play,\n  seek,\n  skip,\n} from 'utils/actions';\nimport { ID } from 'utils/constants';\nimport layout from 'utils/layout';\nimport Shortcuts from 'utils/shortcuts';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.wrapper.aria',\n    description: 'Aria label for the player wrapper',\n  },\n});\n\nconst Player = () => {\n  const intl = useIntl();\n\n  const [fullscreen, setFullscreen] = useState(false);\n  const [modal, setModal] = useState('');\n  const [search, setSearch] = useState([]);\n  const [section, setSection] = useState(layout.section);\n  const [swap, setSwap] = useState(layout.swap);\n\n  const shortcuts = useRef();\n\n  useEffect(() => {\n    const { seconds } = config.seek;\n\n    const actions = {\n      fullscreen: () => setFullscreen(prevFullscreen => !prevFullscreen),\n      play: () => play(),\n      section: () => setSection(prevSection => !prevSection),\n      seek: {\n        backward: () => seek(-seconds),\n        forward: () => seek(+seconds),\n      },\n      skip: {\n        next: () => skip(+1),\n        previous: () => skip(-1),\n      },\n      swap: () => setSwap(prevSwap => !prevSwap),\n    };\n\n    shortcuts.current = new Shortcuts(actions);\n\n    return () => {\n      if (shortcuts.current) shortcuts.current.destroy();\n    };\n  }, []);\n\n  const style = {\n    'fullscreen-content': fullscreen,\n    'hidden-section': !section,\n    'single-content': layout.single,\n  };\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('player-wrapper', style)}\n      id={ID.PLAYER}\n    >\n      <TopBar\n        openModal={(type) => setModal(type)}\n        section={section}\n        toggleSection={() => setSection(prevSection => !prevSection)}\n        toggleSwap={() => setSwap(prevSwap => !prevSwap)}\n      />\n      <Media\n        fullscreen={fullscreen}\n        swap={swap}\n        toggleFullscreen={() => setFullscreen(prevFullscreen => !prevFullscreen)}\n      />\n      <Application />\n      <Content\n        fullscreen={fullscreen}\n        handleSearch={(value) => setSearch(value)}\n        search={search}\n        swap={swap}\n        toggleFullscreen={() => setFullscreen(prevFullscreen => !prevFullscreen)}\n      />\n      <BottomBar />\n      <Modal\n        handleClose={() => setModal('')}\n        handleSearch={(value) => setSearch(value)}\n        modal={modal}\n      />\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useRef, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Data from './data';\nimport Dots from './dots';\nimport Error from 'components/error';\nimport Player from 'components/player';\nimport {\n  ERROR,\n  ID,\n} from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport layout from 'utils/layout';\nimport logger from 'utils/logger';\nimport {\n  getLayout,\n  parseRecordId,\n} from 'utils/params';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'loader.wrapper.aria',\n    description: 'Aria label for the loader wrapper',\n  },\n});\n\nconst FEEDBACK = 1 * 1000;\n\nconst initError = (recordId) => recordId ? null : ERROR.BAD_REQUEST;\n\nconst Loader = ({ match }) => {\n  const intl = useIntl();\n  const params = useParams();\n  const recordId = useRef(parseRecordId(params));\n  const counter = useRef(0);\n\n  const [error, setError] = useState(initError(recordId.current));\n  const [, setUpdate] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n\n  if (error) return <Error code={error} />;\n\n  const onError = (error) => {\n    logger.error('loader', 'error', error);\n    setError(error);\n  };\n\n  const onUpdate = (data) => {\n    logger.debug('loader', 'update', data);\n    counter.current += 1;\n    setUpdate(counter.current);\n  };\n\n  const onLoaded = () => {\n    logger.debug('loader', 'loaded');\n    setTimeout(() => setLoaded(true), FEEDBACK);\n  };\n\n  storage.fetch(recordId.current, onUpdate, onLoaded, onError);\n\n  if (loaded) {\n    layout.mode = getLayout();\n\n    return <Player />;\n  }\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"loader-wrapper\"\n      id={ID.LOADER}\n    >\n      <div className=\"loader-top\" />\n      <div className=\"loader-middle\">\n        <Dots />\n      </div>\n      <div className=\"loader-bottom\">\n        <Data data={storage.built} />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { ERROR } from 'utils/constants';\nimport Error from './error';\nimport Loader from './loader';\n\nconst Router = () => {\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route\n          path=\"/:recordId\"\n          element={<Loader />}\n        />\n        <Route render={() => <Error code={ERROR.NOT_FOUND} />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import af from './af.json';\nimport ar from './ar.json';\nimport az from './az.json';\nimport bg_BG from './bg_BG.json';\nimport bn from './bn.json';\nimport ca from './ca.json';\nimport cs_CZ from './cs_CZ.json';\nimport da from './da.json';\nimport de from './de.json';\nimport dv from './dv.json';\nimport el_GR from './el_GR.json';\nimport en from './en.json';\nimport eo from './eo.json';\nimport es from './es.json';\nimport es_419 from './es_419.json';\nimport es_ES from './es_ES.json';\nimport es_MX from './es_MX.json';\nimport et from './et.json';\nimport eu from './eu.json';\nimport fa_IR from './fa_IR.json';\nimport fi from './fi.json';\nimport fr from './fr.json';\nimport gl from './gl.json';\nimport he from './he.json';\nimport hi_IN from './hi_IN.json';\nimport hr from './hr.json';\nimport hu_HU from './hu_HU.json';\nimport hy from './hy.json';\nimport id from './id.json';\nimport it_IT from './it_IT.json';\nimport ja from './ja.json';\nimport ka from './ka.json';\nimport km from './km.json';\nimport kn from './kn.json';\nimport ko_KR from './ko_KR.json';\nimport lt_LT from './lt_LT.json';\nimport lo_LA from './lo_LA.json';\nimport lv from './lv.json';\nimport ml from './ml.json';\nimport mn_MN from './mn_MN.json';\nimport nb_NO from './nb_NO.json';\nimport nl from './nl.json';\nimport oc from './oc.json';\nimport pt from './pt.json';\nimport pt_BR from './pt_BR.json';\nimport pl_PL from './pl_PL.json';\nimport ro_RO from './ro_RO.json';\nimport ru from './ru.json';\nimport sk_SK from './sk_SK.json';\nimport sl from './sl.json';\nimport sr from './sr.json';\nimport sv_SE from './sv_SE.json';\nimport ta from './ta.json';\nimport te from './te.json';\nimport th from './th.json';\nimport tr from './tr.json';\nimport tr_TR from './tr_TR.json';\nimport uk_UA from './uk_UA.json';\nimport vi from './vi.json';\nimport vi_VN from './vi_VN.json';\nimport zh_CN from './zh_CN.json';\nimport zh_TW from './zh_TW.json';\n\nconst messages = {\n  af,\n  ar,\n  az,\n  bg_BG,\n  bn,\n  ca,\n  cs_CZ,\n  da,\n  de,\n  dv,\n  el_GR,\n  en,\n  eo,\n  es,\n  es_419,\n  es_ES,\n  es_MX,\n  et,\n  eu,\n  fa_IR,\n  fi,\n  fr,\n  gl,\n  he,\n  hi_IN,\n  hr,\n  hu_HU,\n  hy,\n  id,\n  it_IT,\n  ja,\n  ka,\n  km,\n  kn,\n  ko_KR,\n  lt_LT,\n  lo_LA,\n  lv,\n  ml,\n  mn_MN,\n  nb_NO,\n  nl,\n  oc,\n  pt,\n  pt_BR,\n  pl_PL,\n  ro_RO,\n  ru,\n  sk_SK,\n  sl,\n  sr,\n  sv_SE,\n  ta,\n  te,\n  th,\n  tr,\n  tr_TR,\n  uk_UA,\n  vi,\n  vi_VN,\n  zh_CN,\n  zh_TW,\n};\n\nexport default messages;\n","import { locale as config } from 'config';\nimport messages from './messages';\nimport { getSearchParam } from 'utils/params';\n\nconst RTL_LOCALES = ['ar', 'dv', 'fa', 'he'];\nconst FALLBACK_LOCALE = 'en';\n\nconst localeToFile = (locale) => locale.replace('-', '_');\n\nconst fileToLocale = (locale) => locale.replace('_', '-');\n\nconst setDirection = (language) => {\n  if (RTL_LOCALES.includes(language)) {\n    document.body.parentNode.setAttribute('dir', 'rtl');\n  } else {\n    document.body.parentNode.setAttribute('dir', 'ltr');\n  }\n};\n\nconst getLocale = () => {\n  const locale = getSearchParam('locale') || navigator.language;\n\n  let file = localeToFile(locale);\n  let [ language, ] = file.split('_');\n\n  // If the locale is missing, try the language fallback\n  if (!messages[file]) {\n    if (messages[language]) {\n      file = language;\n    } else {\n      file = config.default;\n      [ language, ] = config.default.split('_');\n    }\n  }\n\n  setDirection(language);\n\n  return fileToLocale(file);\n};\n\nconst getMessages = (locale) => {\n  const file = localeToFile(locale);\n  if (file !== FALLBACK_LOCALE) {\n    return Object.assign(messages[FALLBACK_LOCALE], messages[file]);\n  }\n\n  return messages[file];\n};\n\nexport {\n  getLocale,\n  getMessages,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from \"react-intl\";\nimport Loader from 'components/loader';\nimport Router from 'components/router';\nimport {\n  getLocale,\n  getMessages,\n} from 'locales';\nimport { ROUTER } from 'utils/constants';\nimport { getStyle } from 'utils/params';\nimport './index.scss';\n\nconst locale = getLocale();\nconst style = getStyle();\n\nReactDOM.render(\n  (\n    <IntlProvider\n      locale={locale}\n      messages={getMessages(locale)}\n    >\n      {style ? <link rel=\"stylesheet\" type=\"text/css\" href={style} /> : null}\n      {ROUTER ? <Router /> : <Loader />}\n    </IntlProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}