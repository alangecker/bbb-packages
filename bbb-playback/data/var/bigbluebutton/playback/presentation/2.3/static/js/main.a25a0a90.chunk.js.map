{"version":3,"sources":["components/loader/data/item.js","utils/constants.js","components/loader/data/index.js","components/loader/dots.js","components/error/index.js","components/chat/messages/user/text.js","utils/logger.js","utils/data/validators.js","utils/builder.js","utils/data/storage.js","utils/hash.js","utils/params.js","utils/data/index.js","components/chat/messages/info.js","components/utils/icon/index.js","components/utils/avatar/index.js","utils/data/handlers.js","components/chat/messages/margin.js","utils/synchronizer.js","utils/player.js","components/chat/messages/message.js","components/chat/messages/user/index.js","components/chat/messages/system/poll/options.js","components/chat/messages/system/poll/question.js","components/chat/messages/system/poll/result.js","components/chat/messages/system/message.js","components/chat/messages/system/poll/index.js","components/chat/messages/system/video/url.js","components/chat/messages/system/video/index.js","components/chat/messages/index.js","components/chat/index.js","components/notes/index.js","components/player/application/content.js","components/player/application/control.js","components/player/application/index.js","components/presentation/cursor.js","components/presentation/slide/proxy.js","components/presentation/slide/index.js","components/presentation/canvas/poll.js","components/presentation/canvas/index.js","components/presentation/index.js","components/screenshare/index.js","components/thumbnails/image.js","components/thumbnails/thumbnail.js","components/thumbnails/item.js","components/utils/button/index.js","components/thumbnails/buttons/clear.js","components/thumbnails/index.js","components/webcams/index.js","components/bars/bottom.js","components/bars/top/title.js","components/bars/top/buttons/search.js","components/bars/top/buttons/section.js","components/bars/top/buttons/swap.js","utils/layout.js","components/bars/top/index.js","components/modals/about/item.js","components/modals/about/body.js","components/modals/about/footer.js","components/modals/about/header.js","components/utils/modal/index.js","components/modals/about/index.js","components/modals/search/body.js","components/modals/search/footer.js","components/modals/search/header.js","utils/actions.js","components/modals/search/index.js","utils/shortcuts.js","components/player/index.js","components/loader/index.js","components/router.js","locales/messages/index.js","locales/index.js","index.js"],"names":["Item","icon","value","className","cx","loaded","style","transition","defaultProps","BUILD","process","MEDIA_ROOT_URL","REACT_APP_MEDIA_ROOT_URL","NO_ROUTER","REACT_APP_NO_ROUTER","ERROR","ID","CONTENT","LAYOUT","NUMBERS","POSITIONS","SHAPES","ROUTER","Data","data","map","item","Dots","areEqual","React","memo","intlMessages","defineMessages","aria","id","description","Error","code","intl","useIntl","formatMessage","Text","active","hyperlink","text","options","inactive","Fragment","params","URLSearchParams","window","location","search","debug","has","logger","info","console","warn","error","hasIndex","index","isEmpty","length","hasPresentation","slides","i","src","includes","hasProperty","object","property","hasOwnProperty","isActive","time","timestamp","clear","cleared","wasCleared","visible","isVisible","isCurrent","current","next","isArray","isValid","isString","isEqual","first","second","type","equal","every","valid","Array","getAttr","attr","getChildren","children","getId","match","parseInt","shift","getNumbers","trimmed","trim","replace","split","v","parseFloat","buildCanvases","group","canvases","canvas","canvasAttr","canvasId","draws","g","drawAttr","undo","items","forEach","buildStyle","drawId","shape","image","rect","Object","assign","polyline","line","polygon","circle","path","switch","foreignObject","child","grandchildren","grandchild","join","parseText","buildShapes","result","svg","img","slideId","in","push","height","width","sort","a","b","buildSlides","thumbnails","reduce","slide","build","filename","Promise","resolve","reject","fileType","getFileType","config","alternates","presentation","buildAlternates","captions","polls","buildPolls","videos","r","url","external_video_url","buildVideos","notes","buildNotes","shapes","explicitChildren","preserveChildrenOrder","charsAsChildren","getOptions","parseStringPromise","then","chat","popcorn","chattimeline","out","message","decodeXML","clearHyperlink","initials","name","slice","toLowerCase","getInitials","buildChat","cursor","recording","event","position","x","y","buildCursor","metadata","meeting","meta","end","end_time","participants","start","start_time","buildMetadata","panzooms","panzoom","viewbox","viewBox","buildPanzooms","screenshare","start_timestamp","stop_timestamp","buildScreenshare","catch","STATE","STATUS","DATA","hasLoaded","keys","files","fetchFile","recordId","onUpdate","onLoaded","onError","file","buildFileURL","fetch","response","ok","json","content","fetchMedia","fetches","medias","method","all","responses","media","find","endsWith","storage","this","thumbnail","alt","found","addAlternatesToThumbnails","hash","str","charCodeAt","getMediaPath","param","getSearchParam","mediaPath","get","parseTimeToSeconds","patterns","hours","minutes","seconds","timeToSeconds","h","m","s","rootUrl","fileUrl","getActiveContent","SCREENSHARE","PRESENTATION","isEnabled","getBar","percentage","bar","p","half","repeat","ltr","document","dir","concat","getCurrentDataIndex","stop","middle","Math","floor","pop","POLL_TYPES","YN","YNA","TF","POLL_KEYS","Info","milliseconds","getTimestampAsMilliseconds","hourCycle","hour","minute","timeZone","Icon","Avatar","getAvatarStyle","handleOnEnterPress","action","key","handleAutoScroll","fNode","cNode","direction","align","pNode","parentNode","scrollLeft","firstNode","currentNode","clientWidth","offsetLeft","spacing","parentWidth","horizontalOffset","getScrollLeft","scrollTop","clientHeight","offsetTop","parentHeight","verticalOffset","getScrollTop","Margin","onClick","onKeyPress","tabIndex","STATUSES","EVENTS","Synchronizer","primary","secondary","status","synching","init","on","play","pause","currentTime","playbackRate","PLAYERS","SYNCHRONIZER","player","webcams","synchronizer","Message","User","prevProps","nextProps","yes","no","abstention","true","false","Options","answers","label","getPollLabel","question","Question","Result","responders","total","numVotes","toFixed","Poll","Url","Video","Messages","currentDataIndex","setRef","messages","getMessageType","ref","node","Chat","interaction","useRef","useEffect","scroll","onMouseEnter","onMouseLeave","Notes","dangerouslySetInnerHTML","__html","Content","currentChatIndex","APPLICATIONS","Control","toggleApplication","application","DEFAULT","Application","control","useState","setCurrent","Cursor","cy","Proxy","logo","Slide","href","fill","stroke","strokeWidth","transform","Canvas","drawsInterval","j","intermediate","x1","y1","x2","y2","d","points","xmlns","buildViewBoxAttr","Presentation","currentCursorIndex","currentPanzoomIndex","currentSlideIndex","currentData","getViewBox","getCursor","xmlnsXlink","clipPath","Screenshare","sources","filter","source","element","video","videojs","controls","buildOptions","dispose","playsInline","preload","Image","Thumbnail","interactive","handleOnClick","Button","disabled","ghost","solid","default","Clear","Thumbnails","handleSearch","isFiltered","Webcams","onTimeUpdate","tracks","lang","locale","localeName","kind","srclang","controlBar","fullscreenToggle","pictureInPictureToggle","volumePanel","inline","vertical","inactivityTimeout","playbackRates","rates","setInterval","rps","clearInterval","duration","Bottom","about","Title","toggleAbout","date","Date","Search","enabled","toggleSearch","section","Section","toggleSection","swap","Swap","toggleSwap","MODE","layout","DISABLED","mode","MEDIA","SWAPPED","getBottomContentStyle","fullscreen","getContentStyle","getMediaStyle","single","getPlayerStyle","hasFullscreenButton","isContentVisible","Top","Body","Footer","Header","subtitle","day","month","year","close","Modal","onClose","About","toggleModal","handleOnChange","maxLength","max","minLength","min","onChange","title","seek","skip","change","setDisabled","setSearch","target","getValue","indexOf","getSearch","Shortcuts","actions","prop","listeners","add","k","listener","addEventListener","e","altKey","shiftKey","removeEventListener","restore","Player","props","state","modal","bind","handleTimeUpdate","initShortcuts","shortcuts","destroy","setState","toggleFullscreen","toggleThumbnails","previous","backward","forward","open","renderFullscreenButton","getDraws","currentDrawsInterval","currentDataInterval","getCurrentDataInterval","renderPresentation","renderScreenshare","renderThumbnails","renderTopBar","renderMedia","renderApplication","renderContent","renderBottomBar","renderModal","PureComponent","Loader","counter","getRecordId","initError","setError","setUpdate","setLoaded","setTimeout","getTime","built","Router","basename","component","render","ar","de","en","es","fa","fr","it","ja","pt","ru","tr","RTL_LOCALES","navigator","language","body","setAttribute","setDirection","getLocale","styles","getStyle","ReactDOM","rel","getElementById"],"mappings":"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","file":"static/js/main.a25a0a90.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst TRANSITION = .5;\n\nconst propTypes = {\n  icon: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n};\n\nconst defaultProps = {\n  icon: '',\n  value: false,\n};\n\nconst Item = ({\n  icon,\n  value,\n}) => {\n\n  return (\n    <div\n      className={cx('item', { loaded: value })}\n      style={{ transition: `opacity ${TRANSITION}s ease-in` }}\n    >\n      <div className={`icon-${icon}`} />\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","const BUILD = process.env.REACT_APP_BBB_PLAYBACK_BUILD;\nconst MEDIA_ROOT_URL = process.env.REACT_APP_MEDIA_ROOT_URL;\nconst NO_ROUTER = process.env.REACT_APP_NO_ROUTER;\n\nconst ERROR = {\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  NOT_ACCEPTABLE: 406,\n  PROXY_AUTHENTICATION_REQUIRED: 407,\n  REQUEST_TIMEOUT: 408,\n  CONFLICT: 409,\n  GONE: 410,\n};\n\nconst ID = {\n  ABOUT: 'about',\n  ALTERNATES: 'alternates',\n  CAPTIONS: 'captions',\n  CHAT: 'chat',\n  CURSOR: 'cursor',\n  DESKSHARE: 'deskshare',\n  ERROR: 'error',\n  LOADER: 'loader',\n  MEDIA: 'media',\n  MESSAGES: 'messages',\n  METADATA: 'metadata',\n  NOTES: 'notes',\n  PANZOOMS: 'panzooms',\n  PLAYER: 'player',\n  POLLS: 'polls',\n  PRESENTATION: 'presentation',\n  SCREENSHARE: 'screenshare',\n  SEARCH: 'search',\n  SETTINGS: 'settings',\n  SHAPES: 'shapes',\n  STORAGE: 'storage',\n  SWAP: 'swap',\n  THUMBNAILS: 'thumbnails',\n  USERS: 'users',\n  VIDEOS: 'videos',\n  WEBCAMS: 'webcams',\n};\n\nconst CONTENT = [\n  ID.PRESENTATION,\n  ID.CHAT,\n  ID.POLLS,\n  ID.VIDEOS,\n  ID.NOTES,\n  ID.SCREENSHARE,\n  ID.CAPTIONS,\n];\n\nconst LAYOUT = {\n  CONTENT: 'content',\n  DISABLED: 'disabled',\n  MEDIA: 'media',\n  SWAPPED: 'swapped',\n};\n\nconst NUMBERS = [\n  'zero', 'one', 'two', 'three',\n  'four', 'five', 'six', 'seven',\n  'eight', 'nine', 'ten', 'eleven',\n  'twelve', 'thirteen', 'fourteen', 'fifteen',\n];\n\nconst POSITIONS = {\n  BOTTOM: 'bottom',\n  CENTER: 'center',\n  LEFT: 'left',\n  MIDDLE: 'middle',\n  RIGHT: 'right',\n  TOP: 'top',\n};\n\nconst SHAPES = {\n  CIRCLE: 'circle',\n  LINE: 'line',\n  PATH: 'path',\n  POLL: 'poll',\n  POLYGON: 'polygon',\n  POLYLINE: 'polyline',\n  TEXT: 'text',\n};\n\nconst getRouter = () => {\n  if (typeof NO_ROUTER !== 'undefined') {\n    if (NO_ROUTER) return false;\n  }\n\n  return true;\n};\n\nconst ROUTER = getRouter();\n\nexport {\n  BUILD,\n  CONTENT,\n  ERROR,\n  ID,\n  LAYOUT,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  POSITIONS,\n  ROUTER,\n  SHAPES,\n};\n","import React from 'react';\nimport Item from './item';\nimport { CONTENT } from 'utils/constants';\nimport './index.scss';\n\nconst Data = ({ data }) => {\n\n  return (\n    <div className=\"data-wrapper\">\n       {CONTENT.map((item) => (\n        <Item\n          icon={item}\n          key={item}\n          value={data[item]}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Data;\n","import React from 'react';\nimport './index.scss';\n\nconst Dots = () => {\n\n  return (\n    <div className=\"dots-wrapper\">\n      <div className=\"first\" />\n      <div className=\"second\" />\n      <div className=\"third\" />\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Dots, areEqual);\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'error.wrapper.aria',\n    description: 'Aria label for the error wrapper',\n  },\n});\n\nconst Error = ({ code }) => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"error-wrapper\"\n      id={ID.ERROR}\n    >\n      <div className=\"error-code\">\n        {code}\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  text: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  hyperlink: false,\n  text: '',\n};\n\nconst Text = ({\n  active,\n  hyperlink,\n  text,\n}) => {\n  if (hyperlink) {\n    const options = {\n      className: cx('linkified', { inactive: !active }),\n    };\n\n    return (\n      <Linkify options={options}>\n        {text}\n      </Linkify>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {text}\n    </React.Fragment>\n  );\n};\n\nText.propTypes = propTypes;\nText.defaultProps = defaultProps;\n\nexport default Text;\n","const params = new URLSearchParams(window.location.search);\nconst debug = params ? params.has('debug') : false;\n\nconst logger = {\n  info: (...msg) => console.info(...msg),\n  debug: (...msg) => debug ? console.debug(...msg) : null,\n  warn: (...msg) => debug ? console.warn(...msg) : null,\n  error: (...msg) => console.error(...msg),\n};\n\nexport default logger;\n","import { LAYOUT } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst hasIndex = (index, data) => {\n  if (index < 0) return false;\n\n  if (isEmpty(data)) return false;\n\n  if (index >= data.length) {\n    logger.error('out of bounds', index, data);\n\n    return false;\n  }\n\n  return true;\n};\n\nconst hasPresentation = slides => {\n  if (isEmpty(slides)) return false;\n\n  for (let i = 0; i < slides.length; i++) {\n    const { src } = slides[i];\n\n    if (src.includes('slide')) return true;\n  }\n\n  return false;\n};\n\nconst hasProperty = (object, property) => {\n  if (object && object.hasOwnProperty(property)) {\n    if (typeof object[property] !== 'undefined') return true;\n  }\n\n  logger.warn('missing', property, object);\n\n  return false;\n};\n\nconst isActive = (time, timestamp, clear = -1) => {\n  const cleared = wasCleared(time, clear);\n  const visible = isVisible(time, timestamp);\n\n  return visible && !cleared;\n};\n\nconst isContentVisible = (layout, swap) => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let visible;\n  switch (layout) {\n    case  CONTENT:\n      visible = !swap;\n      break;\n    case MEDIA:\n      visible = swap;\n      break;\n    default:\n      visible = false;\n  }\n\n  return visible;\n};\n\nconst isCurrent = (data, index, time) => {\n  if (!hasIndex(index, data)) return false;\n\n  const item = data[index];\n  if (!hasProperty(item, 'timestamp')) return false;\n\n  let current = false;\n  if (isVisible(time, item.timestamp)) {\n    if (index + 1 < data.length) {\n      const next = data[index + 1];\n      if (hasProperty(next, 'timestamp')) {\n        current = !isVisible(time, next.timestamp);\n      }\n    } else {\n      current = true;\n    }\n  }\n\n  return current;\n};\n\nconst isDefined = data => typeof data !== 'undefined';\n\nconst isEmpty = data => {\n  const isArray = isValid('array', data);\n  const isString = isValid('string', data);\n  if (!isArray && !isString) return true;\n\n  const empty = data.length === 0;\n\n  return empty;\n};\n\nconst isEnabled = (data, time) => {\n  if (isEmpty(data)) return false;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      // Check if it was activated and did not ended\n      if (isActive(time, timestamp, clear)) return true;\n\n      // Check if we are searching over the present time value\n      if (!isVisible(time, timestamp)) return false;\n    } else {\n      // Invalid item\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst isEqual = (first, second, type = 'array') => {\n  let equal = false;\n\n  switch (type) {\n    case 'array':\n      if (first.length === second.length) {\n        equal = first.every((value, index) => value === second[index])\n      }\n\n      return equal;\n    default:\n      return equal;\n  }\n};\n\nconst isValid = (type, data) => {\n  let valid = false;\n\n  switch (type) {\n    case 'array':\n      if (Array.isArray(data)) valid = true;\n      break;\n    case 'string':\n      if (typeof data === type) valid = true;\n      break;\n    default:\n      logger.debug('unhandled', type);\n  }\n\n  return valid;\n};\n\nconst isVisible = (time, timestamp) => timestamp <= time;\n\nconst wasCleared = (time, clear) => clear !== -1 && clear <= time;\n\nexport {\n  hasIndex,\n  hasPresentation,\n  hasProperty,\n  isActive,\n  isContentVisible,\n  isCurrent,\n  isDefined,\n  isEmpty,\n  isEnabled,\n  isEqual,\n  isValid,\n  isVisible,\n  wasCleared,\n};\n","import { parseStringPromise } from 'xml2js';\nimport { files as config } from 'config';\nimport { getFileType } from './data';\nimport {\n  hasProperty,\n  isEmpty,\n} from './data/validators';\nimport {\n  ID,\n  SHAPES,\n} from './constants';\nimport logger from './logger';\n\nconst getAttr = data => {\n  if (!data) return {};\n\n  const attr = data['$'];\n  if (!attr) return {};\n\n  return attr;\n};\n\nconst getChildren = data => {\n  if (!data) return [];\n\n  const children = data['$$'];\n  if (!children) return [];\n\n  return children;\n};\n\nconst getId = data => {\n  if (!data) return -1;\n\n  const id = data.match(/\\d+$/);\n  if (!id || id.length === 0) return -1;\n\n  return parseInt(id.shift(), 10);\n};\n\nconst getNumbers = data => {\n  if (!data) return [];\n\n  const trimmed = data.trim().replace(/  +/g, ' ');\n  if (trimmed.length === 0) return [];\n\n  const split = trimmed.split(' ');\n  const numbers = split.map(v => parseFloat(v));\n\n  return numbers;\n};\n\nconst buildAlternates = result => {\n  if (!result) return [];\n\n  let data = [];\n  for (const presentation in result) {\n    if (hasProperty(result, presentation)) {\n      const slides = result[presentation];\n\n      for (const slide in slides) {\n        if (hasProperty(slides, slide)) {\n          const text = slides[slide];\n\n          data.push({\n            src: `presentation/${presentation}/${slide}.png`,\n            text,\n          });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\n// TODO\nconst buildCaptions = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\n// TODO\nconst buildPolls = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\nconst buildVideos = result => {\n  if (!result) return [];\n\n  const data = result.map(r => {\n    return {\n      timestamp: r.timestamp,\n      url: r.external_video_url,\n    };\n  });\n\n  return data;\n};\n\nconst buildMetadata = result => {\n  let data = {};\n  const { recording } = result;\n\n  if (hasProperty(recording, 'meeting')) {\n    const attr = getAttr(recording.meeting.shift());\n    const { id } = attr;\n    const meta = recording.meta.shift();\n    const end = parseInt(recording.end_time.shift(), 10);\n    const name = meta.name ? meta.name.shift() : attr.name;\n    const participants = parseInt(recording.participants.shift(), 10);\n    const start = parseInt(recording.start_time.shift(), 10);\n\n    data = {\n      end,\n      id,\n      name,\n      participants,\n      start,\n    };\n  }\n\n  return data;\n};\n\nconst buildNotes = result => {\n  if (!result) return '';\n\n  // Extract the notes' body\n  const regex = /<body>\\n.*\\n<\\/body>/g;\n  const match = result.match(regex);\n\n  let data = '';\n  if (!isEmpty(match)) {\n    data = match.shift();\n  }\n\n  return data;\n};\n\nconst buildStyle = data => {\n  const items = data.split(';');\n  let style = {};\n\n  items.forEach(item => {\n    const trimmed = item.trim();\n\n    if (trimmed.length === 0) return;\n\n    const split = trimmed.split(':').map(i => i.trim());\n\n    // Remove visibility\n    if (split[0] === 'visibility') return;\n\n    style[split[0]] = split[1];\n  });\n\n  return style;\n};\n\nconst buildSlides = image => {\n  let slides = [];\n\n  if (image) {\n    image.forEach(img => {\n      const attr = getAttr(img);\n      const src = attr['xlink:href'];\n\n      // Skip the logo\n      if (!src) return;\n\n      // Get the number from the id name\n      const slideId = getId(attr.id);\n      const timestamps = getNumbers(attr.in);\n\n      timestamps.forEach(timestamp => {\n        slides.push({\n          id: slideId,\n          height: parseInt(attr.height),\n          src,\n          timestamp,\n          width: parseInt(attr.width),\n        });\n      });\n    });\n\n    slides = slides.sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  return slides;\n};\n\nconst buildThumbnails = slides => {\n  const prefix = 'slide-';\n  const url = 'thumbnails/thumb-';\n\n  return slides.reduce((result, slide) => {\n    const {\n      id,\n      src,\n      timestamp,\n    } = slide;\n\n    if (src.includes(ID.DESKSHARE)) {\n      result.push({\n        id,\n        src: ID.SCREENSHARE,\n        timestamp,\n      });\n    } else {\n      result.push({\n        id,\n        src: src.replace(prefix, url),\n        timestamp,\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nconst parseText = data => {\n  let text = '';\n\n  const children = getChildren(data);\n  if (!isEmpty(children)) {\n    const child = children.shift();\n    const grandchildren = getChildren(child);\n    if (!isEmpty(grandchildren)) {\n      text = grandchildren.map(grandchild => {\n        const name = grandchild['#name'];\n        if (name === 'br') return '\\r';\n\n        return grandchild['_'];\n      }).join('');\n    }\n  }\n\n  return text;\n};\n\nconst buildCanvases = group => {\n  let canvases = [];\n\n  if (group) {\n    canvases = group.map(canvas => {\n      const canvasAttr = getAttr(canvas);\n      // Get the number from the id name\n      const canvasId = getId(canvasAttr.id);\n\n      let draws = canvas.g.map(g => {\n        const drawAttr = getAttr(g);\n        const timestamp = parseFloat(drawAttr.timestamp);\n        const clear = parseFloat(drawAttr.undo);\n        const style = buildStyle(drawAttr.style);\n        const drawId = getId(drawAttr.shape);\n\n        let shape = {};\n        if (g.image) {\n          shape.type = SHAPES.POLL;\n          const image = getAttr(g.image.shift());\n          // TODO: Better adapt for old versions\n          // Versions prior to 2.3 included a rect structure along with an image\n          if (g.rect) {\n            const rect = getAttr(g.rect.shift());\n            shape.data = Object.assign({ rect }, { image });\n          } else {\n            shape.data = Object.assign({ image });\n          }\n        } else if (g.polyline) {\n          shape.type = SHAPES.POLYLINE;\n          shape.data = Object.assign({}, getAttr(g.polyline.shift()));\n        } else if (g.line) {\n          shape.type = SHAPES.LINE;\n          shape.data = Object.assign({}, getAttr(g.line.shift()));\n        } else if (g.polygon) {\n          shape.type = SHAPES.POLYGON;\n          shape.data = Object.assign({}, getAttr(g.polygon.shift()));\n        } else if (g.circle) {\n          shape.type = SHAPES.CIRCLE;\n          shape.data = Object.assign({}, getAttr(g.circle.shift()));\n        } else if (g.path) {\n          shape.type = SHAPES.PATH;\n          shape.data = Object.assign({}, getAttr(g.path.shift()));\n        } else if (g.switch) {\n          shape.type = SHAPES.TEXT;\n          const foreignObject = g.switch.shift()['foreignObject'].shift();\n          const text = parseText(foreignObject);\n          shape.data = Object.assign({ text }, getAttr(foreignObject));\n        }\n\n        return {\n          clear,\n          id: drawId,\n          shape,\n          style,\n          timestamp,\n        };\n      });\n\n      return {\n        draws,\n        id: canvasId,\n      };\n    });\n  }\n\n  return canvases;\n};\n\nconst buildShapes = result => {\n  let data = {};\n  const { svg } = result;\n\n  if (svg) {\n    const {\n      image,\n      g,\n    } = svg;\n\n    data.slides = buildSlides(image);\n    data.thumbnails = buildThumbnails(data.slides);\n    data.canvases = buildCanvases(g);\n  }\n\n  return data;\n};\n\nconst buildPanzooms = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(panzoom => {\n      const attr = getAttr(panzoom);\n      const viewbox = getNumbers(panzoom.viewBox.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: viewbox.shift(),\n        y: viewbox.shift(),\n        width: viewbox.shift(),\n        height: viewbox.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildCursor = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(cursor => {\n      const attr = getAttr(cursor);\n      const position = getNumbers(cursor.cursor.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: position.shift(),\n        y: position.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst clearHyperlink = message => {\n  const regex = /<a href=\"(.*)\" rel=\"nofollow\"><u>\\1<\\/u><\\/a>/g;\n\n  return message.replace(regex, '$1');\n};\n\nconst decodeXML = message => {\n  return message\n    .replace(/&(quot|#34);/g, '\"')\n    .replace(/&(amp|#38);/g, '&')\n    .replace(/&(apos|#39);/g, \"'\")\n    .replace(/&(lt|#60);/g, '<')\n    .replace(/&(gt|#62);/g, '>');\n};\n\nconst getInitials = name => {\n  let initials;\n\n  if (name) {\n    initials = name\n      .slice(0, 2)\n      .toLowerCase()\n      .trim();\n  }\n\n  return initials;\n};\n\nconst buildChat = result => {\n  const { popcorn } = result;\n  let data = [];\n\n  if (hasProperty(popcorn, 'chattimeline')) {\n    const { chattimeline } = popcorn;\n    data = chattimeline.map(chat => {\n      const attr = getAttr(chat);\n      const clear = attr.out ? parseFloat(attr.out) : -1;\n      const message = decodeXML(clearHyperlink(attr.message));\n      const initials = getInitials(attr.name);\n\n      return {\n        clear,\n        hyperlink: message !== attr.message,\n        initials,\n        name: attr.name,\n        message,\n        timestamp: parseFloat(attr.in),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildScreenshare = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(screenshare => {\n      const attr = getAttr(screenshare);\n\n      return {\n        timestamp: parseFloat(attr.start_timestamp),\n        clear: parseFloat(attr.stop_timestamp),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst getOptions = filename => {\n  let options = {};\n\n  switch (filename) {\n    case config.shapes:\n      options = {\n        explicitChildren: true,\n        preserveChildrenOrder: true,\n        charsAsChildren: true,\n      };\n      break;\n    default:\n  }\n\n  return options;\n};\n\nconst build = (filename, value) => {\n  return new Promise((resolve, reject) => {\n    let data;\n    const fileType = getFileType(filename);\n\n    if (fileType === 'json') {\n      switch (filename) {\n        case config.alternates:\n          data = buildAlternates(value);\n          break;\n        case config.captions:\n          data = buildCaptions(value);\n          break;\n        case config.polls:\n          data = buildPolls(value);\n          break;\n        case config.videos:\n          data = buildVideos(value);\n          break;\n        default:\n          logger.debug('unhandled', 'json', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else if (fileType === 'html') {\n      switch (filename) {\n        case config.notes:\n          data = buildNotes(value);\n          break;\n        default:\n          logger.debug('unhandled', 'html', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else {\n      if (!value) {\n        logger.warn('missing', filename);\n\n        return resolve(null);\n      }\n\n      // Parse XML data\n      const options = getOptions(filename);\n      parseStringPromise(value, options).then(result => {\n        switch (filename) {\n          case config.chat:\n            data = buildChat(result);\n            break;\n          case config.cursor:\n            data = buildCursor(result);\n            break;\n          case config.metadata:\n            data = buildMetadata(result);\n            break;\n          case config.panzooms:\n            data = buildPanzooms(result);\n            break;\n          case config.screenshare:\n            data = buildScreenshare(result);\n            break;\n          case config.shapes:\n            data = buildShapes(result);\n            break;\n          default:\n            logger.debug('unhandled', 'xml', filename);\n            reject(filename);\n        }\n        resolve(data);\n      }).catch(error => reject(error));\n    }\n  });\n};\n\nconst addAlternatesToThumbnails = (thumbnails, alternates) => {\n  const prefix = 'thumbnails/thumb-';\n  const url = 'slide-';\n\n  return thumbnails.map(thumbnail => {\n    const { src } = thumbnail;\n    thumbnail.alt = '';\n\n    const found = alternates.find(alt => src.replace(prefix, url) === alt.src);\n    if (found) thumbnail.alt = found.text;\n\n    return thumbnail;\n  });\n};\n\nconst mergeMessages = (chat, polls, videos) => {\n  return [\n    ...chat,\n    ...polls,\n    ...videos,\n  ].sort((a, b) => a.timestamp - b.timestamp);\n};\n\nexport {\n  addAlternatesToThumbnails,\n  build,\n  buildStyle,\n  decodeXML,\n  getAttr,\n  getId,\n  getNumbers,\n  mergeMessages,\n};\n","import {\n  files,\n  medias,\n} from 'config';\nimport {\n  addAlternatesToThumbnails,\n  build,\n  mergeMessages,\n} from 'utils/builder';\nimport {\n  ERROR,\n  ID,\n} from 'utils/constants';\nimport {\n  buildFileURL,\n  getFileType,\n} from 'utils/data';\nimport {\n  hasPresentation,\n  hasProperty,\n  isEmpty,\n} from 'utils/data/validators';\nimport logger from 'utils/logger';\n\nconst STATE = {\n  WAITING: 'waiting',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n};\n\nlet STATUS = STATE.WAITING;\n\nconst DATA = {};\n\nconst hasFetched = () => {\n  if (STATUS !== STATE.WAITING) return true;\n\n  logger.debug(ID.STORAGE, STATE.LOADING);\n  STATUS = STATE.LOADING;\n\n  return false;\n}\n\nconst hasLoaded = () => {\n  const stored = Object.keys(DATA).length;\n  const data = Object.keys(files).length;\n\n  if (stored > data) {\n    logger.debug(ID.STORAGE, STATE.LOADED);\n    STATUS = STATE.LOADED;\n\n    return true;\n  }\n\n  return false;\n};\n\nconst fetchFile = (data, recordId, onUpdate, onLoaded, onError) => {\n  const file = files[data];\n  const url = buildFileURL(file, recordId);\n  fetch(url).then(response => {\n    if (response.ok) {\n      logger.debug(ID.STORAGE, file, response);\n      const fileType = getFileType(file);\n      switch (fileType) {\n        case 'json':\n          return response.json();\n        case 'html':\n          return response.text();\n        case 'svg':\n          return response.text();\n        case 'xml':\n          return response.text();\n        default:\n          onError(ERROR.BAD_REQUEST);\n          return null;\n      }\n    } else {\n      logger.warn(ID.STORAGE, file, response);\n      return null;\n    }\n  }).then(value => {\n    build(file, value).then(content => {\n      if (content) logger.debug(ID.STORAGE, 'builded', file);\n      DATA[data] = content;\n      onUpdate(data);\n      if (hasLoaded()) onLoaded();\n    }).catch(error => onError(ERROR.BAD_REQUEST));\n  }).catch(error => onError(ERROR.NOT_FOUND));\n};\n\nconst fetchMedia = (recordId, onUpdate, onLoaded, onError) => {\n  const fetches = medias.map(type => {\n    const url = buildFileURL(`video/webcams.${type}`, recordId);\n    return fetch(url, { method: 'HEAD' });\n  });\n\n  Promise.all(fetches).then(responses => {\n    const media = [];\n    responses.forEach(response => {\n      const { ok, url } = response;\n      if (ok) {\n        logger.debug(ID.STORAGE, ID.MEDIA, response);\n        media.push(medias.find(type => url.endsWith(type)));\n      }\n    });\n\n    if (media.length > 0) {\n      DATA[ID.MEDIA] = media;\n      onUpdate(ID.MEDIA);\n      if (hasLoaded()) onLoaded();\n    } else {\n      onError(ERROR.NOT_FOUND);\n    }\n  });\n};\n\nconst storage = {\n  fetch: (recordId, onUpdate, onLoaded, onError) => {\n    if (hasFetched()) return null;\n\n    for (const data in files) {\n      fetchFile(data, recordId, onUpdate, onLoaded, onError);\n    }\n\n    fetchMedia(recordId, onUpdate, onLoaded, onError);\n  },\n  get status() {\n    return STATUS;\n  },\n  get data() {\n    return DATA;\n  },\n  get built() {\n    return {\n      captions: hasProperty(DATA, ID.CAPTIONS),\n      chat: hasProperty(DATA, ID.CHAT),\n      notes: hasProperty(DATA, ID.NOTES),\n      polls: hasProperty(DATA, ID.POLLS),\n      videos: hasProperty(DATA, ID.VIDEOS),\n      presentation: hasProperty(DATA, ID.SHAPES),\n      screenshare: hasProperty(DATA, ID.SCREENSHARE),\n    };\n  },\n  get content() {\n    return {\n      captions: !isEmpty(this.captions),\n      chat: !isEmpty(this.chat),\n      notes: !isEmpty(this.notes),\n      polls: !isEmpty(this.polls),\n      videos: !isEmpty(this.videos),\n      presentation: hasPresentation(this.shapes.slides),\n      screenshare: !isEmpty(this.screenshare),\n    };\n  },\n  get alternates() {\n    return DATA[ID.ALTERNATES];\n  },\n  get captions() {\n    return DATA[ID.CAPTIONS];\n  },\n  get chat() {\n    return DATA[ID.CHAT];\n  },\n  get polls() {\n    return DATA[ID.POLLS];\n  },\n  get videos() {\n    return DATA[ID.VIDEOS];\n  },\n  get cursor() {\n    return DATA[ID.CURSOR];\n  },\n  get media() {\n    return DATA[ID.MEDIA];\n  },\n  get messages() {\n    if (!hasProperty(DATA, ID.MESSAGES)) {\n      DATA[ID.MESSAGES] = mergeMessages(\n        this.chat,\n        this.polls,\n        this.videos,\n      );\n    }\n\n    return DATA[ID.MESSAGES];\n  },\n  get metadata() {\n    return DATA[ID.METADATA];\n  },\n  get notes() {\n    return DATA[ID.NOTES];\n  },\n  get panzooms() {\n    return DATA[ID.PANZOOMS];\n  },\n  get screenshare() {\n    return DATA[ID.SCREENSHARE];\n  },\n  get shapes() {\n    return DATA[ID.SHAPES];\n  },\n  get thumbnails() {\n    if (!hasProperty(DATA, ID.THUMBNAILS)) {\n      DATA[ID.THUMBNAILS] = addAlternatesToThumbnails(this.shapes.thumbnails, this.alternates);\n    }\n\n    return DATA[ID.THUMBNAILS];\n  },\n};\n\nexport default storage;\n","// @ironwallaby's string-hash\n// https://github.com/darkskyapp/string-hash\nconst hash = (str) => {\n  let hash = 5381;\n\n  let i = str.length;\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n};\n\nexport default hash;\n","import config from 'config';\nimport { ROUTER } from './constants';\nimport logger from './logger';\n\nconst getLayout = () => {\n  const param = getSearchParam('l');\n\n  if (param) return param;\n\n  return null;\n};\n\nconst getMediaPath = () => {\n  const param = getSearchParam('p');\n\n  let mediaPath = '';\n  if (param) mediaPath = param;\n\n  return mediaPath;\n};\n\nconst getRecordId = match => {\n  if (!ROUTER) return 'local';\n\n  if (match) {\n    const { params } = match;\n    if (params && params.recordId) {\n      const { recordId } = params;\n      const regex = /^[a-z0-9]{40}-[0-9]{13}$/;\n\n      if (recordId.match(regex)) return recordId;\n    }\n  }\n\n  logger.error('missing', 'recordId');\n\n  return null;\n};\n\nconst getSearchParam = (name) => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params && params.has(name)) {\n    const param = params.get(name);\n\n    return param;\n  }\n\n  return null;\n};\n\nconst getStyle = () => {\n  const param = getSearchParam('s');\n  const { styles } = config;\n  const { url } = styles;\n\n  let style = styles.default ? `${url}/${styles.default}.css` : null;\n  if (param) {\n    const { valid } = styles;\n    if (valid.includes(param)) {\n      style = `${url}/${param}.css`;\n    }\n  }\n\n  return style;\n};\n\nconst getTime = () => {\n  const param = getSearchParam('t');\n\n  if (param) return parseTimeToSeconds(param);\n\n  return null;\n};\n\nconst parseTimeToSeconds = time => {\n  const patterns = [\n    /^(\\d+)h(\\d+)m(\\d+)s$/,\n    /^(\\d+)m(\\d+)s$/,\n    /^(\\d+)s$/,\n  ];\n\n  for (let i = 0; i < patterns.length; i++) {\n    if (time.match(patterns[i])) {\n      const hours = time.match(/(\\d+)h/);\n      const minutes = time.match(/(\\d+)m/);\n      const seconds = time.match(/(\\d+)s/);\n\n      let timeToSeconds = 0;\n\n      if (hours) {\n        const h = parseInt(hours[1]);\n        if (h >= 0) timeToSeconds += h * 3600;\n      }\n\n      if (minutes) {\n        const m = parseInt(minutes[1]);\n        if (m >= 0 && m < 60) {\n          timeToSeconds += m * 60;\n        } else {\n          return null;\n        }\n      }\n\n      if (seconds) {\n        const s = parseInt(seconds[1]);\n        if (s >= 0 && s < 60) {\n          timeToSeconds += s;\n        } else {\n          return null;\n        }\n      }\n\n      return timeToSeconds;\n    }\n  }\n\n  return null;\n};\n\nexport {\n  getLayout,\n  getMediaPath,\n  getRecordId,\n  getStyle,\n  getSearchParam,\n  getTime,\n  parseTimeToSeconds,\n};\n","import {\n  ID,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  ROUTER,\n} from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport {\n  hasIndex,\n  hasProperty,\n  isCurrent,\n  isEmpty,\n  isEnabled,\n  isVisible,\n  wasCleared,\n} from 'utils/data/validators';\nimport hash from 'utils/hash';\nimport { getMediaPath } from 'utils/params';\n\nconst buildFileURL = (file, recordId = null) => {\n  if (!ROUTER) return file;\n\n  const mediaPath = getMediaPath();\n\n  const rootUrl = MEDIA_ROOT_URL ? MEDIA_ROOT_URL : '/presentation';\n\n  const id = recordId ? recordId : storage.metadata.id;\n  let fileUrl = `${id}/${file}`;\n  if (mediaPath) fileUrl = `${mediaPath}/${fileUrl}`;\n\n  return `${rootUrl}/${fileUrl}`;\n};\n\nconst getAvatarStyle = name => {\n  const index = hash(name) % NUMBERS.length;\n\n  return `avatar-${NUMBERS[index]}`;\n};\n\nconst getActiveContent = (screenshare, time) => {\n  const {\n    SCREENSHARE,\n    PRESENTATION,\n  } = ID;\n\n  const content = isEnabled(screenshare, time) ? SCREENSHARE : PRESENTATION;\n\n  return content;\n};\n\nconst FULL_BLOCK = '█';\nconst LEFT_HALF_BLOCK = '▌';\nconst RIGHT_HALF_BLOCK = '▐';\nconst EMPTY_BLOCK = '-';\n\nconst getBar = (percentage) => {\n  const p = parseInt(percentage);\n\n  let bar;\n  if (p === 0) {\n    bar = EMPTY_BLOCK;\n  } else {\n    const full = p / 10;\n    const half = (p % 10) > 2;\n\n    bar = FULL_BLOCK.repeat(full);\n\n    if (half) {\n      // Add true fallback for the tests\n      const ltr = document.dir ? document.dir === 'ltr' : true;\n      bar = bar.concat(ltr ? LEFT_HALF_BLOCK : RIGHT_HALF_BLOCK);\n    }\n  }\n\n  return bar;\n};\n\nconst getCurrentDataIndex = (data, time) => {\n  if (isEmpty(data)) return -1;\n\n  let start = 0;\n  let stop = data.length - 1;\n  let middle = Math.floor((start + stop) / 2);\n\n  while (!isCurrent(data, middle, time) && start < stop) {\n    const item = data[middle];\n    if (!hasProperty(item, 'timestamp')) return -1;\n\n    if (!isVisible(time, item.timestamp)) {\n      stop = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n\n    middle = Math.floor((start + stop) / 2);\n  }\n\n  const current = isCurrent(data, middle, time);\n\n  return (!current) ? -1 : middle;\n};\n\nconst getCurrentDataInterval = (data, time) => {\n  const currentDataInterval = [];\n\n  if (isEmpty(data)) return currentDataInterval;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      if (!isVisible(time, timestamp)) break;\n\n      currentDataInterval.push(!wasCleared(time, clear));\n    }\n  }\n\n  return currentDataInterval;\n};\n\nconst getDraws = (index, slides, canvases) => {\n  if (!hasIndex(index, slides)) return [];\n\n  const slide = slides[index];\n\n  if (isEmpty(canvases)) return [];\n\n  const canvas = canvases.find(canvas => slide.id === canvas.id);\n\n  if (!canvas) return [];\n\n  const { draws } = canvas;\n\n  return draws;\n};\n\nconst getFileType = file => file.split('.').pop();\n\nconst getPercentage = (value, total) => {\n  if (total === 0) return 0;\n\n  return ((value / total) * 100).toFixed(1);\n};\n\nconst POLL_TYPES = {\n  YN: 'YN',\n  YNA: 'YNA',\n  TF: 'TF',\n};\n\nconst POLL_KEYS = [\n  'Yes',\n  'No',\n  'Abstention',\n  'True',\n  'False',\n];\n\nconst getPollLabel = (key, type) => {\n  if (!POLL_TYPES[type]) return null;\n\n  if (!POLL_KEYS.includes(key)) return null;\n\n  return key.toLowerCase();\n};\n\nconst getMessageType = (item) => {\n  if (typeof item.message === 'string') return ID.USERS;\n  if (typeof item.question === 'string') return ID.POLLS;\n  if (typeof item.url === 'string') return ID.VIDEOS;\n\n  return 'undefined';\n};\n\nconst getTimestampAsMilliseconds = timestamp => timestamp * 1000;\n\nexport {\n  buildFileURL,\n  getAvatarStyle,\n  getActiveContent,\n  getBar,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getDraws,\n  getFileType,\n  getMessageType,\n  getPercentage,\n  getPollLabel,\n  getTimestampAsMilliseconds,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedTime } from 'react-intl';\nimport cx from 'classnames';\nimport { getTimestampAsMilliseconds } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  name: '',\n  timestamp: 0,\n};\n\nconst Info = ({\n  active,\n  name,\n  timestamp,\n}) => {\n  const milliseconds = getTimestampAsMilliseconds(timestamp);\n\n  return (\n    <div className=\"info\">\n      <div className={cx('name', { inactive: !active })}>\n        {name}\n      </div>\n      <div className={cx('time', { inactive: !active })}>\n        <FormattedTime\n          hourCycle=\"h23\"\n          hour=\"numeric\"\n          minute=\"numeric\"\n          second=\"numeric\"\n          timeZone=\"UTC\"\n          value={milliseconds}\n        />\n      </div>\n    </div>\n  );\n};\n\nInfo.propTypes = propTypes;\nInfo.defaultProps = defaultProps;\n\nexport default Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nconst propTypes = { name: PropTypes.string };\n\nconst defaultProps = { name: '' };\n\nconst Icon = ({ name }) => {\n\n  return <span className={`icon-${name}`} />;\n};\n\nIcon.propTypes = propTypes;\nIcon.defaultProps = defaultProps;\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport { getAvatarStyle } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n};\n\nconst defaultProps = {\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n};\n\nconst Avatar = ({\n  circle,\n  icon,\n  initials,\n  name,\n}) => {\n  const style = circle ? getAvatarStyle(name) : 'avatar-default';\n\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className={cx('avatar', { circle }, style)}>\n        {icon ? (\n          <Icon name={icon} />\n        ) : (\n          <span className=\"initials\">\n            {initials}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nAvatar.propTypes = propTypes;\nAvatar.defaultProps = defaultProps;\n\nexport default Avatar;\n","import { POSITIONS } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst getScrollLeft = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientWidth,\n    offsetLeft,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const ltr = document.dir === 'ltr';\n  const spacing = ltr ? firstNode.offsetLeft : 0;\n  const parentWidth = parentNode.clientWidth;\n\n  let horizontalOffset = 0;\n  switch (align) {\n    case POSITIONS.LEFT:\n      horizontalOffset = offsetLeft - spacing;\n      break;\n    case POSITIONS.CENTER:\n      horizontalOffset = parseInt(offsetLeft + (clientWidth - spacing - parentWidth) / 2, 10);\n      break;\n    case POSITIONS.RIGHT:\n      horizontalOffset = offsetLeft + clientWidth - parentWidth;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return horizontalOffset;\n};\n\nconst getScrollTop = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientHeight,\n    offsetTop,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetTop;\n  const parentHeight = parentNode.clientHeight;\n\n  let verticalOffset = 0;\n  switch (align) {\n    case POSITIONS.TOP:\n      verticalOffset = offsetTop - spacing;\n      break;\n    case POSITIONS.MIDDLE:\n      verticalOffset = parseInt(offsetTop + (clientHeight - spacing - parentHeight) / 2, 10);\n      break;\n    case POSITIONS.BOTTOM:\n      verticalOffset = offsetTop + clientHeight - parentHeight;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return verticalOffset;\n};\n\nconst handleOnEnterPress = (event, action) => {\n  if (event && event.key === 'Enter') {\n    if (typeof action === 'function') action();\n  }\n};\n\nconst handleAutoScroll = (fNode, cNode, direction, align) => {\n  // Auto-scroll can start after getting the first and current nodes\n  if (fNode && cNode) {\n    const { parentNode: pNode } = cNode;\n\n    switch (direction) {\n      case POSITIONS.LEFT:\n        pNode.scrollLeft = getScrollLeft(fNode, cNode, align);\n        break;\n      case POSITIONS.TOP:\n        pNode.scrollTop = getScrollTop(fNode, cNode, align);\n        break;\n      default:\n        logger.debug('unhandled', direction);\n    }\n  }\n};\n\nexport {\n  getScrollLeft,\n  getScrollTop,\n  handleAutoScroll,\n  handleOnEnterPress,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n  onClick: () => {},\n};\n\nconst Margin = ({\n  active,\n  circle,\n  icon,\n  initials,\n  name,\n  onClick,\n}) => {\n  const style = {\n    circle,\n    inactive: !active,\n  };\n\n  return (\n    <div\n      className={cx('interactive', style)}\n      onClick={onClick}\n      onKeyPress={event => handleOnEnterPress(event, onClick)}\n      tabIndex=\"0\"\n    >\n      <Avatar\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n      />\n    </div>\n  );\n};\n\nMargin.propTypes = propTypes;\nMargin.defaultProps = defaultProps;\n\nexport default Margin;\n","import logger from './logger';\n\nconst STATUSES = [\n  'canplay',\n  'seeking',\n  'waiting',\n];\n\nconst EVENTS = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'interruptbegin',\n  'interruptend',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'mozaudioavailable',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  //'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\nexport default class Synchronizer {\n  constructor(primary, secondary) {\n    this.primary = primary;\n    this.secondary = secondary;\n\n    this.status = {\n      primary: 'waiting',\n      secondary: 'waiting',\n    }\n\n    this.synching = false;\n\n    this.init();\n  }\n\n  init() {\n    STATUSES.forEach(status => {\n      this.primary.on(status, () => this.status.primary = status);\n      this.secondary.on(status, () => this.status.secondary = status);\n    });\n\n    this.primary.on('play', () => this.secondary.play());\n    this.primary.on('pause', () => this.secondary.pause());\n\n    this.primary.on('seeking', () => {\n      const currentTime = this.primary.currentTime();\n      this.secondary.currentTime(currentTime);\n    });\n\n    this.primary.on('ratechange', () => {\n      const playbackRate = this.primary.playbackRate();\n      this.secondary.playbackRate(playbackRate);\n    });\n\n    this.primary.on('waiting', () => {\n      if (!this.synching && this.status.secondary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.primary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    this.secondary.on('waiting', () => {\n      if (!this.synching && this.status.primary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.secondary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    EVENTS.forEach(event => {\n      this.primary.on(event, () => logger.debug(`primary ${event} ${this.status.primary}`));\n      this.secondary.on(event, () => logger.debug(`secondary ${event} ${this.status.secondary}`));\n    });\n  }\n}\n","import { ID } from 'utils/constants';\nimport Synchronizer from 'utils/synchronizer';\n\nconst PLAYERS = {};\nlet SYNCHRONIZER = null;\n\nconst player = {\n  get primary() {\n    return this.webcams;\n  },\n  get screenshare() {\n    return PLAYERS[ID.SCREENSHARE];\n  },\n  get synchronizer() {\n    return SYNCHRONIZER;\n  },\n  get webcams() {\n    return PLAYERS[ID.WEBCAMS];\n  },\n  set screenshare(value) {\n    if (!PLAYERS[ID.SCREENSHARE]) PLAYERS[ID.SCREENSHARE] = value;\n\n    if (this.webcams) {\n      this.synchronizer = new Synchronizer(this.webcams, this.screenshare);\n    }\n  },\n  set synchronizer(value) {\n    if (!SYNCHRONIZER) SYNCHRONIZER = value;\n  },\n  set webcams(value) {\n    if (!PLAYERS[ID.WEBCAMS]) PLAYERS[ID.WEBCAMS] = value;\n\n    if (this.screenshare) {\n      this.synchronizer = new Synchronizer(this.webcams, this.screenshare);\n    }\n  },\n};\n\nexport default player;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Info from './info';\nimport Margin from './margin';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  circle,\n  icon,\n  initials,\n  name,\n  timestamp,\n}) => {\n  const handleOnClick = () => {\n    player.primary.currentTime(timestamp);\n  };\n\n  return (\n    <div className=\"message\">\n      <Margin\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n        onClick={() => handleOnClick()}\n      />\n      <div className=\"data\">\n        <Info\n          active={active}\n          name={name}\n          timestamp={timestamp}\n        />\n        <div className={cx('text', { inactive: !active })}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from './text';\nimport Message from 'components/chat/messages/message';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n  timestamp: PropTypes.timestamp,\n};\n\nconst defaultProps = {\n  active: false,\n  hyperlink: false,\n  initials: '',\n  name: '',\n  text: '',\n  timestamp: 0,\n};\n\nconst User = ({\n  active,\n  hyperlink,\n  initials,\n  name,\n  text,\n  timestamp,\n}) => {\n\n  return (\n    <Message\n      active={active}\n      circle\n      initials={initials}\n      name={name}\n      timestamp={timestamp}\n    >\n      <Text\n        active={active}\n        hyperlink={hyperlink}\n        text={text}\n      />\n    </Message>\n  );\n};\n\nUser.propTypes = propTypes;\nUser.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  return true;\n};\n\nexport default React.memo(User, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { getPollLabel } from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  options: {\n    id: 'player.chat.message.poll.options',\n    description: 'Label for the poll message answer options',\n  },\n  yes: {\n    id: 'player.chat.message.poll.option.yes',\n    description: 'Label for poll option yes',\n  },\n  no: {\n    id: 'player.chat.message.poll.option.no',\n    description: 'Label for poll option no',\n  },\n  abstention: {\n    id: 'player.chat.message.poll.option.abstention',\n    description: 'Label for poll option abstention',\n  },\n  true: {\n    id: 'player.chat.message.poll.option.true',\n    description: 'Label for poll option true',\n  },\n  false: {\n    id: 'player.chat.message.poll.option.false',\n    description: 'Label for poll option false',\n  },\n});\n\nconst propTypes = {\n  answers: PropTypes.array,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  answers: [],\n  type: '',\n};\n\nconst Options = ({\n  answers,\n  type,\n}) => {\n  const intl = useIntl();\n\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-options\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.options)}\n      </div>\n      {answers.map((item) => {\n        const {\n          id,\n          key,\n        } = item;\n\n        const label = getPollLabel(key, type);\n\n        return(\n          <div>\n            {id + 1}: {label ? intl.formatMessage(intlMessages[label]) : key}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nOptions.propTypes = propTypes;\nOptions.defaultProps = defaultProps;\n\nexport default Options;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  question: {\n    id: 'player.chat.message.poll.question',\n    description: 'Label for the poll message question',\n  },\n});\n\nconst propTypes = { question: PropTypes.string };\n\nconst defaultProps = { question: '' };\n\nconst Question = ({ question }) => {\n  const intl = useIntl();\n\n  if (isEmpty(question)) return null;\n\n  return (\n    <div className=\"poll-question\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.question)}\n      </div>\n      {question}\n    </div>\n  );\n};\n\nQuestion.propTypes = propTypes;\nQuestion.defaultProps = defaultProps;\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  getBar,\n  getPercentage,\n} from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst propTypes = {\n  answers: PropTypes.array,\n  responders: PropTypes.number,\n};\n\nconst defaultProps = {\n  answers: [],\n  responders: 0,\n};\n\nconst Result = ({\n  answers,\n  responders,\n}) => {\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-result\">\n      {answers.map((item) => {\n        const {\n          id,\n          numVotes,\n        } = item;\n\n        const percentage = getPercentage(numVotes, responders);\n\n        return(\n          <div className=\"poll-label\">\n            {id + 1}: <span className=\"poll-bar\">{getBar(percentage)}</span> {percentage}%\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nResult.propTypes = propTypes;\nResult.defaultProps = defaultProps;\n\nexport default Result;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseMessage from 'components/chat/messages/message';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  icon: PropTypes.string,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  icon: '',\n  name: '',\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  icon,\n  name,\n  timestamp,\n}) => {\n\n  return (\n    <BaseMessage\n      active={active}\n      icon={icon}\n      name={name}\n      timestamp={timestamp}\n    >\n      <div className=\"system-message-wrapper\">\n        {children}\n      </div>\n    </BaseMessage>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Options from './options';\nimport Question from './question';\nimport Result from './result';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.poll.name',\n    description: 'Label for the poll message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  answers: PropTypes.array,\n  question: PropTypes.string,\n  responders: PropTypes.number,\n  timestamp: PropTypes.number,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  answers: [],\n  question: '',\n  responders: 0,\n  timestamp: 0,\n  type: '',\n};\n\nconst Poll = ({\n  active,\n  answers,\n  question,\n  responders,\n  timestamp,\n  type,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.POLLS}\n      name={intl.formatMessage(intlMessages.name)}\n      timestamp={timestamp}\n    >\n      <Question question={question} />\n      <Result\n        answers={answers}\n        responders={responders}\n      />\n      <Options\n        answers={answers}\n        type={type}\n      />\n    </SystemMessage>\n  );\n};\n\nPoll.propTypes = propTypes;\nPoll.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  return true;\n};\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'utils/data/validators';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  url: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  url: '',\n};\n\nconst Url = ({\n  active,\n  url,\n}) => {\n  if (isEmpty(url)) return null;\n\n  const options = {\n    className: cx('linkified', { inactive: !active }),\n  };\n\n  return (\n    <Linkify options={options}>\n      {url}\n    </Linkify>\n  );\n};\n\nUrl.propTypes = propTypes;\nUrl.defaultProps = defaultProps;\n\nexport default Url;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Url from './url';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.video.name',\n    description: 'Label for the video message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  url: PropTypes.url,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  url: '',\n  timestamp: 0,\n};\n\nconst Video = ({\n  active,\n  url,\n  timestamp,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.VIDEOS}\n      name={intl.formatMessage(intlMessages.name)}\n      timestamp={timestamp}\n    >\n      <Url\n        active={active}\n        url={url}\n      />\n    </SystemMessage>\n  );\n};\n\nVideo.propTypes = propTypes;\nVideo.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  return true;\n};\n\nexport default React.memo(Video, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserMessage from './user';\nimport PollMessage from './system/poll';\nimport VideoMessage from './system/video';\nimport { ID } from 'utils/constants';\nimport { getMessageType } from 'utils/data';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst propTypes = {\n  currentDataIndex: PropTypes.number,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  currentDataIndex: 0,\n  setRef: () => {},\n};\n\nconst Messages = ({\n  currentDataIndex,\n  setRef,\n}) => {\n\n  return (\n    <div className=\"list\">\n      <div className=\"message-wrapper\">\n        {storage.messages.map((item, index) => {\n          const active = index <= currentDataIndex;\n          const { timestamp } = item;\n          const type = getMessageType(item);\n          switch (type) {\n            case ID.USERS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <UserMessage\n                    active={active}\n                    hyperlink={item.hyperlink}\n                    initials={item.initials}\n                    name={item.name}\n                    text={item.message}\n                    timestamp={timestamp}\n                  />\n                </span>\n              );\n            case ID.POLLS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <PollMessage\n                    active={active}\n                    answers={item.answers}\n                    question={item.question}\n                    responders={item.responders}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            case ID.VIDEOS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <VideoMessage\n                    active={active}\n                    url={item.url}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            default:\n              return <span ref={node => setRef(node, index)} />;\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nMessages.propTypes = propTypes;\nMessages.defaultProps = defaultProps;\n\nexport default Messages;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { chat as config } from 'config';\nimport Messages from './messages';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.chat.wrapper.aria',\n    description: 'Aria label for the chat wrapper',\n  },\n});\n\nconst propTypes = { currentDataIndex: PropTypes.number };\n\nconst defaultProps = { currentDataIndex: 0 };\n\nconst Chat = ({ currentDataIndex }) => {\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const intl = useIntl();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentDataIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.TOP, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      aria-live=\"polite\"\n      className=\"chat-wrapper\"\n      id={ID.CHAT}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      <Messages\n        currentDataIndex={currentDataIndex}\n        setRef={(node, index) => setRef(node, index)}\n      />\n    </div>\n  );\n};\n\nChat.propTypes = propTypes;\nChat.defaultProps = defaultProps;\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.currentDataIndex !== nextProps.currentDataIndex) return false;\n\n  return true;\n};\n\nexport default React.memo(Chat, areEqual);\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.notes.wrapper.aria',\n    description: 'Aria label for the notes wrapper',\n  },\n});\n\nconst Notes = () => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"notes-wrapper\"\n      id={ID.NOTES}\n      tabIndex=\"0\"\n    >\n      <div className=\"notes\">\n        <div dangerouslySetInnerHTML={{ __html: storage.notes }} />\n      </div>\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Notes, areEqual);\n","import React from 'react';\nimport Chat from 'components/chat';\nimport Notes from 'components/notes';\nimport { ID } from 'utils/constants';\n\nconst Content = ({\n  current,\n  currentChatIndex,\n}) => {\n  switch (current) {\n    case ID.CHAT:\n\n      return <Chat currentDataIndex={currentChatIndex} />;\n    case ID.NOTES:\n\n      return <Notes />;\n    default:\n\n      return null;\n  }\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.current !== nextProps.current) return false;\n\n  if (prevProps.currentChatIndex !== nextProps.currentChatIndex) return false;\n\n  return true;\n};\n\nexport default React.memo(Content, areEqual);\n","import React from 'react';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst APPLICATIONS = [\n  ID.CHAT,\n  ID.NOTES,\n];\n\nconst Control = ({\n  current,\n  toggleApplication,\n}) => {\n\n  return (\n    <div className=\"application-control\">\n      {APPLICATIONS.map(application => {\n        const active = current === application;\n\n        return (\n          <div\n            className={cx('application-icon', { inactive: !active })}\n            onClick={() => active ? null : toggleApplication(application)}\n          >\n            <Icon name={application} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.current === nextProps.current;\n};\n\nexport default React.memo(Control, areEqual);\n","import React, { useState } from 'react';\nimport Content from './content';\nimport Control from './control';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst DEFAULT = ID.CHAT;\n\nconst Application = ({\n  control,\n  currentChatIndex,\n}) => {\n  const [current, setCurrent] = useState(DEFAULT);\n\n  const toggleApplication = (application) => {\n    if (current !== application) setCurrent(application);\n  };\n\n  return (\n    <div className=\"application\">\n      {control ? (\n        <Control\n          current={current}\n          toggleApplication={toggleApplication}\n        />\n      ) : null}\n      <Content\n        current={current}\n        currentChatIndex={currentChatIndex}\n      />\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.currentChatIndex !== nextProps.currentChatIndex) return false;\n\n  return true;\n};\n\nexport default React.memo(Application, areEqual);\n","import React from 'react';\nimport './index.scss';\n\nconst Cursor = ({\n  x,\n  y,\n}) => {\n\n  if (x === -1 || y === -1) return null;\n\n  return (\n    <circle\n      className=\"cursor\"\n      style={{ cx: x, cy: y }}\n    />\n  );\n};\n\nexport default Cursor;\n","import React from 'react';\nimport cx from 'classnames';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst Proxy = ({\n  id,\n  height,\n  width,\n}) => {\n  const thumbnail = storage.thumbnails.find(thumbnails => id === thumbnails.id);\n  if (!thumbnail) return null;\n\n  const {\n    alt,\n    src,\n  } = thumbnail;\n\n  if (src === ID.SCREENSHARE) return null;\n\n  const logo = src.includes('logo');\n\n  return (\n    <foreignObject\n      height={height}\n      x={0}\n      width={width}\n      y={0}\n    >\n      <img\n        alt={alt}\n        className={cx('proxy', { logo })}\n        src={buildFileURL(src)}\n      />\n    </foreignObject>\n  );\n};\n\nexport default Proxy;\n","import React from 'react';\nimport Proxy from './proxy';\nimport { buildFileURL } from 'utils/data';\nimport storage from 'utils/data/storage';\n\nconst Slide = ({ id }) => {\n  const current = storage.shapes.slides.find(slide => id === slide.id);\n  if (!current) return null;\n\n  const {\n    height,\n    src,\n    width,\n  } = current;\n\n  return (\n    <g>\n      <Proxy\n        id={id}\n        height={height}\n        width={width}\n      />\n      <image\n        height={height}\n        href={buildFileURL(src)}\n        x={0}\n        width={width}\n        y={0}\n      />\n    </g>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.id === nextProps.id;\n};\n\nexport default React.memo(Slide, areEqual);\n","import React from 'react';\nimport { buildFileURL } from 'utils/data';\n\nconst Poll = ({\n  data,\n  style,\n}) => {\n  const {\n    image,\n    rect,\n  } = data;\n\n  // TODO: Better adapt for old versions\n  if (rect) {\n    // BigBlueButton v2.2 or lower\n    return (\n      <g style={style}>\n        <rect\n          fill={rect.fill}\n          height={rect.height}\n          stroke={rect.stroke}\n          strokeWidth={rect['stroke-width']}\n          width={rect.width}\n          x={rect.x}\n          y={rect.y}\n        />\n        <image\n          height={image.height}\n          transform={image.transform}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  } else {\n    // BigBlueButton v2.3 or higher\n     return (\n      <g style={style}>\n        <image\n          height={image.height}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  }\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport Poll from './poll';\nimport { SHAPES } from 'utils/constants';\nimport { isEmpty } from 'utils/data/validators';\nimport logger from 'utils/logger';\n\nconst Canvas = ({\n  draws,\n  drawsInterval,\n}) => {\n  if (isEmpty(drawsInterval)) return null;\n\n  const canvas = [];\n\n  for (let i = 0; i < drawsInterval.length; i++) {\n    if (!drawsInterval[i]) continue;\n\n    const {\n      id,\n      shape,\n      style,\n    } = draws[i];\n\n    const j = i + 1;\n    let intermediate = false;\n    if (j < drawsInterval.length) {\n      intermediate = draws[j].id === id;\n    }\n\n    if (intermediate) continue;\n\n    const {\n      data,\n      type,\n    } = shape;\n\n    switch (type) {\n      case SHAPES.CIRCLE:\n        canvas.push(\n          <circle\n            style={style}\n            cx={data.cx}\n            cy={data.cy}\n            r={data.r}\n          />\n        );\n        break;\n      case SHAPES.LINE:\n        canvas.push(\n          <line\n            style={style}\n            x1={data.x1}\n            y1={data.y1}\n            x2={data.x2}\n            y2={data.y2}\n          />\n        );\n        break;\n      case SHAPES.PATH:\n        canvas.push(\n          <path\n            style={style}\n            d={data.d}\n          />\n        );\n        break;\n      case SHAPES.POLL:\n        canvas.push(\n          <Poll\n            data={data}\n            key={id}\n            style={style}\n          />\n        );\n        break;\n      case SHAPES.POLYGON:\n        canvas.push(\n          <polygon\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.POLYLINE:\n        canvas.push(\n          <polyline\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.TEXT:\n        canvas.push(\n          <foreignObject\n            style={style}\n            height={data.height}\n            width={data.width}\n            x={data.x}\n            y={data.y}\n          >\n            <div xmlns=\"http://www.w3.org/1999/xhtml\">\n              {data.text.split('\\r').map(line => <span>{line}<br /></span>)}\n            </div>\n          </foreignObject>\n        );\n        break;\n      default:\n        logger.debug('unhandled', type);\n    }\n  }\n\n  return (\n    <g>\n      {canvas}\n    </g>\n  );\n};\n\nexport default Canvas;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport Cursor from './cursor';\nimport Slide from './slide';\nimport Canvas from './canvas';\nimport { ID } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport { isEqual } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.presentation.wrapper.aria',\n    description: 'Aria label for the presentation wrapper',\n  },\n});\n\nconst buildViewBoxAttr = (viewBox) => {\n  const {\n    height,\n    x,\n    width,\n    y,\n  } = viewBox;\n\n  return `${x} ${y} ${width} ${height}`;\n};\n\nconst getCursor = (index, viewBox) => {\n  const inactive = {\n    x: -1,\n    y: -1,\n  }\n\n  if (index === -1) return inactive;\n\n  const currentData = storage.cursor[index];\n  if (currentData.x === -1 && currentData.y === -1) return inactive;\n\n  return {\n    x: viewBox.x + (currentData.x * viewBox.width),\n    y: viewBox.y + (currentData.y * viewBox.height),\n  };\n};\n\nconst getSlideId = (index) => {\n  const inactive = -1;\n  if (index === -1) return inactive;\n\n  const currentData = storage.shapes.slides[index];\n\n  return currentData.id;\n};\n\nconst getViewBox = (index) => {\n  const inactive = {\n    height: 0,\n    x: 0,\n    width: 0,\n    y: 0,\n  };\n\n  if (index === -1) return inactive;\n\n  const currentData = storage.panzooms[index];\n\n  return {\n    height: currentData.height,\n    x: currentData.x,\n    width: currentData.width,\n    y: currentData.y,\n  };\n};\n\nconst Presentation = ({\n  active,\n  currentCursorIndex,\n  currentPanzoomIndex,\n  currentSlideIndex,\n  draws,\n  drawsInterval,\n}) => {\n  const intl = useIntl();\n  const slideId = getSlideId(currentSlideIndex);\n  const viewBox = getViewBox(currentPanzoomIndex);\n  const cursor = getCursor(currentCursorIndex, viewBox);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('presentation-wrapper', { inactive: !active })}\n      id={ID.PRESENTATION}\n    >\n      <div className=\"presentation\">\n        <svg\n          viewBox={buildViewBoxAttr(viewBox)}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <defs>\n            <clipPath id=\"viewBox\">\n              <rect\n                height={viewBox.height}\n                x={viewBox.x}\n                width={viewBox.width}\n                y={viewBox.y}\n              />\n            </clipPath>\n          </defs>\n          <g clipPath=\"url(#viewBox)\">\n            <Slide id={slideId} />\n            <Canvas\n              draws={draws}\n              drawsInterval={drawsInterval}\n            />\n            <Cursor\n              x={cursor.x}\n              y={cursor.y}\n            />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  if (prevProps.currentCursorIndex !== nextProps.currentCursorIndex) return false;\n\n  if (prevProps.currentPanzoomIndex !== nextProps.currentPanzoomIndex) return false;\n\n  if (prevProps.currentSlideIndex !== nextProps.currentSlideIndex) return false;\n\n  if (!isEqual(prevProps.draws, nextProps.draws)) return false;\n\n  if (!isEqual(prevProps.drawsInterval, nextProps.drawsInterval)) return false;\n\n  return true;\n};\n\nexport default React.memo(Presentation, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport videojs from 'video.js/core.es.js';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport logger from 'utils/logger';\nimport storage from 'utils/data/storage';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.screenshare.wrapper.aria',\n    description: 'Aria label for the screenshare wrapper',\n  },\n});\n\nconst buildSources = () => {\n  return [\n    {\n      src: buildFileURL('deskshare/deskshare.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL('deskshare/deskshare.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => storage.media.find(m => source.type.includes(m)));\n};\n\nconst buildOptions = (sources) => {\n  return {\n    controls: false,\n    fill: true,\n    sources: sources.current,\n  };\n};\n\nconst Screenshare = ({ active }) => {\n  const intl = useIntl();\n  const sources = useRef(buildSources());\n  const element = useRef();\n\n  useEffect(() => {\n    if (!player.screenshare) {\n      const video = element.current;\n      if (!video) return;\n\n      player.screenshare = videojs(video, buildOptions(sources), () => {});\n      logger.debug(ID.SCREENSHARE, 'mounted');\n    }\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (player.screenshare) {\n        player.screenshare.dispose();\n        player.screenshare = null;\n        logger.debug(ID.SCREENSHARE, 'unmounted');\n      }\n    };\n  }, []);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('screenshare-wrapper', { inactive: !active })}\n      id={ID.SCREENSHARE}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={element}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.active === nextProps.active;\n};\n\nexport default React.memo(Screenshare, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  src: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  src: '',\n};\n\nconst Image = ({\n  alt,\n  src,\n}) => {\n  const screenshare = src === ID.SCREENSHARE;\n\n  if (screenshare) {\n    return (\n      <div className={cx('thumbnail-image', { screenshare })}>\n        <Icon name={ID.SCREENSHARE} />\n      </div>\n    );\n  }\n\n  const logo = src.includes('logo');\n\n  return (\n    <img\n      alt={alt}\n      className={cx('thumbnail-image', { logo })}\n      src={buildFileURL(src)}\n    />\n  );\n};\n\nImage.propTypes = propTypes;\nImage.defaultProps = defaultProps;\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './image';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  index: PropTypes.number,\n  src: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  index: 0,\n  src: '',\n};\n\nconst Thumbnail = ({\n  alt,\n  index,\n  src,\n}) => {\n\n  return (\n    <div className=\"thumbnail\">\n      <Image\n        alt={alt}\n        src={src}\n      />\n      <div className=\"thumbnail-index\">\n        {index + 1}\n      </div>\n    </div>\n  )\n};\n\nThumbnail.propTypes = propTypes;\nThumbnail.defaultProps = defaultProps;\n\nexport default Thumbnail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnail from './thumbnail';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  index: PropTypes.number,\n  interactive: PropTypes.bool,\n  item: PropTypes.object,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  index: 0,\n  interactive: false,\n  item: {},\n  setRef: () => {},\n};\n\nconst Item = ({\n  active,\n  index,\n  interactive,\n  item,\n  setRef,\n}) => {\n  if (!interactive) {\n\n    return (\n      <div\n        className=\"thumbnail-wrapper\"\n        tabIndex=\"0\"\n      >\n        <Thumbnail\n          alt={item.alt}\n          index={index}\n          src={item.src}\n        />\n      </div>\n    );\n  }\n\n  const handleOnClick = () => {\n    if (interactive) player.primary.currentTime(item.timestamp);\n  };\n\n  return (\n    <div\n      className={cx('thumbnail-wrapper', { active, interactive })}\n      onClick={() => handleOnClick()}\n      onKeyPress={event => handleOnEnterPress(event, handleOnClick)}\n      ref={node => setRef(node, index)}\n      tabIndex=\"0\"\n    >\n      <Thumbnail\n        alt={item.alt}\n        index={index}\n        src={item.src}\n      />\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Icon from 'components/utils/icon';\nimport './index.scss';\n\nconst DEFAULT = 'default';\nconst GHOST = 'ghost';\nconst SOLID = 'solid';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  aria: PropTypes.string,\n  circle: PropTypes.bool,\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  aria: '',\n  circle: false,\n  disabled: false,\n  handleOnClick: () => {},\n  icon: '',\n  type: DEFAULT,\n};\n\nconst Button = ({\n  active,\n  aria,\n  circle,\n  disabled,\n  handleOnClick,\n  icon,\n  type,\n}) => {\n  const ghost = type === GHOST;\n  const solid = type === SOLID;\n\n  const style = {\n    default: !ghost && !solid && !disabled,\n    ghost: ghost && !active && !disabled,\n    solid: (solid || active) && !disabled,\n    circle,\n    disabled,\n  };\n\n  return (\n    <div className=\"button-wrapper\">\n      <button\n        aria-label={aria}\n        className={cx('button', style)}\n        disabled={disabled}\n        onClick={() => handleOnClick()}\n      >\n        <Icon name={icon} />\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  clear: {\n    id: 'button.clear.aria',\n    description: 'Aria label for the clear button',\n  },\n});\n\nconst propTypes = {\n  interactive: PropTypes.bool,\n  onClick: PropTypes.func,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  interactive: false,\n  onClick: () => {},\n  search: [],\n};\n\nconst Clear = ({\n  interactive,\n  onClick,\n  search,\n}) => {\n  const intl = useIntl();\n\n  if (!interactive) return null;\n\n  if (isEmpty(search)) return null;\n\n  return (\n    <div className=\"clear-button\">\n      <Button\n        aria={intl.formatMessage(intlMessages.clear)}\n        handleOnClick={onClick}\n        icon=\"close\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nClear.propTypes = propTypes;\nClear.defaultProps = defaultProps;\n\nexport default Clear;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Item from './item';\nimport ClearButton from './buttons/clear';\nimport { thumbnails as config } from 'config';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport storage from 'utils/data/storage';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.thumbnails.wrapper.aria',\n    description: 'Aria label for the thumbnails wrapper',\n  },\n});\n\nconst propTypes = {\n  currentDataIndex: PropTypes.number,\n  handleSearch: PropTypes.func,\n  interactive: PropTypes.bool,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  currentDataIndex: 0,\n  handleSearch: () => {},\n  interactive: false,\n  search: [],\n};\n\nconst Thumbnails = ({\n  currentDataIndex,\n  handleSearch,\n  interactive,\n  search,\n}) => {\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const intl = useIntl();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentDataIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  const isFiltered = (index) => {\n    if (interactive) {\n      return !isEmpty(search) && !search.includes(index);\n    } else {\n      return !search.includes(index);\n    }\n  }\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.LEFT, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"thumbnails-wrapper\"\n      id={ID.THUMBNAILS}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      {storage.thumbnails.reduce((result, item, index) => {\n        if (!isFiltered(index)) {\n          const active = index === currentDataIndex;\n\n          result.push(\n            <Item\n              active={active}\n              index={index}\n              interactive={interactive}\n              item={item}\n              setRef={setRef}\n            />\n          );\n        }\n\n        return result;\n      }, [])}\n      <ClearButton\n        interactive={interactive}\n        onClick={() => handleSearch([])}\n        search={search}\n      />\n    </div>\n  );\n};\n\nThumbnails.propTypes = propTypes;\nThumbnails.defaultProps = defaultProps;\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.currentDataIndex !== nextProps.currentDataIndex) return false;\n\n  if (!isEqual(prevProps.search, nextProps.search)) return false;\n\n  return true;\n};\n\nexport default React.memo(Thumbnails, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport videojs from 'video.js/core.es.js';\nimport { player as config } from 'config';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport logger from 'utils/logger';\nimport storage from 'utils/data/storage';\nimport player from 'utils/player';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.webcams.wrapper.aria',\n    description: 'Aria label for the webcams wrapper',\n  },\n});\n\nconst buildSources = () => {\n  return [\n    {\n      src: buildFileURL('video/webcams.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL('video/webcams.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => storage.media.find(m => source.type.includes(m)));\n};\n\nconst buildTracks = () => {\n  return storage.captions.map(lang => {\n    const {\n      locale,\n      localeName,\n    } = lang;\n\n    return {\n      kind: 'captions',\n      src: buildFileURL(`caption_${locale}.vtt`),\n      srclang: locale,\n      label: localeName,\n    };\n  });\n};\n\nconst buildOptions = (sources, tracks) => {\n  return {\n    controlBar: {\n      fullscreenToggle: false,\n      pictureInPictureToggle: false,\n      volumePanel: {\n        inline: false,\n        vertical: true,\n      },\n    },\n    controls: true,\n    fill: true,\n    inactivityTimeout: 0,\n    playbackRates: config.rates,\n    sources: sources.current,\n    tracks: tracks.current,\n  };\n};\n\nconst propTypes = {\n  onTimeUpdate: PropTypes.func,\n  time: PropTypes.number,\n};\n\nconst defaultProps = {\n  onTimeUpdate: () => {},\n  time: 0,\n};\n\nconst Webcams = ({\n  onTimeUpdate,\n  time,\n}) => {\n  const intl = useIntl();\n  const sources = useRef(buildSources());\n  const tracks = useRef(buildTracks());\n  const element = useRef();\n\n  useEffect(() => {\n    if (!player.webcams) {\n      const video = element.current;\n      if (!video) return;\n\n      player.webcams = videojs(video, buildOptions(sources, tracks), () => {\n        if (onTimeUpdate) {\n          player.webcams.on('play', () => {\n            setInterval(() => {\n              const currentTime = player.webcams.currentTime();\n              onTimeUpdate(currentTime);\n            }, 1000 / config.rps);\n          });\n\n          player.webcams.on('pause', () => clearInterval());\n        }\n\n        if (time) {\n          player.webcams.on('loadedmetadata', () => {\n            const duration = player.webcams.duration();\n            if (time < duration) {\n              player.webcams.currentTime(time);\n            }\n          });\n        }\n      });\n      logger.debug(ID.WEBCAMS, 'mounted');\n    }\n  }, [ onTimeUpdate, time ]);\n\n  useEffect(() => {\n    return () => {\n      if (player.webcams) {\n        player.webcams.dispose();\n        player.webcams = null;\n        logger.debug(ID.WEBCAMS, 'unmounted');\n      }\n    };\n  }, []);\n\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"webcams-wrapper\"\n      id={ID.WEBCAMS}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={element}\n        />\n      </div>\n    </div>\n  );\n};\n\nWebcams.propTypes = propTypes;\nWebcams.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Webcams, areEqual);\n","import React from 'react';\nimport './index.scss';\n\nconst Bottom = () => {\n  return <div className=\"bottom-bar\" />;\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Bottom, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n  FormattedDate,\n} from 'react-intl';\nimport cx from 'classnames';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  about: {\n    id: 'button.about.aria',\n    description: 'Aria label for the about button',\n  },\n});\n\nconst propTypes = {\n  interactive: PropTypes.bool,\n  toggleAbout: PropTypes.func,\n};\n\nconst defaultProps = {\n  interactive: false,\n  toggleAbout: () => {},\n};\n\nconst Title = ({\n  interactive,\n  toggleAbout,\n}) => {\n  const intl = useIntl();\n  const date = <FormattedDate value={new Date(storage.metadata.start)} />;\n\n  if (!interactive) {\n\n    return (\n      <span className=\"title\">\n        {storage.metadata.name} - {date}\n      </span>\n    );\n  }\n\n  return (\n    <span\n      aria={intl.formatMessage(intlMessages.about)}\n      className={cx('title', { interactive })}\n      onClick={toggleAbout}\n      onKeyPress={event => handleOnEnterPress(event, toggleAbout)}\n      tabIndex=\"0\"\n    >\n      {storage.metadata.name} - {date}\n    </span>\n  );\n};\n\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = {\n  enabled: PropTypes.bool,\n  toggleSearch: PropTypes.func,\n};\n\nconst defaultProps = {\n  enabled: false,\n  toggleSearch: () => {},\n};\n\nconst Search = ({\n  enabled,\n  toggleSearch,\n}) => {\n  const intl = useIntl();\n\n  if (!enabled) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.search)}\n      circle\n      handleOnClick={toggleSearch}\n      icon={ID.SEARCH}\n    />\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\n\nconst intlMessages = defineMessages({\n  section: {\n    id: 'button.section.aria',\n    description: 'Aria label for the section button',\n  },\n});\n\nconst propTypes = {\n  enabled: PropTypes.bool,\n  section: PropTypes.bool,\n  toggleSection: PropTypes.func,\n};\n\nconst defaultProps = {\n  enabled: false,\n  section: true,\n  toggleSection: () => {},\n};\n\nconst Section = ({\n  enabled,\n  section,\n  toggleSection,\n}) => {\n  const intl = useIntl();\n\n  if (!enabled) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.section)}\n      circle\n      handleOnClick={toggleSection}\n      icon={section ? 'left' : 'right'}\n    />\n  );\n};\n\nSection.propTypes = propTypes;\nSection.defaultProps = defaultProps;\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  swap: {\n    id: 'button.swap.aria',\n    description: 'Aria label for the swap button',\n  },\n});\n\nconst propTypes = {\n  enabled: PropTypes.bool,\n  toggleSwap: PropTypes.func,\n};\n\nconst defaultProps = {\n  enabled: false,\n  toggleSwap: () => {},\n};\n\nconst Swap = ({\n  enabled,\n  toggleSwap,\n}) => {\n  const intl = useIntl();\n\n  if (!enabled) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.swap)}\n      circle\n      handleOnClick={toggleSwap}\n      icon={ID.SWAP}\n    />\n  );\n};\n\nSwap.propTypes = propTypes;\nSwap.defaultProps = defaultProps;\n\nexport default Swap;\n","import { controls } from 'config';\nimport { LAYOUT } from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport { isContentVisible } from 'utils/data/validators';\n\nlet MODE = null;\n\nconst layout = {\n  get content() {\n    return storage.content;\n  },\n  get mode() {\n    return MODE;\n  },\n  set mode(value) {\n    MODE = value;\n  },\n  get control() {\n    const { DISABLED } = LAYOUT;\n\n    let control = true;\n    switch (this.mode) {\n      case DISABLED:\n        control = false;\n        break;\n      default:\n    }\n\n    return control;\n  },\n  get section() {\n    const {\n      CONTENT,\n      MEDIA,\n    } = LAYOUT;\n\n    let section = true;\n    switch (this.mode) {\n      case CONTENT:\n        section = false;\n        break;\n      case MEDIA:\n        section = false;\n        break;\n      default:\n    }\n\n    return section;\n  },\n  get swap() {\n    const {\n      CONTENT,\n      MEDIA,\n      SWAPPED,\n    } = LAYOUT;\n\n    let swap = false;\n    switch (this.mode) {\n      case CONTENT:\n        swap = false;\n        break;\n      case MEDIA:\n      case SWAPPED:\n        swap = true;\n        break;\n      default:\n    }\n\n    return swap;\n  },\n  get screenshare() {\n    return this.content.screenshare;\n  },\n  get single() {\n    return !this.content.presentation && !this.content.screenshare;\n  },\n  getBottomContentStyle: function ({ fullscreen, thumbnails }) {\n    const bottom = thumbnails && !fullscreen;\n    const style = { 'inactive': !bottom };\n\n    return style;\n  },\n  getContentStyle: function ({ swap }) {\n    const style = { 'swapped-content': swap };\n\n    return style;\n  },\n  getMediaStyle: function ({ swap }) {\n    const style = { 'swapped-media': swap || this.single };\n\n    return style;\n  },\n  getPlayerStyle: function ({ fullscreen, section }) {\n    const style = {\n      'fullscreen-content': fullscreen,\n      'hidden-section': !section,\n      'single-content': this.single,\n    };\n\n    return style;\n  },\n  hasFullscreenButton: function (content, { control, swap }) {\n    if (!control || !controls.fullscreen) return false;\n\n    if (!isContentVisible(content, swap || this.single)) return false;\n\n    return true;\n  },\n};\n\nexport default layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Title from './title';\nimport SearchButton from './buttons/search';\nimport SectionButton from './buttons/section';\nimport SwapButton from './buttons/swap';\nimport { controls as config } from 'config';\nimport layout from 'utils/layout';\nimport './index.scss';\n\nconst propTypes = {\n  control: PropTypes.bool,\n  section: PropTypes.bool,\n  toggleAbout: PropTypes.func,\n  toggleSearch: PropTypes.func,\n  toggleSection: PropTypes.func,\n  toggleSwap: PropTypes.func,\n};\n\nconst defaultProps = {\n  control: false,\n  section: false,\n  toggleAbout: () => {},\n  toggleSearch: () => {},\n  toggleSection: () => {},\n  toggleSwap: () => {},\n};\n\nconst Top = ({\n  control,\n  section,\n  toggleAbout,\n  toggleSearch,\n  toggleSection,\n  toggleSwap,\n}) => {\n\n  return (\n    <div className=\"top-bar\">\n      <div className=\"left\">\n        <SectionButton\n          enabled={control && config.section}\n          section={section}\n          toggleSection={toggleSection}\n        />\n      </div>\n      <div className=\"center\">\n        <Title\n          interactive={control && config.about}\n          toggleAbout={toggleAbout}\n        />\n      </div>\n      <div className=\"right\">\n        <SearchButton\n          enabled={control && config.search && !layout.single}\n          toggleSearch={toggleSearch}\n        />\n        <SwapButton\n          enabled={control && config.swap && !layout.single}\n          toggleSwap={toggleSwap}\n        />\n      </div>\n    </div>\n  );\n};\n\nTop.propTypes = propTypes;\nTop.defaultProps = defaultProps;\n\n// Checks the side section state\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.section === nextProps.section;\n};\n\nexport default React.memo(Top, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from 'components/utils/icon';\nimport './index.scss';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n};\n\nconst defaultProps = {\n  icon: '',\n  value: false,\n};\n\nconst Item = ({\n  icon,\n  value,\n}) => {\n  let element;\n  if (typeof value === 'boolean') {\n    element = <Icon name={value ? 'check' : 'close'} />;\n  } else {\n    element = value;\n  }\n\n  return (\n    <div className=\"item\">\n      <Icon name={icon} />\n      {element}\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport Item from './item';\nimport {\n  CONTENT,\n  ID,\n} from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst Body = () => {\n\n  return (\n    <div className=\"about-body\">\n      <Item\n        icon={ID.USERS}\n        key={ID.USERS}\n        value={storage.metadata.participants}\n      />\n      {CONTENT.map((item) => (\n        <Item\n          icon={item}\n          key={item}\n          value={storage.content[item]}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Body;\n","import React from 'react';\nimport { BUILD } from 'utils/constants';\nimport './index.scss';\n\nconst Footer = () => {\n  return (\n    <div className=\"about-footer\">\n      {BUILD ? (\n        <span className=\"revision\">\n          {BUILD}\n        </span>\n      ) : (\n        null\n      )}\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n  FormattedDate,\n  FormattedTime,\n} from 'react-intl';\nimport storage from 'utils/data/storage';\nimport './index.scss';\n\nconst Header = () => {\n  const {\n    end,\n    name,\n    start,\n  } = storage.metadata;\n\n  const subtitle = [];\n  subtitle.push(\n    <FormattedDate\n      value={new Date(start)}\n      day=\"numeric\"\n      month=\"long\"\n      year=\"numeric\"\n    />\n  );\n\n  subtitle.push(<FormattedTime value={new Date(start)} />);\n  subtitle.push(<FormattedTime value={new Date(end)} />);\n\n  return (\n    <div className=\"about-header\">\n      <div className=\"title\">\n        {name}\n      </div>\n      <div className=\"subtitle\">\n        {subtitle.map(s => <div className=\"item\">{s}</div>)}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  close: {\n    id: 'button.close.aria',\n    description: 'Aria label for the close button',\n  },\n});\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  onClose: PropTypes.func,\n};\n\nconst defaultProps = {\n  children: null,\n  onClose: () => {},\n};\n\nconst Modal = ({\n  children,\n  onClose,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal\">\n        <div className=\"modal-control\">\n          <Button\n            aria={intl.formatMessage(intlMessages.close)}\n            circle\n            handleOnClick={onClose}\n            icon=\"close\"\n          />\n        </div>\n        <div className=\"modal-content\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport Modal from 'components/utils/modal';\nimport './index.scss';\n\nconst propTypes = { toggleModal: PropTypes.func };\n\nconst defaultProps = { toggleModal: () => {} };\n\nconst About = ({ toggleModal }) => {\n\n  return (\n    <Modal onClose={toggleModal}>\n      <Header />\n      <Body />\n      <Footer />\n    </Modal>\n  );\n};\n\nAbout.propTypes = propTypes;\nAbout.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(About, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnails from 'components/thumbnails';\nimport { search as config } from 'config';\nimport './index.scss';\n\nconst propTypes = {\n  handleOnChange: PropTypes.func,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  handleOnChange: () => {},\n  search: [],\n};\n\nconst Body = ({\n  handleOnChange,\n  search,\n}) => {\n\n  return (\n    <div className=\"search-body\">\n      <input\n        maxLength={config.length.max}\n        minLength={config.length.min}\n        onChange={(event) => handleOnChange(event)}\n        type=\"text\"\n      />\n      <div className={cx('result', { active: true })}>\n        <Thumbnails\n          currentDataIndex={0}\n          handleSearch={null}\n          player={null}\n          search={search}\n        />\n      </div>\n    </div>\n  );\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\n\nexport default Body;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = {\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  disabled: false,\n  handleOnClick: () => {},\n};\n\nconst Footer = ({\n  disabled,\n  handleOnClick,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-footer\">\n      <Button\n        aria={intl.formatMessage(intlMessages.search)}\n        disabled={disabled}\n        handleOnClick={(event) => handleOnClick(event)}\n        icon=\"search\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nFooter.propTypes = propTypes;\nFooter.defaultProps = defaultProps;\n\nexport default Footer;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  title: {\n    id: 'player.search.modal.title',\n    description: 'Label for the search modal title',\n  },\n  subtitle: {\n    id: 'player.search.modal.subtitle',\n    description: 'Label for the search modal subtitle',\n  },\n});\n\nconst Header = () => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-header\">\n      <div className=\"title\">\n        {intl.formatMessage(intlMessages.title)}\n      </div>\n      <div className=\"subtitle\">\n        {intl.formatMessage(intlMessages.subtitle)}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { getCurrentDataIndex } from 'utils/data';\nimport storage from 'utils/data/storage';\nimport player from 'utils/player';\n\nconst search = (text, thumbnails) => {\n  const result = [];\n\n  const value = text.toLowerCase();\n  thumbnails.forEach((thumbnail, index) => {\n    const { alt } = thumbnail;\n\n    if (alt.toLowerCase().indexOf(value) !== -1) {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst seek = (seconds) => {\n  const min = 0;\n  const max = player.primary.duration();\n  const time = player.primary.currentTime() + seconds;\n\n  if (time < min) {\n    player.primary.currentTime(min);\n  } else if (time > max) {\n    player.primary.currentTime(max);\n  } else {\n    player.primary.currentTime(time);\n  }\n};\n\nconst skip = (change) => {\n  const min = 0;\n  const max = storage.shapes.slides.length - 1;\n  const time = player.primary.currentTime();\n\n  const current = getCurrentDataIndex(storage.shapes.slides, time);\n  if (current === -1) return null;\n\n  const index = current + change;\n\n  let timestamp;\n  if (index < min) {\n    timestamp = storage.shapes.slides[min].timestamp;\n  } else if (index > max) {\n    timestamp = storage.shapes.slides[max].timestamp;\n  } else {\n    timestamp = storage.shapes.slides[index].timestamp;\n  }\n\n  if (typeof timestamp !== 'undefined') {\n    player.primary.currentTime(timestamp);\n  }\n};\n\nexport {\n  search,\n  seek,\n  skip,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport { search as config } from 'config';\nimport Modal from 'components/utils/modal';\nimport { search as getSearch } from 'utils/actions';\nimport storage from 'utils/data/storage';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst getValue = (event) => {\n  if (event && event.target) return event.target.value;\n\n  return null;\n};\n\nconst isValid = (value) => {\n  if (value && typeof value === 'string') {\n    return value.length >= config.length.min;\n  }\n\n  return false;\n};\n\nconst propTypes = {\n  handleSearch: PropTypes.func,\n  toggleModal: PropTypes.func,\n};\n\nconst defaultProps = {\n  handleSearch: () => {},\n  toggleModal: () => {},\n};\n\nconst Search = ({\n  handleSearch,\n  toggleModal,\n}) => {\n  const [disabled, setDisabled] = useState(true);\n  const [search, setSearch] = useState([]);\n\n  const handleOnChange = (event) => {\n    const value = getValue(event);\n    if (isValid(value)) {\n      const result = getSearch(value, storage.thumbnails);\n\n      // If different, update search\n      if (!isEqual(search, result)) {\n        setSearch(result);\n      }\n\n      // Check to enable\n      if (disabled) setDisabled(false);\n    } else {\n      // If not empty, clear search\n      if (!isEmpty(search)) {\n        setSearch([]);\n      }\n\n      // Chack to disable\n      if (!disabled) setDisabled(true);\n    }\n  };\n\n  const handleOnClick = () => {\n    handleSearch(search);\n    toggleModal();\n  };\n\n  return (\n    <Modal onClose={toggleModal}>\n      <Header />\n      <Body\n        handleOnChange={(event) => handleOnChange(event)}\n        search={search}\n      />\n      <Footer\n        disabled={disabled}\n        handleOnClick={() => handleOnClick()}\n      />\n    </Modal>\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Search, areEqual);\n","import { shortcuts as config } from 'config';\nimport logger from './logger';\n\nexport default class Shortcuts {\n  constructor(actions) {\n    this.enabled = config.enabled;\n\n    if (!this.enabled) {\n      logger.debug('shortcuts', 'disabled');\n    } else {\n      this.init(actions);\n    }\n  }\n\n  init(actions) {\n    this.listeners = [];\n\n    for (let prop in actions) {\n      const value = actions[prop];\n      if (typeof value === 'function') {\n        const key = config[prop];\n        this.add(key, value);\n      } else {\n        for (let p in value) {\n          const k = config[prop][p];\n          const v = value[p];\n          this.add(k, v);\n        }\n      }\n    }\n  }\n\n  add(key, action) {\n    if (!key || typeof key !== 'string') {\n      logger.warn('shortcuts', 'invalid', 'key');\n      return null;\n    } else if (key.length === 0) {\n      return null;\n    }\n\n    if (!action || typeof action !== 'function') {\n      logger.warn('shortcuts', 'invalid', 'action');\n      return null;\n    }\n\n    const listener = document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.shiftKey) {\n        if (e.key === key) action();\n      }\n    });\n\n    this.listeners.push(listener);\n  }\n\n  destroy() {\n    this.listeners.forEach(listener => {\n      document.removeEventListener(listener);\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { shortcuts } from 'config';\nimport Application from './application';\nimport Presentation from 'components/presentation';\nimport Screenshare from 'components/screenshare';\nimport Thumbnails from 'components/thumbnails';\nimport Webcams from 'components/webcams';\nimport BottomBar from 'components/bars/bottom';\nimport TopBar from 'components/bars/top';\nimport AboutModal from 'components/modals/about';\nimport SearchModal from 'components/modals/search';\nimport Button from 'components/utils/button';\nimport {\n  seek,\n  skip,\n} from 'utils/actions';\nimport {\n  ID,\n  LAYOUT,\n} from 'utils/constants';\nimport {\n  getActiveContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getDraws,\n} from 'utils/data';\nimport storage from 'utils/data/storage';\nimport { isEqual } from 'utils/data/validators';\nimport layout from 'utils/layout';\nimport Shortcuts from 'utils/shortcuts';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.wrapper.aria',\n    description: 'Aria label for the player wrapper',\n  },\n  fullscreen: {\n    id: 'button.fullscreen.aria',\n    description: 'Aria label for the fullscreen button',\n  },\n  restore: {\n    id: 'button.restore.aria',\n    description: 'Aria label for the restore button',\n  },\n});\n\nexport default class Player extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      control: layout.control,\n      fullscreen: false,\n      modal: '',\n      search: [],\n      section: layout.section,\n      swap: layout.swap,\n      thumbnails: true,\n      time: 0,\n    }\n\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.initShortcuts();\n  }\n\n  componentWillUnmount() {\n    if (this.shortcuts) {\n      this.shortcuts.destroy();\n    }\n  }\n\n  handleSearch(value) {\n    const { search } = this.state;\n\n    if (!isEqual(search, value)) {\n      this.setState({ search: value });\n    }\n  }\n\n  handleTimeUpdate(value) {\n    const { time } = this.state;\n\n    if (time !== value) {\n      this.setState({ time: value });\n    }\n  }\n\n  initShortcuts() {\n    const { seconds } = shortcuts.player;\n\n    const actions = {\n      fullscreen: () => this.toggleFullscreen(),\n      section: () => this.toggleSection(),\n      swap: () => this.toggleSwap(),\n      thumbnails: () => this.toggleThumbnails(),\n      slides: {\n        next: () => skip(+1),\n        previous: () => skip(-1),\n      },\n      player: {\n        backward: () => seek(-seconds),\n        forward: () => seek(+seconds),\n      },\n    };\n\n    this.shortcuts = new Shortcuts(actions);\n  }\n\n  toggleFullscreen() {\n    const { fullscreen } = this.state;\n\n    this.setState({ fullscreen: !fullscreen });\n  }\n\n  toggleModal(type) {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    this.setState({ modal: open ? '' : type });\n  }\n\n  toggleSection() {\n    const { section } = this.state;\n\n    this.setState({ section: !section });\n  }\n\n  toggleSwap() {\n    const { swap } = this.state;\n\n    this.setState({ swap: !swap });\n  }\n\n  toggleThumbnails() {\n    const { thumbnails } = this.state;\n\n    this.setState({ thumbnails: !thumbnails });\n  }\n\n  renderFullscreenButton(content) {\n    if (!layout.hasFullscreenButton(content, this.state)) return null;\n\n    const { intl } = this.props;\n    const { fullscreen } = this.state;\n\n    const aria = fullscreen\n      ? intl.formatMessage(intlMessages.restore)\n      : intl.formatMessage(intlMessages.fullscreen)\n    ;\n\n    const icon = fullscreen ? 'restore' : 'fullscreen';\n\n    return (\n      <div className=\"fullscreen-button\">\n        <Button\n          aria={aria}\n          handleOnClick={() => this.toggleFullscreen()}\n          icon={icon}\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  renderModal() {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    if (!open) return null;\n\n    switch (modal) {\n      case ID.ABOUT:\n        return (\n          <AboutModal toggleModal={() => this.toggleModal(ID.ABOUT)} />\n        );\n      case ID.SEARCH:\n        return (\n          <SearchModal\n            handleSearch={this.handleSearch}\n            toggleModal={() => this.toggleModal(ID.SEARCH)}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderThumbnails() {\n    const {\n      search,\n      time,\n    } = this.state;\n\n    const currentDataIndex = getCurrentDataIndex(storage.thumbnails, time);\n\n    return (\n      <Thumbnails\n        currentDataIndex={currentDataIndex}\n        handleSearch={this.handleSearch}\n        interactive\n        search={search}\n      />\n    );\n  }\n\n  renderTopBar() {\n    const {\n      control,\n      section,\n    } = this.state;\n\n    return (\n      <TopBar\n        control={control}\n        section={section}\n        toggleAbout={() => this.toggleModal(ID.ABOUT)}\n        toggleSearch={() => this.toggleModal(ID.SEARCH)}\n        toggleSection={() => this.toggleSection()}\n        toggleSwap={() => this.toggleSwap()}\n      />\n    );\n  }\n\n  renderMedia() {\n    const { time } = this.props;\n\n    return (\n      <div className={cx('media', layout.getMediaStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.MEDIA)}\n        <Webcams\n          key={ID.WEBCAMS}\n          onTimeUpdate={this.handleTimeUpdate}\n          time={time}\n        />\n      </div>\n    );\n  }\n\n  renderApplication() {\n    const {\n      control,\n      time,\n    } = this.state;\n\n    const currentChatIndex = getCurrentDataIndex(storage.messages, time);\n\n    return (\n      <Application\n        control={control}\n        currentChatIndex={currentChatIndex}\n      />\n    );\n  }\n\n  renderPresentation(active) {\n    const { time } = this.state;\n\n    const currentSlideIndex = getCurrentDataIndex(storage.shapes.slides, time);\n    const currentPanzoomIndex = getCurrentDataIndex(storage.panzooms, time);\n    const currentCursorIndex = getCurrentDataIndex(storage.cursor, time);\n    const draws = getDraws(currentSlideIndex, storage.shapes.slides, storage.shapes.canvases);\n    const currentDrawsInterval = getCurrentDataInterval(draws, time);\n\n    return (\n      <Presentation\n        active={active}\n        currentCursorIndex={currentCursorIndex}\n        currentPanzoomIndex={currentPanzoomIndex}\n        currentSlideIndex={currentSlideIndex}\n        draws={draws}\n        drawsInterval={currentDrawsInterval}\n      />\n    )\n  }\n\n  renderScreenshare(active) {\n    if (!layout.screenshare) return null;\n\n    return (\n      <Screenshare\n        active={active}\n        key={ID.SCREENSHARE}\n      />\n    );\n  }\n\n  renderContent() {\n    if (layout.single) return null;\n\n    const { time } = this.state;\n    const content = getActiveContent(storage.screenshare, time);\n\n    return (\n      <div className={cx('content', layout.getContentStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.CONTENT)}\n        <div className=\"top-content\">\n          {this.renderPresentation(content === ID.PRESENTATION)}\n          {this.renderScreenshare(content === ID.SCREENSHARE)}\n        </div>\n        <div className={cx('bottom-content', layout.getBottomContentStyle(this.state))}>\n          {this.renderThumbnails()}\n        </div>\n      </div>\n    );\n  }\n\n  renderBottomBar() {\n    return <BottomBar />;\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('player-wrapper', layout.getPlayerStyle(this.state))}\n        id={ID.PLAYER}\n      >\n        {this.renderTopBar()}\n        {this.renderMedia()}\n        {this.renderApplication()}\n        {this.renderContent()}\n        {this.renderBottomBar()}\n        {this.renderModal()}\n      </div>\n    );\n  }\n}\n","import React, { useRef, useState } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Data from './data';\nimport Dots from './dots';\nimport Error from 'components/error';\nimport Player from 'components/player';\nimport {\n  ERROR,\n  ID,\n} from 'utils/constants';\nimport storage from 'utils/data/storage';\nimport layout from 'utils/layout';\nimport logger from 'utils/logger';\nimport {\n  getLayout,\n  getRecordId,\n  getTime,\n} from 'utils/params';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'loader.wrapper.aria',\n    description: 'Aria label for the loader wrapper',\n  },\n});\n\nconst FEEDBACK = 1 * 1000;\n\nconst initError = (recordId) => recordId ? null : ERROR.BAD_REQUEST;\n\nconst Loader = ({ match }) => {\n  const intl = useIntl();\n  const counter = useRef(0);\n  const recordId = useRef(getRecordId(match));\n\n  const [error, setError] = useState(initError(recordId.current));\n  const [, setUpdate] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n\n  if (error) return <Error code={error} />;\n\n  const onError = (error) => {\n    logger.error('loader', 'error', error);\n    setError(error);\n  };\n\n  const onUpdate = (data) => {\n    logger.debug('loader', 'update', data);\n    counter.current += 1;\n    setUpdate(counter.current);\n  };\n\n  const onLoaded = () => {\n    logger.debug('loader', 'loaded');\n    setTimeout(() => setLoaded(true), FEEDBACK);\n  };\n\n  storage.fetch(recordId.current, onUpdate, onLoaded, onError);\n\n  if (loaded) {\n    layout.mode = getLayout();\n    const time = getTime();\n\n    return (\n      <Player\n        intl={intl}\n        time={time}\n      />\n    );\n  }\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"loader-wrapper\"\n      id={ID.LOADER}\n    >\n      <div className=\"loader-top\" />\n      <div className=\"loader-middle\">\n        <Dots />\n      </div>\n      <div className=\"loader-bottom\">\n        <Data data={storage.built} />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { ERROR } from 'utils/constants';\nimport Error from './error';\nimport Loader from './loader';\n\nconst Router = () => {\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route\n          path=\"/:recordId\"\n          component={Loader}\n        />\n        <Route render={() => <Error code={ERROR.NOT_FOUND} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import ar from './ar.json';\nimport de from './de.json';\nimport en from './en.json';\nimport es from './es.json';\nimport fa from './fa.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport ja from './ja.json';\nimport pt from './pt.json';\nimport ru from './ru.json';\nimport tr from './tr.json';\n\nconst messages = {\n  ar,\n  de,\n  en,\n  es,\n  fa,\n  fr,\n  it,\n  ja,\n  pt,\n  ru,\n  tr,\n};\n\nexport default messages;\n","import { locale as config } from 'config';\nimport messages from './messages';\nimport { getSearchParam } from 'utils/params';\n\nconst RTL_LOCALES = ['ar', 'fa'];\n\nconst setDirection = (locale) => {\n  if (RTL_LOCALES.includes(locale)) {\n    document.body.parentNode.setAttribute('dir', 'rtl');\n  } else {\n    document.body.parentNode.setAttribute('dir', 'ltr');\n  }\n};\n\nconst getLocale = () => {\n  // Try from the query params\n  let locale = getSearchParam('locale');\n\n  // If not, get browser default\n  if (!locale) locale = navigator.language;\n\n  // Sanitize\n  locale = locale.split(/[-_]/)[0];\n\n  // If the locale is missing, use the default fallback\n  if (!messages[locale]) locale = config.default.split(/[-_]/)[0];\n\n  setDirection(locale);\n\n  return locale;\n};\n\nconst getMessages = () => {\n  return messages;\n};\n\nexport {\n  getLocale,\n  getMessages,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from \"react-intl\";\nimport Loader from 'components/loader';\nimport Router from 'components/router';\nimport {\n  getLocale,\n  getMessages,\n} from 'locales';\nimport { ROUTER } from 'utils/constants';\nimport { getStyle } from 'utils/params';\nimport './index.scss';\n\nconst locale = getLocale();\nconst messages = getMessages();\nconst style = getStyle();\n\nReactDOM.render(\n  (\n    <IntlProvider\n      locale={locale}\n      messages={messages[locale]}\n    >\n      {style ? <link rel=\"stylesheet\" type=\"text/css\" href={style} /> : null}\n      {ROUTER ? <Router /> : <Loader />}\n    </IntlProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}