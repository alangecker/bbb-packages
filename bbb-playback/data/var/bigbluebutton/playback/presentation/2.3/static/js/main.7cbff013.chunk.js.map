{"version":3,"sources":["components/loader/data/item.js","utils/constants.js","components/loader/data/index.js","components/loader/dots.js","components/error/index.js","components/chat/messages/user/text.js","utils/logger.js","utils/data/validators.js","utils/hash.js","utils/params.js","utils/data/index.js","components/chat/messages/info.js","components/utils/avatar/index.js","utils/data/handlers.js","components/chat/messages/margin.js","components/chat/messages/message.js","components/chat/messages/user/index.js","components/chat/messages/system/poll/options.js","components/chat/messages/system/poll/question.js","components/chat/messages/system/poll/result.js","components/chat/messages/system/message.js","components/chat/messages/system/poll/index.js","components/chat/messages/system/external-video/url.js","components/chat/messages/system/external-video/index.js","components/chat/messages/index.js","components/chat/index.js","components/notes/index.js","components/presentation/cursor.js","components/presentation/slide/proxy.js","components/presentation/slide/index.js","components/presentation/canvas/poll.js","components/presentation/canvas/index.js","components/presentation/index.js","components/screenshare/index.js","components/thumbnails/image.js","components/thumbnails/thumbnail.js","components/thumbnails/item.js","components/utils/button/index.js","components/thumbnails/buttons/clear.js","components/thumbnails/index.js","components/video/index.js","components/bars/bottom.js","components/bars/top/title.js","components/bars/top/buttons/search.js","components/bars/top/buttons/section.js","components/bars/top/buttons/swap.js","components/bars/top/index.js","components/modals/about/item.js","components/modals/about/body.js","components/modals/about/footer.js","components/modals/about/header.js","components/utils/modal/index.js","components/modals/about/index.js","components/modals/search/body.js","components/modals/search/footer.js","components/modals/search/header.js","utils/actions.js","components/modals/search/index.js","utils/builder.js","utils/layout.js","utils/shortcuts.js","utils/synchronizer.js","components/player.js","components/loader/index.js","components/router.js","locales/messages/index.js","locales/index.js","index.js"],"names":["Item","icon","value","className","cx","loaded","defaultProps","BUILD","process","MEDIA_ROOT_URL","REACT_APP_MEDIA_ROOT_URL","NO_ROUTER","REACT_APP_NO_ROUTER","ERROR","ID","ABOUT","ALTERNATES","CAPTIONS","CHAT","CURSOR","DESKSHARE","LOADER","METADATA","NOTES","PANZOOMS","PLAYER","POLLS","EXTERNAL_VIDEOS","PRESENTATION","SCREENSHARE","SEARCH","SETTINGS","SHAPES","SWAP","THUMBNAILS","USERS","VIDEO","CONTENT","LAYOUT","NUMBERS","POSITIONS","ROUTER","Data","data","map","item","Dots","areEqual","React","memo","intlMessages","defineMessages","aria","id","description","Error","code","intl","useIntl","aria-label","formatMessage","Text","active","hyperlink","text","options","inactive","Fragment","params","URLSearchParams","window","location","search","debug","has","logger","info","console","warn","error","hasIndex","index","isEmpty","length","hasPresentation","slides","i","src","includes","hasProperty","object","property","hasOwnProperty","hasVideo","player","video","isActive","time","timestamp","clear","cleared","wasCleared","visible","isVisible","isCurrent","current","next","isDefined","isArray","isValid","isString","isEqual","first","second","type","equal","every","valid","Array","hash","str","charCodeAt","getSearchParam","name","get","parseTimeToSeconds","patterns","match","hours","minutes","seconds","timeToSeconds","h","parseInt","m","s","buildFileURL","recordId","file","mediaPath","param","getMediaPath","rootUrl","fileUrl","getActiveContent","screenshare","isEnabled","getBar","percentage","bar","p","half","repeat","ltr","document","dir","concat","getCurrentDataIndex","start","stop","middle","Math","floor","getData","config","files","TALKERS","getFileName","canvases","thumbnails","split","shift","getFileType","pop","getLoadedData","captions","chat","notes","polls","externalVideos","shapes","presentation","POLL_TYPES","YN","YNA","TF","POLL_KEYS","Info","milliseconds","getTimestampAsMilliseconds","hourCycle","hour","minute","timeZone","Avatar","circle","initials","style","getAvatarStyle","handleOnEnterPress","event","action","key","handleAutoScroll","fNode","cNode","direction","align","pNode","parentNode","scrollLeft","firstNode","currentNode","clientWidth","offsetLeft","spacing","parentWidth","horizontalOffset","getScrollLeft","scrollTop","clientHeight","offsetTop","parentHeight","verticalOffset","getScrollTop","Margin","onClick","onKeyPress","tabIndex","Message","children","currentTime","User","prevProps","nextProps","yes","no","abstention","true","false","Options","answers","label","toLowerCase","getPollLabel","question","Question","Result","responders","total","numVotes","toFixed","Poll","Url","url","ExternalVideo","Messages","currentDataIndex","setRef","message","getMessageType","ref","node","Chat","interaction","useRef","useEffect","scroll","aria-live","onMouseEnter","onMouseLeave","Notes","dangerouslySetInnerHTML","__html","Cursor","x","y","cy","Proxy","height","width","thumbnail","find","alt","logo","Slide","slide","href","image","rect","fill","stroke","strokeWidth","transform","Canvas","draws","drawsInterval","canvas","shape","j","intermediate","push","r","x1","y1","x2","y2","d","points","xmlns","line","buildViewBoxAttr","viewBox","Presentation","currentCursorIndex","currentPanzoomIndex","currentSlideIndex","cursors","panzooms","slideId","getSlideId","currentData","getViewBox","cursor","getCursor","xmlnsXlink","clipPath","Screenshare","media","onPlayerReady","sources","filter","source","buildSources","element","videojs","controls","buildOptions","dispose","data-vjs-player","playsInline","preload","Image","Thumbnail","interactive","handleOnClick","Button","disabled","ghost","solid","default","Clear","handleSearch","Thumbnails","reduce","result","isFiltered","Video","onTimeUpdate","tracks","lang","locale","localeName","kind","srclang","buildTracks","controlBar","fullscreenToggle","pictureInPictureToggle","volumePanel","inline","vertical","inactivityTimeout","playbackRates","rates","on","setInterval","rps","clearInterval","duration","Bottom","about","Title","toggleAbout","date","Date","Search","enabled","toggleSearch","section","Section","toggleSection","swap","Swap","toggleSwap","Top","control","single","green","red","Body","content","users","Footer","Header","metadata","end","subtitle","day","month","year","close","Modal","onClose","About","toggleModal","participants","handleOnChange","maxLength","max","minLength","min","onChange","title","seek","skip","change","useState","setDisabled","setSearch","target","getValue","forEach","indexOf","getSearch","getAttr","attr","getChildren","getId","getNumbers","trimmed","trim","replace","v","parseFloat","buildCanvases","group","canvasAttr","canvasId","g","drawAttr","undo","items","buildStyle","drawId","Object","assign","polyline","polygon","path","switch","foreignObject","child","grandchildren","grandchild","join","parseText","buildShapes","svg","img","in","sort","a","b","buildSlides","build","filename","Promise","resolve","reject","fileType","alternates","buildAlternates","buildPolls","external_video_url","buildExternalVideos","buildNotes","explicitChildren","preserveChildrenOrder","charsAsChildren","getOptions","parseStringPromise","then","popcorn","chattimeline","out","decodeXML","clearHyperlink","slice","getInitials","buildChat","recording","position","buildCursor","meeting","meta","end_time","start_time","buildMetadata","panzoom","viewbox","buildPanzooms","start_timestamp","stop_timestamp","buildScreenshare","catch","Layout","layout","this","getContentFromData","getControlFromLayout","getSectionFromLayout","getSwapFromLayout","state","fullscreen","isSingle","isContentVisible","Shortcuts","actions","init","prop","listeners","add","k","listener","addEventListener","e","altKey","shiftKey","removeEventListener","STATUSES","EVENTS","Synchronizer","primary","secondary","status","synching","play","pause","playbackRate","restore","Player","props","application","initControl","modal","initSection","initSwap","initData","handlePlayerReady","bind","handleTimeUpdate","initShortcuts","shortcuts","destroy","found","synchronizer","setState","toggleFullscreen","toggleThumbnails","previous","backward","forward","open","hasFullscreenButton","getContent","getMediaStyle","renderFullscreenButton","toggleApplication","currentChatIndex","renderApplicationIcon","renderApplicationControl","renderApplicationContent","getDraws","currentDrawsInterval","currentDataInterval","getCurrentDataInterval","hasScreenshare","getContentStyle","renderPresentation","renderScreenshare","getBottomContentStyle","renderThumbnails","getPlayerStyle","renderTopBar","renderMedia","renderApplication","renderContent","renderBottomBar","renderModal","PureComponent","Loader","counter","getRecordId","started","getTime","initError","setError","setLoaded","fetchFile","fetch","response","ok","json","update","keys","fetches","medias","method","all","responses","endsWith","fetchMedia","Router","basename","component","render","messages","ar","de","en","es","fa","fr","it","ja","pt","ru","tr","RTL_LOCALES","navigator","language","body","setAttribute","setDirection","getLocale","styles","getStyle","ReactDOM","rel","getElementById"],"mappings":"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","file":"static/js/main.7cbff013.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n};\n\nconst defaultProps = {\n  icon: '',\n  value: false,\n};\n\nconst Item = ({\n  icon,\n  value,\n}) => {\n\n  return (\n    <div className={cx('item', { loaded: value })}>\n      <div className={`icon-${icon}`} />\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","const BUILD = process.env.REACT_APP_BBB_PLAYBACK_BUILD;\nconst MEDIA_ROOT_URL = process.env.REACT_APP_MEDIA_ROOT_URL;\nconst NO_ROUTER = process.env.REACT_APP_NO_ROUTER;\n\nconst ERROR = {\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  NOT_ACCEPTABLE: 406,\n  PROXY_AUTHENTICATION_REQUIRED: 407,\n  REQUEST_TIMEOUT: 408,\n  CONFLICT: 409,\n  GONE: 410,\n};\n\nconst ID = {\n  ABOUT: 'about',\n  ALTERNATES: 'alternates',\n  CAPTIONS: 'captions',\n  CHAT: 'chat',\n  CURSOR: 'cursor',\n  DESKSHARE: 'deskshare',\n  ERROR: 'error',\n  LOADER: 'loader',\n  METADATA: 'metadata',\n  NOTES: 'notes',\n  PANZOOMS: 'panzooms',\n  PLAYER: 'player',\n  POLLS: 'polls',\n  EXTERNAL_VIDEOS: 'externalVideos',\n  PRESENTATION: 'presentation',\n  SCREENSHARE: 'screenshare',\n  SEARCH: 'search',\n  SETTINGS: 'settings',\n  SHAPES: 'shapes',\n  SWAP: 'swap',\n  THUMBNAILS: 'thumbnails',\n  USERS: 'users',\n  VIDEO: 'video',\n};\n\nconst CONTENT = [\n  ID.PRESENTATION,\n  ID.CHAT,\n  ID.POLLS,\n  ID.EXTERNAL_VIDEOS,\n  ID.NOTES,\n  ID.SCREENSHARE,\n  ID.CAPTIONS,\n];\n\nconst LAYOUT = {\n  CONTENT: 'content',\n  DISABLED: 'disabled',\n  MEDIA: 'media',\n};\n\nconst NUMBERS = [\n  'zero', 'one', 'two', 'three',\n  'four', 'five', 'six', 'seven',\n  'eight', 'nine', 'ten', 'eleven',\n  'twelve', 'thirteen', 'fourteen', 'fifteen',\n];\n\nconst POSITIONS = {\n  BOTTOM: 'bottom',\n  CENTER: 'center',\n  LEFT: 'left',\n  MIDDLE: 'middle',\n  RIGHT: 'right',\n  TOP: 'top',\n};\n\nconst SHAPES = {\n  CIRCLE: 'circle',\n  LINE: 'line',\n  PATH: 'path',\n  POLL: 'poll',\n  POLYGON: 'polygon',\n  POLYLINE: 'polyline',\n  TEXT: 'text',\n};\n\nconst getRouter = () => {\n  if (typeof NO_ROUTER !== 'undefined') {\n    if (NO_ROUTER) return false;\n  }\n\n  return true;\n};\n\nconst ROUTER = getRouter();\n\nexport {\n  BUILD,\n  CONTENT,\n  ERROR,\n  ID,\n  LAYOUT,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  POSITIONS,\n  ROUTER,\n  SHAPES,\n};\n","import React from 'react';\nimport Item from './item';\nimport { CONTENT } from 'utils/constants';\nimport './index.scss';\n\nconst Data = ({ data }) => {\n\n  return (\n    <div className=\"data-wrapper\">\n       {CONTENT.map((item) => (\n        <Item\n          icon={item}\n          key={item}\n          value={data[item]}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Data;\n","import React from 'react';\nimport './index.scss';\n\nconst Dots = () => {\n\n  return (\n    <div className=\"dots-wrapper\">\n      <div className=\"first\" />\n      <div className=\"second\" />\n      <div className=\"third\" />\n    </div>\n  );\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Dots, areEqual);\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'error.wrapper.aria',\n    description: 'Aria label for the error wrapper',\n  },\n});\n\nconst Error = ({ code }) => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"error-wrapper\"\n      id={ID.ERROR}\n    >\n      <div className=\"error-code\">\n        {code}\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  text: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  hyperlink: false,\n  text: '',\n};\n\nconst Text = ({\n  active,\n  hyperlink,\n  text,\n}) => {\n  if (hyperlink) {\n    const options = {\n      className: cx('linkified', { inactive: !active }),\n    };\n\n    return (\n      <Linkify options={options}>\n        {text}\n      </Linkify>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {text}\n    </React.Fragment>\n  );\n};\n\nText.propTypes = propTypes;\nText.defaultProps = defaultProps;\n\nexport default Text;\n","const params = new URLSearchParams(window.location.search);\nconst debug = params ? params.has('debug') : false;\n\nconst logger = {\n  info: (...msg) => console.info(...msg),\n  debug: (...msg) => debug ? console.debug(...msg) : null,\n  warn: (...msg) => debug ? console.warn(...msg) : null,\n  error: (...msg) => console.error(...msg),\n};\n\nexport default logger;\n","import { LAYOUT } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst hasIndex = (index, data) => {\n  if (index < 0) return false;\n\n  if (isEmpty(data)) return false;\n\n  if (index >= data.length) {\n    logger.error('out of bounds', index, data);\n\n    return false;\n  }\n\n  return true;\n};\n\nconst hasPresentation = slides => {\n  if (isEmpty(slides)) return false;\n\n  for (let i = 0; i < slides.length; i++) {\n    const { src } = slides[i];\n\n    if (src.includes('slide')) return true;\n  }\n\n  return false;\n};\n\nconst hasProperty = (object, property) => {\n  if (object && object.hasOwnProperty(property)) {\n    if (typeof object[property] !== 'undefined') return true;\n  }\n\n  logger.warn('missing', property, object);\n\n  return false;\n};\n\nconst hasVideo = (player) => {\n  if (player && player.video) return true;\n\n  return false;\n};\n\nconst isActive = (time, timestamp, clear = -1) => {\n  const cleared = wasCleared(time, clear);\n  const visible = isVisible(time, timestamp);\n\n  return visible && !cleared;\n};\n\nconst isContentVisible = (layout, swap) => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let visible;\n  switch (layout) {\n    case  CONTENT:\n      visible = !swap;\n      break;\n    case MEDIA:\n      visible = swap;\n      break;\n    default:\n      visible = false;\n  }\n\n  return visible;\n};\n\nconst isCurrent = (data, index, time) => {\n  if (!hasIndex(index, data)) return false;\n\n  const item = data[index];\n  if (!hasProperty(item, 'timestamp')) return false;\n\n  let current = false;\n  if (isVisible(time, item.timestamp)) {\n    if (index + 1 < data.length) {\n      const next = data[index + 1];\n      if (hasProperty(next, 'timestamp')) {\n        current = !isVisible(time, next.timestamp);\n      }\n    } else {\n      current = true;\n    }\n  }\n\n  return current;\n};\n\nconst isDefined = data => typeof data !== 'undefined';\n\nconst isEmpty = data => {\n  const isArray = isValid('array', data);\n  const isString = isValid('string', data);\n  if (!isArray && !isString) return true;\n\n  const empty = data.length === 0;\n\n  return empty;\n};\n\nconst isEnabled = (data, time) => {\n  if (isEmpty(data)) return false;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      // Check if it was activated and did not ended\n      if (isActive(time, timestamp, clear)) return true;\n\n      // Check if we are searching over the present time value\n      if (!isVisible(time, timestamp)) return false;\n    } else {\n      // Invalid item\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst isEqual = (first, second, type = 'array') => {\n  let equal = false;\n\n  switch (type) {\n    case 'array':\n      if (first.length === second.length) {\n        equal = first.every((value, index) => value === second[index])\n      }\n\n      return equal;\n    default:\n      return equal;\n  }\n};\n\nconst isValid = (type, data) => {\n  let valid = false;\n\n  switch (type) {\n    case 'array':\n      if (Array.isArray(data)) valid = true;\n      break;\n    case 'string':\n      if (typeof data === type) valid = true;\n      break;\n    default:\n      logger.debug('unhandled', type);\n  }\n\n  return valid;\n};\n\nconst isVisible = (time, timestamp) => timestamp <= time;\n\nconst wasCleared = (time, clear) => clear !== -1 && clear <= time;\n\nexport {\n  hasIndex,\n  hasPresentation,\n  hasProperty,\n  hasVideo,\n  isActive,\n  isContentVisible,\n  isCurrent,\n  isDefined,\n  isEmpty,\n  isEnabled,\n  isEqual,\n  isValid,\n  isVisible,\n  wasCleared,\n};\n","// @ironwallaby's string-hash\n// https://github.com/darkskyapp/string-hash\nconst hash = (str) => {\n  let hash = 5381;\n\n  let i = str.length;\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n};\n\nexport default hash;\n","import config from 'config';\nimport { ROUTER } from './constants';\nimport logger from './logger';\n\nconst getLayout = () => {\n  const param = getSearchParam('l');\n\n  if (param) return param;\n\n  return null;\n};\n\nconst getMediaPath = () => {\n  const param = getSearchParam('p');\n\n  let mediaPath = '';\n  if (param) mediaPath = param;\n\n  return mediaPath;\n};\n\nconst getRecordId = match => {\n  if (!ROUTER) return 'local';\n\n  if (match) {\n    const { params } = match;\n    if (params && params.recordId) {\n      const { recordId } = params;\n      const regex = /^[a-z0-9]{40}-[0-9]{13}$/;\n\n      if (recordId.match(regex)) return recordId;\n    }\n  }\n\n  logger.error('missing', 'recordId');\n\n  return null;\n};\n\nconst getSearchParam = (name) => {\n  const params = new URLSearchParams(window.location.search);\n\n  if (params && params.has(name)) {\n    const param = params.get(name);\n\n    return param;\n  }\n\n  return null;\n};\n\nconst getStyle = () => {\n  const param = getSearchParam('s');\n  const { styles } = config;\n  const { url } = styles;\n\n  let style = styles.default ? `${url}/${styles.default}.css` : null;\n  if (param) {\n    const { valid } = styles;\n    if (valid.includes(param)) {\n      style = `${url}/${param}.css`;\n    }\n  }\n\n  return style;\n};\n\nconst getTime = () => {\n  const param = getSearchParam('t');\n\n  if (param) return parseTimeToSeconds(param);\n\n  return null;\n};\n\nconst parseTimeToSeconds = time => {\n  const patterns = [\n    /^(\\d+)h(\\d+)m(\\d+)s$/,\n    /^(\\d+)m(\\d+)s$/,\n    /^(\\d+)s$/,\n  ];\n\n  for (let i = 0; i < patterns.length; i++) {\n    if (time.match(patterns[i])) {\n      const hours = time.match(/(\\d+)h/);\n      const minutes = time.match(/(\\d+)m/);\n      const seconds = time.match(/(\\d+)s/);\n\n      let timeToSeconds = 0;\n\n      if (hours) {\n        const h = parseInt(hours[1]);\n        if (h >= 0) timeToSeconds += h * 3600;\n      }\n\n      if (minutes) {\n        const m = parseInt(minutes[1]);\n        if (m >= 0 && m < 60) {\n          timeToSeconds += m * 60;\n        } else {\n          return null;\n        }\n      }\n\n      if (seconds) {\n        const s = parseInt(seconds[1]);\n        if (s >= 0 && s < 60) {\n          timeToSeconds += s;\n        } else {\n          return null;\n        }\n      }\n\n      return timeToSeconds;\n    }\n  }\n\n  return null;\n};\n\nexport {\n  getLayout,\n  getMediaPath,\n  getRecordId,\n  getStyle,\n  getSearchParam,\n  getTime,\n  parseTimeToSeconds,\n};\n","import config from 'config';\nimport {\n  hasIndex,\n  hasPresentation,\n  hasProperty,\n  isCurrent,\n  isDefined,\n  isEmpty,\n  isEnabled,\n  isVisible,\n  wasCleared,\n} from './validators';\nimport {\n  ID,\n  LAYOUT,\n  MEDIA_ROOT_URL,\n  NUMBERS,\n  ROUTER,\n} from 'utils/constants';\nimport hash from 'utils/hash';\nimport logger from 'utils/logger';\nimport { getMediaPath } from 'utils/params';\n\nconst buildFileURL = (recordId, file) => {\n  if (!ROUTER) return file;\n\n  const mediaPath = getMediaPath();\n\n  const rootUrl = MEDIA_ROOT_URL ? MEDIA_ROOT_URL : '/presentation';\n\n  let fileUrl = `${recordId}/${file}`;\n  if (mediaPath) fileUrl = `${mediaPath}/${fileUrl}`;\n\n  return `${rootUrl}/${fileUrl}`;\n};\n\nconst getAvatarStyle = name => {\n  const index = hash(name) % NUMBERS.length;\n\n  return `avatar-${NUMBERS[index]}`;\n};\n\nconst getActiveContent = (screenshare, time) => {\n  const {\n    SCREENSHARE,\n    PRESENTATION,\n  } = ID;\n\n  const content = isEnabled(screenshare, time) ? SCREENSHARE : PRESENTATION;\n\n  return content;\n};\n\nconst FULL_BLOCK = '█';\nconst LEFT_HALF_BLOCK = '▌';\nconst RIGHT_HALF_BLOCK = '▐';\nconst EMPTY_BLOCK = '-';\n\nconst getBar = (percentage) => {\n  const p = parseInt(percentage);\n\n  let bar;\n  if (p === 0) {\n    bar = EMPTY_BLOCK;\n  } else {\n    const full = p / 10;\n    const half = (p % 10) > 2;\n\n    bar = FULL_BLOCK.repeat(full);\n\n    if (half) {\n      // Add true fallback for the tests\n      const ltr = document.dir ? document.dir === 'ltr' : true;\n      bar = bar.concat(ltr ? LEFT_HALF_BLOCK : RIGHT_HALF_BLOCK);\n    }\n  }\n\n  return bar;\n};\n\nconst getContentFromData = data => {\n  const captions = getData(data, ID.CAPTIONS);\n  const chat = getData(data, ID.CHAT);\n  const notes = getData(data, ID.NOTES);\n  const polls = getData(data, ID.POLLS);\n  const externalVideos = getData(data, ID.EXTERNAL_VIDEOS);\n  const screenshare = getData(data, ID.SCREENSHARE);\n  const shapes = getData(data, ID.SHAPES);\n  const slides = shapes.slides;\n\n  const content = {\n    captions: !isEmpty(captions),\n    chat: !isEmpty(chat),\n    notes: !isEmpty(notes),\n    polls: !isEmpty(polls),\n    externalVideos: !isEmpty(externalVideos),\n    presentation: hasPresentation(slides),\n    screenshare: !isEmpty(screenshare),\n  };\n\n  return content;\n};\n\nconst getControlFromLayout = layout => {\n  const { DISABLED } = LAYOUT;\n  let control = true;\n  switch (layout) {\n    case DISABLED:\n      control = false;\n      break;\n    default:\n  }\n\n  return control;\n};\n\nconst getCurrentDataIndex = (data, time) => {\n  if (isEmpty(data)) return -1;\n\n  let start = 0;\n  let stop = data.length - 1;\n  let middle = Math.floor((start + stop) / 2);\n\n  while (!isCurrent(data, middle, time) && start < stop) {\n    const item = data[middle];\n    if (!hasProperty(item, 'timestamp')) return -1;\n\n    if (!isVisible(time, item.timestamp)) {\n      stop = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n\n    middle = Math.floor((start + stop) / 2);\n  }\n\n  const current = isCurrent(data, middle, time);\n\n  return (!current) ? -1 : middle;\n};\n\nconst getCurrentDataInterval = (data, time) => {\n  const currentDataInterval = [];\n\n  if (isEmpty(data)) return currentDataInterval;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      if (!isVisible(time, timestamp)) break;\n\n      currentDataInterval.push(!wasCleared(time, clear));\n    }\n  }\n\n  return currentDataInterval;\n};\n\nconst getData = (data, id) => {\n  const file = config.files.data[id];\n\n  switch (id) {\n    case ID.ALTERNATES:\n    case ID.CAPTIONS:\n    case ID.CHAT:\n    case ID.CURSOR:\n    case ID.NOTES:\n    case ID.PANZOOMS:\n    case ID.POLLS:\n    case ID.EXTERNAL_VIDEOS:\n    case ID.SCREENSHARE:\n    case ID.TALKERS:\n      if (!file || data[getFileName(file)] === null) {\n        return [];\n      }\n\n      return data[getFileName(file)];\n    case ID.METADATA:\n      if (!file || data[getFileName(file)] === null) {\n        logger.error('missing', id);\n        return {};\n      }\n\n      return data[getFileName(file)];\n    case ID.SHAPES:\n      if (!file || data[getFileName(file)] === null) {\n        return {\n          canvases: [],\n          slides: [],\n          thumbnails: [],\n        };\n      }\n\n      return data[getFileName(file)];\n    default:\n      logger.debug('unhandled', id);\n      return [];\n  }\n};\n\nconst getDraws = (index, slides, canvases) => {\n  if (!hasIndex(index, slides)) return [];\n\n  const slide = slides[index];\n\n  if (isEmpty(canvases)) return [];\n\n  const canvas = canvases.find(canvas => slide.id === canvas.id);\n\n  if (!canvas) return [];\n\n  const { draws } = canvas;\n\n  return draws;\n};\n\nconst getFileName = file => file.split('.').shift();\n\nconst getFileType = file => file.split('.').pop();\n\nconst getLoadedData = data => {\n  const captions = getData(data, ID.CAPTIONS);\n  const chat = getData(data, ID.CHAT);\n  const notes = getData(data, ID.NOTES);\n  const polls = getData(data, ID.POLLS);\n  const externalVideos = getData(data, ID.EXTERNAL_VIDEOS);\n  const screenshare = getData(data, ID.SCREENSHARE);\n  const shapes = getData(data, ID.SHAPES);\n\n  const loadedData = {\n    captions: isDefined(captions),\n    chat: isDefined(chat),\n    notes: isDefined(notes),\n    polls: isDefined(polls),\n    externalVideos: isDefined(externalVideos),\n    presentation: isDefined(shapes),\n    screenshare: isDefined(screenshare),\n  };\n\n  return loadedData;\n};\n\nconst getPercentage = (value, total) => {\n  if (total === 0) return 0;\n\n  return ((value / total) * 100).toFixed(1);\n};\n\nconst POLL_TYPES = {\n  YN: 'YN',\n  YNA: 'YNA',\n  TF: 'TF',\n};\n\nconst POLL_KEYS = [\n  'Yes',\n  'No',\n  'Abstention',\n  'True',\n  'False',\n];\n\nconst getPollLabel = (key, type) => {\n  if (!POLL_TYPES[type]) return null;\n\n  if (!POLL_KEYS.includes(key)) return null;\n\n  return key.toLowerCase();\n};\n\nconst getSectionFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let section = true;\n  switch (layout) {\n    case CONTENT:\n      section = false;\n      break;\n    case MEDIA:\n      section = false;\n      break;\n    default:\n  }\n\n  return section;\n};\n\nconst getSwapFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let swap = false;\n  switch (layout) {\n    case CONTENT:\n      swap = false;\n      break;\n    case MEDIA:\n      swap = true;\n      break;\n    default:\n  }\n\n  return swap;\n};\n\nconst getMessageType = (item) => {\n  if (typeof item.message === 'string') return ID.USERS;\n  if (typeof item.question === 'string') return ID.POLLS;\n  if (typeof item.url === 'string') return ID.EXTERNAL_VIDEOS;\n\n  return 'undefined';\n};\n\nconst getTimestampAsMilliseconds = timestamp => timestamp * 1000;\n\nexport {\n  buildFileURL,\n  getAvatarStyle,\n  getActiveContent,\n  getBar,\n  getContentFromData,\n  getControlFromLayout,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  getFileName,\n  getFileType,\n  getLoadedData,\n  getMessageType,\n  getPercentage,\n  getPollLabel,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  getTimestampAsMilliseconds,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedTime } from 'react-intl';\nimport cx from 'classnames';\nimport { getTimestampAsMilliseconds } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  name: PropTypes.string,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  name: '',\n  timestamp: 0,\n};\n\nconst Info = ({\n  active,\n  name,\n  timestamp,\n}) => {\n  const milliseconds = getTimestampAsMilliseconds(timestamp);\n\n  return (\n    <div className=\"info\">\n      <div className={cx('name', { inactive: !active })}>\n        {name}\n      </div>\n      <div className={cx('time', { inactive: !active })}>\n        <FormattedTime\n          hourCycle=\"h23\"\n          hour=\"numeric\"\n          minute=\"numeric\"\n          second=\"numeric\"\n          timeZone=\"UTC\"\n          value={milliseconds}\n        />\n      </div>\n    </div>\n  );\n};\n\nInfo.propTypes = propTypes;\nInfo.defaultProps = defaultProps;\n\nexport default Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { getAvatarStyle } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n};\n\nconst defaultProps = {\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n};\n\nconst Avatar = ({\n  circle,\n  icon,\n  initials,\n  name,\n}) => {\n  const style = circle ? getAvatarStyle(name) : 'avatar-default';\n\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className={cx('avatar', { circle }, style)}>\n        {icon ? (\n          <span className={`icon-${icon}`} />\n        ) : (\n          <span className=\"initials\">\n            {initials}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nAvatar.propTypes = propTypes;\nAvatar.defaultProps = defaultProps;\n\nexport default Avatar;\n","import { POSITIONS } from 'utils/constants';\nimport logger from 'utils/logger';\n\nconst getScrollLeft = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientWidth,\n    offsetLeft,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const ltr = document.dir === 'ltr';\n  const spacing = ltr ? firstNode.offsetLeft : 0;\n  const parentWidth = parentNode.clientWidth;\n\n  let horizontalOffset = 0;\n  switch (align) {\n    case POSITIONS.LEFT:\n      horizontalOffset = offsetLeft - spacing;\n      break;\n    case POSITIONS.CENTER:\n      horizontalOffset = parseInt(offsetLeft + (clientWidth - spacing - parentWidth) / 2, 10);\n      break;\n    case POSITIONS.RIGHT:\n      horizontalOffset = offsetLeft + clientWidth - parentWidth;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return horizontalOffset;\n};\n\nconst getScrollTop = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientHeight,\n    offsetTop,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetTop;\n  const parentHeight = parentNode.clientHeight;\n\n  let verticalOffset = 0;\n  switch (align) {\n    case POSITIONS.TOP:\n      verticalOffset = offsetTop - spacing;\n      break;\n    case POSITIONS.MIDDLE:\n      verticalOffset = parseInt(offsetTop + (clientHeight - spacing - parentHeight) / 2, 10);\n      break;\n    case POSITIONS.BOTTOM:\n      verticalOffset = offsetTop + clientHeight - parentHeight;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return verticalOffset;\n};\n\nconst handleOnEnterPress = (event, action) => {\n  if (event && event.key === 'Enter') {\n    if (typeof action === 'function') action();\n  }\n};\n\nconst handleAutoScroll = (fNode, cNode, direction, align) => {\n  // Auto-scroll can start after getting the first and current nodes\n  if (fNode && cNode) {\n    const { parentNode: pNode } = cNode;\n\n    switch (direction) {\n      case POSITIONS.LEFT:\n        pNode.scrollLeft = getScrollLeft(fNode, cNode, align);\n        break;\n      case POSITIONS.TOP:\n        pNode.scrollTop = getScrollTop(fNode, cNode, align);\n        break;\n      default:\n        logger.debug('unhandled', direction);\n    }\n  }\n};\n\nexport {\n  getScrollLeft,\n  getScrollTop,\n  handleAutoScroll,\n  handleOnEnterPress,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n  onClick: () => {},\n};\n\nconst Margin = ({\n  active,\n  circle,\n  icon,\n  initials,\n  name,\n  onClick,\n}) => {\n  const style = {\n    circle,\n    inactive: !active,\n  };\n\n  return (\n    <div\n      className={cx('interactive', style)}\n      onClick={onClick}\n      onKeyPress={event => handleOnEnterPress(event, onClick)}\n      tabIndex=\"0\"\n    >\n      <Avatar\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n      />\n    </div>\n  );\n};\n\nMargin.propTypes = propTypes;\nMargin.defaultProps = defaultProps;\n\nexport default Margin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Info from './info';\nimport Margin from './margin';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  circle: PropTypes.bool,\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  player: PropTypes.object,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  circle: false,\n  icon: '',\n  initials: '',\n  name: '',\n  player: {},\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  circle,\n  icon,\n  initials,\n  name,\n  player,\n  timestamp,\n}) => {\n  const handleOnClick = () => {\n    if (player) player.currentTime(timestamp);\n  };\n\n  return (\n    <div className=\"message\">\n      <Margin\n        active={active}\n        circle={circle}\n        icon={icon}\n        initials={initials}\n        name={name}\n        onClick={() => handleOnClick()}\n      />\n      <div className=\"data\">\n        <Info\n          active={active}\n          name={name}\n          timestamp={timestamp}\n        />\n        <div className={cx('text', { inactive: !active })}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from './text';\nimport Message from 'components/chat/messages/message';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  hyperlink: PropTypes.bool,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n  player: PropTypes.object,\n  text: PropTypes.string,\n  timestamp: PropTypes.timestamp,\n};\n\nconst defaultProps = {\n  active: false,\n  hyperlink: false,\n  initials: '',\n  name: '',\n  player: {},\n  text: '',\n  timestamp: 0,\n};\n\nconst User = ({\n  active,\n  hyperlink,\n  initials,\n  name,\n  player,\n  text,\n  timestamp,\n}) => {\n\n  return (\n    <Message\n      active={active}\n      circle\n      initials={initials}\n      name={name}\n      player={player}\n      timestamp={timestamp}\n    >\n      <Text\n        active={active}\n        hyperlink={hyperlink}\n        text={text}\n      />\n    </Message>\n  );\n};\n\nUser.propTypes = propTypes;\nUser.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(User, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { getPollLabel } from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  options: {\n    id: 'player.chat.message.poll.options',\n    description: 'Label for the poll message answer options',\n  },\n  yes: {\n    id: 'player.chat.message.poll.option.yes',\n    description: 'Label for poll option yes',\n  },\n  no: {\n    id: 'player.chat.message.poll.option.no',\n    description: 'Label for poll option no',\n  },\n  abstention: {\n    id: 'player.chat.message.poll.option.abstention',\n    description: 'Label for poll option abstention',\n  },\n  true: {\n    id: 'player.chat.message.poll.option.true',\n    description: 'Label for poll option true',\n  },\n  false: {\n    id: 'player.chat.message.poll.option.false',\n    description: 'Label for poll option false',\n  },\n});\n\nconst propTypes = {\n  answers: PropTypes.array,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  answers: [],\n  type: '',\n};\n\nconst Options = ({\n  answers,\n  type,\n}) => {\n  const intl = useIntl();\n\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-options\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.options)}\n      </div>\n      {answers.map((item) => {\n        const {\n          id,\n          key,\n        } = item;\n\n        const label = getPollLabel(key, type);\n\n        return(\n          <div>\n            {id + 1}: {label ? intl.formatMessage(intlMessages[label]) : key}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nOptions.propTypes = propTypes;\nOptions.defaultProps = defaultProps;\n\nexport default Options;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  question: {\n    id: 'player.chat.message.poll.question',\n    description: 'Label for the poll message question',\n  },\n});\n\nconst propTypes = { question: PropTypes.string };\n\nconst defaultProps = { question: '' };\n\nconst Question = ({ question }) => {\n  const intl = useIntl();\n\n  if (isEmpty(question)) return null;\n\n  return (\n    <div className=\"poll-question\">\n      <div className=\"poll-label\">\n        {intl.formatMessage(intlMessages.question)}\n      </div>\n      {question}\n    </div>\n  );\n};\n\nQuestion.propTypes = propTypes;\nQuestion.defaultProps = defaultProps;\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  getBar,\n  getPercentage,\n} from 'utils/data';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst propTypes = {\n  answers: PropTypes.array,\n  responders: PropTypes.number,\n};\n\nconst defaultProps = {\n  answers: [],\n  responders: 0,\n};\n\nconst Result = ({\n  answers,\n  responders,\n}) => {\n  if (isEmpty(answers)) return null;\n\n  return (\n    <div className=\"poll-result\">\n      {answers.map((item) => {\n        const {\n          id,\n          numVotes,\n        } = item;\n\n        const percentage = getPercentage(numVotes, responders);\n\n        return(\n          <div className=\"poll-label\">\n            {id + 1}: <span className=\"poll-bar\">{getBar(percentage)}</span> {percentage}%\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nResult.propTypes = propTypes;\nResult.defaultProps = defaultProps;\n\nexport default Result;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseMessage from 'components/chat/messages/message';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  icon: PropTypes.string,\n  name: PropTypes.string,\n  player: PropTypes.object,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  children: null,\n  icon: '',\n  name: '',\n  player: {},\n  timestamp: 0,\n};\n\nconst Message = ({\n  active,\n  children,\n  icon,\n  name,\n  player,\n  timestamp,\n}) => {\n\n  return (\n    <BaseMessage\n      active={active}\n      icon={icon}\n      name={name}\n      player={player}\n      timestamp={timestamp}\n    >\n      <div className=\"system-message-wrapper\">\n        {children}\n      </div>\n    </BaseMessage>\n  );\n};\n\nMessage.propTypes = propTypes;\nMessage.defaultProps = defaultProps;\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Options from './options';\nimport Question from './question';\nimport Result from './result';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.poll.name',\n    description: 'Label for the poll message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  answers: PropTypes.array,\n  player: PropTypes.object,\n  question: PropTypes.string,\n  responders: PropTypes.number,\n  timestamp: PropTypes.number,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  answers: [],\n  player: {},\n  question: '',\n  responders: 0,\n  timestamp: 0,\n  type: '',\n};\n\nconst Poll = ({\n  active,\n  answers,\n  player,\n  question,\n  responders,\n  timestamp,\n  type,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.POLLS}\n      name={intl.formatMessage(intlMessages.name)}\n      player={player}\n      timestamp={timestamp}\n    >\n      <Question question={question} />\n      <Result\n        answers={answers}\n        responders={responders}\n      />\n      <Options\n        answers={answers}\n        type={type}\n      />\n    </SystemMessage>\n  );\n};\n\nPoll.propTypes = propTypes;\nPoll.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'utils/data/validators';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  url: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  url: '',\n};\n\nconst Url = ({\n  active,\n  url,\n}) => {\n  if (isEmpty(url)) return null;\n\n  const options = {\n    className: cx('linkified', { inactive: !active }),\n  };\n\n  return (\n    <Linkify options={options}>\n      {url}\n    </Linkify>\n  );\n};\n\nUrl.propTypes = propTypes;\nUrl.defaultProps = defaultProps;\n\nexport default Url;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Url from './url';\nimport SystemMessage from 'components/chat/messages/system/message';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.externalVideo.name',\n    description: 'Label for the external video message name',\n  },\n});\n\nconst propTypes = {\n  active: PropTypes.bool,\n  player: PropTypes.object,\n  url: PropTypes.url,\n  timestamp: PropTypes.number,\n};\n\nconst defaultProps = {\n  active: false,\n  player: {},\n  url: '',\n  timestamp: 0,\n};\n\nconst ExternalVideo = ({\n  active,\n  player,\n  url,\n  timestamp,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <SystemMessage\n      active={active}\n      icon={ID.EXTERNAL_VIDEOS}\n      name={intl.formatMessage(intlMessages.name)}\n      player={player}\n      timestamp={timestamp}\n    >\n      <Url\n        active={active}\n        url={url}\n      />\n    </SystemMessage>\n  );\n};\n\nExternalVideo.propTypes = propTypes;\nExternalVideo.defaultProps = defaultProps;\n\n// Checks the message active state\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(ExternalVideo, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserMessage from './user';\nimport PollMessage from './system/poll';\nimport ExternalVideoMessage from './system/external-video';\nimport { ID } from 'utils/constants';\nimport { getMessageType } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  chat: PropTypes.array,\n  currentDataIndex: PropTypes.number,\n  player: PropTypes.object,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  chat: [],\n  currentDataIndex: 0,\n  player: {},\n  setRef: () => {},\n};\n\nconst Messages = ({\n  chat,\n  currentDataIndex,\n  player,\n  setRef,\n}) => {\n\n  return (\n    <div className=\"list\">\n      <div className=\"message-wrapper\">\n        {chat.map((item, index) => {\n          const active = index <= currentDataIndex;\n          const { timestamp } = item;\n          const type = getMessageType(item);\n          switch (type) {\n            case ID.USERS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <UserMessage\n                    active={active}\n                    hyperlink={item.hyperlink}\n                    initials={item.initials}\n                    name={item.name}\n                    player={player}\n                    text={item.message}\n                    timestamp={timestamp}\n                  />\n                </span>\n              );\n            case ID.POLLS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <PollMessage\n                    active={active}\n                    answers={item.answers}\n                    player={player}\n                    question={item.question}\n                    responders={item.responders}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            case ID.EXTERNAL_VIDEOS:\n\n              return (\n                <span ref={node => setRef(node, index)}>\n                  <ExternalVideoMessage\n                    active={active}\n                    player={player}\n                    url={item.url}\n                    timestamp={timestamp}\n                    type={item.type}\n                  />\n                </span>\n              );\n            default:\n              return <span ref={node => setRef(node, index)} />;\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nMessages.propTypes = propTypes;\nMessages.defaultProps = defaultProps;\n\nexport default Messages;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { chat as config } from 'config';\nimport Messages from './messages';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.chat.wrapper.aria',\n    description: 'Aria label for the chat wrapper',\n  },\n});\n\nconst propTypes = {\n  chat: PropTypes.array,\n  currentDataIndex: PropTypes.number,\n  player: PropTypes.object,\n};\n\nconst defaultProps = {\n  chat: [],\n  currentDataIndex: 0,\n  player: {},\n};\n\nconst Chat = ({\n  chat,\n  currentDataIndex,\n  player,\n}) => {\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const intl = useIntl();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentDataIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.TOP, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      aria-live=\"polite\"\n      className=\"chat-wrapper\"\n      id={ID.CHAT}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      <Messages\n        chat={chat}\n        currentDataIndex={currentDataIndex}\n        player={player}\n        setRef={(node, index) => setRef(node, index)}\n      />\n    </div>\n  );\n};\n\nChat.propTypes = propTypes;\nChat.defaultProps = defaultProps;\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.currentDataIndex !== nextProps.currentDataIndex) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(Chat, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport { ID } from 'utils/constants';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.notes.wrapper.aria',\n    description: 'Aria label for the notes wrapper',\n  },\n});\n\nconst propTypes = { notes: PropTypes.text };\n\nconst defaultProps = { notes: '' };\n\nconst Notes = ({ notes }) => {\n  const intl = useIntl();\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"notes-wrapper\"\n      id={ID.NOTES}\n      tabIndex=\"0\"\n    >\n      <div className=\"notes\">\n        <div dangerouslySetInnerHTML={{ __html: notes }} />\n      </div>\n    </div>\n  );\n};\n\nNotes.propTypes = propTypes;\nNotes.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Notes, areEqual);\n","import React from 'react';\nimport './index.scss';\n\nconst Cursor = ({\n  x,\n  y,\n}) => {\n\n  if (x === -1 || y === -1) return null;\n\n  return (\n    <circle\n      className=\"cursor\"\n      style={{ cx: x, cy: y }}\n    />\n  );\n};\n\nexport default Cursor;\n","import React from 'react';\nimport cx from 'classnames';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst Proxy = ({\n  id,\n  height,\n  recordId,\n  thumbnails,\n  width,\n}) => {\n  const thumbnail = thumbnails.find(thumbnails => id === thumbnails.id);\n  if (!thumbnail) return null;\n\n  const {\n    alt,\n    src,\n  } = thumbnail;\n\n  if (src === ID.SCREENSHARE) return null;\n\n  const logo = src.includes('logo');\n\n  return (\n    <foreignObject\n      height={height}\n      x={0}\n      width={width}\n      y={0}\n    >\n      <img\n        alt={alt}\n        className={cx('proxy', { logo })}\n        src={buildFileURL(recordId, src)}\n      />\n    </foreignObject>\n  );\n};\n\nexport default Proxy;\n","import React from 'react';\nimport Proxy from './proxy';\nimport { buildFileURL } from 'utils/data';\n\nconst Slide = ({\n  id,\n  recordId,\n  slides,\n  thumbnails,\n}) => {\n  const current = slides.find(slide => id === slide.id);\n  if (!current) return null;\n\n  const {\n    height,\n    src,\n    width,\n  } = current;\n\n  return (\n    <g>\n      <Proxy\n        id={id}\n        height={height}\n        recordId={recordId}\n        thumbnails={thumbnails}\n        width={width}\n      />\n      <image\n        height={height}\n        href={buildFileURL(recordId, src)}\n        x={0}\n        width={width}\n        y={0}\n      />\n    </g>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.id === nextProps.id;\n};\n\nexport default React.memo(Slide, areEqual);\n","import React from 'react';\nimport { buildFileURL } from 'utils/data';\n\nconst Poll = ({\n  data,\n  recordId,\n  style,\n}) => {\n  const {\n    image,\n    rect,\n  } = data;\n\n  // TODO: Better adapt for old versions\n  if (rect) {\n    // BigBlueButton v2.2 or lower\n    return (\n      <g style={style}>\n        <rect\n          fill={rect.fill}\n          height={rect.height}\n          stroke={rect.stroke}\n          strokeWidth={rect['stroke-width']}\n          width={rect.width}\n          x={rect.x}\n          y={rect.y}\n        />\n        <image\n          height={image.height}\n          transform={image.transform}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(recordId, image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  } else {\n    // BigBlueButton v2.3 or higher\n     return (\n      <g style={style}>\n        <image\n          height={image.height}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(recordId, image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  }\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Poll, areEqual);\n","import React from 'react';\nimport Poll from './poll';\nimport { SHAPES } from 'utils/constants';\nimport { isEmpty } from 'utils/data/validators';\nimport logger from 'utils/logger';\n\nconst Canvas = ({\n  draws,\n  drawsInterval,\n  recordId,\n}) => {\n  if (isEmpty(drawsInterval)) return null;\n\n  const canvas = [];\n\n  for (let i = 0; i < drawsInterval.length; i++) {\n    if (!drawsInterval[i]) continue;\n\n    const {\n      id,\n      shape,\n      style,\n    } = draws[i];\n\n    const j = i + 1;\n    let intermediate = false;\n    if (j < drawsInterval.length) {\n      intermediate = draws[j].id === id;\n    }\n\n    if (intermediate) continue;\n\n    const {\n      data,\n      type,\n    } = shape;\n\n    switch (type) {\n      case SHAPES.CIRCLE:\n        canvas.push(\n          <circle\n            style={style}\n            cx={data.cx}\n            cy={data.cy}\n            r={data.r}\n          />\n        );\n        break;\n      case SHAPES.LINE:\n        canvas.push(\n          <line\n            style={style}\n            x1={data.x1}\n            y1={data.y1}\n            x2={data.x2}\n            y2={data.y2}\n          />\n        );\n        break;\n      case SHAPES.PATH:\n        canvas.push(\n          <path\n            style={style}\n            d={data.d}\n          />\n        );\n        break;\n      case SHAPES.POLL:\n        canvas.push(\n          <Poll\n            data={data}\n            key={id}\n            recordId={recordId}\n            style={style}\n          />\n        );\n        break;\n      case SHAPES.POLYGON:\n        canvas.push(\n          <polygon\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.POLYLINE:\n        canvas.push(\n          <polyline\n            style={style}\n            points={data.points}\n          />\n        );\n        break;\n      case SHAPES.TEXT:\n        canvas.push(\n          <foreignObject\n            style={style}\n            height={data.height}\n            width={data.width}\n            x={data.x}\n            y={data.y}\n          >\n            <div xmlns=\"http://www.w3.org/1999/xhtml\">\n              {data.text.split('\\r').map(line => <span>{line}<br /></span>)}\n            </div>\n          </foreignObject>\n        );\n        break;\n      default:\n        logger.debug('unhandled', type);\n    }\n  }\n\n  return (\n    <g>\n      {canvas}\n    </g>\n  );\n};\n\nexport default Canvas;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport Cursor from './cursor';\nimport Slide from './slide';\nimport Canvas from './canvas';\nimport { ID } from 'utils/constants';\nimport { isEqual } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.presentation.wrapper.aria',\n    description: 'Aria label for the presentation wrapper',\n  },\n});\n\nconst buildViewBoxAttr = (viewBox) => {\n  const {\n    height,\n    x,\n    width,\n    y,\n  } = viewBox;\n\n  return `${x} ${y} ${width} ${height}`;\n};\n\nconst getCursor = (cursors, index, viewBox) => {\n  const inactive = {\n    x: -1,\n    y: -1,\n  }\n\n  if (index === -1) return inactive;\n\n  const currentData = cursors[index];\n  if (currentData.x === -1 && currentData.y === -1) return inactive;\n\n  return {\n    x: viewBox.x + (currentData.x * viewBox.width),\n    y: viewBox.y + (currentData.y * viewBox.height),\n  };\n};\n\nconst getSlideId = (index, slides) => {\n  const inactive = -1;\n  if (index === -1) return inactive;\n\n  const currentData = slides[index];\n\n  return currentData.id;\n};\n\nconst getViewBox = (index, panzooms) => {\n  const inactive = {\n    height: 0,\n    x: 0,\n    width: 0,\n    y: 0,\n  };\n\n  if (index === -1) return inactive;\n\n  const currentData = panzooms[index];\n\n  return {\n    height: currentData.height,\n    x: currentData.x,\n    width: currentData.width,\n    y: currentData.y,\n  };\n};\n\nconst Presentation = ({\n  active,\n  currentCursorIndex,\n  currentPanzoomIndex,\n  currentSlideIndex,\n  cursors,\n  draws,\n  drawsInterval,\n  panzooms,\n  recordId,\n  slides,\n  thumbnails,\n}) => {\n  const intl = useIntl();\n  const slideId = getSlideId(currentSlideIndex, slides);\n  const viewBox = getViewBox(currentPanzoomIndex, panzooms);\n  const cursor = getCursor(cursors, currentCursorIndex, viewBox);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('presentation-wrapper', { inactive: !active })}\n      id={ID.PRESENTATION}\n    >\n      <div className=\"presentation\">\n        <svg\n          viewBox={buildViewBoxAttr(viewBox)}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <defs>\n            <clipPath id=\"viewBox\">\n              <rect\n                height={viewBox.height}\n                x={viewBox.x}\n                width={viewBox.width}\n                y={viewBox.y}\n              />\n            </clipPath>\n          </defs>\n          <g clipPath=\"url(#viewBox)\">\n            <Slide\n              id={slideId}\n              recordId={recordId}\n              slides={slides}\n              thumbnails={thumbnails}\n            />\n            <Canvas\n              draws={draws}\n              drawsInterval={drawsInterval}\n              recordId={recordId}\n            />\n            <Cursor\n              x={cursor.x}\n              y={cursor.y}\n            />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.active !== nextProps.active) return false;\n\n  if (prevProps.currentCursorIndex !== nextProps.currentCursorIndex) return false;\n\n  if (prevProps.currentPanzoomIndex !== nextProps.currentPanzoomIndex) return false;\n\n  if (!isEqual(prevProps.draws, nextProps.draws)) return false;\n\n  if (!isEqual(prevProps.drawsInterval, nextProps.drawsInterval)) return false;\n\n  return true;\n};\n\nexport default React.memo(Presentation, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport cx from 'classnames';\nimport videojs from 'video.js/core.es.js';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.screenshare.wrapper.aria',\n    description: 'Aria label for the screenshare wrapper',\n  },\n});\n\nconst buildSources = (media, recordId) => {\n  return [\n    {\n      src: buildFileURL(recordId, 'deskshare/deskshare.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL(recordId, 'deskshare/deskshare.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => media.find(m => source.type.includes(m)));\n};\n\nconst buildOptions = (sources) => {\n  return {\n    controls: false,\n    fill: true,\n    sources: sources.current,\n  };\n};\n\nconst Screenshare = ({\n  active,\n  media,\n  onPlayerReady,\n  recordId,\n}) => {\n  const intl = useIntl();\n  const sources = useRef(buildSources(media, recordId));\n  const player = useRef();\n  const element = useRef();\n\n  useEffect(() => {\n    if (!player.current) {\n      player.current = videojs(element.current, buildOptions(sources), () => {\n        if (onPlayerReady) onPlayerReady(ID.SCREENSHARE, player.current);\n      });\n    }\n\n    return () => {\n      if (player.current) {\n        player.current.dispose();\n      }\n    };\n  }, [ onPlayerReady ]);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className={cx('screenshare-wrapper', { inactive: !active })}\n      id={ID.SCREENSHARE}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={node => element.current = node}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.active === nextProps.active;\n};\n\nexport default React.memo(Screenshare, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  src: PropTypes.string,\n  recordId: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  src: '',\n  recordId: '',\n};\n\nconst Image = ({\n  alt,\n  src,\n  recordId,\n}) => {\n  const screenshare = src === ID.SCREENSHARE;\n\n  if (screenshare) {\n    return (\n      <div className={cx('thumbnail-image', { screenshare })}>\n        <span className=\"icon-screenshare\" />\n      </div>\n    );\n  }\n\n  const logo = src.includes('logo');\n\n  return (\n    <img\n      alt={alt}\n      className={cx('thumbnail-image', { logo })}\n      src={buildFileURL(recordId, src)}\n    />\n  );\n};\n\nImage.propTypes = propTypes;\nImage.defaultProps = defaultProps;\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './image';\nimport './index.scss';\n\nconst propTypes = {\n  alt: PropTypes.string,\n  index: PropTypes.number,\n  recordId: PropTypes.string,\n  src: PropTypes.string,\n};\n\nconst defaultProps = {\n  alt: '',\n  index: 0,\n  recordId: '',\n  src: '',\n};\n\nconst Thumbnail = ({\n  alt,\n  index,\n  recordId,\n  src,\n}) => {\n\n  return (\n    <div className=\"thumbnail\">\n      <Image\n        alt={alt}\n        recordId={recordId}\n        src={src}\n      />\n      <div className=\"thumbnail-index\">\n        {index + 1}\n      </div>\n    </div>\n  )\n};\n\nThumbnail.propTypes = propTypes;\nThumbnail.defaultProps = defaultProps;\n\nexport default Thumbnail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnail from './thumbnail';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport './index.scss';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  index: PropTypes.number,\n  interactive: PropTypes.bool,\n  item: PropTypes.object,\n  player: PropTypes.object,\n  recordId: PropTypes.string,\n  setRef: PropTypes.func,\n};\n\nconst defaultProps = {\n  active: false,\n  index: 0,\n  interactive: false,\n  item: {},\n  player: {},\n  recordId: '',\n  setRef: () => {},\n};\n\nconst Item = ({\n  active,\n  index,\n  interactive,\n  item,\n  player,\n  recordId,\n  setRef,\n}) => {\n  if (!interactive) {\n\n    return (\n      <div\n        className=\"thumbnail-wrapper\"\n        tabIndex=\"0\"\n      >\n        <Thumbnail\n          alt={item.alt}\n          index={index}\n          recordId={recordId}\n          src={item.src}\n        />\n      </div>\n    );\n  }\n\n  const handleOnClick = () => {\n    if (player) player.currentTime(item.timestamp);\n  };\n\n  return (\n    <div\n      className={cx('thumbnail-wrapper', { active, interactive })}\n      onClick={() => handleOnClick()}\n      onKeyPress={event => handleOnEnterPress(event, handleOnClick)}\n      ref={node => setRef(node, index)}\n      tabIndex=\"0\"\n    >\n      <Thumbnail\n        alt={item.alt}\n        index={index}\n        recordId={recordId}\n        src={item.src}\n      />\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst DEFAULT = 'default';\nconst GHOST = 'ghost';\nconst SOLID = 'solid';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  aria: PropTypes.string,\n  circle: PropTypes.bool,\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  aria: '',\n  circle: false,\n  disabled: false,\n  handleOnClick: () => {},\n  icon: '',\n  type: DEFAULT,\n};\n\nconst Button = ({\n  active,\n  aria,\n  circle,\n  disabled,\n  handleOnClick,\n  icon,\n  type,\n}) => {\n  const ghost = type === GHOST;\n  const solid = type === SOLID;\n\n  const style = {\n    default: !ghost && !solid && !disabled,\n    ghost: ghost && !active && !disabled,\n    solid: (solid || active) && !disabled,\n    circle,\n    disabled,\n  };\n\n  return (\n    <div className=\"button-wrapper\">\n      <button\n        aria-label={aria}\n        className={cx('button', style)}\n        disabled={disabled}\n        onClick={() => handleOnClick()}\n      >\n        <span className={`icon-${icon}`} />\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { isEmpty } from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  clear: {\n    id: 'button.clear.aria',\n    description: 'Aria label for the clear button',\n  },\n});\n\nconst propTypes = {\n  interactive: PropTypes.bool,\n  handleSearch: PropTypes.func,\n  search: PropTypes.array,\n};\n\nconst defaultProps = {\n  interactive: false,\n  handleSearch: () => {},\n  search: [],\n};\n\nconst Clear = ({\n  interactive,\n  handleSearch,\n  search,\n}) => {\n  const intl = useIntl();\n\n  if (!interactive) return null;\n\n  if (isEmpty(search)) return null;\n\n  return (\n    <div className=\"clear-button\">\n      <Button\n        aria={intl.formatMessage(intlMessages.clear)}\n        handleOnClick={() => handleSearch([])}\n        icon=\"close\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nClear.propTypes = propTypes;\nClear.defaultProps = defaultProps;\n\nexport default Clear;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Item from './item';\nimport ClearButton from './buttons/clear';\nimport { thumbnails as config } from 'config';\nimport {\n  ID,\n  POSITIONS,\n} from 'utils/constants';\nimport { handleAutoScroll } from 'utils/data/handlers';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.thumbnails.wrapper.aria',\n    description: 'Aria label for the thumbnails wrapper',\n  },\n});\n\nconst propTypes = {\n  currentDataIndex: PropTypes.number,\n  handleSearch: PropTypes.func,\n  interactive: PropTypes.bool,\n  player: PropTypes.object,\n  recordId: PropTypes.string,\n  search: PropTypes.array,\n  thumbnails: PropTypes.array,\n};\n\nconst defaultProps = {\n  currentDataIndex: 0,\n  handleSearch: () => {},\n  interactive: false,\n  player: {},\n  recordId: '',\n  search: [],\n  thumbnails: [],\n};\n\nconst Thumbnails = ({\n  currentDataIndex,\n  handleSearch,\n  interactive,\n  player,\n  recordId,\n  search,\n  thumbnails,\n}) => {\n  const interaction = useRef(false);\n  const firstNode = useRef();\n  const currentNode = useRef();\n\n  const intl = useIntl();\n\n  const setRef = (node, index) => {\n    if (index === 0) {\n      firstNode.current = node;\n    }\n\n    if (index === currentDataIndex) {\n      currentNode.current = node;\n    }\n  };\n\n  const isFiltered = (index) => {\n    if (interactive) {\n      return !isEmpty(search) && !search.includes(index);\n    } else {\n      return !search.includes(index);\n    }\n  }\n\n  useEffect(() => {\n    if (!interaction.current) {\n      if (config.scroll) {\n        handleAutoScroll(firstNode.current, currentNode.current, POSITIONS.LEFT, config.align);\n      }\n    }\n  });\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"thumbnails-wrapper\"\n      id={ID.THUMBNAILS}\n      onMouseEnter={() => interaction.current = true}\n      onMouseLeave={() => interaction.current = false}\n      tabIndex=\"0\"\n    >\n      {thumbnails.reduce((result, item, index) => {\n        if (!isFiltered(index)) {\n          const active = index === currentDataIndex;\n\n          result.push(\n            <Item\n              active={active}\n              index={index}\n              interactive={interactive}\n              item={item}\n              player={player}\n              recordId={recordId}\n              setRef={setRef}\n            />\n          );\n        }\n\n        return result;\n      }, [])}\n      <ClearButton\n        interactive={interactive}\n        handleSearch={handleSearch}\n        search={search}\n      />\n    </div>\n  );\n};\n\nThumbnails.propTypes = propTypes;\nThumbnails.defaultProps = defaultProps;\n\nconst areEqual = (prevProps, nextProps) => {\n  if (prevProps.currentDataIndex !== nextProps.currentDataIndex) return false;\n\n  if (!isEqual(prevProps.search, nextProps.search)) return false;\n\n  if (!prevProps.player && nextProps.player) return false;\n\n  return true;\n};\n\nexport default React.memo(Thumbnails, areEqual);\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport videojs from 'video.js/core.es.js';\nimport { video as config } from 'config';\nimport { ID } from 'utils/constants';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.video.wrapper.aria',\n    description: 'Aria label for the video wrapper',\n  },\n});\n\nconst buildSources = (media, recordId) => {\n  return [\n    {\n      src: buildFileURL(recordId, 'video/webcams.mp4'),\n      type: 'video/mp4',\n    }, {\n      src: buildFileURL(recordId, 'video/webcams.webm'),\n      type: 'video/webm',\n    },\n  ].filter(source => media.find(m => source.type.includes(m)));\n};\n\nconst buildTracks = (captions, recordId) => {\n  return captions.map(lang => {\n    const {\n      locale,\n      localeName,\n    } = lang;\n\n    return {\n      kind: 'captions',\n      src: buildFileURL(recordId, `caption_${locale}.vtt`),\n      srclang: locale,\n      label: localeName,\n    };\n  });\n};\n\nconst buildOptions = (sources, tracks) => {\n  return {\n    controlBar: {\n      fullscreenToggle: false,\n      pictureInPictureToggle: false,\n      volumePanel: {\n        inline: false,\n        vertical: true,\n      },\n    },\n    controls: true,\n    fill: true,\n    inactivityTimeout: 0,\n    playbackRates: config.rates,\n    sources: sources.current,\n    tracks: tracks.current,\n  };\n};\n\nconst propTypes = {\n  captions: PropTypes.array,\n  media: PropTypes.array,\n  onPlayerReady: PropTypes.func,\n  onTimeUpdate: PropTypes.func,\n  recordId: PropTypes.string,\n  time: PropTypes.number,\n};\n\nconst defaultProps = {\n  captions: [],\n  media: [],\n  onPlayerReady: () => {},\n  onTimeUpdate: () => {},\n  recordId: '',\n  time: 0,\n};\n\nconst Video = ({\n  captions,\n  media,\n  onPlayerReady,\n  onTimeUpdate,\n  recordId,\n  time,\n}) => {\n  const intl = useIntl();\n  const sources = useRef(buildSources(media, recordId));\n  const tracks = useRef(buildTracks(captions, recordId));\n  const player = useRef();\n  const element = useRef();\n\n  useEffect(() => {\n    if (!player.current) {\n      player.current = videojs(element.current, buildOptions(sources, tracks), () => {\n        // Set clock tick\n        if (onTimeUpdate) {\n          player.current.on('play', () => {\n            setInterval(() => {\n              const currentTime = player.current.currentTime();\n              onTimeUpdate(currentTime);\n            }, 1000 / config.rps);\n          });\n\n          player.current.on('pause', () => clearInterval());\n        }\n\n        // Set starting point\n        if (time) {\n          player.current.on('loadedmetadata', () => {\n            const duration = player.current.duration();\n            if (time < duration) {\n              player.current.currentTime(time);\n            }\n          });\n        }\n\n        // Set ready\n        if (onPlayerReady) onPlayerReady(ID.VIDEO, player.current);\n      });\n    }\n\n    return () => {\n      if (player.current) {\n        player.current.dispose();\n      }\n    };\n  }, [ onTimeUpdate, time, onPlayerReady ]);\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"video-wrapper\"\n      id={ID.VIDEO}\n    >\n      <div data-vjs-player>\n        <video\n          className=\"video-js\"\n          playsInline\n          preload=\"auto\"\n          ref={node => element.current = node}\n        />\n      </div>\n    </div>\n  );\n};\n\nVideo.propTypes = propTypes;\nVideo.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Video, areEqual);\n","import React from 'react';\nimport './index.scss';\n\nconst Bottom = () => {\n  return <div className=\"bottom-bar\" />;\n};\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Bottom, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n  FormattedDate,\n} from 'react-intl';\nimport cx from 'classnames';\nimport { handleOnEnterPress } from 'utils/data/handlers';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  about: {\n    id: 'button.about.aria',\n    description: 'Aria label for the about button',\n  },\n});\n\nconst propTypes = {\n  interactive: PropTypes.bool,\n  name: PropTypes.string,\n  start: PropTypes.number,\n  toggleAbout: PropTypes.func,\n};\n\nconst defaultProps = {\n  interactive: false,\n  name: '',\n  start: 0,\n  toggleAbout: () => {},\n};\n\nconst Title = ({\n  interactive,\n  name,\n  start,\n  toggleAbout,\n}) => {\n  const intl = useIntl();\n  const date = <FormattedDate value={new Date(start)} />;\n\n  if (!interactive) {\n\n    return (\n      <span className=\"title\">\n        {name} - {date}\n      </span>\n    );\n  }\n\n  return (\n    <span\n      aria={intl.formatMessage(intlMessages.about)}\n      className={cx('title', { interactive })}\n      onClick={toggleAbout}\n      onKeyPress={event => handleOnEnterPress(event, toggleAbout)}\n      tabIndex=\"0\"\n    >\n      {name} - {date}\n    </span>\n  );\n};\n\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = {\n  enabled: PropTypes.bool,\n  toggleSearch: PropTypes.func,\n};\n\nconst defaultProps = {\n  enabled: false,\n  toggleSearch: () => {},\n};\n\nconst Search = ({\n  enabled,\n  toggleSearch,\n}) => {\n  const intl = useIntl();\n\n  if (!enabled) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.search)}\n      circle\n      handleOnClick={toggleSearch}\n      icon={ID.SEARCH}\n    />\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\n\nconst intlMessages = defineMessages({\n  section: {\n    id: 'button.section.aria',\n    description: 'Aria label for the section button',\n  },\n});\n\nconst propTypes = {\n  enabled: PropTypes.bool,\n  section: PropTypes.bool,\n  toggleSection: PropTypes.func,\n};\n\nconst defaultProps = {\n  enabled: false,\n  section: true,\n  toggleSection: () => {},\n};\n\nconst Section = ({\n  enabled,\n  section,\n  toggleSection,\n}) => {\n  const intl = useIntl();\n\n  if (!enabled) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.section)}\n      circle\n      handleOnClick={toggleSection}\n      icon={section ? 'arrowLeft' : 'arrowRight'}\n    />\n  );\n};\n\nSection.propTypes = propTypes;\nSection.defaultProps = defaultProps;\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport { ID } from 'utils/constants';\n\nconst intlMessages = defineMessages({\n  swap: {\n    id: 'button.swap.aria',\n    description: 'Aria label for the swap button',\n  },\n});\n\nconst propTypes = {\n  enabled: PropTypes.bool,\n  toggleSwap: PropTypes.func,\n};\n\nconst defaultProps = {\n  enabled: false,\n  toggleSwap: () => {},\n};\n\nconst Swap = ({\n  enabled,\n  toggleSwap,\n}) => {\n  const intl = useIntl();\n\n  if (!enabled) return null;\n\n  return (\n    <Button\n      aria={intl.formatMessage(intlMessages.swap)}\n      circle\n      handleOnClick={toggleSwap}\n      icon={ID.SWAP}\n    />\n  );\n};\n\nSwap.propTypes = propTypes;\nSwap.defaultProps = defaultProps;\n\nexport default Swap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Title from './title';\nimport SearchButton from './buttons/search';\nimport SectionButton from './buttons/section';\nimport SwapButton from './buttons/swap';\nimport { controls as config } from 'config';\nimport './index.scss';\n\nconst propTypes = {\n  control: PropTypes.bool,\n  name: PropTypes.string,\n  section: PropTypes.bool,\n  single: PropTypes.bool,\n  start: PropTypes.number,\n  toggleAbout: PropTypes.func,\n  toggleSearch: PropTypes.func,\n  toggleSection: PropTypes.func,\n  toggleSwap: PropTypes.func,\n};\n\nconst defaultProps = {\n  control: false,\n  name: '',\n  section: false,\n  single: false,\n  start: 0,\n  toggleAbout: () => {},\n  toggleSearch: () => {},\n  toggleSection: () => {},\n  toggleSwap: () => {},\n};\n\nconst Top = ({\n  control,\n  name,\n  section,\n  single,\n  start,\n  toggleAbout,\n  toggleSearch,\n  toggleSection,\n  toggleSwap,\n}) => {\n\n  return (\n    <div className=\"top-bar\">\n      <div className=\"left\">\n        <SectionButton\n          enabled={control && config.section}\n          section={section}\n          toggleSection={toggleSection}\n        />\n      </div>\n      <div className=\"center\">\n        <Title\n          interactive={control && config.about}\n          name={name}\n          start={start}\n          toggleAbout={toggleAbout}\n        />\n      </div>\n      <div className=\"right\">\n        <SearchButton\n          enabled={control && config.search && !single}\n          toggleSearch={toggleSearch}\n        />\n        <SwapButton\n          enabled={control && config.swap && !single}\n          toggleSwap={toggleSwap}\n        />\n      </div>\n    </div>\n  );\n};\n\nTop.propTypes = propTypes;\nTop.defaultProps = defaultProps;\n\n// Checks the side section state\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.section === nextProps.section;\n};\n\nexport default React.memo(Top, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n};\n\nconst defaultProps = {\n  icon: '',\n  value: false,\n};\n\nconst Item = ({\n  icon,\n  value,\n}) => {\n  let element;\n  if (typeof value === 'boolean') {\n    const icon = value ? 'icon-check' : 'icon-close';\n\n    const style = {\n      green: value,\n      red: !value,\n    };\n\n    element = <div className={cx(icon, style)} />;\n  } else {\n    element = value;\n  }\n\n  return (\n    <div className=\"item\">\n      <div className={`icon-${icon}`} />\n      <div className=\"value\">\n        {element}\n      </div>\n    </div>\n  );\n};\n\nItem.propTypes = propTypes;\nItem.defaultProps = defaultProps;\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Item from './item';\nimport {\n  CONTENT,\n  ID,\n} from 'utils/constants';\nimport './index.scss';\n\nconst propTypes = {\n  content: PropTypes.object,\n  users: PropTypes.number,\n};\n\nconst defaultProps = {\n  content: {},\n  users: 0,\n};\n\nconst Body = ({\n  content,\n  users,\n}) => {\n\n  return (\n    <div className=\"about-body\">\n      <Item\n        icon={ID.USERS}\n        key={ID.USERS}\n        value={users}\n      />\n      {CONTENT.map((item) => (\n        <Item\n          icon={item}\n          key={item}\n          value={content[item]}\n        />\n      ))}\n    </div>\n  );\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\n\nexport default Body;\n","import React from 'react';\nimport Item from './item';\nimport {\n  BUILD,\n  ID,\n} from 'utils/constants';\nimport './index.scss';\n\nconst Footer = () => {\n  return (\n    <div className=\"about-footer\">\n      {BUILD ? (\n        <Item\n          icon={ID.SETTINGS}\n          value={BUILD}\n        />\n      ) : (\n        null\n      )}\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormattedDate,\n  FormattedTime,\n} from 'react-intl';\nimport './index.scss';\n\nconst propTypes = { metadata: PropTypes.object };\n\nconst defaultProps = { metadata: {} };\n\nconst Header = ({ metadata }) => {\n  const {\n    end,\n    name,\n    start,\n  } = metadata;\n\n  const subtitle = [];\n  subtitle.push(\n    <FormattedDate\n      value={new Date(start)}\n      day=\"numeric\"\n      month=\"long\"\n      year=\"numeric\"\n    />\n  );\n\n  subtitle.push(<FormattedTime value={new Date(start)} />);\n  subtitle.push(<FormattedTime value={new Date(end)} />);\n\n  return (\n    <div className=\"about-header\">\n      <div className=\"title\">\n        {name}\n      </div>\n      <div className=\"subtitle\">\n        {subtitle.map(s => <div className=\"item\">{s}</div>)}\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = propTypes;\nHeader.defaultProps = defaultProps;\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  close: {\n    id: 'button.close.aria',\n    description: 'Aria label for the close button',\n  },\n});\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  onClose: PropTypes.func,\n};\n\nconst defaultProps = {\n  children: null,\n  onClose: () => {},\n};\n\nconst Modal = ({\n  children,\n  onClose,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className=\"modal\">\n        <div className=\"modal-control\">\n          <Button\n            aria={intl.formatMessage(intlMessages.close)}\n            circle\n            handleOnClick={onClose}\n            icon=\"close\"\n          />\n        </div>\n        <div className=\"modal-content\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport Modal from 'components/utils/modal';\nimport './index.scss';\n\nconst propTypes = {\n  content: PropTypes.object,\n  metadata: PropTypes.object,\n  toggleModal: PropTypes.func,\n};\n\nconst defaultProps = {\n  content: {},\n  metadata: {},\n  toggleModal: () => {},\n};\n\nconst About = ({\n  content,\n  metadata,\n  toggleModal,\n}) => {\n\n  return (\n    <Modal onClose={toggleModal}>\n      <Header metadata={metadata} />\n      <Body\n        content={content}\n        users={metadata.participants}\n      />\n      <Footer />\n    </Modal>\n  );\n};\n\nAbout.propTypes = propTypes;\nAbout.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(About, areEqual);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Thumbnails from 'components/thumbnails';\nimport { search as config } from 'config';\nimport './index.scss';\n\nconst propTypes = {\n  handleOnChange: PropTypes.func,\n  metadata: PropTypes.object,\n  search: PropTypes.array,\n  thumbnails: PropTypes.array,\n};\n\nconst defaultProps = {\n  handleOnChange: () => {},\n  metadata: {},\n  search: [],\n  thumbnails: [],\n};\n\nconst Body = ({\n  handleOnChange,\n  metadata,\n  search,\n  thumbnails,\n}) => {\n\n  return (\n    <div className=\"search-body\">\n      <input\n        maxLength={config.length.max}\n        minLength={config.length.min}\n        onChange={(event) => handleOnChange(event)}\n        type=\"text\"\n      />\n      <div className={cx('result', { active: true })}>\n        <Thumbnails\n          currentDataIndex={0}\n          handleSearch={null}\n          interactive={false}\n          player={null}\n          recordId={metadata.id}\n          search={search}\n          thumbnails={thumbnails}\n        />\n      </div>\n    </div>\n  );\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\n\nexport default Body;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nconst propTypes = {\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n};\n\nconst defaultProps = {\n  disabled: false,\n  handleOnClick: () => {},\n};\n\nconst Footer = ({\n  disabled,\n  handleOnClick,\n}) => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-footer\">\n      <Button\n        aria={intl.formatMessage(intlMessages.search)}\n        disabled={disabled}\n        handleOnClick={(event) => handleOnClick(event)}\n        icon=\"search\"\n        type=\"solid\"\n      />\n    </div>\n  );\n};\n\nFooter.propTypes = propTypes;\nFooter.defaultProps = defaultProps;\n\nexport default Footer;\n","import React from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  title: {\n    id: 'player.search.modal.title',\n    description: 'Label for the search modal title',\n  },\n  subtitle: {\n    id: 'player.search.modal.subtitle',\n    description: 'Label for the search modal subtitle',\n  },\n});\n\nconst Header = () => {\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-header\">\n      <div className=\"title\">\n        {intl.formatMessage(intlMessages.title)}\n      </div>\n      <div className=\"subtitle\">\n        {intl.formatMessage(intlMessages.subtitle)}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { getCurrentDataIndex } from './data';\nimport { hasVideo } from './data/validators';\n\nconst search = (text, thumbnails) => {\n  const result = [];\n\n  const value = text.toLowerCase();\n  thumbnails.forEach((thumbnail, index) => {\n    const { alt } = thumbnail;\n\n    if (alt.toLowerCase().indexOf(value) !== -1) {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst seek = (player, seconds) => {\n  if (!hasVideo(player)) return null;\n\n  const min = 0;\n  const max = player.video.duration();\n  const time = player.video.currentTime() + seconds;\n\n  if (time < min) {\n    player.video.currentTime(min);\n  } else if (time > max) {\n    player.video.currentTime(max);\n  } else {\n    player.video.currentTime(time);\n  }\n};\n\nconst skip = (player, data, change) => {\n  if (!hasVideo(player)) return null;\n\n  const min = 0;\n  const max = data.length - 1;\n  const time = player.video.currentTime();\n\n  const current = getCurrentDataIndex(data, time);\n  if (current === -1) return null;\n\n  const index = current + change;\n\n  let timestamp;\n  if (index < min) {\n    timestamp = data[min].timestamp;\n  } else if (index > max) {\n    timestamp = data[max].timestamp;\n  } else {\n    timestamp = data[index].timestamp;\n  }\n\n  if (typeof timestamp !== 'undefined') {\n    player.video.currentTime(timestamp);\n  }\n};\n\nexport {\n  search,\n  seek,\n  skip,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Body from './body';\nimport Footer from './footer';\nimport Header from './header';\nimport { search as config } from 'config';\nimport Modal from 'components/utils/modal';\nimport { search as getSearch } from 'utils/actions';\nimport {\n  isEmpty,\n  isEqual,\n} from 'utils/data/validators';\nimport './index.scss';\n\nconst getValue = (event) => {\n  if (event && event.target) return event.target.value;\n\n  return null;\n};\n\nconst isValid = (value) => {\n  if (value && typeof value === 'string') {\n    return value.length >= config.length.min;\n  }\n\n  return false;\n};\n\nconst propTypes = {\n  handleSearch: PropTypes.func,\n  metadata: PropTypes.object,\n  thumbnails: PropTypes.array,\n  toggleModal: PropTypes.func,\n};\n\nconst defaultProps = {\n  handleSearch: () => {},\n  metadata: {},\n  thumbnails: [],\n  toggleModal: () => {},\n};\n\nconst Search = ({\n  handleSearch,\n  metadata,\n  thumbnails,\n  toggleModal,\n}) => {\n  const [disabled, setDisabled] = useState(true);\n  const [search, setSearch] = useState([]);\n\n  const handleOnChange = (event) => {\n    const value = getValue(event);\n    if (isValid(value)) {\n      const result = getSearch(value, thumbnails);\n\n      // If different, update search\n      if (!isEqual(search, result)) {\n        setSearch(result);\n      }\n\n      // Check to enable\n      if (disabled) setDisabled(false);\n    } else {\n      // If not empty, clear search\n      if (!isEmpty(search)) {\n        setSearch([]);\n      }\n\n      // Chack to disable\n      if (!disabled) setDisabled(true);\n    }\n  };\n\n  const handleOnClick = () => {\n    handleSearch(search);\n    toggleModal();\n  };\n\n  return (\n    <Modal onClose={toggleModal}>\n      <Header />\n      <Body\n        handleOnChange={(event) => handleOnChange(event)}\n        metadata={metadata}\n        search={search}\n        thumbnails={thumbnails}\n      />\n      <Footer\n        disabled={disabled}\n        handleOnClick={() => handleOnClick()}\n      />\n    </Modal>\n  );\n};\n\nSearch.propTypes = propTypes;\nSearch.defaultProps = defaultProps;\n\n// Avoid re-render\nconst areEqual = () => true;\n\nexport default React.memo(Search, areEqual);\n","import { parseStringPromise } from 'xml2js';\nimport { files as config } from 'config';\nimport { getFileType } from './data';\nimport {\n  hasProperty,\n  isEmpty,\n} from './data/validators';\nimport {\n  ID,\n  SHAPES,\n} from './constants';\nimport logger from './logger';\n\nconst getAttr = data => {\n  if (!data) return {};\n\n  const attr = data['$'];\n  if (!attr) return {};\n\n  return attr;\n};\n\nconst getChildren = data => {\n  if (!data) return [];\n\n  const children = data['$$'];\n  if (!children) return [];\n\n  return children;\n};\n\nconst getId = data => {\n  if (!data) return -1;\n\n  const id = data.match(/\\d+$/);\n  if (!id || id.length === 0) return -1;\n\n  return parseInt(id.shift(), 10);\n};\n\nconst getNumbers = data => {\n  if (!data) return [];\n\n  const trimmed = data.trim().replace(/  +/g, ' ');\n  if (trimmed.length === 0) return [];\n\n  const split = trimmed.split(' ');\n  const numbers = split.map(v => parseFloat(v));\n\n  return numbers;\n};\n\nconst buildAlternates = result => {\n  if (!result) return [];\n\n  let data = [];\n  for (const presentation in result) {\n    if (hasProperty(result, presentation)) {\n      const slides = result[presentation];\n\n      for (const slide in slides) {\n        if (hasProperty(slides, slide)) {\n          const text = slides[slide];\n\n          data.push({\n            src: `presentation/${presentation}/${slide}.png`,\n            text,\n          });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\n// TODO\nconst buildCaptions = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\n// TODO\nconst buildPolls = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\nconst buildExternalVideos = result => {\n  if (!result) return [];\n\n  const data = result.map(r => {\n    return {\n      timestamp: r.timestamp,\n      url: r.external_video_url,\n    };\n  });\n\n  return data;\n};\n\nconst buildMetadata = result => {\n  let data = {};\n  const { recording } = result;\n\n  if (hasProperty(recording, 'meeting')) {\n    const attr = getAttr(recording.meeting.shift());\n    const { id } = attr;\n    const meta = recording.meta.shift();\n    const end = parseInt(recording.end_time.shift(), 10);\n    const name = meta.name ? meta.name.shift() : attr.name;\n    const participants = parseInt(recording.participants.shift(), 10);\n    const start = parseInt(recording.start_time.shift(), 10);\n\n    data = {\n      end,\n      id,\n      name,\n      participants,\n      start,\n    };\n  }\n\n  return data;\n};\n\nconst buildNotes = result => {\n  if (!result) return '';\n\n  // Extract the notes' body\n  const regex = /<body>\\n.*\\n<\\/body>/g;\n  const match = result.match(regex);\n\n  let data = '';\n  if (!isEmpty(match)) {\n    data = match.shift();\n  }\n\n  return data;\n};\n\nconst buildStyle = data => {\n  const items = data.split(';');\n  let style = {};\n\n  items.forEach(item => {\n    const trimmed = item.trim();\n\n    if (trimmed.length === 0) return;\n\n    const split = trimmed.split(':').map(i => i.trim());\n\n    // Remove visibility\n    if (split[0] === 'visibility') return;\n\n    style[split[0]] = split[1];\n  });\n\n  return style;\n};\n\nconst buildSlides = image => {\n  let slides = [];\n\n  if (image) {\n    image.forEach(img => {\n      const attr = getAttr(img);\n      const src = attr['xlink:href'];\n\n      // Skip the logo\n      if (!src) return;\n\n      // Get the number from the id name\n      const slideId = getId(attr.id);\n      const timestamps = getNumbers(attr.in);\n\n      timestamps.forEach(timestamp => {\n        slides.push({\n          id: slideId,\n          height: parseInt(attr.height),\n          src,\n          timestamp,\n          width: parseInt(attr.width),\n        });\n      });\n    });\n\n    slides = slides.sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  return slides;\n};\n\nconst buildThumbnails = slides => {\n  const prefix = 'slide-';\n  const url = 'thumbnails/thumb-';\n\n  return slides.reduce((result, slide) => {\n    const {\n      id,\n      src,\n      timestamp,\n    } = slide;\n\n    if (src.includes(ID.DESKSHARE)) {\n      result.push({\n        id,\n        src: ID.SCREENSHARE,\n        timestamp,\n      });\n    } else {\n      result.push({\n        id,\n        src: src.replace(prefix, url),\n        timestamp,\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nconst parseText = data => {\n  let text = '';\n\n  const children = getChildren(data);\n  if (!isEmpty(children)) {\n    const child = children.shift();\n    const grandchildren = getChildren(child);\n    if (!isEmpty(grandchildren)) {\n      text = grandchildren.map(grandchild => {\n        const name = grandchild['#name'];\n        if (name === 'br') return '\\r';\n\n        return grandchild['_'];\n      }).join('');\n    }\n  }\n\n  return text;\n};\n\nconst buildCanvases = group => {\n  let canvases = [];\n\n  if (group) {\n    canvases = group.map(canvas => {\n      const canvasAttr = getAttr(canvas);\n      // Get the number from the id name\n      const canvasId = getId(canvasAttr.id);\n\n      let draws = canvas.g.map(g => {\n        const drawAttr = getAttr(g);\n        const timestamp = parseFloat(drawAttr.timestamp);\n        const clear = parseFloat(drawAttr.undo);\n        const style = buildStyle(drawAttr.style);\n        const drawId = getId(drawAttr.shape);\n\n        let shape = {};\n        if (g.image) {\n          shape.type = SHAPES.POLL;\n          const image = getAttr(g.image.shift());\n          // TODO: Better adapt for old versions\n          // Versions prior to 2.3 included a rect structure along with an image\n          if (g.rect) {\n            const rect = getAttr(g.rect.shift());\n            shape.data = Object.assign({ rect }, { image });\n          } else {\n            shape.data = Object.assign({ image });\n          }\n        } else if (g.polyline) {\n          shape.type = SHAPES.POLYLINE;\n          shape.data = Object.assign({}, getAttr(g.polyline.shift()));\n        } else if (g.line) {\n          shape.type = SHAPES.LINE;\n          shape.data = Object.assign({}, getAttr(g.line.shift()));\n        } else if (g.polygon) {\n          shape.type = SHAPES.POLYGON;\n          shape.data = Object.assign({}, getAttr(g.polygon.shift()));\n        } else if (g.circle) {\n          shape.type = SHAPES.CIRCLE;\n          shape.data = Object.assign({}, getAttr(g.circle.shift()));\n        } else if (g.path) {\n          shape.type = SHAPES.PATH;\n          shape.data = Object.assign({}, getAttr(g.path.shift()));\n        } else if (g.switch) {\n          shape.type = SHAPES.TEXT;\n          const foreignObject = g.switch.shift()['foreignObject'].shift();\n          const text = parseText(foreignObject);\n          shape.data = Object.assign({ text }, getAttr(foreignObject));\n        }\n\n        return {\n          clear,\n          id: drawId,\n          shape,\n          style,\n          timestamp,\n        };\n      });\n\n      return {\n        draws,\n        id: canvasId,\n      };\n    });\n  }\n\n  return canvases;\n};\n\nconst buildShapes = result => {\n  let data = {};\n  const { svg } = result;\n\n  if (svg) {\n    const {\n      image,\n      g,\n    } = svg;\n\n    data.slides = buildSlides(image);\n    data.thumbnails = buildThumbnails(data.slides);\n    data.canvases = buildCanvases(g);\n  }\n\n  return data;\n};\n\nconst buildPanzooms = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(panzoom => {\n      const attr = getAttr(panzoom);\n      const viewbox = getNumbers(panzoom.viewBox.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: viewbox.shift(),\n        y: viewbox.shift(),\n        width: viewbox.shift(),\n        height: viewbox.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildCursor = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(cursor => {\n      const attr = getAttr(cursor);\n      const position = getNumbers(cursor.cursor.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: position.shift(),\n        y: position.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst clearHyperlink = message => {\n  const regex = /<a href=\"(.*)\" rel=\"nofollow\"><u>\\1<\\/u><\\/a>/g;\n\n  return message.replace(regex, '$1');\n};\n\nconst decodeXML = message => {\n  return message\n    .replace(/&(quot|#34);/g, '\"')\n    .replace(/&(amp|#38);/g, '&')\n    .replace(/&(apos|#39);/g, \"'\")\n    .replace(/&(lt|#60);/g, '<')\n    .replace(/&(gt|#62);/g, '>');\n};\n\nconst getInitials = name => {\n  let initials;\n\n  if (name) {\n    initials = name\n      .slice(0, 2)\n      .toLowerCase()\n      .trim();\n  }\n\n  return initials;\n};\n\nconst buildChat = result => {\n  const { popcorn } = result;\n  let data = [];\n\n  if (hasProperty(popcorn, 'chattimeline')) {\n    const { chattimeline } = popcorn;\n    data = chattimeline.map(chat => {\n      const attr = getAttr(chat);\n      const clear = attr.out ? parseFloat(attr.out) : -1;\n      const message = decodeXML(clearHyperlink(attr.message));\n      const initials = getInitials(attr.name);\n\n      return {\n        clear,\n        hyperlink: message !== attr.message,\n        initials,\n        name: attr.name,\n        message,\n        timestamp: parseFloat(attr.in),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildScreenshare = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(screenshare => {\n      const attr = getAttr(screenshare);\n\n      return {\n        timestamp: parseFloat(attr.start_timestamp),\n        clear: parseFloat(attr.stop_timestamp),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst getOptions = filename => {\n  let options = {};\n\n  switch (filename) {\n    case config.data.shapes:\n      options = {\n        explicitChildren: true,\n        preserveChildrenOrder: true,\n        charsAsChildren: true,\n      };\n      break;\n    default:\n  }\n\n  return options;\n};\n\nconst build = (filename, value) => {\n  return new Promise((resolve, reject) => {\n    let data;\n    const fileType = getFileType(filename);\n\n    if (fileType === 'json') {\n      switch (filename) {\n        case config.data.alternates:\n          data = buildAlternates(value);\n          break;\n        case config.data.captions:\n          data = buildCaptions(value);\n          break;\n        case config.data.polls:\n          data = buildPolls(value);\n          break;\n        case config.data.externalVideos:\n          data = buildExternalVideos(value);\n          break;\n        default:\n          logger.debug('unhandled', 'json', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else if (fileType === 'html') {\n      switch (filename) {\n        case config.data.notes:\n          data = buildNotes(value);\n          break;\n        default:\n          logger.debug('unhandled', 'html', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else {\n      if (!value) {\n        logger.warn('missing', filename);\n\n        return resolve(null);\n      }\n\n      // Parse XML data\n      const options = getOptions(filename);\n      parseStringPromise(value, options).then(result => {\n        switch (filename) {\n          case config.data.chat:\n            data = buildChat(result);\n            break;\n          case config.data.cursor:\n            data = buildCursor(result);\n            break;\n          case config.data.metadata:\n            data = buildMetadata(result);\n            break;\n          case config.data.panzooms:\n            data = buildPanzooms(result);\n            break;\n          case config.data.screenshare:\n            data = buildScreenshare(result);\n            break;\n          case config.data.shapes:\n            data = buildShapes(result);\n            break;\n          default:\n            logger.debug('unhandled', 'xml', filename);\n            reject(filename);\n        }\n        resolve(data);\n      }).catch(error => reject(error));\n    }\n  });\n};\n\nconst addAlternatesToThumbnails = (thumbnails, alternates) => {\n  const prefix = 'thumbnails/thumb-';\n  const url = 'slide-';\n\n  return thumbnails.map(thumbnail => {\n    const { src } = thumbnail;\n    thumbnail.alt = '';\n\n    const found = alternates.find(alt => src.replace(prefix, url) === alt.src);\n    if (found) thumbnail.alt = found.text;\n\n    return thumbnail;\n  });\n};\n\nconst mergeChatContent = (chat, polls, externalVideos) => {\n  return [\n    ...chat,\n    ...externalVideos,\n    ...polls,\n  ].sort((a, b) => a.timestamp - b.timestamp);\n};\n\nexport {\n  addAlternatesToThumbnails,\n  build,\n  buildStyle,\n  decodeXML,\n  getAttr,\n  getId,\n  getNumbers,\n  mergeChatContent,\n};\n","import { controls } from 'config';\nimport {\n  getContentFromData,\n  getControlFromLayout,\n  getSectionFromLayout,\n  getSwapFromLayout,\n} from './data';\nimport { isContentVisible } from './data/validators';\n\nexport default class Layout {\n  constructor(data, layout) {\n    this.content = getContentFromData(data);\n    this.layout = layout;\n  }\n\n  getContent() {\n    return this.content;\n  }\n\n  initControl() {\n    return getControlFromLayout(this.layout);\n  }\n\n  initSection() {\n    return getSectionFromLayout(this.layout);\n  }\n\n  initSwap() {\n    return getSwapFromLayout(this.layout);\n  }\n\n  getBottomContentStyle(state) {\n    const {\n      fullscreen,\n      thumbnails,\n    } = state;\n\n    const bottom = thumbnails && !fullscreen;\n    const style = { 'inactive': !bottom };\n\n    return style;\n  }\n\n  getContentStyle(state) {\n    const { swap } = state;\n    const style = { 'swapped-content': swap };\n\n    return style;\n  }\n\n  getMediaStyle(state) {\n    const { swap } = state;\n    const single = this.isSingle();\n    const style = { 'swapped-media': swap || single };\n\n    return style;\n  }\n\n  getPlayerStyle(state) {\n    const {\n      fullscreen,\n      section,\n    } = state;\n\n    const single = this.isSingle();\n\n    const style = {\n      'fullscreen-content': fullscreen,\n      'hidden-section': !section,\n      'single-content': single,\n    };\n\n    return style;\n  }\n\n  hasFullscreenButton(layout, state) {\n    const {\n      control,\n      swap,\n    } = state;\n\n    if (!control || !controls.fullscreen) return false;\n\n    const single = this.isSingle();\n    if (!isContentVisible(layout, swap || single)) return false;\n\n    return true;\n  }\n\n  hasScreenshare() {\n    const { screenshare } = this.content;\n\n    return screenshare;\n  }\n\n  isSingle() {\n    const {\n      presentation,\n      screenshare,\n    } = this.content;\n\n    return !presentation && !screenshare;\n  }\n}\n","import { shortcuts as config } from 'config';\nimport logger from './logger';\n\nexport default class Shortcuts {\n  constructor(actions) {\n    this.enabled = config.enabled;\n\n    if (!this.enabled) {\n      logger.debug('shortcuts', 'disabled');\n    } else {\n      this.init(actions);\n    }\n  }\n\n  init(actions) {\n    this.listeners = [];\n\n    for (let prop in actions) {\n      const value = actions[prop];\n      if (typeof value === 'function') {\n        const key = config[prop];\n        this.add(key, value);\n      } else {\n        for (let p in value) {\n          const k = config[prop][p];\n          const v = value[p];\n          this.add(k, v);\n        }\n      }\n    }\n  }\n\n  add(key, action) {\n    if (!key || typeof key !== 'string') {\n      logger.warn('shortcuts', 'invalid', 'key');\n      return null;\n    } else if (key.length === 0) {\n      return null;\n    }\n\n    if (!action || typeof action !== 'function') {\n      logger.warn('shortcuts', 'invalid', 'action');\n      return null;\n    }\n\n    const listener = document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.shiftKey) {\n        if (e.key === key) action();\n      }\n    });\n\n    this.listeners.push(listener);\n  }\n\n  destroy() {\n    this.listeners.forEach(listener => {\n      document.removeEventListener(listener);\n    });\n  }\n}\n","import logger from './logger';\n\nconst STATUSES = [\n  'canplay',\n  'seeking',\n  'waiting',\n];\n\nconst EVENTS = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'interruptbegin',\n  'interruptend',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'mozaudioavailable',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  //'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\nexport default class Synchronizer {\n  constructor(primary, secondary) {\n    this.primary = primary;\n    this.secondary = secondary;\n\n    this.status = {\n      primary: 'waiting',\n      secondary: 'waiting',\n    }\n\n    this.synching = false;\n\n    this.init();\n  }\n\n  init() {\n    STATUSES.forEach(status => {\n      this.primary.on(status, () => this.status.primary = status);\n      this.secondary.on(status, () => this.status.secondary = status);\n    });\n\n    this.primary.on('play', () => this.secondary.play());\n    this.primary.on('pause', () => this.secondary.pause());\n\n    this.primary.on('seeking', () => {\n      const currentTime = this.primary.currentTime();\n      this.secondary.currentTime(currentTime);\n    });\n\n    this.primary.on('ratechange', () => {\n      const playbackRate = this.primary.playbackRate();\n      this.secondary.playbackRate(playbackRate);\n    });\n\n    this.primary.on('waiting', () => {\n      if (!this.synching && this.status.secondary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.primary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    this.secondary.on('waiting', () => {\n      if (!this.synching && this.status.primary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.secondary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    EVENTS.forEach(event => {\n      this.primary.on(event, () => logger.debug(`primary ${event} ${this.status.primary}`));\n      this.secondary.on(event, () => logger.debug(`secondary ${event} ${this.status.secondary}`));\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { shortcuts } from 'config';\nimport Chat from './chat';\nimport Notes from './notes';\nimport Presentation from './presentation';\nimport Screenshare from './screenshare';\nimport Thumbnails from './thumbnails';\nimport Video from './video';\nimport BottomBar from './bars/bottom';\nimport TopBar from './bars/top';\nimport AboutModal from './modals/about';\nimport SearchModal from './modals/search';\nimport Button from './utils/button';\nimport {\n  seek,\n  skip,\n} from 'utils/actions';\nimport {\n  addAlternatesToThumbnails,\n  mergeChatContent,\n} from 'utils/builder';\nimport {\n  ID,\n  LAYOUT,\n} from 'utils/constants';\nimport {\n  getActiveContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n} from 'utils/data';\nimport { isEqual } from 'utils/data/validators';\nimport Layout from 'utils/layout';\nimport logger from 'utils/logger';\nimport Shortcuts from 'utils/shortcuts';\nimport Synchronizer from 'utils/synchronizer';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.wrapper.aria',\n    description: 'Aria label for the player wrapper',\n  },\n  fullscreen: {\n    id: 'button.fullscreen.aria',\n    description: 'Aria label for the fullscreen button',\n  },\n  restore: {\n    id: 'button.restore.aria',\n    description: 'Aria label for the restore button',\n  },\n});\n\nexport default class Player extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      data,\n      layout,\n    } = props;\n\n    this.layout = new Layout(data, layout);\n\n    this.state = {\n      application: ID.CHAT,\n      control: this.layout.initControl(),\n      fullscreen: false,\n      modal: '',\n      search: [],\n      section: this.layout.initSection(),\n      swap: this.layout.initSwap(),\n      thumbnails: true,\n      time: 0,\n    }\n\n    this.player = {\n      video: null,\n      screenshare: null,\n    };\n\n    this.initData(data);\n\n    this.handlePlayerReady = this.handlePlayerReady.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.initShortcuts();\n  }\n\n  componentWillUnmount() {\n    if (this.shortcuts) {\n      this.shortcuts.destroy();\n    }\n  }\n\n  initData(data) {\n    this.alternates = getData(data, ID.ALTERNATES);\n    this.captions = getData(data, ID.CAPTIONS);\n    this.chat = mergeChatContent(\n      getData(data, ID.CHAT),\n      getData(data, ID.POLLS),\n      getData(data, ID.EXTERNAL_VIDEOS),\n    );\n    this.cursor = getData(data, ID.CURSOR);\n    this.metadata = getData(data, ID.METADATA);\n    this.notes = getData(data, ID.NOTES);\n    this.panzooms = getData(data, ID.PANZOOMS);\n    this.screenshare = getData(data, ID.SCREENSHARE);\n    this.shapes = getData(data, ID.SHAPES);\n\n    this.canvases = this.shapes.canvases;\n    this.slides = this.shapes.slides;\n    this.thumbnails = addAlternatesToThumbnails(this.shapes.thumbnails, this.alternates);\n\n    logger.debug(ID.PLAYER, data);\n  }\n\n  handlePlayerReady(media, player) {\n    switch (media) {\n      case ID.VIDEO:\n        logger.debug(ID.PLAYER, 'ready', ID.VIDEO);\n        this.player.video = player;\n        break;\n      case ID.SCREENSHARE:\n        logger.debug(ID.PLAYER, 'ready', ID.SCREENSHARE);\n        this.player.screenshare = player;\n        break;\n      default:\n        logger.debug('unhandled', media);\n    }\n\n    if (this.player.video && this.player.screenshare) {\n      this.synchronizer = new Synchronizer(this.player.video, this.player.screenshare);\n    }\n  }\n\n  handleSearch(value) {\n    const { search } = this.state;\n\n    if (!isEqual(search, value)) {\n      this.setState({ search: value });\n    }\n  }\n\n  handleTimeUpdate(value) {\n    const { time } = this.state;\n\n    if (time !== value) {\n      this.setState({ time: value });\n    }\n  }\n\n  initShortcuts() {\n    const { seconds } = shortcuts.video;\n\n    const actions = {\n      fullscreen: () => this.toggleFullscreen(),\n      section: () => this.toggleSection(),\n      swap: () => this.toggleSwap(),\n      thumbnails: () => this.toggleThumbnails(),\n      slides: {\n        next: () => skip(this.player, this.slides, +1),\n        previous: () => skip(this.player, this.slides, -1),\n      },\n      video: {\n        backward: () => seek(this.player, -seconds),\n        forward: () => seek(this.player, +seconds),\n      },\n    };\n\n    this.shortcuts = new Shortcuts(actions);\n  }\n\n  toggleApplication(type) {\n    const { application } = this.state;\n\n    if (application === type) return null;\n\n    this.setState({ application: type });\n  }\n\n  toggleFullscreen() {\n    const { fullscreen } = this.state;\n\n    this.setState({ fullscreen: !fullscreen });\n  }\n\n  toggleModal(type) {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    this.setState({ modal: open ? '' : type });\n  }\n\n  toggleSection() {\n    const { section } = this.state;\n\n    this.setState({ section: !section });\n  }\n\n  toggleSwap() {\n    const { swap } = this.state;\n\n    this.setState({ swap: !swap });\n  }\n\n  toggleThumbnails() {\n    const { thumbnails } = this.state;\n\n    this.setState({ thumbnails: !thumbnails });\n  }\n\n  renderFullscreenButton(layout) {\n    if (!this.layout.hasFullscreenButton(layout, this.state)) return null;\n\n    const { intl } = this.props;\n    const { fullscreen } = this.state;\n\n    const aria = fullscreen\n      ? intl.formatMessage(intlMessages.restore)\n      : intl.formatMessage(intlMessages.fullscreen)\n    ;\n\n    const icon = fullscreen ? 'restore' : 'fullscreen';\n\n    return (\n      <div className=\"fullscreen-button\">\n        <Button\n          aria={aria}\n          handleOnClick={() => this.toggleFullscreen()}\n          icon={icon}\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  renderModal() {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    if (!open) return null;\n\n    const content = this.layout.getContent();\n\n    switch (modal) {\n      case ID.ABOUT:\n        return (\n          <AboutModal\n            content={content}\n            metadata={this.metadata}\n            toggleModal={() => this.toggleModal(ID.ABOUT)}\n          />\n        );\n      case ID.SEARCH:\n        return (\n          <SearchModal\n            handleSearch={this.handleSearch}\n            metadata={this.metadata}\n            thumbnails={this.thumbnails}\n            toggleModal={() => this.toggleModal(ID.SEARCH)}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderThumbnails() {\n    const {\n      search,\n      time,\n    } = this.state;\n\n    const { video } = this.player;\n\n    const currentDataIndex = getCurrentDataIndex(this.thumbnails, time);\n\n    return (\n      <Thumbnails\n        currentDataIndex={currentDataIndex}\n        handleSearch={this.handleSearch}\n        interactive={true}\n        player={video}\n        recordId={this.metadata.id}\n        search={search}\n        thumbnails={this.thumbnails}\n      />\n    );\n  }\n\n  renderTopBar() {\n    const {\n      control,\n      section,\n    } = this.state;\n\n    const {\n      name,\n      start,\n    } = this.metadata;\n\n    const single = this.layout.isSingle();\n\n    return (\n      <TopBar\n        control={control}\n        name={name}\n        section={section}\n        single={single}\n        start={start}\n        toggleAbout={() => this.toggleModal(ID.ABOUT)}\n        toggleSearch={() => this.toggleModal(ID.SEARCH)}\n        toggleSection={() => this.toggleSection()}\n        toggleSwap={() => this.toggleSwap()}\n      />\n    );\n  }\n\n  renderMedia() {\n    const {\n      data,\n      time,\n    } = this.props;\n\n    const { media } = data;\n\n    return (\n      <div className={cx('media', this.layout.getMediaStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.MEDIA)}\n        <Video\n          captions={this.captions}\n          key={ID.VIDEO}\n          media={media}\n          onPlayerReady={this.handlePlayerReady}\n          onTimeUpdate={this.handleTimeUpdate}\n          recordId={this.metadata.id}\n          time={time}\n        />\n      </div>\n    );\n  }\n\n  renderApplicationIcon(type) {\n    const { application } = this.state;\n    const active = application === type;\n\n    return (\n      <div\n        className={cx('application-icon', { inactive: !active })}\n        onClick={() => active ? null : this.toggleApplication(type)}\n      >\n        <span className={`icon-${type}`} />\n      </div>\n    );\n  }\n\n  renderApplicationContent() {\n    const { application } = this.state;\n\n    switch (application) {\n      case ID.CHAT:\n        const { time } = this.state;\n        const { video } = this.player;\n        const currentChatIndex = getCurrentDataIndex(this.chat, time);\n\n        return (\n          <Chat\n            chat={this.chat}\n            currentDataIndex={currentChatIndex}\n            player={video}\n          />\n        );\n      case ID.NOTES:\n        return (\n          <Notes notes={this.notes} />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderApplicationControl() {\n    const { control } = this.state;\n\n    if (!control) return null;\n\n    return (\n      <div className=\"application-control\">\n        {this.renderApplicationIcon(ID.CHAT)}\n        {this.renderApplicationIcon(ID.NOTES)}\n      </div>\n    );\n  }\n\n  renderApplication() {\n    return (\n      <div className=\"application\">\n        {this.renderApplicationControl()}\n        {this.renderApplicationContent()}\n      </div>\n    );\n  }\n\n  renderPresentation(active) {\n    const { time } = this.state;\n\n    const currentSlideIndex = getCurrentDataIndex(this.slides, time);\n    const currentPanzoomIndex = getCurrentDataIndex(this.panzooms, time);\n    const currentCursorIndex = getCurrentDataIndex(this.cursor, time);\n    const draws = getDraws(currentSlideIndex, this.slides, this.canvases);\n    const currentDrawsInterval = getCurrentDataInterval(draws, time);\n\n    return (\n      <Presentation\n        active={active}\n        currentCursorIndex={currentCursorIndex}\n        currentPanzoomIndex={currentPanzoomIndex}\n        currentSlideIndex={currentSlideIndex}\n        cursors={this.cursor}\n        draws={draws}\n        drawsInterval={currentDrawsInterval}\n        panzooms={this.panzooms}\n        recordId={this.metadata.id}\n        slides={this.slides}\n        thumbnails={this.thumbnails}\n      />\n    )\n  }\n\n  renderScreenshare(active) {\n    if (!this.layout.hasScreenshare()) return null;\n\n    const { data } = this.props;\n\n    const { media } = data;\n\n    return (\n      <Screenshare\n        active={active}\n        key={ID.SCREENSHARE}\n        media={media}\n        onPlayerReady={this.handlePlayerReady}\n        recordId={this.metadata.id}\n      />\n    );\n  }\n\n  renderContent() {\n    if (this.layout.isSingle()) return null;\n\n    const { time } = this.state;\n    const content = getActiveContent(this.screenshare, time);\n\n    return (\n      <div className={cx('content', this.layout.getContentStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.CONTENT)}\n        <div className=\"top-content\">\n          {this.renderPresentation(content === ID.PRESENTATION)}\n          {this.renderScreenshare(content === ID.SCREENSHARE)}\n        </div>\n        <div className={cx('bottom-content', this.layout.getBottomContentStyle(this.state))}>\n          {this.renderThumbnails()}\n        </div>\n      </div>\n    );\n  }\n\n  renderBottomBar() {\n    return <BottomBar />;\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('player-wrapper', this.layout.getPlayerStyle(this.state))}\n        id={ID.PLAYER}\n      >\n        {this.renderTopBar()}\n        {this.renderMedia()}\n        {this.renderApplication()}\n        {this.renderContent()}\n        {this.renderBottomBar()}\n        {this.renderModal()}\n      </div>\n    );\n  }\n}\n","import React, { useRef, useState } from 'react';\nimport {\n  defineMessages,\n  useIntl,\n} from 'react-intl';\nimport config from 'config';\nimport Data from './data';\nimport Dots from './dots';\nimport Error from 'components/error';\nimport Player from 'components/player';\nimport { build } from 'utils/builder';\nimport {\n  ERROR,\n  ID,\n} from 'utils/constants';\nimport {\n  buildFileURL,\n  getFileName,\n  getFileType,\n  getLoadedData,\n} from 'utils/data';\nimport {\n  getLayout,\n  getRecordId,\n  getTime,\n} from 'utils/params';\nimport logger from 'utils/logger';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'loader.wrapper.aria',\n    description: 'Aria label for the loader wrapper',\n  },\n});\n\nconst initError = (recordId) => recordId ? null : ERROR.BAD_REQUEST;\n\nconst Loader = ({ match }) => {\n  const intl = useIntl();\n  const counter = useRef(0);\n  const data = useRef({});\n  const layout = useRef(getLayout());\n  const recordId = useRef(getRecordId(match));\n  const started = useRef(false);\n  const time = useRef(getTime());\n\n  const [error, setError] = useState(initError(recordId.current));\n  const [loaded, setLoaded] = useState(false);\n\n  const fetchFile = (file) => {\n    const url = buildFileURL(recordId.current, file);\n    fetch(url).then(response => {\n      if (response.ok) {\n        logger.debug(ID.LOADER, file, response);\n        const fileType = getFileType(file);\n        switch (fileType) {\n          case 'json':\n            return response.json();\n          case 'html':\n            return response.text();\n          case 'svg':\n            return response.text();\n          case 'xml':\n            return response.text();\n          default:\n            setError(ERROR.BAD_REQUEST);\n            return null;\n        }\n      } else {\n        logger.warn('loader', file, response);\n        return null;\n      }\n    }).then(value => {\n      build(file, value).then(content => {\n        if (content) logger.debug(ID.LOADER, 'builded', file);\n        data.current[getFileName(file)] = content;\n        update();\n      }).catch(error => setError(ERROR.BAD_REQUEST));\n    }).catch(error => setError(ERROR.NOT_FOUND));\n  };\n\n  const fetchMedia = () => {\n    const fetches = config.medias.map(type => {\n      const url = buildFileURL(recordId.current, `video/webcams.${type}`);\n      return fetch(url, { method: 'HEAD' });\n    });\n\n    Promise.all(fetches).then(responses => {\n      const media = [];\n      responses.forEach(response => {\n        const { ok, url } = response;\n        if (ok) {\n          logger.debug(ID.LOADER, 'media', response);\n          media.push(config.medias.find(type => url.endsWith(type)));\n        }\n      });\n\n      if (media.length > 0) {\n        data.current.media = media;\n        update();\n      } else {\n        // TODO: Handle audio medias\n        setError(ERROR.NOT_FOUND);\n      }\n    });\n  };\n\n  const update = () => {\n    counter.current = counter.current + 1;\n    // TODO: Better control\n    if (counter.current > Object.keys(config.files.data).length) {\n      if (!loaded) setLoaded(true);\n    }\n  };\n\n  if (!started.current) {\n    started.current = true;\n\n    if (recordId.current) {\n      for (const file in config.files.data) {\n        fetchFile(config.files.data[file]);\n      }\n\n      fetchMedia();\n    }\n  }\n\n  if (error) return <Error code={error} />;\n\n  if (loaded) {\n    return (\n      <Player\n        data={data.current}\n        intl={intl}\n        layout={layout.current}\n        time={time.current}\n      />\n    );\n  }\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"loader-wrapper\"\n      id={ID.LOADER}\n    >\n      <div className=\"loader-top\" />\n      <div className=\"loader-middle\">\n        <Dots />\n      </div>\n      <div className=\"loader-bottom\">\n        <Data data={getLoadedData(data.current)} />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { ERROR } from 'utils/constants';\nimport Error from './error';\nimport Loader from './loader';\n\nconst Router = () => {\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route\n          path=\"/:recordId\"\n          component={Loader}\n        />\n        <Route render={() => <Error code={ERROR.NOT_FOUND} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import ar from './ar.json';\nimport de from './de.json';\nimport en from './en.json';\nimport es from './es.json';\nimport fa from './fa.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport ja from './ja.json';\nimport pt from './pt.json';\nimport ru from './ru.json';\nimport tr from './tr.json';\n\nconst messages = {\n  ar,\n  de,\n  en,\n  es,\n  fa,\n  fr,\n  it,\n  ja,\n  pt,\n  ru,\n  tr,\n};\n\nexport default messages;\n","import { locale as config } from 'config';\nimport messages from './messages';\nimport { getSearchParam } from 'utils/params';\n\nconst RTL_LOCALES = ['ar', 'fa'];\n\nconst setDirection = (locale) => {\n  if (RTL_LOCALES.includes(locale)) {\n    document.body.parentNode.setAttribute('dir', 'rtl');\n  } else {\n    document.body.parentNode.setAttribute('dir', 'ltr');\n  }\n};\n\nconst getLocale = () => {\n  // Try from the query params\n  let locale = getSearchParam('locale');\n\n  // If not, get browser default\n  if (!locale) locale = navigator.language;\n\n  // Sanitize\n  locale = locale.split(/[-_]/)[0];\n\n  // If the locale is missing, use the default fallback\n  if (!messages[locale]) locale = config.default.split(/[-_]/)[0];\n\n  setDirection(locale);\n\n  return locale;\n};\n\nconst getMessages = () => {\n  return messages;\n};\n\nexport {\n  getLocale,\n  getMessages,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from \"react-intl\";\nimport Loader from 'components/loader';\nimport Router from 'components/router';\nimport {\n  getLocale,\n  getMessages,\n} from 'locales';\nimport { ROUTER } from 'utils/constants';\nimport { getStyle } from 'utils/params';\nimport './index.scss';\n\nconst locale = getLocale();\nconst messages = getMessages();\nconst style = getStyle();\n\nReactDOM.render(\n  (\n    <IntlProvider\n      locale={locale}\n      messages={messages[locale]}\n    >\n      {style ? <link rel=\"stylesheet\" type=\"text/css\" href={style} /> : null}\n      {ROUTER ? <Router /> : <Loader />}\n    </IntlProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}