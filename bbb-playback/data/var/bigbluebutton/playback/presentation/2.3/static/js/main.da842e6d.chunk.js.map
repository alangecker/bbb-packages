{"version":3,"sources":["utils/logger.js","utils/builder.js","utils/data.js","components/error.js","components/utils/button/index.js","components/utils/modal/index.js","components/about/index.js","components/utils/avatar/index.js","components/chat/messages/message.js","components/chat/messages/chat.js","components/chat/messages/poll.js","components/chat/index.js","components/notes/index.js","components/presentation/cursor.js","components/presentation/slide.js","components/presentation/canvas.js","components/presentation/index.js","components/thumbnails/index.js","components/search/index.js","components/screenshare/index.js","components/video/index.js","components/bars/bottom.js","components/bars/top.js","utils/layout.js","utils/shortcuts.js","utils/synchronizer.js","components/player.js","components/loader.js","components/router.js","locales/messages/index.js","locales/index.js","index.js"],"names":["params","URLSearchParams","window","location","search","debug","has","logger","info","console","warn","error","getAttr","data","attr","getChildren","children","getId","id","match","length","parseInt","shift","getNumbers","trimmed","trim","replace","split","map","v","parseFloat","buildCanvases","group","canvases","canvas","canvasAttr","canvasId","draws","g","drawAttr","timestamp","clear","undo","style","items","forEach","item","i","buildStyle","drawId","shape","image","type","rect","Object","assign","polyline","line","polygon","circle","path","switch","foreignObject","text","isEmpty","child","grandchildren","grandchild","join","parseText","buildShapes","result","svg","slides","img","src","slideId","in","push","height","width","sort","a","b","buildSlides","thumbnails","reduce","slide","includes","build","filename","value","Promise","resolve","reject","fileType","getFileType","config","alternates","presentation","hasProperty","buildAlternates","captions","polls","buildPolls","notes","buildNotes","options","shapes","explicitChildren","preserveChildrenOrder","charsAsChildren","getOptions","parseStringPromise","then","chat","popcorn","chattimeline","out","message","decodeXML","clearHyperlink","initials","name","slice","toLowerCase","getInitials","hyperlink","buildChat","cursor","recording","event","position","x","y","buildCursor","metadata","meeting","meta","end","end_time","participants","start","start_time","buildMetadata","panzooms","panzoom","viewbox","viewBox","buildPanzooms","screenshare","start_timestamp","stop_timestamp","buildScreenshare","catch","addPollsToChat","LAYOUT","ID","ABOUT","ALTERNATES","CAPTIONS","CHAT","CURSOR","ERROR","LOADER","METADATA","NOTES","PANZOOMS","PLAYER","POLLS","PRESENTATION","SCREENSHARE","SEARCH","SHAPES","THUMBNAILS","VIDEO","NUMBERS","ROUTER","process","REACT_APP_NO_ROUTER","MEDIA_ROOT_URL","REACT_APP_MEDIA_ROOT_URL","buildFileURL","recordId","file","mediaPath","getMediaPath","rootUrl","fileUrl","getAvatarStyle","index","stringHash","getCurrentDataIndex","time","stop","middle","Math","floor","isCurrent","isVisible","getData","files","TALKERS","getFileName","pop","POLL_TYPES","YN","YNA","TF","POLL_KEYS","get","hasIndex","hasPresentation","object","property","hasOwnProperty","isActive","cleared","wasCleared","visible","current","next","isArray","isValid","isString","isEnabled","isEqual","first","second","equal","every","valid","Array","parseTimeToSeconds","patterns","hours","minutes","seconds","timeToSeconds","h","m","s","seek","player","video","max","duration","currentTime","skip","change","intlMessages","defineMessages","aria","description","Error","props","intl","useIntl","code","aria-label","formatMessage","className","defaultProps","active","disabled","Button","this","handleOnClick","icon","ghost","solid","default","cx","onClick","PureComponent","close","More","onClose","About","key","element","green","red","content","renderItem","subtitle","Date","day","month","year","toggleModal","renderHeader","renderBody","renderFooter","Avatar","renderContent","Message","inactive","onKeyPress","e","tabIndex","milliseconds","getTimestampAsMilliseconds","hourCycle","hour","minute","timeZone","renderAvatar","renderInfo","ChatMessage","nextProps","renderHyperlink","Component","question","yes","no","abstention","true","false","PollMessage","answers","responders","total","numVotes","percentage","toFixed","bar","p","half","repeat","ltr","document","dir","concat","getBar","label","getPollLabel","renderQuestion","renderResult","renderOptions","Chat","interaction","handleAutoScroll","currentDataIndex","scroll","firstNode","currentNode","parentNode","scrollTop","align","clientHeight","offsetTop","spacing","parentHeight","verticalOffset","getScrollTop","node","ref","setRef","getMessageType","renderChatMessage","renderPollMessage","aria-live","onMouseEnter","onMouseLeave","renderMessages","Notes","dangerouslySetInnerHTML","__html","Cursor","cy","Slide","thumbnail","find","alt","logo","getProxy","href","Canvas","points","x1","y1","x2","y2","d","r","xmlns","fill","stroke","strokeWidth","transform","drawsInterval","j","intermediate","renderPoll","renderPolyline","renderLine","renderPolygon","renderPath","renderCircle","renderText","renderCanvas","Presentation","currentSlideIndex","currentPanzoomIndex","currentData","currentCursorIndex","getSlideId","getViewBox","getCursor","buildViewBoxAttr","xmlnsXlink","clipPath","Thumbnails","scrollLeft","clientWidth","offsetLeft","parentWidth","horizontalOffset","getScrollLeft","interactive","renderImage","styles","isFiltered","renderThumbnail","handleSearch","renderThumbnails","renderClearButton","Search","state","target","min","setState","indexOf","maxLength","minLength","onChange","handleOnChange","Screenshare","media","sources","filter","controls","videojs","onPlayerReady","dispose","data-vjs-player","playsInline","preload","Video","tracks","lang","locale","localeName","kind","srclang","controlBar","fullscreenToggle","pictureInPictureToggle","volumePanel","inline","vertical","inactivityTimeout","playbackRates","rates","onTimeUpdate","on","setInterval","rps","clearInterval","about","section","swap","TopBar","enabled","toggleSearch","toggleSection","toggleSwap","date","toggleAbout","control","single","renderSectionButton","renderTitle","renderSearchButton","renderSwapButton","Layout","layout","POOLS","getContentFromData","getControlFromLayout","getSectionFromLayout","getSwapFromLayout","fullscreen","isSingle","isContentVisible","Shortcuts","actions","init","prop","listeners","add","k","action","listener","addEventListener","altKey","shiftKey","removeEventListener","STATUSES","EVENTS","Synchronizer","primary","secondary","status","synching","play","pause","playbackRate","restore","Player","application","initControl","modal","initSection","initSwap","initData","handlePlayerReady","bind","handleTimeUpdate","initShortcuts","shortcuts","destroy","found","synchronizer","toggleFullscreen","toggleThumbnails","previous","backward","forward","open","hasFullscreenButton","getContent","getMediaStyle","renderFullscreenButton","toggleApplication","currentChatIndex","renderApplicationIcon","renderApplicationControl","renderApplicationContent","getDraws","currentDrawsInterval","currentDataInterval","getCurrentDataInterval","hasScreenshare","getActiveContent","getContentStyle","renderPresentation","renderScreenshare","getBottomContentStyle","getPlayerStyle","renderTopBar","renderMedia","renderApplication","renderBottomBar","renderModal","Loader","counter","l","qs","parse","ignoreQueryPrefix","getLayout","getRecordId","t","getTime","loaded","fetchFile","fetchMedia","url","fetch","response","ok","json","update","fetches","medias","method","all","responses","endsWith","keys","injectIntl","Router","basename","component","render","ar","de","en","es","fa","fr","it","ja","pt","ru","tr","RTL_LOCALES","navigator","language","body","setAttribute","setDirection","messages","getLocale","getStyle","ReactDOM","rel","getElementById"],"mappings":"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","file":"static/js/main.da842e6d.chunk.js","sourcesContent":["const params = new URLSearchParams(window.location.search);\nconst debug = params ? params.has('debug') : false;\n\nconst logger = {\n  info: (...msg) => console.info(...msg),\n  debug: (...msg) => debug ? console.debug(...msg) : null,\n  warn: (...msg) => debug ? console.warn(...msg) : null,\n  error: (...msg) => console.error(...msg),\n};\n\nexport default logger;\n","import { parseStringPromise } from 'xml2js';\nimport { files as config } from 'config';\nimport {\n  getFileType,\n  hasProperty,\n  isEmpty,\n} from './data';\nimport logger from './logger';\n\nconst getAttr = data => {\n  if (!data) return {};\n\n  const attr = data['$'];\n  if (!attr) return {};\n\n  return attr;\n};\n\nconst getChildren = data => {\n  if (!data) return [];\n\n  const children = data['$$'];\n  if (!children) return [];\n\n  return children;\n};\n\nconst getId = data => {\n  if (!data) return -1;\n\n  const id = data.match(/\\d+$/);\n  if (!id || id.length === 0) return -1;\n\n  return parseInt(id.shift(), 10);\n};\n\nconst getNumbers = data => {\n  if (!data) return [];\n\n  const trimmed = data.trim().replace(/  +/g, ' ');\n  if (trimmed.length === 0) return [];\n\n  const split = trimmed.split(' ');\n  const numbers = split.map(v => parseFloat(v));\n\n  return numbers;\n};\n\nconst buildAlternates = result => {\n  if (!result) return [];\n\n  let data = [];\n  for (const presentation in result) {\n    if (hasProperty(result, presentation)) {\n      const slides = result[presentation];\n\n      for (const slide in slides) {\n        if (hasProperty(slides, slide)) {\n          const text = slides[slide];\n\n          data.push({\n            src: `presentation/${presentation}/${slide}.png`,\n            text,\n          });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\n// TODO\nconst buildCaptions = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\n// TODO\nconst buildPolls = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\nconst buildMetadata = result => {\n  let data = {};\n  const { recording } = result;\n\n  if (hasProperty(recording, 'meeting')) {\n    const attr = getAttr(recording.meeting.shift());\n    const { id } = attr;\n    const meta = recording.meta.shift();\n    const end = parseInt(recording.end_time.shift(), 10);\n    const name = meta.name ? meta.name.shift() : attr.name;\n    const participants = parseInt(recording.participants.shift(), 10);\n    const start = parseInt(recording.start_time.shift(), 10);\n\n    data = {\n      end,\n      id,\n      name,\n      participants,\n      start,\n    };\n  }\n\n  return data;\n};\n\nconst buildNotes = result => {\n  if (!result) return '';\n\n  // Extract the notes' body\n  const regex = /<body>\\n.*\\n<\\/body>/g;\n  const match = result.match(regex);\n\n  let data = '';\n  if (!isEmpty(match)) {\n    data = match.shift();\n  }\n\n  return data;\n};\n\nconst buildStyle = data => {\n  const items = data.split(';');\n  let style = {};\n\n  items.forEach(item => {\n    const trimmed = item.trim();\n\n    if (trimmed.length === 0) return;\n\n    const split = trimmed.split(':').map(i => i.trim());\n\n    // Remove visibility\n    if (split[0] === 'visibility') return;\n\n    style[split[0]] = split[1];\n  });\n\n  return style;\n};\n\nconst buildSlides = image => {\n  let slides = [];\n\n  if (image) {\n    image.forEach(img => {\n      const attr = getAttr(img);\n      const src = attr['xlink:href'];\n\n      // Skip the logo\n      if (!src) return;\n\n      // Get the number from the id name\n      const slideId = getId(attr.id);\n      const timestamps = getNumbers(attr.in);\n\n      timestamps.forEach(timestamp => {\n        slides.push({\n          id: slideId,\n          height: parseInt(attr.height),\n          src,\n          timestamp,\n          width: parseInt(attr.width),\n        });\n      });\n    });\n\n    slides = slides.sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  return slides;\n};\n\nconst buildThumbnails = slides => {\n  const screenshare = 'deskshare';\n  const prefix = 'slide-';\n  const url = 'thumbnails/thumb-';\n\n  return slides.reduce((result, slide) => {\n    const {\n      id,\n      src,\n      timestamp,\n    } = slide;\n\n    if (src.includes(screenshare)) {\n      result.push({\n        id,\n        src: screenshare,\n        timestamp,\n      });\n    } else {\n      result.push({\n        id,\n        src: src.replace(prefix, url),\n        timestamp,\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nconst parseText = data => {\n  let text = '';\n\n  const children = getChildren(data);\n  if (!isEmpty(children)) {\n    const child = children.shift();\n    const grandchildren = getChildren(child);\n    if (!isEmpty(grandchildren)) {\n      text = grandchildren.map(grandchild => {\n        const name = grandchild['#name'];\n        if (name === 'br') return '\\r';\n\n        return grandchild['_'];\n      }).join('');\n    }\n  }\n\n  return text;\n};\n\nconst buildCanvases = group => {\n  let canvases = [];\n\n  if (group) {\n    canvases = group.map(canvas => {\n      const canvasAttr = getAttr(canvas);\n      // Get the number from the id name\n      const canvasId = getId(canvasAttr.id);\n\n      let draws = canvas.g.map(g => {\n        const drawAttr = getAttr(g);\n        const timestamp = parseFloat(drawAttr.timestamp);\n        const clear = parseFloat(drawAttr.undo);\n        const style = buildStyle(drawAttr.style);\n        const drawId = getId(drawAttr.shape);\n\n        let shape = {};\n        if (g.image) {\n          shape.type = 'poll';\n          const image = getAttr(g.image.shift());\n          // TODO: Better adapt for old versions\n          // Versions prior to 2.3 included a rect structure along with an image\n          if (g.rect) {\n            const rect = getAttr(g.rect.shift());\n            shape.data = Object.assign({ rect }, { image });\n          } else {\n            shape.data = Object.assign({ image });\n          }\n        } else if (g.polyline) {\n          shape.type = 'polyline';\n          shape.data = Object.assign({}, getAttr(g.polyline.shift()));\n        } else if (g.line) {\n          shape.type = 'line';\n          shape.data = Object.assign({}, getAttr(g.line.shift()));\n        } else if (g.polygon) {\n          shape.type = 'polygon';\n          shape.data = Object.assign({}, getAttr(g.polygon.shift()));\n        } else if (g.circle) {\n          shape.type = 'circle';\n          shape.data = Object.assign({}, getAttr(g.circle.shift()));\n        } else if (g.path) {\n          shape.type = 'path';\n          shape.data = Object.assign({}, getAttr(g.path.shift()));\n        } else if (g.switch) {\n          shape.type = 'text';\n          const foreignObject = g.switch.shift()['foreignObject'].shift();\n          const text = parseText(foreignObject);\n          shape.data = Object.assign({ text }, getAttr(foreignObject));\n        }\n\n        return {\n          clear,\n          id: drawId,\n          shape,\n          style,\n          timestamp,\n        };\n      });\n\n      return {\n        draws,\n        id: canvasId,\n      };\n    });\n  }\n\n  return canvases;\n};\n\nconst buildShapes = result => {\n  let data = {};\n  const { svg } = result;\n\n  if (svg) {\n    const {\n      image,\n      g,\n    } = svg;\n\n    data.slides = buildSlides(image);\n    data.thumbnails = buildThumbnails(data.slides);\n    data.canvases = buildCanvases(g);\n  }\n\n  return data;\n};\n\nconst buildPanzooms = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(panzoom => {\n      const attr = getAttr(panzoom);\n      const viewbox = getNumbers(panzoom.viewBox.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: viewbox.shift(),\n        y: viewbox.shift(),\n        width: viewbox.shift(),\n        height: viewbox.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildCursor = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(cursor => {\n      const attr = getAttr(cursor);\n      const position = getNumbers(cursor.cursor.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: position.shift(),\n        y: position.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst clearHyperlink = message => {\n  const regex = /<a href=\"(.*)\" rel=\"nofollow\"><u>\\1<\\/u><\\/a>/g;\n\n  return message.replace(regex, '$1');\n};\n\nconst decodeXML = message => {\n  return message\n    .replace(/&(quot|#34);/g, '\"')\n    .replace(/&(amp|#38);/g, '&')\n    .replace(/&(apos|#39);/g, \"'\")\n    .replace(/&(lt|#60);/g, '<')\n    .replace(/&(gt|#62);/g, '>');\n};\n\nconst getInitials = name => {\n  let initials;\n\n  if (name) {\n    initials = name\n      .slice(0, 2)\n      .toLowerCase()\n      .trim();\n  }\n\n  return initials;\n};\n\nconst buildChat = result => {\n  const { popcorn } = result;\n  let data = [];\n\n  if (hasProperty(popcorn, 'chattimeline')) {\n    const { chattimeline } = popcorn;\n    data = chattimeline.map(chat => {\n      const attr = getAttr(chat);\n      const clear = attr.out ? parseFloat(attr.out) : -1;\n      const message = decodeXML(clearHyperlink(attr.message));\n      const initials = getInitials(attr.name);\n\n      return {\n        clear,\n        hyperlink: message !== attr.message,\n        initials,\n        name: attr.name,\n        message,\n        timestamp: parseFloat(attr.in),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildScreenshare = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(screenshare => {\n      const attr = getAttr(screenshare);\n\n      return {\n        timestamp: parseFloat(attr.start_timestamp),\n        clear: parseFloat(attr.stop_timestamp),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst getOptions = filename => {\n  let options = {};\n\n  switch (filename) {\n    case config.data.shapes:\n      options = {\n        explicitChildren: true,\n        preserveChildrenOrder: true,\n        charsAsChildren: true,\n      };\n      break;\n    default:\n  }\n\n  return options;\n};\n\nconst build = (filename, value) => {\n  return new Promise((resolve, reject) => {\n    let data;\n    const fileType = getFileType(filename);\n\n    if (fileType === 'json') {\n      switch (filename) {\n        case config.data.alternates:\n          data = buildAlternates(value);\n          break;\n        case config.data.captions:\n          data = buildCaptions(value);\n          break;\n        case config.data.polls:\n          data = buildPolls(value);\n          break;\n        default:\n          logger.debug('unhandled', 'json', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else if (fileType === 'html') {\n      switch (filename) {\n        case config.data.notes:\n          data = buildNotes(value);\n          break;\n        default:\n          logger.debug('unhandled', 'html', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else {\n      if (!value) {\n        logger.warn('missing', filename);\n\n        return resolve(null);\n      }\n\n      // Parse XML data\n      const options = getOptions(filename);\n      parseStringPromise(value, options).then(result => {\n        switch (filename) {\n          case config.data.chat:\n            data = buildChat(result);\n            break;\n          case config.data.cursor:\n            data = buildCursor(result);\n            break;\n          case config.data.metadata:\n            data = buildMetadata(result);\n            break;\n          case config.data.panzooms:\n            data = buildPanzooms(result);\n            break;\n          case config.data.screenshare:\n            data = buildScreenshare(result);\n            break;\n          case config.data.shapes:\n            data = buildShapes(result);\n            break;\n          default:\n            logger.debug('unhandled', 'xml', filename);\n            reject(filename);\n        }\n        resolve(data);\n      }).catch(error => reject(error));\n    }\n  });\n};\n\nconst addAlternatesToThumbnails = (thumbnails, alternates) => {\n  const prefix = 'thumbnails/thumb-';\n  const url = 'slide-';\n\n  return thumbnails.map(thumbnail => {\n    const { src } = thumbnail;\n    thumbnail.alt = '';\n\n    const found = alternates.find(alt => src.replace(prefix, url) === alt.src);\n    if (found) thumbnail.alt = found.text;\n\n    return thumbnail;\n  });\n};\n\nconst addPollsToChat = (chat, polls) => {\n  return [...chat, ...polls].sort((a, b) => a.timestamp - b.timestamp);\n};\n\nexport {\n  addAlternatesToThumbnails,\n  addPollsToChat,\n  build,\n  buildStyle,\n  decodeXML,\n  getAttr,\n  getId,\n  getNumbers,\n};\n","import config from 'config';\nimport qs from 'qs';\nimport stringHash from 'string-hash';\nimport logger from './logger';\nimport { addPollsToChat } from './builder';\n\nconst LAYOUT = {\n  CONTENT: 'content',\n  DISABLED: 'disabled',\n  MEDIA: 'media',\n};\n\nconst ID = {\n  ABOUT: 'about',\n  ALTERNATES: 'alternates',\n  CAPTIONS: 'captions',\n  CHAT: 'chat',\n  CURSOR: 'cursor',\n  ERROR: 'error',\n  LOADER: 'loader',\n  METADATA: 'metadata',\n  NOTES: 'notes',\n  PANZOOMS: 'panzooms',\n  PLAYER: 'player',\n  POLLS: 'polls',\n  PRESENTATION: 'presentation',\n  SCREENSHARE: 'screenshare',\n  SEARCH: 'search',\n  SHAPES: 'shapes',\n  THUMBNAILS: 'thumbnails',\n  VIDEO: 'video',\n};\n\nconst NUMBERS = [\n  'zero', 'one', 'two', 'three',\n  'four', 'five', 'six', 'seven',\n  'eight', 'nine', 'ten', 'eleven',\n  'twelve', 'thirteen', 'fourteen', 'fifteen',\n];\n\nconst getRouter = () => {\n  if (typeof process.env.REACT_APP_NO_ROUTER !== 'undefined') {\n    if (process.env.REACT_APP_NO_ROUTER) return false;\n  }\n\n  return true;\n};\n\nconst ROUTER = getRouter();\n\nconst MEDIA_ROOT_URL = process.env.REACT_APP_MEDIA_ROOT_URL;\n\nconst buildFileURL = (recordId, file) => {\n  if (!ROUTER) return file;\n\n  const mediaPath = getMediaPath();\n\n  const rootUrl = MEDIA_ROOT_URL ? MEDIA_ROOT_URL : '/presentation';\n  let fileUrl = `${recordId}/${file}`;\n\n  if(mediaPath) {\n    fileUrl = `${mediaPath}/${fileUrl}`;\n  }\n\n  return `${rootUrl}/${fileUrl}`;\n};\n\nconst getAvatarStyle = name => {\n  const index = stringHash(name) % NUMBERS.length;\n\n  return `avatar-${NUMBERS[index]}`;\n};\n\nconst getActiveContent = (screenshare, time) => {\n  const {\n    SCREENSHARE,\n    PRESENTATION,\n  } = ID;\n\n  const content = isEnabled(screenshare, time) ? SCREENSHARE : PRESENTATION;\n\n  return content;\n};\n\nconst FULL_BLOCK = '█';\nconst LEFT_HALF_BLOCK = '▌';\nconst RIGHT_HALF_BLOCK = '▐';\nconst EMPTY_BLOCK = '-';\n\nconst getBar = (percentage) => {\n  const p = parseInt(percentage);\n\n  let bar;\n  if (p === 0) {\n    bar = EMPTY_BLOCK;\n  } else {\n    const full = p / 10;\n    const half = (p % 10) > 2;\n\n    bar = FULL_BLOCK.repeat(full);\n\n    if (half) {\n      const ltr = document.dir === 'ltr';\n      bar = bar.concat(ltr ? LEFT_HALF_BLOCK : RIGHT_HALF_BLOCK);\n    }\n  }\n\n  return bar;\n};\n\nconst getContentFromData = data => {\n  const captions = getData(data, ID.CAPTIONS);\n  const chat = addPollsToChat(getData(data, ID.CHAT), getData(data, ID.POOLS));\n  const notes = getData(data, ID.NOTES);\n  const screenshare = getData(data, ID.SCREENSHARE);\n  const shapes = getData(data, ID.SHAPES);\n  const slides = shapes.slides;\n\n  const content = {\n    captions: !isEmpty(captions),\n    chat: !isEmpty(chat),\n    notes: !isEmpty(notes),\n    presentation: hasPresentation(slides),\n    screenshare: !isEmpty(screenshare),\n  };\n\n  return content;\n};\n\nconst getControlFromLayout = layout => {\n  const { DISABLED } = LAYOUT;\n  let control = true;\n  switch (layout) {\n    case DISABLED:\n      control = false;\n      break;\n    default:\n  }\n\n  return control;\n};\n\nconst getCurrentDataIndex = (data, time) => {\n  if (isEmpty(data)) return -1;\n\n  let start = 0;\n  let stop = data.length - 1;\n  let middle = Math.floor((start + stop) / 2);\n\n  while (!isCurrent(data, middle, time) && start < stop) {\n    const item = data[middle];\n    if (!hasProperty(item, 'timestamp')) return -1;\n\n    if (!isVisible(time, item.timestamp)) {\n      stop = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n\n    middle = Math.floor((start + stop) / 2);\n  }\n\n  const current = isCurrent(data, middle, time);\n\n  return (!current) ? -1 : middle;\n};\n\nconst getCurrentDataInterval = (data, time) => {\n  const currentDataInterval = [];\n\n  if (isEmpty(data)) return currentDataInterval;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      if (!isVisible(time, timestamp)) break;\n\n      currentDataInterval.push(!wasCleared(time, clear));\n    }\n  }\n\n  return currentDataInterval;\n};\n\nconst getData = (data, id) => {\n  const file = config.files.data[id];\n\n  switch (id) {\n    case ID.ALTERNATES:\n    case ID.CAPTIONS:\n    case ID.CHAT:\n    case ID.CURSOR:\n    case ID.NOTES:\n    case ID.PANZOOMS:\n    case ID.POLLS:\n    case ID.SCREENSHARE:\n    case ID.TALKERS:\n      if (!file || data[getFileName(file)] === null) {\n        return [];\n      }\n\n      return data[getFileName(file)];\n    case ID.METADATA:\n      if (!file || data[getFileName(file)] === null) {\n        logger.error('missing', id);\n        return {};\n      }\n\n      return data[getFileName(file)];\n    case ID.SHAPES:\n      if (!file || data[getFileName(file)] === null) {\n        return {\n          canvases: [],\n          slides: [],\n          thumbnails: [],\n        };\n      }\n\n      return data[getFileName(file)];\n    default:\n      logger.debug('unhandled', id);\n      return [];\n  }\n};\n\nconst getDraws = (index, slides, canvases) => {\n  if (!hasIndex(index, slides)) return [];\n\n  const slide = slides[index];\n\n  if (isEmpty(canvases)) return [];\n\n  const canvas = canvases.find(canvas => slide.id === canvas.id);\n\n  if (!canvas) return [];\n\n  const { draws } = canvas;\n\n  return draws;\n};\n\nconst getFileName = file => file.split('.').shift();\n\nconst getFileType = file => file.split('.').pop();\n\nconst getLayout = location => {\n  if (location) {\n    const { search } = location;\n    if (search) {\n      const { l } = qs.parse(search, { ignoreQueryPrefix: true });\n\n      if (l) return l;\n    }\n  }\n\n  return null;\n};\n\nconst getPercentage = (value, total) => {\n  if (total === 0) return 0;\n\n  return ((value / total) * 100).toFixed(1);\n};\n\nconst POLL_TYPES = {\n  YN: 'YN',\n  YNA: 'YNA',\n  TF: 'TF',\n};\n\nconst POLL_KEYS = [\n  'Yes',\n  'No',\n  'Abstention',\n  'True',\n  'False',\n];\n\nconst getPollLabel = (key, type) => {\n  if (!POLL_TYPES[type]) return null;\n\n  if (!POLL_KEYS.includes(key)) return null;\n\n  return key.toLowerCase();\n};\n\nconst getRecordId = match => {\n  if (!ROUTER) return 'local';\n\n  if (match) {\n    const { params } = match;\n    if (params && params.recordId) {\n      const { recordId } = params;\n      const regex = /^[a-z0-9]{40}-[0-9]{13}$/;\n\n      if (recordId.match(regex)) return recordId;\n    }\n  }\n\n  logger.error('missing', 'recordId');\n\n  return null;\n};\n\nconst getSectionFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let section = true;\n  switch (layout) {\n    case CONTENT:\n      section = false;\n      break;\n    case MEDIA:\n      section = false;\n      break;\n    default:\n  }\n\n  return section;\n};\n\nconst getSwapFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let swap = false;\n  switch (layout) {\n    case CONTENT:\n      swap = false;\n      break;\n    case MEDIA:\n      swap = true;\n      break;\n    default:\n  }\n\n  return swap;\n};\n\nconst getScrollLeft = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientWidth,\n    offsetLeft,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const ltr = document.dir === 'ltr';\n  const spacing = ltr ? firstNode.offsetLeft : 0;\n  const parentWidth = parentNode.clientWidth;\n\n  let horizontalOffset = 0;\n  switch (align) {\n    case 'left':\n      horizontalOffset = offsetLeft - spacing;\n      break;\n    case 'center':\n      horizontalOffset = parseInt(offsetLeft + (clientWidth - spacing - parentWidth) / 2, 10);\n      break;\n    case 'right':\n      horizontalOffset = offsetLeft + clientWidth - parentWidth;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return horizontalOffset;\n};\n\nconst getScrollTop = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientHeight,\n    offsetTop,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetTop;\n  const parentHeight = parentNode.clientHeight;\n\n  let verticalOffset = 0;\n  switch (align) {\n    case 'top':\n      verticalOffset = offsetTop - spacing;\n      break;\n    case 'middle':\n      verticalOffset = parseInt(offsetTop + (clientHeight - spacing - parentHeight) / 2, 10);\n      break;\n    case 'bottom':\n      verticalOffset = offsetTop + clientHeight - parentHeight;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return verticalOffset;\n};\n\nconst getStyle = () => {\n  const params = new URLSearchParams(window.location.search);\n  const { styles } = config;\n  const { url } = styles;\n\n  let style = styles.default ? `${url}/${styles.default}.css` : null;\n  if (params && params.has('s')) {\n    const { valid } = styles;\n    const value = params.get('s');\n    if (valid.includes(value)) {\n      style = `${url}/${value}.css`;\n    }\n  }\n\n  return style;\n};\n\nconst getMediaPath = () => {\n  const params = new URLSearchParams(window.location.search);\n  let mediaPath = \"\";\n\n  if (params && params.has('p')) {\n    mediaPath = params.get('p');\n  }\n\n  return mediaPath;\n};\n\nconst getMessageType = (item) => {\n  if (typeof item.message === 'string') return ID.CHAT;\n  if (typeof item.question === 'string') return ID.POLLS;\n\n  return 'undefined';\n};\n\nconst getTime = location => {\n  if (location) {\n    const { search } = location;\n    if (search) {\n      const { t } = qs.parse(search, { ignoreQueryPrefix: true });\n\n      if (t) return parseTimeToSeconds(t);\n    }\n  }\n\n  return null;\n};\n\nconst getTimestampAsMilliseconds = timestamp => timestamp * 1000;\n\nconst hasIndex = (index, data) => {\n  if (index < 0) return false;\n\n  if (isEmpty(data)) return false;\n\n  if (index >= data.length) {\n    logger.error('out of bounds', index, data);\n\n    return false;\n  }\n\n  return true;\n};\n\nconst hasPresentation = slides => {\n  if (isEmpty(slides)) return false;\n\n  for (let i = 0; i < slides.length; i++) {\n    const { src } = slides[i];\n\n    if (src.includes('slide')) return true;\n  }\n\n  return false;\n};\n\nconst hasProperty = (object, property) => {\n  if (object && object.hasOwnProperty(property)) {\n    if (typeof object[property] !== 'undefined') return true;\n  }\n\n  logger.warn('missing', property, object);\n\n  return false;\n};\n\nconst isActive = (time, timestamp, clear = -1) => {\n  const cleared = wasCleared(time, clear);\n  const visible = isVisible(time, timestamp);\n\n  return visible && !cleared;\n};\n\nconst isContentVisible = (layout, swap) => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let visible;\n  switch (layout) {\n    case  CONTENT:\n      visible = !swap;\n      break;\n    case MEDIA:\n      visible = swap;\n      break;\n    default:\n      visible = false;\n  }\n\n  return visible;\n};\n\nconst isCurrent = (data, index, time) => {\n  if (!hasIndex(index, data)) return false;\n\n  const item = data[index];\n  if (!hasProperty(item, 'timestamp')) return false;\n\n  let current = false;\n  if (isVisible(time, item.timestamp)) {\n    if (index + 1 < data.length) {\n      const next = data[index + 1];\n      if (hasProperty(next, 'timestamp')) {\n        current = !isVisible(time, next.timestamp);\n      }\n    } else {\n      current = true;\n    }\n  }\n\n  return current;\n};\n\nconst isEmpty = data => {\n  const isArray = isValid('array', data);\n  const isString = isValid('string', data);\n  if (!isArray && !isString) return true;\n\n  const empty = data.length === 0;\n\n  return empty;\n};\n\nconst isEnabled = (data, time) => {\n  if (isEmpty(data)) return false;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      // Check if it was activated and did not ended\n      if (isActive(time, timestamp, clear)) return true;\n\n      // Check if we are searching over the present time value\n      if (!isVisible(time, timestamp)) return false;\n    } else {\n      // Invalid item\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst isEqual = (first, second, type) => {\n  let equal = false;\n\n  switch (type) {\n    case 'array':\n      if (first.length === second.length) {\n        equal = first.every((value, index) => value === second[index])\n      }\n\n      return equal;\n    default:\n      return equal;\n  }\n};\n\nconst isValid = (type, data) => {\n  let valid = false;\n\n  switch (type) {\n    case 'array':\n      if (Array.isArray(data)) valid = true;\n      break;\n    case 'string':\n      if (typeof data === type) valid = true;\n      break;\n    default:\n      logger.debug('unhandled', type);\n  }\n\n  return valid;\n};\n\nconst isVisible = (time, timestamp) => timestamp <= time;\n\nconst parseTimeToSeconds = time => {\n  const patterns = [\n    /^(\\d+)h(\\d+)m(\\d+)s$/,\n    /^(\\d+)m(\\d+)s$/,\n    /^(\\d+)s$/,\n  ];\n\n  for (let i = 0; i < patterns.length; i++) {\n    if (time.match(patterns[i])) {\n      const hours = time.match(/(\\d+)h/);\n      const minutes = time.match(/(\\d+)m/);\n      const seconds = time.match(/(\\d+)s/);\n\n      let timeToSeconds = 0;\n\n      if (hours) {\n        const h = parseInt(hours[1]);\n        if (h >= 0) timeToSeconds += h * 3600;\n      }\n\n      if (minutes) {\n        const m = parseInt(minutes[1]);\n        if (m >= 0 && m < 60) {\n          timeToSeconds += m * 60;\n        } else {\n          return null;\n        }\n      }\n\n      if (seconds) {\n        const s = parseInt(seconds[1]);\n        if (s >= 0 && s < 60) {\n          timeToSeconds += s;\n        } else {\n          return null;\n        }\n      }\n\n      return timeToSeconds;\n    }\n  }\n\n  return null;\n};\n\nconst search = (text, thumbnails) => {\n  const result = [];\n\n  const value = text.toLowerCase();\n  thumbnails.forEach((thumbnail, index) => {\n    const { alt } = thumbnail;\n\n    if (alt.toLowerCase().indexOf(value) !== -1) {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst seek = (player, seconds) => {\n  if (player.video) {\n    const min = 0;\n    const max = player.video.duration();\n    const time = player.video.currentTime() + seconds;\n\n    if (time < min) {\n      player.video.currentTime(min);\n    } else if (time > max) {\n      player.video.currentTime(max);\n    } else {\n      player.video.currentTime(time);\n    }\n  }\n};\n\nconst skip = (player, data, change) => {\n  const min = 0;\n  const max = data.length - 1;\n  const time = player.video.currentTime();\n\n  const current = getCurrentDataIndex(data, time);\n  if (current === -1) return null;\n\n  const index = current + change;\n\n  let timestamp;\n  if (index < min) {\n    timestamp = data[min].timestamp;\n  } else if (index > max) {\n    timestamp = data[max].timestamp;\n  } else {\n    timestamp = data[index].timestamp;\n  }\n\n  if (typeof timestamp !== 'undefined') {\n    player.video.currentTime(timestamp);\n  }\n};\n\nconst wasCleared = (time, clear) => clear !== -1 && clear <= time;\n\nexport {\n  LAYOUT,\n  ID,\n  ROUTER,\n  buildFileURL,\n  getAvatarStyle,\n  getActiveContent,\n  getBar,\n  getContentFromData,\n  getControlFromLayout,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  getFileName,\n  getFileType,\n  getLayout,\n  getMediaPath,\n  getMessageType,\n  getPercentage,\n  getPollLabel,\n  getRecordId,\n  getScrollLeft,\n  getScrollTop,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  getStyle,\n  getTime,\n  getTimestampAsMilliseconds,\n  hasPresentation,\n  hasProperty,\n  isActive,\n  isContentVisible,\n  isEmpty,\n  isEnabled,\n  isEqual,\n  isValid,\n  parseTimeToSeconds,\n  search,\n  seek,\n  skip,\n};\n","import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'error.wrapper.aria',\n    description: 'Aria label for the error wrapper',\n  },\n});\n\nexport default function Error(props) {\n  const intl = useIntl();\n  const {\n    code,\n  } = props;\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"error-wrapper\"\n      id={ID.ERROR}\n    >\n      <div className=\"error-code\">\n        {code}\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst DEFAULT = 'default';\nconst GHOST = 'ghost';\nconst SOLID = 'solid';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  aria: PropTypes.string,\n  circle: PropTypes.bool,\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  circle: false,\n  disabled: false,\n  type: DEFAULT,\n};\n\nclass Button extends PureComponent {\n  render() {\n    const {\n      active,\n      aria,\n      circle,\n      disabled,\n      handleOnClick,\n      icon,\n      type,\n    } = this.props;\n\n    if (!handleOnClick) return null;\n\n    const ghost = type === GHOST;\n    const solid = type === SOLID;\n\n    const style = {\n      default: !ghost && !solid && !disabled,\n      ghost: ghost && !active && !disabled,\n      solid: (solid || active) && !disabled,\n      circle,\n      disabled,\n    };\n\n    return (\n      <div className=\"button-wrapper\">\n        <button\n          aria-label={aria}\n          className={cx('button', style)}\n          disabled={disabled}\n          onClick={() => handleOnClick()}\n        >\n          <span className={`icon-${icon}`} />\n        </button>\n      </div>\n    );\n  };\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  close: {\n    id: 'button.close.aria',\n    description: 'Aria label for the close button',\n  },\n});\n\nexport default class More extends PureComponent {\n  render() {\n    const {\n      children,\n      intl,\n      onClose,\n    } = this.props;\n\n    return (\n      <div className=\"modal-wrapper\">\n        <div className=\"modal\">\n          <div className=\"modal-control\">\n            <Button\n              aria={intl.formatMessage(intlMessages.close)}\n              circle\n              handleOnClick={onClose}\n              icon=\"close\"\n            />\n          </div>\n          <div className=\"modal-content\">\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  FormattedDate,\n  FormattedTime,\n} from 'react-intl';\nimport cx from 'classnames';\nimport Modal from 'components/utils/modal';\nimport './index.scss';\n\nconst BUILD = process.env.REACT_APP_BBB_PLAYBACK_BUILD;\n\nexport default class About extends PureComponent {\n  renderItem(key, value) {\n    let element;\n    if (typeof value === 'boolean') {\n      const icon = value ? 'icon-check' : 'icon-close';\n      element = <div className={cx(icon, { green: value, red: !value})} />;\n    } else {\n      element = value;\n    }\n\n    return (\n      <div className=\"item\">\n        <div className={`icon-${key}`} />\n        <div className=\"value\">\n          {element}\n        </div>\n      </div>\n    );\n  }\n\n  renderBody(metadata) {\n    const { content } = this.props;\n\n    const {\n      captions,\n      chat,\n      notes,\n      presentation,\n      screenshare,\n    } = content;\n\n    return (\n      <div className=\"about-body\">\n        {this.renderItem('users', metadata.participants)}\n        {this.renderItem('presentation', presentation)}\n        {this.renderItem('chat', chat)}\n        {this.renderItem('notes', notes)}\n        {this.renderItem('screenshare', screenshare)}\n        {this.renderItem('captions', captions)}\n      </div>\n    );\n  }\n\n  renderHeader(metadata) {\n    const {\n      end,\n      name,\n      start,\n    } = metadata;\n\n    const subtitle = [];\n    subtitle.push(\n      <FormattedDate\n        value={new Date(start)}\n        day=\"numeric\"\n        month=\"long\"\n        year=\"numeric\"\n      />\n    );\n\n    subtitle.push(<FormattedTime value={new Date(start)} />);\n    subtitle.push(<FormattedTime value={new Date(end)} />);\n\n    return (\n      <div className=\"about-header\">\n        <div className=\"title\">\n          {name}\n        </div>\n        <div className=\"subtitle\">\n          {subtitle.map(s => <div className=\"item\">{s}</div>)}\n        </div>\n      </div>\n    );\n  }\n\n  renderFooter() {\n    return (\n      <div className=\"about-footer\">\n        {BUILD ? this.renderItem('settings', BUILD) : null}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      metadata,\n      toggleModal,\n    } = this.props;\n\n    return (\n      <Modal\n        intl={intl}\n        onClose={toggleModal}\n      >\n        {this.renderHeader(metadata)}\n        {this.renderBody(metadata)}\n        {this.renderFooter()}\n      </Modal>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { getAvatarStyle } from 'utils/data';\nimport './index.scss';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  initials: PropTypes.string,\n  name: PropTypes.string,\n};\n\nconst renderContent = (props) => {\n  const {\n    icon,\n    initials,\n  } = props;\n\n  if (icon) return <span className={`icon-${icon}`} />;\n\n  return (\n    <span className=\"initials\">\n      {initials}\n    </span>\n  );\n};\n\nconst Avatar = (props) => {\n  const { name } = props;\n\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className={cx('avatar', getAvatarStyle(name))}>\n        {renderContent(props)}\n      </div>\n    </div>\n  );\n};\n\nAvatar.propTypes = propTypes;\n\nexport default Avatar;\n","import React, { PureComponent } from 'react';\nimport { FormattedTime } from 'react-intl';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport { getTimestampAsMilliseconds } from 'utils/data';\nimport './index.scss';\n\nexport default class Message extends PureComponent {\n  renderAvatar(active, name) {\n    const {\n      icon,\n      initials,\n      onClick,\n    } = this.props;\n\n    return (\n      <div\n        className={cx('interactive', { inactive: !active })}\n        onClick={onClick}\n        onKeyPress={(e) => e.key === 'Enter' ? onClick() : null}\n        tabIndex=\"0\"\n      >\n        <Avatar\n          active={active}\n          icon={icon}\n          initials={initials}\n          name={name}\n        />\n      </div>\n    );\n  }\n\n  renderInfo(active, name) {\n    const {\n      timestamp,\n    } = this.props;\n\n    const milliseconds = getTimestampAsMilliseconds(timestamp);\n\n    return (\n      <div className=\"info\">\n        <div className={cx('name', { inactive: !active })}>\n          {name}\n        </div>\n        <div className={cx('time', { inactive: !active })}>\n          <FormattedTime\n            hourCycle=\"h23\"\n            hour=\"numeric\"\n            minute=\"numeric\"\n            second=\"numeric\"\n            timeZone=\"UTC\"\n            value={milliseconds}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      active,\n      children,\n      name,\n    } = this.props;\n\n    return (\n      <div className=\"message\">\n        {this.renderAvatar(active, name)}\n        <div className=\"data\">\n          {this.renderInfo(active, name)}\n          <div className={cx('text', { inactive: !active })}>\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\nimport Message from './message';\nimport './index.scss';\n\nexport default class ChatMessage extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { active } = this.props;\n\n    if (active !== nextProps.active) return true;\n\n    return false;\n  }\n\n  renderHyperlink(active, text) {\n    const options = {\n      className: cx('linkified', { inactive: !active }),\n    };\n\n    return (\n      <Linkify options={options}>\n        {text}\n      </Linkify>\n    );\n  }\n\n  renderContent(active) {\n    const {\n      hyperlink,\n      text,\n    } = this.props;\n\n    return hyperlink ? this.renderHyperlink(active, text) : text;\n  }\n\n  render() {\n    const {\n      active,\n      initials,\n      onClick,\n      name,\n      timestamp,\n    } = this.props;\n\n    return (\n      <Message\n        active={active}\n        initials={initials}\n        onClick={onClick}\n        name={name}\n        timestamp={timestamp}\n      >\n        {this.renderContent(active)}\n      </Message>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { defineMessages } from 'react-intl';\nimport Message from './message';\nimport {\n  getBar,\n  getPercentage,\n  getPollLabel,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  name: {\n    id: 'player.chat.message.poll.name',\n    description: 'Label for the poll message name',\n  },\n  question: {\n    id: 'player.chat.message.poll.question',\n    description: 'Label for the poll message question',\n  },\n  options: {\n    id: 'player.chat.message.poll.options',\n    description: 'Label for the poll message answer options',\n  },\n  yes: {\n    id: 'player.chat.message.poll.option.yes',\n    description: 'Label for poll option yes',\n  },\n  no: {\n    id: 'player.chat.message.poll.option.no',\n    description: 'Label for poll option no',\n  },\n  abstention: {\n    id: 'player.chat.message.poll.option.abstention',\n    description: 'Label for poll option abstention',\n  },\n  true: {\n    id: 'player.chat.message.poll.option.true',\n    description: 'Label for poll option true',\n  },\n  false: {\n    id: 'player.chat.message.poll.option.false',\n    description: 'Label for poll option false',\n  },\n});\n\nexport default class PollMessage extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { active } = this.props;\n\n    if (active !== nextProps.active) return true;\n\n    return false;\n  }\n\n  renderQuestion(intl) {\n    const { question } = this.props;\n\n    if (question.length === 0) return null;\n\n    return (\n      <div className=\"poll-question\">\n        <div className=\"poll-label\">\n          {intl.formatMessage(intlMessages.question)}\n        </div>\n        {question}\n      </div>\n    );\n  }\n\n  renderResult() {\n    const {\n      answers,\n      responders,\n    } = this.props;\n\n    if (answers.length === 0) return null;\n\n    return (\n      <div className=\"poll-result\">\n        {answers.map((item) => {\n          const {\n            id,\n            numVotes,\n          } = item;\n\n          const percentage = getPercentage(numVotes, responders);\n\n          return(\n            <div className=\"poll-label\">\n              {id + 1}: <span className=\"poll-bar\">{getBar(percentage)}</span> {percentage}%\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderOptions(intl) {\n    const {\n      answers,\n      type,\n    } = this.props;\n\n    if (answers.length === 0) return null;\n\n    return (\n      <div className=\"poll-options\">\n        <div className=\"poll-label\">\n          {intl.formatMessage(intlMessages.options)}\n        </div>\n        {answers.map((item) => {\n          const {\n            id,\n            key,\n          } = item;\n\n          const label = getPollLabel(key, type);\n\n          return(\n            <div>\n              {id + 1}: {label ? intl.formatMessage(intlMessages[label]) : key}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  renderContent(intl) {\n    return (\n      <div className=\"poll-wrapper\">\n        {this.renderQuestion(intl)}\n        {this.renderResult()}\n        {this.renderOptions(intl)}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      active,\n      intl,\n      onClick,\n      timestamp,\n    } = this.props;\n\n    return (\n      <Message\n        active={active}\n        icon=\"polls\"\n        onClick={onClick}\n        name={intl.formatMessage(intlMessages.name)}\n        timestamp={timestamp}\n      >\n        {this.renderContent(intl)}\n      </Message>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { chat as config } from 'config';\nimport ChatMessage from './messages/chat';\nimport PollMessage from './messages/poll';\nimport {\n  ID,\n  getMessageType,\n  getScrollTop,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.chat.wrapper.aria',\n    description: 'Aria label for the chat wrapper',\n  },\n});\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.interaction = false;\n  }\n\n  componentDidMount() {\n    this.handleAutoScroll();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { currentDataIndex } = this.props;\n\n    if (currentDataIndex !== nextProps.currentDataIndex) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.handleAutoScroll();\n  }\n\n  handleAutoScroll() {\n    if (!config.scroll || this.interaction) return;\n\n    // Auto-scroll can start after getting the first and current nodes\n    if (this.firstNode && this.currentNode) {\n      const { parentNode } = this.currentNode;\n\n      parentNode.scrollTop = getScrollTop(this.firstNode, this.currentNode, config.align);\n    }\n  }\n\n  handleOnClick(timestamp) {\n    const { player } = this.props;\n\n    if (!player) return null;\n\n    player.currentTime(timestamp);\n  }\n\n  // Set node as ref so we can manage auto-scroll\n  setRef(node, index) {\n    const { currentDataIndex } = this.props;\n\n    if (index === 0) {\n      this.firstNode = node;\n    }\n\n    if (index === currentDataIndex) {\n      this.currentNode = node;\n    }\n  }\n\n  renderChatMessage(item, index, active) {\n    const {\n      hyperlink,\n      initials,\n      message,\n      name,\n      timestamp,\n    } = item;\n\n    return (\n      <span ref={node => this.setRef(node, index)}>\n        <ChatMessage\n          active={active}\n          hyperlink={hyperlink}\n          initials={initials}\n          name={name}\n          onClick={() => this.handleOnClick(timestamp)}\n          text={message}\n          timestamp={timestamp}\n        />\n      </span>\n    );\n  }\n\n  renderPollMessage(item, index, active, intl) {\n    const {\n      answers,\n      question,\n      responders,\n      timestamp,\n      type,\n    } = item;\n\n    return (\n      <span ref={node => this.setRef(node, index)}>\n        <PollMessage\n          active={active}\n          answers={answers}\n          intl={intl}\n          onClick={() => this.handleOnClick(timestamp)}\n          question={question}\n          responders={responders}\n          timestamp={timestamp}\n          type={type}\n        />\n      </span>\n    );\n  }\n\n  renderMessages(intl) {\n    const {\n      chat,\n      currentDataIndex,\n    } = this.props;\n\n    return chat.map((item, index) => {\n      const active = index <= currentDataIndex;\n      const type = getMessageType(item);\n      switch (type) {\n        case ID.CHAT:\n          return this.renderChatMessage(item, index, active);\n        case ID.POLLS:\n          return this.renderPollMessage(item, index, active, intl);\n        default:\n          return <span ref={node => this.setRef(node, index)} />;\n      }\n    });\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        aria-live=\"polite\"\n        className=\"chat-wrapper\"\n        id={ID.CHAT}\n        tabIndex=\"0\"\n      >\n        <div className=\"list\">\n          <div\n            className=\"message-wrapper\"\n            onMouseEnter={() => this.interaction = true}\n            onMouseLeave={() => this.interaction = false}\n          >\n            {this.renderMessages(intl)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.notes.wrapper.aria',\n    description: 'Aria label for the notes wrapper',\n  },\n});\n\nexport default class Notes extends PureComponent {\n  render() {\n    const {\n      intl,\n      notes,\n    } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"notes-wrapper\"\n        id={ID.NOTES}\n        tabIndex=\"0\"\n      >\n        <div className=\"notes\">\n          <div dangerouslySetInnerHTML={{ __html: notes }} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport './index.scss';\n\nexport default class Cursor extends PureComponent {\n  render() {\n    const {\n      x,\n      y,\n    } = this.props;\n\n    if (x === -1 || y === -1) return null;\n\n    return (\n      <circle\n        className=\"cursor\"\n        style={{ cx: x, cy: y }}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst SCREENSHARE = 'deskshare';\n\nexport default class Slide extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  getProxy(id, height, width) {\n    const { thumbnails } = this.props;\n\n    const thumbnail = thumbnails.find(thumbnails => id === thumbnails.id);\n    if (!thumbnail) return null;\n\n    const {\n      alt,\n      src,\n    } = thumbnail;\n\n    if (src === SCREENSHARE) return null;\n\n    const logo = src.includes('logo');\n\n    return (\n      <foreignObject\n        height={height}\n        x={0}\n        width={width}\n        y={0}\n      >\n        <img\n          alt={alt}\n          className={cx('proxy', { logo })}\n          src={buildFileURL(this.recordId, src)}\n        />\n      </foreignObject>\n    );\n  }\n\n  render() {\n    const {\n      id,\n      slides,\n    } = this.props;\n\n    const current = slides.find(slide => id === slide.id);\n    if (!current) return null;\n\n    const {\n      height,\n      src,\n      width,\n    } = current;\n\n    return (\n      <g>\n        {this.getProxy(id, height, width)}\n        <image\n          height={height}\n          href={buildFileURL(this.recordId, src)}\n          x={0}\n          width={width}\n          y={0}\n        />\n      </g>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nexport default class Canvas extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  renderPolyline(style, data) {\n    return <polyline\n      style={style}\n      points={data.points}\n    />;\n  }\n\n  renderLine(style, data) {\n    return <line\n      style={style}\n      x1={data.x1}\n      y1={data.y1}\n      x2={data.x2}\n      y2={data.y2}\n    />;\n  }\n\n  renderPolygon(style, data) {\n    return <polygon\n      style={style}\n      points={data.points}\n    />;\n  }\n\n  renderPath(style, data) {\n    return <path\n      style={style}\n      d={data.d}\n    />;\n  }\n\n  renderCircle(style, data) {\n    return <circle\n      style={style}\n      cx={data.cx}\n      cy={data.cy}\n      r={data.r}\n    />;\n  }\n\n  renderText(style, data) {\n    return (\n      <foreignObject\n        style={style}\n        height={data.height}\n        width={data.width}\n        x={data.x}\n        y={data.y}\n      >\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">\n          {data.text.split('\\r').map(line => <span>{line}<br /></span>)}\n        </div>\n      </foreignObject>\n    );\n  }\n\n  renderPoll(style, data) {\n    const {\n      image,\n      rect,\n    } = data;\n\n    // TODO: Better adapt for old versions\n    // Versions prior to 2.3 included a rect structure along with an image\n    if (rect) {\n      return (\n        <g style={style}>\n          <rect\n            fill={rect.fill}\n            height={rect.height}\n            stroke={rect.stroke}\n            strokeWidth={rect['stroke-width']}\n            width={rect.width}\n            x={rect.x}\n            y={rect.y}\n          />\n          <image\n            height={image.height}\n            transform={image.transform}\n            width={image.width}\n            x={image.x}\n            href={buildFileURL(this.recordId, image['xlink:href'])}\n            y={image.y}\n          />\n        </g>\n      );\n    } else {\n       return (\n        <g style={style}>\n          <image\n            height={image.height}\n            width={image.width}\n            x={image.x}\n            href={buildFileURL(this.recordId, image['xlink:href'])}\n            y={image.y}\n          />\n        </g>\n      );\n    }\n  }\n\n  renderCanvas(drawsInterval) {\n    const { draws } = this.props;\n    const canvas = [];\n\n    for (let i = 0; i < drawsInterval.length; i++) {\n      if (!drawsInterval[i]) continue;\n\n      const {\n        id,\n        shape,\n        style,\n      } = draws[i];\n\n      const j = i + 1;\n      let intermediate = false;\n      if (j < drawsInterval.length) {\n        intermediate = draws[j].id === id;\n      }\n\n      if (intermediate) continue;\n\n      const {\n        data,\n        type,\n      } = shape;\n\n      switch (type) {\n        case 'poll':\n          canvas.push(this.renderPoll(style, data));\n          break;\n        case 'polyline':\n          canvas.push(this.renderPolyline(style, data));\n          break;\n        case 'line':\n          canvas.push(this.renderLine(style, data));\n          break;\n        case 'polygon':\n          canvas.push(this.renderPolygon(style, data));\n          break;\n        case 'path':\n          canvas.push(this.renderPath(style, data));\n          break;\n        case 'circle':\n          canvas.push(this.renderCircle(style, data));\n          break;\n        case 'text':\n          canvas.push(this.renderText(style, data));\n          break;\n        default:\n      }\n    }\n\n    return canvas;\n  }\n\n  render() {\n    const { drawsInterval } = this.props;\n\n    if (drawsInterval.length === 0) return null;\n\n    return (\n      <g>\n        {this.renderCanvas(drawsInterval)}\n      </g>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Cursor from './cursor';\nimport Slide from './slide';\nimport Canvas from './canvas';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.presentation.wrapper.aria',\n    description: 'Aria label for the presentation wrapper',\n  },\n});\n\nexport default class Presentation extends PureComponent {\n  getSlideId() {\n    const {\n      currentSlideIndex,\n      slides,\n    } = this.props;\n\n    const inactive = -1;\n    if (currentSlideIndex === -1) return inactive;\n\n    const currentData = slides[currentSlideIndex];\n\n    return currentData.id;\n  }\n\n  getViewBox() {\n    const {\n      currentPanzoomIndex,\n      panzooms,\n    } = this.props;\n\n    const inactive = {\n      height: 0,\n      x: 0,\n      width: 0,\n      y: 0,\n    };\n\n    if (currentPanzoomIndex === -1) return inactive;\n\n    const currentData = panzooms[currentPanzoomIndex];\n\n    return {\n      height: currentData.height,\n      x: currentData.x,\n      width: currentData.width,\n      y: currentData.y,\n    };\n  }\n\n  buildViewBoxAttr(viewBox) {\n    const {\n      height,\n      x,\n      width,\n      y,\n    } = viewBox;\n\n    return `${x} ${y} ${width} ${height}`;\n  }\n\n  getCursor(viewBox) {\n    const {\n      currentCursorIndex,\n      cursor,\n    } = this.props;\n\n    const inactive = {\n      x: -1,\n      y: -1,\n    }\n\n    if (currentCursorIndex === -1) return inactive;\n\n    const currentData = cursor[currentCursorIndex];\n    if (currentData.x === -1 && currentData.y === -1) return inactive;\n\n    return {\n      x: viewBox.x + (currentData.x * viewBox.width),\n      y: viewBox.y + (currentData.y * viewBox.height),\n    };\n  }\n\n  render() {\n    const {\n      active,\n      draws,\n      drawsInterval,\n      intl,\n      metadata,\n      slides,\n      thumbnails,\n    } = this.props;\n\n    const slideId = this.getSlideId();\n    const viewBox = this.getViewBox();\n    const cursor = this.getCursor(viewBox);\n    const canvasId = slideId;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('presentation-wrapper', { inactive: !active })}\n        id={ID.PRESENTATION}\n      >\n        <div className=\"presentation\">\n          <svg\n            viewBox={this.buildViewBoxAttr(viewBox)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <defs>\n              <clipPath id=\"viewBox\">\n                <rect\n                  height={viewBox.height}\n                  x={viewBox.x}\n                  width={viewBox.width}\n                  y={viewBox.y}\n                />\n              </clipPath>\n            </defs>\n            <g clipPath=\"url(#viewBox)\">\n              <Slide\n                id={slideId}\n                metadata={metadata}\n                slides={slides}\n                thumbnails={thumbnails}\n              />\n              <Canvas\n                draws={draws}\n                drawsInterval={drawsInterval}\n                id={canvasId}\n                metadata={metadata}\n              />\n              <Cursor\n                x={cursor.x}\n                y={cursor.y}\n              />\n            </g>\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { thumbnails as config } from 'config';\nimport Button from 'components/utils/button';\nimport {\n  ID,\n  buildFileURL,\n  getScrollLeft,\n  isEmpty,\n  isEqual,\n} from 'utils/data';\nimport './index.scss';\n\nconst SCREENSHARE = 'deskshare';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.thumbnails.wrapper.aria',\n    description: 'Aria label for the thumbnails wrapper',\n  },\n  clear: {\n    id: 'button.clear.aria',\n    description: 'Aria label for the clear button',\n  },\n});\n\nexport default class Thumbnails extends Component {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n    this.interaction = false;\n  }\n\n  componentDidMount() {\n    this.handleAutoScroll();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      currentDataIndex,\n      search,\n    } = this.props;\n\n    if (currentDataIndex !== nextProps.currentDataIndex) {\n      return true;\n    }\n\n    if (!isEqual(search, nextProps.search)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.handleAutoScroll();\n  }\n\n  handleOnClick(timestamp) {\n    const { player } = this.props;\n\n    if (!player) return null;\n\n    player.currentTime(timestamp);\n  }\n\n  handleAutoScroll() {\n    if (!config.scroll || this.interaction) return;\n\n    // Auto-scroll can start after getting the first and current nodes\n    if (this.firstNode && this.currentNode) {\n      const { parentNode } = this.currentNode;\n\n      parentNode.scrollLeft = getScrollLeft(this.firstNode, this.currentNode, config.align);\n    }\n  }\n\n  // Set node as ref so we can manage auto-scroll\n  setRef(node, index) {\n    const { currentDataIndex } = this.props;\n\n    if (index === 0) {\n      this.firstNode = node;\n    }\n\n    if (index === currentDataIndex) {\n      this.currentNode = node;\n    }\n  }\n\n  isFiltered(index) {\n    const {\n      interactive,\n      search,\n    } = this.props;\n\n    if (interactive) {\n      return !isEmpty(search) && !search.includes(index);\n    } else {\n      return !search.includes(index);\n    }\n  }\n\n  renderImage(item) {\n    const {\n      alt,\n      src,\n    } = item;\n\n    const screenshare = src === SCREENSHARE;\n\n    if (screenshare) {\n      return (\n        <div className={cx('thumbnail-image', { screenshare })}>\n          <span className=\"icon-screenshare\" />\n        </div>\n      );\n    }\n\n    const logo = src.includes('logo');\n\n    return (\n      <img\n        alt={alt}\n        className={cx('thumbnail-image', { logo })}\n        src={buildFileURL(this.recordId, src)}\n      />\n    );\n  }\n\n  renderThumbnail(item, index) {\n    const {\n      currentDataIndex,\n      interactive,\n    } = this.props;\n\n    if (!interactive) {\n      return (\n        <div\n          className=\"thumbnail-wrapper\"\n          tabIndex=\"0\"\n        >\n          <div className=\"thumbnail\">\n            {this.renderImage(item)}\n            <div className=\"thumbnail-index\">\n              {index + 1}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    const active = index === currentDataIndex;\n    const onClick = () => this.handleOnClick(item.timestamp);\n\n    const styles = {\n      active,\n      interactive,\n    };\n\n    return (\n      <div\n        className={cx('thumbnail-wrapper', styles)}\n        onClick={onClick}\n        onKeyPress={(e) => e.key === 'Enter' ? onClick() : null}\n        ref={node => this.setRef(node, index)}\n        tabIndex=\"0\"\n      >\n        <div className=\"thumbnail\">\n          {this.renderImage(item)}\n          <div className=\"thumbnail-index\">\n            {index + 1}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderThumbnails() {\n    const { thumbnails } = this.props;\n\n    return thumbnails.reduce((result, item, index) => {\n      if (!this.isFiltered(index)) {\n        result.push(this.renderThumbnail(item, index));\n      }\n\n      return result;\n    }, []);\n  }\n\n  renderClearButton() {\n    const { interactive } = this.props;\n    if (!interactive) return null;\n\n    const { search } = this.props;\n    if (isEmpty(search)) return null;\n\n    const {\n      handleSearch,\n      intl,\n    } = this.props;\n\n    return (\n      <div className=\"clear-button\">\n        <Button\n          aria={intl.formatMessage(intlMessages.clear)}\n          handleOnClick={() => handleSearch ? handleSearch([]) : null}\n          icon=\"close\"\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"thumbnails-wrapper\"\n        id={ID.THUMBNAILS}\n        onMouseEnter={() => this.interaction = true}\n        onMouseLeave={() => this.interaction = false}\n        tabIndex=\"0\"\n      >\n        {this.renderThumbnails()}\n        {this.renderClearButton()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Thumbnails from 'components/thumbnails';\nimport { search as config } from 'config';\nimport Button from 'components/utils/button';\nimport Modal from 'components/utils/modal';\nimport {\n  isEmpty,\n  isEqual,\n  search,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'player.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nexport default class Search extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      disabled: true,\n      search: [],\n    };\n  }\n\n  handleOnChange(event) {\n    if (!event || !event.target) return null;\n\n    const { value } = event.target;\n    if (value) {\n      const disabled = value.length < config.length.min;\n      if (!disabled) {\n        const { thumbnails } = this.props;\n        const result = search(value, thumbnails);\n\n        if (!isEqual(this.state.search, result, 'array')) {\n          this.setState({ search: result });\n        }\n      } else {\n        if (!isEmpty(this.state.search)) {\n          this.setState({ search: [] });\n        }\n      }\n\n      if (this.state.disabled !== disabled) {\n        this.setState({ disabled });\n      }\n    }\n  }\n\n  handleOnClick(event) {\n    const {\n      handleSearch,\n      toggleModal,\n    } = this.props;\n\n    const { search } = this.state;\n\n    handleSearch(search);\n    toggleModal();\n  }\n\n  renderBody() {\n    const {\n      intl,\n      metadata,\n      thumbnails,\n    } = this.props;\n\n    const { search } = this.state;\n\n    return (\n      <div className=\"search-body\">\n        <input\n          maxLength={config.length.max}\n          minLength={config.length.min}\n          onChange={(event) => this.handleOnChange(event)}\n          type=\"text\"\n        />\n        <div className={cx('result', { active: true })}>\n          <Thumbnails\n            currentDataIndex={0}\n            handleSearch={null}\n            interactive={false}\n            intl={intl}\n            metadata={metadata}\n            player={null}\n            search={search}\n            thumbnails={thumbnails}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderFooter() {\n    const { intl } = this.props;\n    const { disabled } = this.state;\n\n    return (\n      <div className=\"search-footer\">\n        <Button\n          aria={intl.formatMessage(intlMessages.search)}\n          disabled={disabled}\n          handleOnClick={(event) => this.handleOnClick(event)}\n          icon=\"search\"\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      toggleModal,\n    } = this.props;\n\n    return (\n      <Modal\n        intl={intl}\n        onClose={toggleModal}\n      >\n        {this.renderBody()}\n        {this.renderFooter()}\n      </Modal>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport videojs from 'video.js/core.es.js';\nimport {\n  ID,\n  buildFileURL,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.screenshare.wrapper.aria',\n    description: 'Aria label for the screenshare wrapper',\n  },\n});\n\nexport default class Screenshare extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      media,\n      metadata,\n    } = props;\n\n    const sources = [\n      {\n        src: buildFileURL(metadata.id, 'deskshare/deskshare.mp4'),\n        type: `video/mp4`,\n      }, {\n        src: buildFileURL(metadata.id, 'deskshare/deskshare.webm'),\n        type: `video/webm`,\n      },\n    ].filter(src => {\n      const { type } = src;\n\n      return media.find(m => type.includes(m));\n    });\n\n    this.options = {\n      controls: false,\n      fill: true,\n      sources,\n    };\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.node, this.options, () => {\n      const { onPlayerReady } = this.props;\n\n      if (onPlayerReady) onPlayerReady(ID.SCREENSHARE, this.player);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const {\n      active,\n      intl,\n    } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('screenshare-wrapper', { inactive: !active })}\n        id={ID.SCREENSHARE}\n      >\n        <div data-vjs-player>\n          <video\n            className=\"video-js\"\n            playsInline\n            preload=\"auto\"\n            ref={node => this.node = node}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport videojs from 'video.js/core.es.js';\nimport { video as config } from 'config';\nimport {\n  ID,\n  buildFileURL,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.video.wrapper.aria',\n    description: 'Aria label for the video wrapper',\n  },\n});\n\nexport default class Video extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      captions,\n      media,\n      metadata,\n    } = props;\n\n    const sources = [\n      {\n        src: buildFileURL(metadata.id, 'video/webcams.mp4'),\n        type: 'video/mp4',\n      }, {\n        src: buildFileURL(metadata.id, 'video/webcams.webm'),\n        type: 'video/webm',\n      },\n    ].filter(src => {\n      const { type } = src;\n\n      return media.find(m => type.includes(m));\n    });\n\n    const tracks = captions.map(lang => {\n      const {\n        locale,\n        localeName,\n      } = lang;\n\n      return {\n        kind: 'captions',\n        src: buildFileURL(metadata.id, `caption_${locale}.vtt`),\n        srclang: locale,\n        label: localeName,\n      };\n    });\n\n    this.options = {\n      controlBar: {\n        fullscreenToggle: false,\n        pictureInPictureToggle: false,\n        volumePanel: {\n          inline: false,\n          vertical: true,\n        },\n      },\n      controls: true,\n      fill: true,\n      inactivityTimeout: 0,\n      playbackRates: config.rates,\n      sources,\n      tracks,\n    };\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.node, this.options, () => {\n      const {\n        onPlayerReady,\n        onTimeUpdate,\n        time,\n      } = this.props;\n\n      if (onTimeUpdate) {\n        this.player.on('play', () => {\n          setInterval(() => {\n            const time = this.player.currentTime();\n            onTimeUpdate(time);\n          }, 1000 / config.rps);\n        });\n\n        this.player.on('pause', () => clearInterval());\n      }\n\n      if (time) {\n        this.player.on('loadedmetadata', () => {\n          const duration = this.player.duration();\n          if (time < duration) {\n            this.player.currentTime(time);\n          }\n        });\n      }\n\n      if (onPlayerReady) onPlayerReady(ID.VIDEO, this.player);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"video-wrapper\"\n        id={ID.VIDEO}\n      >\n        <div data-vjs-player>\n          <video\n            className=\"video-js\"\n            playsInline\n            preload=\"auto\"\n            ref={node => this.node = node}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './index.scss';\n\nexport default () => {\n  return <div className=\"bottom-bar\" />;\n}\n","import React, { PureComponent } from 'react';\nimport {\n  defineMessages,\n  FormattedDate,\n} from 'react-intl';\nimport cx from 'classnames';\nimport { controls as config } from 'config';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  about: {\n    id: 'button.about.aria',\n    description: 'Aria label for the about button',\n  },\n  section: {\n    id: 'button.section.aria',\n    description: 'Aria label for the section button',\n  },\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n  swap: {\n    id: 'button.swap.aria',\n    description: 'Aria label for the swap button',\n  },\n});\n\nexport default class TopBar extends PureComponent {\n  renderSearchButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      toggleSearch,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.search)}\n        circle\n        handleOnClick={toggleSearch}\n        icon=\"search\"\n      />\n    );\n  }\n\n  renderSectionButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      section,\n      toggleSection,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.section)}\n        circle\n        handleOnClick={toggleSection}\n        icon={section ? 'arrow-left' : 'arrow-right'}\n      />\n    );\n  }\n\n  renderSwapButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      toggleSwap,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.swap)}\n        circle\n        handleOnClick={toggleSwap}\n        icon=\"swap\"\n      />\n    );\n  }\n\n  renderTitle(interactive) {\n    const {\n      name,\n      start,\n    } = this.props;\n\n    const date = <FormattedDate value={new Date(start)} />;\n\n    if (interactive) {\n      const {\n        intl,\n        toggleAbout,\n      } = this.props;\n\n      return (\n        <span\n          aria={intl.formatMessage(intlMessages.about)}\n          className={cx('title', { interactive })}\n          onClick={toggleAbout}\n          onKeyPress={(e) => e.key === 'Enter' ? toggleAbout() : null}\n          tabIndex=\"0\"\n        >\n          {name} - {date}\n        </span>\n      );\n    }\n\n    return (\n      <span className=\"title\">\n        {name} - {date}\n      </span>\n    );\n  }\n\n  render() {\n    const {\n      control,\n      single,\n    } = this.props;\n\n    const {\n      about,\n      search,\n      section,\n      swap,\n    } = config;\n\n    return (\n      <div className=\"top-bar\">\n        <div className=\"left\">\n          {this.renderSectionButton(control && section)}\n        </div>\n        <div className=\"center\">\n          {this.renderTitle(control && about)}\n        </div>\n        <div className=\"right\">\n          {this.renderSearchButton(control && search && !single)}\n          {this.renderSwapButton(control && swap && !single)}\n        </div>\n      </div>\n    );\n  }\n}\n","import { controls } from 'config';\nimport {\n  getContentFromData,\n  getControlFromLayout,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  isContentVisible,\n} from 'utils/data';\n\nexport default class Layout {\n  constructor(data, layout) {\n    this.content = getContentFromData(data);\n    this.layout = layout;\n  }\n\n  getContent() {\n    return this.content;\n  }\n\n  initControl() {\n    return getControlFromLayout(this.layout);\n  }\n\n  initSection() {\n    return getSectionFromLayout(this.layout);\n  }\n\n  initSwap() {\n    return getSwapFromLayout(this.layout);\n  }\n\n  getBottomContentStyle(state) {\n    const {\n      fullscreen,\n      thumbnails,\n    } = state;\n\n    const bottom = thumbnails && !fullscreen;\n    const style = { 'inactive': !bottom };\n\n    return style;\n  }\n\n  getContentStyle(state) {\n    const { swap } = state;\n    const style = { 'swapped-content': swap };\n\n    return style;\n  }\n\n  getMediaStyle(state) {\n    const { swap } = state;\n    const single = this.isSingle();\n    const style = { 'swapped-media': swap || single };\n\n    return style;\n  }\n\n  getPlayerStyle(state) {\n    const {\n      fullscreen,\n      section,\n    } = state;\n\n    const single = this.isSingle();\n\n    const style = {\n      'fullscreen-content': fullscreen,\n      'hidden-section': !section,\n      'single-content': single,\n    };\n\n    return style;\n  }\n\n  hasFullscreenButton(layout, state) {\n    const {\n      control,\n      swap,\n    } = state;\n\n    if (!control || !controls.fullscreen) return false;\n\n    const single = this.isSingle();\n    if (!isContentVisible(layout, swap || single)) return false;\n\n    return true;\n  }\n\n  hasScreenshare() {\n    const { screenshare } = this.content;\n\n    return screenshare;\n  }\n\n  isSingle() {\n    const {\n      presentation,\n      screenshare,\n    } = this.content;\n\n    return !presentation && !screenshare;\n  }\n}\n","import { shortcuts as config } from 'config';\nimport logger from './logger';\n\nexport default class Shortcuts {\n  constructor(actions) {\n    this.enabled = config.enabled;\n\n    if (!this.enabled) {\n      logger.debug('shortcuts', 'disabled');\n    } else {\n      this.init(actions);\n    }\n  }\n\n  init(actions) {\n    this.listeners = [];\n\n    for (let prop in actions) {\n      const value = actions[prop];\n      if (typeof value === 'function') {\n        const key = config[prop];\n        this.add(key, value);\n      } else {\n        for (let p in value) {\n          const k = config[prop][p];\n          const v = value[p];\n          this.add(k, v);\n        }\n      }\n    }\n  }\n\n  add(key, action) {\n    if (!key || typeof key !== 'string') {\n      logger.warn('shortcuts', 'invalid', 'key');\n      return null;\n    } else if (key.length === 0) {\n      return null;\n    }\n\n    if (!action || typeof action !== 'function') {\n      logger.warn('shortcuts', 'invalid', 'action');\n      return null;\n    }\n\n    const listener = document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.shiftKey) {\n        if (e.key === key) action();\n      }\n    });\n\n    this.listeners.push(listener);\n  }\n\n  destroy() {\n    this.listeners.forEach(listener => {\n      document.removeEventListener(listener);\n    });\n  }\n}\n","import logger from './logger';\n\nconst STATUSES = [\n  'canplay',\n  'seeking',\n  'waiting',\n];\n\nconst EVENTS = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'interruptbegin',\n  'interruptend',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'mozaudioavailable',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  //'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\nexport default class Synchronizer {\n  constructor(primary, secondary) {\n    this.primary = primary;\n    this.secondary = secondary;\n\n    this.status = {\n      primary: 'waiting',\n      secondary: 'waiting',\n    }\n\n    this.synching = false;\n\n    this.init();\n  }\n\n  init() {\n    STATUSES.forEach(status => {\n      this.primary.on(status, () => this.status.primary = status);\n      this.secondary.on(status, () => this.status.secondary = status);\n    });\n\n    this.primary.on('play', () => this.secondary.play());\n    this.primary.on('pause', () => this.secondary.pause());\n\n    this.primary.on('seeking', () => {\n      const currentTime = this.primary.currentTime();\n      this.secondary.currentTime(currentTime);\n    });\n\n    this.primary.on('ratechange', () => {\n      const playbackRate = this.primary.playbackRate();\n      this.secondary.playbackRate(playbackRate);\n    });\n\n    this.primary.on('waiting', () => {\n      if (!this.synching && this.status.secondary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.primary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    this.secondary.on('waiting', () => {\n      if (!this.synching && this.status.primary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.secondary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    EVENTS.forEach(event => {\n      this.primary.on(event, () => logger.debug(`primary ${event} ${this.status.primary}`));\n      this.secondary.on(event, () => logger.debug(`secondary ${event} ${this.status.secondary}`));\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { shortcuts } from 'config';\nimport About from './about';\nimport Chat from './chat';\nimport Notes from './notes';\nimport Presentation from './presentation';\nimport Search from './search';\nimport Screenshare from './screenshare';\nimport Thumbnails from './thumbnails';\nimport Video from './video';\nimport BottomBar from './bars/bottom';\nimport TopBar from './bars/top';\nimport Button from './utils/button';\nimport {\n  addAlternatesToThumbnails,\n  addPollsToChat,\n} from 'utils/builder';\nimport {\n  ID,\n  LAYOUT,\n  getActiveContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  isEqual,\n  seek,\n  skip,\n} from 'utils/data';\nimport Layout from 'utils/layout';\nimport logger from 'utils/logger';\nimport Shortcuts from 'utils/shortcuts';\nimport Synchronizer from 'utils/synchronizer';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.wrapper.aria',\n    description: 'Aria label for the player wrapper',\n  },\n  fullscreen: {\n    id: 'button.fullscreen.aria',\n    description: 'Aria label for the fullscreen button',\n  },\n  restore: {\n    id: 'button.restore.aria',\n    description: 'Aria label for the restore button',\n  },\n});\n\nexport default class Player extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      data,\n      layout,\n    } = props;\n\n    this.layout = new Layout(data, layout);\n\n    this.state = {\n      application: ID.CHAT,\n      control: this.layout.initControl(),\n      fullscreen: false,\n      modal: '',\n      search: [],\n      section: this.layout.initSection(),\n      swap: this.layout.initSwap(),\n      thumbnails: true,\n      time: 0,\n    }\n\n    this.player = {\n      video: null,\n      screenshare: null,\n    };\n\n    this.initData(data);\n\n    this.handlePlayerReady = this.handlePlayerReady.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.initShortcuts();\n  }\n\n  componentWillUnmount() {\n    if (this.shortcuts) {\n      this.shortcuts.destroy();\n    }\n  }\n\n  initData(data) {\n    this.alternates = getData(data, ID.ALTERNATES);\n    this.captions = getData(data, ID.CAPTIONS);\n    this.chat = addPollsToChat(getData(data, ID.CHAT), getData(data, ID.POLLS));\n    this.cursor = getData(data, ID.CURSOR);\n    this.metadata = getData(data, ID.METADATA);\n    this.notes = getData(data, ID.NOTES);\n    this.panzooms = getData(data, ID.PANZOOMS);\n    this.screenshare = getData(data, ID.SCREENSHARE);\n    this.shapes = getData(data, ID.SHAPES);\n\n    this.canvases = this.shapes.canvases;\n    this.slides = this.shapes.slides;\n    this.thumbnails = addAlternatesToThumbnails(this.shapes.thumbnails, this.alternates);\n\n    logger.debug(ID.PLAYER, data);\n  }\n\n  handlePlayerReady(media, player) {\n    switch (media) {\n      case ID.VIDEO:\n        logger.debug(ID.PLAYER, 'ready', ID.VIDEO);\n        this.player.video = player;\n        break;\n      case ID.SCREENSHARE:\n        logger.debug(ID.PLAYER, 'ready', ID.SCREENSHARE);\n        this.player.screenshare = player;\n        break;\n      default:\n        logger.debug('unhandled', media);\n    }\n\n    if (this.player.video && this.player.screenshare) {\n      this.synchronizer = new Synchronizer(this.player.video, this.player.screenshare);\n    }\n  }\n\n  handleSearch(value) {\n    const { search } = this.state;\n\n    if (!isEqual(search, value, 'array')) {\n      this.setState({ search: value });\n    }\n  }\n\n  handleTimeUpdate(value) {\n    const { time } = this.state;\n\n    if (time !== value) {\n      this.setState({ time: value });\n    }\n  }\n\n  initShortcuts() {\n    const { seconds } = shortcuts.video;\n\n    const actions = {\n      fullscreen: () => this.toggleFullscreen(),\n      section: () => this.toggleSection(),\n      swap: () => this.toggleSwap(),\n      thumbnails: () => this.toggleThumbnails(),\n      slides: {\n        next: () => skip(this.player, this.slides, +1),\n        previous: () => skip(this.player, this.slides, -1),\n      },\n      video: {\n        backward: () => seek(this.player, -seconds),\n        forward: () => seek(this.player, +seconds),\n      },\n    };\n\n    this.shortcuts = new Shortcuts(actions);\n  }\n\n  toggleApplication(type) {\n    const { application } = this.state;\n\n    if (application === type) return null;\n\n    this.setState({ application: type });\n  }\n\n  toggleFullscreen() {\n    const { fullscreen } = this.state;\n\n    this.setState({ fullscreen: !fullscreen });\n  }\n\n  toggleModal(type) {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    this.setState({ modal: open ? '' : type });\n  }\n\n  toggleSection() {\n    const { section } = this.state;\n\n    this.setState({ section: !section });\n  }\n\n  toggleSwap() {\n    const { swap } = this.state;\n\n    this.setState({ swap: !swap });\n  }\n\n  toggleThumbnails() {\n    const { thumbnails } = this.state;\n\n    this.setState({ thumbnails: !thumbnails });\n  }\n\n  renderFullscreenButton(layout) {\n    if (!this.layout.hasFullscreenButton(layout, this.state)) return null;\n\n    const { intl } = this.props;\n    const { fullscreen } = this.state;\n\n    const aria = fullscreen\n      ? intl.formatMessage(intlMessages.restore)\n      : intl.formatMessage(intlMessages.fullscreen)\n    ;\n\n    const icon = fullscreen ? 'restore' : 'fullscreen';\n\n    return (\n      <div className=\"fullscreen-button\">\n        <Button\n          aria={aria}\n          handleOnClick={() => this.toggleFullscreen()}\n          icon={icon}\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  renderModal() {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    if (!open) return null;\n\n    const { intl } = this.props;\n    const content = this.layout.getContent();\n\n    switch (modal) {\n      case ID.ABOUT:\n        return (\n          <About\n            content={content}\n            intl={intl}\n            metadata={this.metadata}\n            toggleModal={() => this.toggleModal(ID.ABOUT)}\n          />\n        );\n      case ID.SEARCH:\n        return (\n          <Search\n            intl={intl}\n            handleSearch={this.handleSearch}\n            metadata={this.metadata}\n            thumbnails={this.thumbnails}\n            toggleModal={() => this.toggleModal(ID.SEARCH)}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderThumbnails() {\n    const { intl } = this.props;\n\n    const {\n      search,\n      time,\n    } = this.state;\n\n    const { video } = this.player;\n\n    const currentDataIndex = getCurrentDataIndex(this.thumbnails, time);\n\n    return (\n      <Thumbnails\n        currentDataIndex={currentDataIndex}\n        handleSearch={this.handleSearch}\n        interactive={true}\n        intl={intl}\n        metadata={this.metadata}\n        player={video}\n        search={search}\n        thumbnails={this.thumbnails}\n      />\n    );\n  }\n\n  renderTopBar() {\n    const { intl } = this.props;\n\n    const {\n      control,\n      section,\n    } = this.state;\n\n    const {\n      name,\n      start,\n    } = this.metadata;\n\n    const single = this.layout.isSingle();\n\n    return (\n      <TopBar\n        control={control}\n        intl={intl}\n        name={name}\n        section={section}\n        single={single}\n        start={start}\n        toggleAbout={() => this.toggleModal(ID.ABOUT)}\n        toggleSearch={() => this.toggleModal(ID.SEARCH)}\n        toggleSection={() => this.toggleSection()}\n        toggleSwap={() => this.toggleSwap()}\n      />\n    );\n  }\n\n  renderMedia() {\n    const {\n      data,\n      intl,\n      time,\n    } = this.props;\n\n    const { media } = data;\n\n    return (\n      <div className={cx('media', this.layout.getMediaStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.MEDIA)}\n        <Video\n          captions={this.captions}\n          intl={intl}\n          media={media}\n          metadata={this.metadata}\n          onPlayerReady={this.handlePlayerReady}\n          onTimeUpdate={this.handleTimeUpdate}\n          time={time}\n        />\n      </div>\n    );\n  }\n\n  renderApplicationIcon(type) {\n    const { application } = this.state;\n    const active = application === type;\n\n    return (\n      <div\n        className={cx('application-icon', { inactive: !active })}\n        onClick={() => active ? null : this.toggleApplication(type)}\n      >\n        <span className={`icon-${type}`} />\n      </div>\n    );\n  }\n\n  renderApplicationContent() {\n    const { intl } = this.props;\n    const { application } = this.state;\n\n    switch (application) {\n      case ID.CHAT:\n        const { time } = this.state;\n        const { video } = this.player;\n        const currentChatIndex = getCurrentDataIndex(this.chat, time);\n\n        return (\n          <Chat\n            chat={this.chat}\n            currentDataIndex={currentChatIndex}\n            intl={intl}\n            player={video}\n          />\n        );\n      case ID.NOTES:\n        return (\n          <Notes\n            notes={this.notes}\n            intl={intl}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderApplicationControl() {\n    const { control } = this.state;\n\n    if (!control) return null;\n\n    return (\n      <div className=\"application-control\">\n        {this.renderApplicationIcon(ID.CHAT)}\n        {this.renderApplicationIcon(ID.NOTES)}\n      </div>\n    );\n  }\n\n  renderApplication() {\n    return (\n      <div className=\"application\">\n        {this.renderApplicationControl()}\n        {this.renderApplicationContent()}\n      </div>\n    );\n  }\n\n  renderPresentation(active) {\n    const { intl } = this.props;\n    const { time } = this.state;\n\n    const currentSlideIndex = getCurrentDataIndex(this.slides, time);\n    const currentPanzoomIndex = getCurrentDataIndex(this.panzooms, time);\n    const currentCursorIndex = getCurrentDataIndex(this.cursor, time);\n    const draws = getDraws(currentSlideIndex, this.slides, this.canvases);\n    const currentDrawsInterval = getCurrentDataInterval(draws, time);\n\n    return (\n      <Presentation\n        active={active}\n        currentCursorIndex={currentCursorIndex}\n        currentPanzoomIndex={currentPanzoomIndex}\n        currentSlideIndex={currentSlideIndex}\n        cursor={this.cursor}\n        draws={draws}\n        drawsInterval={currentDrawsInterval}\n        intl={intl}\n        metadata={this.metadata}\n        panzooms={this.panzooms}\n        slides={this.slides}\n        thumbnails={this.thumbnails}\n      />\n    )\n  }\n\n  renderScreenshare(active) {\n    if (!this.layout.hasScreenshare()) return null;\n\n    const {\n      intl,\n      data,\n    } = this.props;\n\n    const { media } = data;\n\n    return (\n      <Screenshare\n        active={active}\n        intl={intl}\n        media={media}\n        metadata={this.metadata}\n        onPlayerReady={this.handlePlayerReady}\n      />\n    );\n  }\n\n  renderContent() {\n    if (this.layout.isSingle()) return null;\n\n    const { time } = this.state;\n    const content = getActiveContent(this.screenshare, time);\n\n    return (\n      <div className={cx('content', this.layout.getContentStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.CONTENT)}\n        <div className=\"top-content\">\n          {this.renderPresentation(content === ID.PRESENTATION)}\n          {this.renderScreenshare(content === ID.SCREENSHARE)}\n        </div>\n        <div className={cx('bottom-content', this.layout.getBottomContentStyle(this.state))}>\n          {this.renderThumbnails()}\n        </div>\n      </div>\n    );\n  }\n\n  renderBottomBar() {\n    return <BottomBar />;\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('player-wrapper', this.layout.getPlayerStyle(this.state))}\n        id={ID.PLAYER}\n      >\n        {this.renderTopBar()}\n        {this.renderMedia()}\n        {this.renderApplication()}\n        {this.renderContent()}\n        {this.renderBottomBar()}\n        {this.renderModal()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  defineMessages,\n  injectIntl,\n} from 'react-intl';\nimport config from 'config';\nimport Error from './error';\nimport Player from './player';\nimport { build } from 'utils/builder';\nimport {\n  ID,\n  buildFileURL,\n  getFileName,\n  getFileType,\n  getLayout,\n  getRecordId,\n  getTime,\n} from 'utils/data';\nimport logger from 'utils/logger';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'loader.wrapper.aria',\n    description: 'Aria label for the loader wrapper',\n  },\n});\n\nclass Loader extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      location,\n      match,\n    } = props;\n\n    this.counter = 0;\n    this.data = {};\n    this.layout = getLayout(location);\n    this.recordId = getRecordId(match);\n    this.time = getTime(location);\n\n    this.state = {\n      error: this.recordId ? null : config.error['NOT_FOUND'],\n      loaded: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.recordId) return;\n\n    const { data } = config.files;\n\n    for (const file in data) {\n      this.fetchFile(this.recordId, data[file]);\n    }\n\n    this.fetchMedia();\n  }\n\n  fetchFile(recordId, file) {\n    const url = buildFileURL(recordId, file);\n    fetch(url).then(response => {\n      if (response.ok) {\n        logger.debug(ID.LOADER, file, response);\n        const fileType = getFileType(file);\n        switch (fileType) {\n          case 'json':\n            return response.json();\n          case 'html':\n            return response.text();\n          case 'svg':\n            return response.text();\n          case 'xml':\n            return response.text();\n          default:\n            this.setState({ error: config.error['BAD_REQUEST'] });\n            throw Error(file);\n        }\n      } else {\n        logger.warn('loader', file, response);\n        return null;\n      }\n    }).then(value => {\n      build(file, value).then(data => {\n        if (data) logger.debug(ID.LOADER, 'builded', file);\n        this.data[getFileName(file)] = data;\n        this.update();\n      }).catch(error => this.setState({ error: config.error['BAD_REQUEST'] }));\n    }).catch(error => this.setState({ error: config.error['NOT_FOUND'] }));\n  }\n\n  fetchMedia() {\n    const fetches = config.medias.map(type => {\n      const url = buildFileURL(this.recordId, `video/webcams.${type}`);\n      return fetch(url, { method: 'HEAD' });\n    });\n\n    Promise.all(fetches).then(responses => {\n      const media = [];\n      responses.forEach(response => {\n        const { ok, url } = response;\n        if (ok) {\n          logger.debug(ID.LOADER, 'media', response);\n          media.push(config.medias.find(type => url.endsWith(type)));\n        }\n      });\n\n      if (media.length > 0) {\n        this.data.media = media;\n        this.update();\n      } else {\n        // TODO: Handle audio medias\n        this.setState({ error: config.error['NOT_FOUND'] });\n      }\n    });\n  }\n\n  update() {\n    this.counter = this.counter + 1;\n    // TODO: Better control\n    if (this.counter > Object.keys(config.files.data).length) {\n      const { loaded } = this.state;\n      if (!loaded) this.setState({ loaded: true });\n    }\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    const {\n      error,\n      loaded,\n    } = this.state;\n\n    if (error) {\n      return (\n        <Error\n          code={error}\n        />\n      );\n    }\n\n    if (loaded) {\n      return (\n        <Player\n          data={this.data}\n          intl={intl}\n          layout={this.layout}\n          time={this.time}\n        />\n      );\n    }\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"loader-wrapper\"\n        id={ID.LOADER}\n      >\n        <div className=\"loading-dots\">\n          <div className=\"first\" />\n          <div className=\"second\" />\n          <div className=\"third\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Loader);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { error } from 'config';\nimport Error from 'components/error';\nimport Loader from './loader';\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route\n          path=\"/:recordId\"\n          component={Loader}\n        />\n        <Route render={(props) => <Error {...props} code={error['NOT_FOUND']} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import ar from './ar.json';\nimport de from './de.json';\nimport en from './en.json';\nimport es from './es.json';\nimport fa from './fa.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport ja from './ja.json';\nimport pt from './pt.json';\nimport ru from './ru.json';\nimport tr from './tr.json';\n\nexport default {\n  ar,\n  de,\n  en,\n  es,\n  fa,\n  fr,\n  it,\n  ja,\n  pt,\n  ru,\n  tr,\n};\n","import { locale as config } from 'config';\nimport messages from './messages';\n\nconst RTL_LOCALES = ['ar', 'fa'];\n\nconst setDirection = (locale) => {\n  if (RTL_LOCALES.includes(locale)) {\n    document.body.parentNode.setAttribute('dir', 'rtl');\n  } else {\n    document.body.parentNode.setAttribute('dir', 'ltr');\n  }\n};\n\nconst getLocale = () => {\n  const locale = navigator.language.split(/[-_]/)[0];\n\n  setDirection(locale);\n\n  if (!messages[locale]) return config.default;\n\n  return locale;\n};\n\nconst getMessages = () => {\n  return messages;\n};\n\nexport {\n  getLocale,\n  getMessages,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from \"react-intl\";\nimport Loader from 'components/loader';\nimport Router from 'components/router';\nimport {\n  getLocale,\n  getMessages,\n} from 'locales';\nimport {\n  ROUTER,\n  getStyle,\n} from 'utils/data';\nimport './index.scss';\n\nconst locale = getLocale();\nconst messages = getMessages();\nconst style = getStyle();\n\nReactDOM.render(\n  (\n    <IntlProvider\n      locale={locale}\n      messages={messages[locale]}\n    >\n      {style ? <link rel=\"stylesheet\" type=\"text/css\" href={style} /> : null}\n      {ROUTER ? <Router /> : <Loader />}\n    </IntlProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}