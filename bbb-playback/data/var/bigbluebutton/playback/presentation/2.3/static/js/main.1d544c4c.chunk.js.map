{"version":3,"sources":["utils/logger.js","utils/data.js","components/error.js","components/utils/button/index.js","components/utils/modal/index.js","components/about/index.js","components/utils/avatar/index.js","components/chat/message.js","components/chat/index.js","components/notes/index.js","components/presentation/cursor.js","components/presentation/slide.js","components/presentation/canvas.js","components/presentation/index.js","components/thumbnails/index.js","components/search/index.js","components/screenshare/index.js","components/video/index.js","components/bars/bottom.js","components/bars/top.js","utils/builder.js","utils/layout.js","utils/shortcuts.js","utils/synchronizer.js","components/player.js","components/loader.js","components/router.js","locales/messages/index.js","locales/index.js","index.js"],"names":["params","URLSearchParams","window","location","search","debug","has","logger","info","console","warn","error","LAYOUT","ID","ABOUT","ALTERNATES","CAPTIONS","CHAT","CURSOR","ERROR","LOADER","METADATA","NOTES","PANZOOMS","PLAYER","PRESENTATION","SCREENSHARE","SEARCH","SHAPES","THUMBNAILS","VIDEO","NUMBERS","ROUTER","process","REACT_APP_NO_ROUTER","MEDIA_ROOT_URL","REACT_APP_MEDIA_ROOT_URL","buildFileURL","recordId","file","mediaPath","getMediaPath","rootUrl","fileUrl","getAvatarStyle","name","index","stringHash","length","getCurrentDataIndex","data","time","isEmpty","start","stop","middle","Math","floor","isCurrent","item","hasProperty","isVisible","timestamp","getData","id","config","files","TALKERS","getFileName","canvases","slides","thumbnails","split","shift","getFileType","pop","get","hasIndex","hasPresentation","i","src","includes","object","property","hasOwnProperty","isActive","clear","cleared","wasCleared","visible","current","next","isArray","isValid","isString","isEnabled","isEqual","first","second","type","equal","every","value","valid","Array","parseTimeToSeconds","patterns","match","hours","minutes","seconds","timeToSeconds","h","parseInt","m","s","seek","player","video","max","duration","currentTime","skip","change","intlMessages","defineMessages","aria","description","Error","props","intl","useIntl","code","aria-label","formatMessage","className","defaultProps","active","circle","disabled","Button","this","handleOnClick","icon","ghost","solid","style","default","cx","onClick","PureComponent","close","More","children","onClose","About","key","element","green","red","metadata","content","captions","chat","notes","presentation","screenshare","renderItem","participants","end","subtitle","push","Date","day","month","year","map","toggleModal","renderHeader","renderBody","renderFooter","Avatar","initials","Message","nextProps","inactive","onKeyPress","e","tabIndex","text","options","hyperlink","milliseconds","getTimestampAsMilliseconds","hourCycle","hour","minute","timeZone","renderHyperlink","renderAvatar","renderContent","Component","Chat","interaction","handleAutoScroll","currentDataIndex","scroll","firstNode","currentNode","parentNode","scrollTop","align","clientHeight","offsetTop","spacing","parentHeight","verticalOffset","getScrollTop","node","message","ref","setRef","aria-live","onMouseEnter","onMouseLeave","renderMessages","Notes","dangerouslySetInnerHTML","__html","Cursor","x","y","cy","Slide","height","width","thumbnail","find","alt","logo","slide","getProxy","href","Canvas","points","x1","y1","x2","y2","d","r","xmlns","line","image","rect","fill","stroke","strokeWidth","transform","drawsInterval","draws","canvas","shape","j","intermediate","renderPoll","renderPolyline","renderLine","renderPolygon","renderPath","renderCircle","renderText","renderCanvas","Presentation","currentSlideIndex","currentPanzoomIndex","panzooms","currentData","viewBox","currentCursorIndex","cursor","slideId","getSlideId","getViewBox","getCursor","canvasId","buildViewBoxAttr","xmlnsXlink","clipPath","Thumbnails","scrollLeft","clientWidth","offsetLeft","document","dir","parentWidth","horizontalOffset","getScrollLeft","interactive","renderImage","styles","reduce","result","isFiltered","renderThumbnail","handleSearch","renderThumbnails","renderClearButton","Search","state","event","target","min","setState","toLowerCase","forEach","indexOf","maxLength","minLength","onChange","handleOnChange","Screenshare","media","sources","filter","controls","videojs","onPlayerReady","dispose","data-vjs-player","playsInline","preload","Video","tracks","lang","locale","localeName","kind","srclang","label","controlBar","fullscreenToggle","pictureInPictureToggle","volumePanel","inline","vertical","inactivityTimeout","playbackRates","rates","onTimeUpdate","on","setInterval","rps","clearInterval","about","section","swap","TopBar","enabled","toggleSearch","toggleSection","toggleSwap","date","toggleAbout","control","single","renderSectionButton","renderTitle","renderSearchButton","renderSwapButton","getAttr","attr","getChildren","getId","getNumbers","trimmed","trim","replace","v","parseFloat","buildCanvases","group","canvasAttr","g","drawAttr","undo","items","buildStyle","drawId","Object","assign","polyline","polygon","path","switch","foreignObject","child","grandchildren","grandchild","join","parseText","buildShapes","svg","img","in","sort","a","b","buildSlides","build","filename","Promise","resolve","reject","fileType","alternates","buildAlternates","buildCaptions","buildNotes","shapes","explicitChildren","preserveChildrenOrder","charsAsChildren","getOptions","parseStringPromise","then","popcorn","chattimeline","out","decodeXML","clearHyperlink","slice","getInitials","buildChat","recording","position","buildCursor","meeting","meta","end_time","start_time","buildMetadata","panzoom","viewbox","buildPanzooms","start_timestamp","stop_timestamp","buildScreenshare","catch","Layout","layout","getContentFromData","getControlFromLayout","getSectionFromLayout","getSwapFromLayout","fullscreen","isSingle","isContentVisible","Shortcuts","actions","init","prop","listeners","add","p","k","action","listener","addEventListener","altKey","shiftKey","removeEventListener","STATUSES","EVENTS","Synchronizer","primary","secondary","status","synching","play","pause","playbackRate","restore","Player","application","initControl","modal","initSection","initSwap","initData","handlePlayerReady","bind","handleTimeUpdate","initShortcuts","shortcuts","destroy","found","synchronizer","toggleFullscreen","toggleThumbnails","previous","backward","forward","open","hasFullscreenButton","getContent","getMediaStyle","renderFullscreenButton","toggleApplication","currentChatIndex","renderApplicationIcon","renderApplicationControl","renderApplicationContent","getDraws","currentDrawsInterval","currentDataInterval","getCurrentDataInterval","hasScreenshare","getActiveContent","getContentStyle","renderPresentation","renderScreenshare","getBottomContentStyle","getPlayerStyle","renderTopBar","renderMedia","renderApplication","renderBottomBar","renderModal","Loader","counter","l","qs","parse","ignoreQueryPrefix","getLayout","getRecordId","t","getTime","loaded","fetchFile","fetchMedia","url","fetch","response","ok","json","update","fetches","medias","method","all","responses","endsWith","keys","injectIntl","Router","basename","component","render","ar","de","en","es","fa","fr","it","ja","pt","ru","tr","RTL_LOCALES","navigator","language","body","setAttribute","setDirection","messages","getLocale","getStyle","ReactDOM","rel","getElementById"],"mappings":"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","file":"static/js/main.1d544c4c.chunk.js","sourcesContent":["const params = new URLSearchParams(window.location.search);\nconst debug = params ? params.has('debug') : false;\n\nconst logger = {\n  info: (...msg) => console.info(...msg),\n  debug: (...msg) => debug ? console.debug(...msg) : null,\n  warn: (...msg) => debug ? console.warn(...msg) : null,\n  error: (...msg) => console.error(...msg),\n};\n\nexport default logger;\n","import config from 'config';\nimport qs from 'qs';\nimport stringHash from 'string-hash';\nimport logger from './logger';\n\nconst LAYOUT = {\n  CONTENT: 'content',\n  DISABLED: 'disabled',\n  MEDIA: 'media',\n};\n\nconst ID = {\n  ABOUT: 'about',\n  ALTERNATES: 'alternates',\n  CAPTIONS: 'captions',\n  CHAT: 'chat',\n  CURSOR: 'cursor',\n  ERROR: 'error',\n  LOADER: 'loader',\n  METADATA: 'metadata',\n  NOTES: 'notes',\n  PANZOOMS: 'panzooms',\n  PLAYER: 'player',\n  PRESENTATION: 'presentation',\n  SCREENSHARE: 'screenshare',\n  SEARCH: 'search',\n  SHAPES: 'shapes',\n  THUMBNAILS: 'thumbnails',\n  VIDEO: 'video',\n};\n\nconst NUMBERS = [\n  'zero', 'one', 'two', 'three',\n  'four', 'five', 'six', 'seven',\n  'eight', 'nine', 'ten', 'eleven',\n  'twelve', 'thirteen', 'fourteen', 'fifteen',\n];\n\nconst getRouter = () => {\n  if (typeof process.env.REACT_APP_NO_ROUTER !== 'undefined') {\n    if (process.env.REACT_APP_NO_ROUTER) return false;\n  }\n\n  return true;\n};\n\nconst ROUTER = getRouter();\n\nconst MEDIA_ROOT_URL = process.env.REACT_APP_MEDIA_ROOT_URL;\n\nconst buildFileURL = (recordId, file) => {\n  if (!ROUTER) return file;\n\n  const mediaPath = getMediaPath();\n\n  const rootUrl = MEDIA_ROOT_URL ? MEDIA_ROOT_URL : '/presentation';\n  let fileUrl = `${recordId}/${file}`;\n\n  if(mediaPath) {\n    fileUrl = `${mediaPath}/${fileUrl}`;\n  }\n\n  return `${rootUrl}/${fileUrl}`;\n};\n\nconst getAvatarStyle = name => {\n  const index = stringHash(name) % NUMBERS.length;\n\n  return `avatar-${NUMBERS[index]}`;\n};\n\nconst getActiveContent = (screenshare, time) => {\n  const {\n    SCREENSHARE,\n    PRESENTATION,\n  } = ID;\n\n  const content = isEnabled(screenshare, time) ? SCREENSHARE : PRESENTATION;\n\n  return content;\n};\n\nconst getContentFromData = data => {\n  const captions = getData(data, ID.CAPTIONS);\n  const chat = getData(data, ID.CHAT);\n  const notes = getData(data, ID.NOTES);\n  const screenshare = getData(data, ID.SCREENSHARE);\n  const shapes = getData(data, ID.SHAPES);\n  const slides = shapes.slides;\n\n  const content = {\n    captions: !isEmpty(captions),\n    chat: !isEmpty(chat),\n    notes: !isEmpty(notes),\n    presentation: hasPresentation(slides),\n    screenshare: !isEmpty(screenshare),\n  };\n\n  return content;\n};\n\nconst getControlFromLayout = layout => {\n  const { DISABLED } = LAYOUT;\n  let control = true;\n  switch (layout) {\n    case DISABLED:\n      control = false;\n      break;\n    default:\n  }\n\n  return control;\n};\n\nconst getCurrentDataIndex = (data, time) => {\n  if (isEmpty(data)) return -1;\n\n  let start = 0;\n  let stop = data.length - 1;\n  let middle = Math.floor((start + stop) / 2);\n\n  while (!isCurrent(data, middle, time) && start < stop) {\n    const item = data[middle];\n    if (!hasProperty(item, 'timestamp')) return -1;\n\n    if (!isVisible(time, item.timestamp)) {\n      stop = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n\n    middle = Math.floor((start + stop) / 2);\n  }\n\n  const current = isCurrent(data, middle, time);\n\n  return (!current) ? -1 : middle;\n};\n\nconst getCurrentDataInterval = (data, time) => {\n  const currentDataInterval = [];\n\n  if (isEmpty(data)) return currentDataInterval;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      if (!isVisible(time, timestamp)) break;\n\n      currentDataInterval.push(!wasCleared(time, clear));\n    }\n  }\n\n  return currentDataInterval;\n};\n\nconst getData = (data, id) => {\n  const file = config.files.data[id];\n\n  switch (id) {\n    case ID.ALTERNATES:\n    case ID.CAPTIONS:\n    case ID.CHAT:\n    case ID.CURSOR:\n    case ID.NOTES:\n    case ID.PANZOOMS:\n    case ID.SCREENSHARE:\n    case ID.TALKERS:\n      if (!file || data[getFileName(file)] === null) {\n        return [];\n      }\n\n      return data[getFileName(file)];\n    case ID.METADATA:\n      if (!file || data[getFileName(file)] === null) {\n        logger.error('missing', id);\n        return {};\n      }\n\n      return data[getFileName(file)];\n    case ID.SHAPES:\n      if (!file || data[getFileName(file)] === null) {\n        return {\n          canvases: [],\n          slides: [],\n          thumbnails: [],\n        };\n      }\n\n      return data[getFileName(file)];\n    default:\n      logger.debug('unhandled', id);\n      return [];\n  }\n};\n\nconst getDraws = (index, slides, canvases) => {\n  if (!hasIndex(index, slides)) return [];\n\n  const slide = slides[index];\n\n  if (isEmpty(canvases)) return [];\n\n  const canvas = canvases.find(canvas => slide.id === canvas.id);\n\n  if (!canvas) return [];\n\n  const { draws } = canvas;\n\n  return draws;\n};\n\nconst getFileName = file => file.split('.').shift();\n\nconst getFileType = file => file.split('.').pop();\n\nconst getLayout = location => {\n  if (location) {\n    const { search } = location;\n    if (search) {\n      const { l } = qs.parse(search, { ignoreQueryPrefix: true });\n\n      if (l) return l;\n    }\n  }\n\n  return null;\n};\n\nconst getRecordId = match => {\n  if (!ROUTER) return 'local';\n\n  if (match) {\n    const { params } = match;\n    if (params && params.recordId) {\n      const { recordId } = params;\n      const regex = /^[a-z0-9]{40}-[0-9]{13}$/;\n\n      if (recordId.match(regex)) return recordId;\n    }\n  }\n\n  logger.error('missing', 'recordId');\n\n  return null;\n};\n\nconst getSectionFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let section = true;\n  switch (layout) {\n    case CONTENT:\n      section = false;\n      break;\n    case MEDIA:\n      section = false;\n      break;\n    default:\n  }\n\n  return section;\n};\n\nconst getSwapFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let swap = false;\n  switch (layout) {\n    case CONTENT:\n      swap = false;\n      break;\n    case MEDIA:\n      swap = true;\n      break;\n    default:\n  }\n\n  return swap;\n};\n\nconst getScrollLeft = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientWidth,\n    offsetLeft,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const ltr = document.dir === 'ltr';\n  const spacing = ltr ? firstNode.offsetLeft : 0;\n  const parentWidth = parentNode.clientWidth;\n\n  let horizontalOffset = 0;\n  switch (align) {\n    case 'left':\n      horizontalOffset = offsetLeft - spacing;\n      break;\n    case 'center':\n      horizontalOffset = parseInt(offsetLeft + (clientWidth - spacing - parentWidth) / 2, 10);\n      break;\n    case 'right':\n      horizontalOffset = offsetLeft + clientWidth - parentWidth;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return horizontalOffset;\n};\n\nconst getScrollTop = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientHeight,\n    offsetTop,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetTop;\n  const parentHeight = parentNode.clientHeight;\n\n  let verticalOffset = 0;\n  switch (align) {\n    case 'top':\n      verticalOffset = offsetTop - spacing;\n      break;\n    case 'middle':\n      verticalOffset = parseInt(offsetTop + (clientHeight - spacing - parentHeight) / 2, 10);\n      break;\n    case 'bottom':\n      verticalOffset = offsetTop + clientHeight - parentHeight;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return verticalOffset;\n};\n\nconst getStyle = () => {\n  const params = new URLSearchParams(window.location.search);\n  const { styles } = config;\n  const { url } = styles;\n\n  let style = styles.default ? `${url}/${styles.default}.css` : null;\n  if (params && params.has('s')) {\n    const { valid } = styles;\n    const value = params.get('s');\n    if (valid.includes(value)) {\n      style = `${url}/${value}.css`;\n    }\n  }\n\n  return style;\n};\n\nconst getMediaPath = () => {\n  const params = new URLSearchParams(window.location.search);\n  let mediaPath = \"\";\n\n  if (params && params.has('p')) {\n    mediaPath = params.get('p');\n  }\n\n  return mediaPath;\n};\n\nconst getTime = location => {\n  if (location) {\n    const { search } = location;\n    if (search) {\n      const { t } = qs.parse(search, { ignoreQueryPrefix: true });\n\n      if (t) return parseTimeToSeconds(t);\n    }\n  }\n\n  return null;\n};\n\nconst getTimestampAsMilliseconds = timestamp => timestamp * 1000;\n\nconst hasIndex = (index, data) => {\n  if (index < 0) return false;\n\n  if (isEmpty(data)) return false;\n\n  if (index >= data.length) {\n    logger.error('out of bounds', index, data);\n\n    return false;\n  }\n\n  return true;\n};\n\nconst hasPresentation = slides => {\n  if (isEmpty(slides)) return false;\n\n  for (let i = 0; i < slides.length; i++) {\n    const { src } = slides[i];\n\n    if (src.includes('slide')) return true;\n  }\n\n  return false;\n};\n\nconst hasProperty = (object, property) => {\n  if (object && object.hasOwnProperty(property)) {\n    if (typeof object[property] !== 'undefined') return true;\n  }\n\n  logger.warn('missing', property, object);\n\n  return false;\n};\n\nconst isActive = (time, timestamp, clear = -1) => {\n  const cleared = wasCleared(time, clear);\n  const visible = isVisible(time, timestamp);\n\n  return visible && !cleared;\n};\n\nconst isContentVisible = (layout, swap) => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let visible;\n  switch (layout) {\n    case  CONTENT:\n      visible = !swap;\n      break;\n    case MEDIA:\n      visible = swap;\n      break;\n    default:\n      visible = false;\n  }\n\n  return visible;\n};\n\nconst isCurrent = (data, index, time) => {\n  if (!hasIndex(index, data)) return false;\n\n  const item = data[index];\n  if (!hasProperty(item, 'timestamp')) return false;\n\n  let current = false;\n  if (isVisible(time, item.timestamp)) {\n    if (index + 1 < data.length) {\n      const next = data[index + 1];\n      if (hasProperty(next, 'timestamp')) {\n        current = !isVisible(time, next.timestamp);\n      }\n    } else {\n      current = true;\n    }\n  }\n\n  return current;\n};\n\nconst isEmpty = data => {\n  const isArray = isValid('array', data);\n  const isString = isValid('string', data);\n  if (!isArray && !isString) return true;\n\n  const empty = data.length === 0;\n\n  return empty;\n};\n\nconst isEnabled = (data, time) => {\n  if (isEmpty(data)) return false;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      // Check if it was activated and did not ended\n      if (isActive(time, timestamp, clear)) return true;\n\n      // Check if we are searching over the present time value\n      if (!isVisible(time, timestamp)) return false;\n    } else {\n      // Invalid item\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst isEqual = (first, second, type) => {\n  let equal = false;\n\n  switch (type) {\n    case 'array':\n      if (first.length === second.length) {\n        equal = first.every((value, index) => value === second[index])\n      }\n\n      return equal;\n    default:\n      return equal;\n  }\n};\n\nconst isValid = (type, data) => {\n  let valid = false;\n\n  switch (type) {\n    case 'array':\n      if (Array.isArray(data)) valid = true;\n      break;\n    case 'string':\n      if (typeof data === type) valid = true;\n      break;\n    default:\n      logger.debug('unhandled', type);\n  }\n\n  return valid;\n};\n\nconst isVisible = (time, timestamp) => timestamp <= time;\n\nconst parseTimeToSeconds = time => {\n  const patterns = [\n    /^(\\d+)h(\\d+)m(\\d+)s$/,\n    /^(\\d+)m(\\d+)s$/,\n    /^(\\d+)s$/,\n  ];\n\n  for (let i = 0; i < patterns.length; i++) {\n    if (time.match(patterns[i])) {\n      const hours = time.match(/(\\d+)h/);\n      const minutes = time.match(/(\\d+)m/);\n      const seconds = time.match(/(\\d+)s/);\n\n      let timeToSeconds = 0;\n\n      if (hours) {\n        const h = parseInt(hours[1]);\n        if (h >= 0) timeToSeconds += h * 3600;\n      }\n\n      if (minutes) {\n        const m = parseInt(minutes[1]);\n        if (m >= 0 && m < 60) {\n          timeToSeconds += m * 60;\n        } else {\n          return null;\n        }\n      }\n\n      if (seconds) {\n        const s = parseInt(seconds[1]);\n        if (s >= 0 && s < 60) {\n          timeToSeconds += s;\n        } else {\n          return null;\n        }\n      }\n\n      return timeToSeconds;\n    }\n  }\n\n  return null;\n};\n\nconst search = (text, thumbnails) => {\n  const result = [];\n\n  const value = text.toLowerCase();\n  thumbnails.forEach((thumbnail, index) => {\n    const { alt } = thumbnail;\n\n    if (alt.toLowerCase().indexOf(value) !== -1) {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst seek = (player, seconds) => {\n  if (player.video) {\n    const min = 0;\n    const max = player.video.duration();\n    const time = player.video.currentTime() + seconds;\n\n    if (time < min) {\n      player.video.currentTime(min);\n    } else if (time > max) {\n      player.video.currentTime(max);\n    } else {\n      player.video.currentTime(time);\n    }\n  }\n};\n\nconst skip = (player, data, change) => {\n  const min = 0;\n  const max = data.length - 1;\n  const time = player.video.currentTime();\n\n  const current = getCurrentDataIndex(data, time);\n  if (current === -1) return null;\n\n  const index = current + change;\n\n  let timestamp;\n  if (index < min) {\n    timestamp = data[min].timestamp;\n  } else if (index > max) {\n    timestamp = data[max].timestamp;\n  } else {\n    timestamp = data[index].timestamp;\n  }\n\n  if (typeof timestamp !== 'undefined') {\n    player.video.currentTime(timestamp);\n  }\n};\n\nconst wasCleared = (time, clear) => clear !== -1 && clear <= time;\n\nexport {\n  LAYOUT,\n  ID,\n  ROUTER,\n  buildFileURL,\n  getAvatarStyle,\n  getActiveContent,\n  getContentFromData,\n  getControlFromLayout,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  getFileName,\n  getFileType,\n  getLayout,\n  getMediaPath,\n  getRecordId,\n  getScrollLeft,\n  getScrollTop,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  getStyle,\n  getTime,\n  getTimestampAsMilliseconds,\n  hasPresentation,\n  hasProperty,\n  isActive,\n  isContentVisible,\n  isEmpty,\n  isEnabled,\n  isEqual,\n  isValid,\n  parseTimeToSeconds,\n  search,\n  seek,\n  skip,\n};\n","import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'error.wrapper.aria',\n    description: 'Aria label for the error wrapper',\n  },\n});\n\nexport default function Error(props) {\n  const intl = useIntl();\n  const {\n    code,\n  } = props;\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"error-wrapper\"\n      id={ID.ERROR}\n    >\n      <div className=\"error-code\">\n        {code}\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst DEFAULT = 'default';\nconst GHOST = 'ghost';\nconst SOLID = 'solid';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  aria: PropTypes.string,\n  circle: PropTypes.bool,\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  circle: false,\n  disabled: false,\n  type: DEFAULT,\n};\n\nclass Button extends PureComponent {\n  render() {\n    const {\n      active,\n      aria,\n      circle,\n      disabled,\n      handleOnClick,\n      icon,\n      type,\n    } = this.props;\n\n    if (!handleOnClick) return null;\n\n    const ghost = type === GHOST;\n    const solid = type === SOLID;\n\n    const style = {\n      default: !ghost && !solid && !disabled,\n      ghost: ghost && !active && !disabled,\n      solid: (solid || active) && !disabled,\n      circle,\n      disabled,\n    };\n\n    return (\n      <div className=\"button-wrapper\">\n        <button\n          aria-label={aria}\n          className={cx('button', style)}\n          disabled={disabled}\n          onClick={() => handleOnClick()}\n        >\n          <span className={`icon-${icon}`} />\n        </button>\n      </div>\n    );\n  };\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  close: {\n    id: 'button.close.aria',\n    description: 'Aria label for the close button',\n  },\n});\n\nexport default class More extends PureComponent {\n  render() {\n    const {\n      children,\n      intl,\n      onClose,\n    } = this.props;\n\n    return (\n      <div className=\"modal-wrapper\">\n        <div className=\"modal\">\n          <div className=\"modal-control\">\n            <Button\n              aria={intl.formatMessage(intlMessages.close)}\n              circle\n              handleOnClick={onClose}\n              icon=\"close\"\n            />\n          </div>\n          <div className=\"modal-content\">\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  FormattedDate,\n  FormattedTime,\n} from 'react-intl';\nimport cx from 'classnames';\nimport Modal from 'components/utils/modal';\nimport './index.scss';\n\nconst BUILD = process.env.REACT_APP_BBB_PLAYBACK_BUILD;\n\nexport default class About extends PureComponent {\n  renderItem(key, value) {\n    let element;\n    if (typeof value === 'boolean') {\n      const icon = value ? 'icon-check' : 'icon-close';\n      element = <div className={cx(icon, { green: value, red: !value})} />;\n    } else {\n      element = value;\n    }\n\n    return (\n      <div className=\"item\">\n        <div className={`icon-${key}`} />\n        <div className=\"value\">\n          {element}\n        </div>\n      </div>\n    );\n  }\n\n  renderBody(metadata) {\n    const { content } = this.props;\n\n    const {\n      captions,\n      chat,\n      notes,\n      presentation,\n      screenshare,\n    } = content;\n\n    return (\n      <div className=\"about-body\">\n        {this.renderItem('users', metadata.participants)}\n        {this.renderItem('presentation', presentation)}\n        {this.renderItem('chat', chat)}\n        {this.renderItem('notes', notes)}\n        {this.renderItem('screenshare', screenshare)}\n        {this.renderItem('captions', captions)}\n      </div>\n    );\n  }\n\n  renderHeader(metadata) {\n    const {\n      end,\n      name,\n      start,\n    } = metadata;\n\n    const subtitle = [];\n    subtitle.push(\n      <FormattedDate\n        value={new Date(start)}\n        day=\"numeric\"\n        month=\"long\"\n        year=\"numeric\"\n      />\n    );\n\n    subtitle.push(<FormattedTime value={new Date(start)} />);\n    subtitle.push(<FormattedTime value={new Date(end)} />);\n\n    return (\n      <div className=\"about-header\">\n        <div className=\"title\">\n          {name}\n        </div>\n        <div className=\"subtitle\">\n          {subtitle.map(s => <div className=\"item\">{s}</div>)}\n        </div>\n      </div>\n    );\n  }\n\n  renderFooter() {\n    return (\n      <div className=\"about-footer\">\n        {BUILD ? this.renderItem('settings', BUILD) : null}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      metadata,\n      toggleModal,\n    } = this.props;\n\n    return (\n      <Modal\n        intl={intl}\n        onClose={toggleModal}\n      >\n        {this.renderHeader(metadata)}\n        {this.renderBody(metadata)}\n        {this.renderFooter()}\n      </Modal>\n    );\n  }\n}\n","import React from 'react';\nimport cx from 'classnames';\nimport { getAvatarStyle } from 'utils/data';\nimport './index.scss';\n\nconst Avatar = (props) => {\n  const {\n    initials,\n    name,\n  } = props;\n\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className={cx('avatar', getAvatarStyle(name))}>\n        <span className=\"initials\">\n          {initials}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport { FormattedTime } from 'react-intl';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport { getTimestampAsMilliseconds } from 'utils/data';\nimport './index.scss';\n\nexport default class Message extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { active } = this.props;\n\n    if (active !== nextProps.active) return true;\n\n    return false;\n  }\n\n  renderAvatar(active, name) {\n    const {\n      initials,\n      onClick,\n    } = this.props;\n\n    return (\n      <div\n        className={cx('interactive', { inactive: !active })}\n        onClick={onClick}\n        onKeyPress={(e) => e.key === 'Enter' ? onClick() : null}\n        tabIndex=\"0\"\n      >\n        <Avatar\n          active={active}\n          initials={initials}\n          name={name}\n        />\n      </div>\n    );\n  }\n\n  renderHyperlink(active, text) {\n    const options = {\n      className: cx('linkified', { inactive: !active }),\n    };\n\n    return (\n      <Linkify options={options}>\n        {text}\n      </Linkify>\n    );\n  }\n\n  renderContent(active, name) {\n    const {\n      hyperlink,\n      text,\n      timestamp,\n    } = this.props;\n\n    const milliseconds = getTimestampAsMilliseconds(timestamp);\n\n    return (\n      <div className=\"data\">\n        <div className=\"info\">\n          <div className={cx('name', { inactive: !active })}>\n            {name}\n          </div>\n          <div className={cx('time', { inactive: !active })}>\n            <FormattedTime\n              hourCycle=\"h23\"\n              hour=\"numeric\"\n              minute=\"numeric\"\n              second=\"numeric\"\n              timeZone=\"UTC\"\n              value={milliseconds}\n            />\n          </div>\n        </div>\n        <div className={cx('text', { inactive: !active })}>\n          {hyperlink ? this.renderHyperlink(active, text) : text}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      active,\n      name,\n    } = this.props;\n\n    return (\n      <div className=\"message\">\n        {this.renderAvatar(active, name)}\n        {this.renderContent(active, name)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { chat as config } from 'config';\nimport Message from './message';\nimport {\n  ID,\n  getScrollTop,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.chat.wrapper.aria',\n    description: 'Aria label for the chat wrapper',\n  },\n});\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.interaction = false;\n  }\n\n  componentDidMount() {\n    this.handleAutoScroll();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { currentDataIndex } = this.props;\n\n    if (currentDataIndex !== nextProps.currentDataIndex) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.handleAutoScroll();\n  }\n\n  handleAutoScroll() {\n    if (!config.scroll || this.interaction) return;\n\n    // Auto-scroll can start after getting the first and current nodes\n    if (this.firstNode && this.currentNode) {\n      const { parentNode } = this.currentNode;\n\n      parentNode.scrollTop = getScrollTop(this.firstNode, this.currentNode, config.align);\n    }\n  }\n\n  handleOnClick(timestamp) {\n    const { player } = this.props;\n\n    if (!player) return null;\n\n    player.currentTime(timestamp);\n  }\n\n  // Set node as ref so we can manage auto-scroll\n  setRef(node, index) {\n    const { currentDataIndex } = this.props;\n\n    if (index === 0) {\n      this.firstNode = node;\n    }\n\n    if (index === currentDataIndex) {\n      this.currentNode = node;\n    }\n  }\n\n  renderMessages() {\n    const {\n      chat,\n      currentDataIndex,\n    } = this.props;\n\n    return chat.map((item, index) => {\n      const {\n        hyperlink,\n        initials,\n        message,\n        name,\n        timestamp,\n      } = item;\n\n      const active = index <= currentDataIndex;\n\n      return (\n        <span ref={node => this.setRef(node, index)}>\n          <Message\n            active={active}\n            hyperlink={hyperlink}\n            initials={initials}\n            name={name}\n            onClick={() => this.handleOnClick(timestamp)}\n            text={message}\n            timestamp={timestamp}\n          />\n        </span>\n      );\n    });\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        aria-live=\"polite\"\n        className=\"chat-wrapper\"\n        id={ID.CHAT}\n        tabIndex=\"0\"\n      >\n        <div className=\"list\">\n          <div\n            className=\"message-wrapper\"\n            onMouseEnter={() => this.interaction = true}\n            onMouseLeave={() => this.interaction = false}\n          >\n            {this.renderMessages()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.notes.wrapper.aria',\n    description: 'Aria label for the notes wrapper',\n  },\n});\n\nexport default class Notes extends PureComponent {\n  render() {\n    const {\n      intl,\n      notes,\n    } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"notes-wrapper\"\n        id={ID.NOTES}\n        tabIndex=\"0\"\n      >\n        <div className=\"notes\">\n          <div dangerouslySetInnerHTML={{ __html: notes }} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport './index.scss';\n\nexport default class Cursor extends PureComponent {\n  render() {\n    const {\n      x,\n      y,\n    } = this.props;\n\n    if (x === -1 || y === -1) return null;\n\n    return (\n      <circle\n        className=\"cursor\"\n        style={{ cx: x, cy: y }}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst SCREENSHARE = 'deskshare';\n\nexport default class Slide extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  getProxy(id, height, width) {\n    const { thumbnails } = this.props;\n\n    const thumbnail = thumbnails.find(thumbnails => id === thumbnails.id);\n    if (!thumbnail) return null;\n\n    const {\n      alt,\n      src,\n    } = thumbnail;\n\n    if (src === SCREENSHARE) return null;\n\n    const logo = src.includes('logo');\n\n    return (\n      <foreignObject\n        height={height}\n        x={0}\n        width={width}\n        y={0}\n      >\n        <img\n          alt={alt}\n          className={cx('proxy', { logo })}\n          src={buildFileURL(this.recordId, src)}\n        />\n      </foreignObject>\n    );\n  }\n\n  render() {\n    const {\n      id,\n      slides,\n    } = this.props;\n\n    const current = slides.find(slide => id === slide.id);\n    if (!current) return null;\n\n    const {\n      height,\n      src,\n      width,\n    } = current;\n\n    return (\n      <g>\n        {this.getProxy(id, height, width)}\n        <image\n          height={height}\n          href={buildFileURL(this.recordId, src)}\n          x={0}\n          width={width}\n          y={0}\n        />\n      </g>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nexport default class Canvas extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  renderPolyline(style, data) {\n    return <polyline\n      style={style}\n      points={data.points}\n    />;\n  }\n\n  renderLine(style, data) {\n    return <line\n      style={style}\n      x1={data.x1}\n      y1={data.y1}\n      x2={data.x2}\n      y2={data.y2}\n    />;\n  }\n\n  renderPolygon(style, data) {\n    return <polygon\n      style={style}\n      points={data.points}\n    />;\n  }\n\n  renderPath(style, data) {\n    return <path\n      style={style}\n      d={data.d}\n    />;\n  }\n\n  renderCircle(style, data) {\n    return <circle\n      style={style}\n      cx={data.cx}\n      cy={data.cy}\n      r={data.r}\n    />;\n  }\n\n  renderText(style, data) {\n    return (\n      <foreignObject\n        style={style}\n        height={data.height}\n        width={data.width}\n        x={data.x}\n        y={data.y}\n      >\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">\n          {data.text.split('\\r').map(line => <span>{line}<br /></span>)}\n        </div>\n      </foreignObject>\n    );\n  }\n\n  renderPoll(style, data) {\n    const {\n      image,\n      rect,\n    } = data;\n\n    // TODO: Better adapt for old versions\n    // Versions prior to 2.3 included a rect structure along with an image\n    if (rect) {\n      return (\n        <g style={style}>\n          <rect\n            fill={rect.fill}\n            height={rect.height}\n            stroke={rect.stroke}\n            strokeWidth={rect['stroke-width']}\n            width={rect.width}\n            x={rect.x}\n            y={rect.y}\n          />\n          <image\n            height={image.height}\n            transform={image.transform}\n            width={image.width}\n            x={image.x}\n            href={buildFileURL(this.recordId, image['xlink:href'])}\n            y={image.y}\n          />\n        </g>\n      );\n    } else {\n       return (\n        <g style={style}>\n          <image\n            height={image.height}\n            width={image.width}\n            x={image.x}\n            href={buildFileURL(this.recordId, image['xlink:href'])}\n            y={image.y}\n          />\n        </g>\n      );\n    }\n  }\n\n  renderCanvas(drawsInterval) {\n    const { draws } = this.props;\n    const canvas = [];\n\n    for (let i = 0; i < drawsInterval.length; i++) {\n      if (!drawsInterval[i]) continue;\n\n      const {\n        id,\n        shape,\n        style,\n      } = draws[i];\n\n      const j = i + 1;\n      let intermediate = false;\n      if (j < drawsInterval.length) {\n        intermediate = draws[j].id === id;\n      }\n\n      if (intermediate) continue;\n\n      const {\n        data,\n        type,\n      } = shape;\n\n      switch (type) {\n        case 'poll':\n          canvas.push(this.renderPoll(style, data));\n          break;\n        case 'polyline':\n          canvas.push(this.renderPolyline(style, data));\n          break;\n        case 'line':\n          canvas.push(this.renderLine(style, data));\n          break;\n        case 'polygon':\n          canvas.push(this.renderPolygon(style, data));\n          break;\n        case 'path':\n          canvas.push(this.renderPath(style, data));\n          break;\n        case 'circle':\n          canvas.push(this.renderCircle(style, data));\n          break;\n        case 'text':\n          canvas.push(this.renderText(style, data));\n          break;\n        default:\n      }\n    }\n\n    return canvas;\n  }\n\n  render() {\n    const { drawsInterval } = this.props;\n\n    if (drawsInterval.length === 0) return null;\n\n    return (\n      <g>\n        {this.renderCanvas(drawsInterval)}\n      </g>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Cursor from './cursor';\nimport Slide from './slide';\nimport Canvas from './canvas';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.presentation.wrapper.aria',\n    description: 'Aria label for the presentation wrapper',\n  },\n});\n\nexport default class Presentation extends PureComponent {\n  getSlideId() {\n    const {\n      currentSlideIndex,\n      slides,\n    } = this.props;\n\n    const inactive = -1;\n    if (currentSlideIndex === -1) return inactive;\n\n    const currentData = slides[currentSlideIndex];\n\n    return currentData.id;\n  }\n\n  getViewBox() {\n    const {\n      currentPanzoomIndex,\n      panzooms,\n    } = this.props;\n\n    const inactive = {\n      height: 0,\n      x: 0,\n      width: 0,\n      y: 0,\n    };\n\n    if (currentPanzoomIndex === -1) return inactive;\n\n    const currentData = panzooms[currentPanzoomIndex];\n\n    return {\n      height: currentData.height,\n      x: currentData.x,\n      width: currentData.width,\n      y: currentData.y,\n    };\n  }\n\n  buildViewBoxAttr(viewBox) {\n    const {\n      height,\n      x,\n      width,\n      y,\n    } = viewBox;\n\n    return `${x} ${y} ${width} ${height}`;\n  }\n\n  getCursor(viewBox) {\n    const {\n      currentCursorIndex,\n      cursor,\n    } = this.props;\n\n    const inactive = {\n      x: -1,\n      y: -1,\n    }\n\n    if (currentCursorIndex === -1) return inactive;\n\n    const currentData = cursor[currentCursorIndex];\n    if (currentData.x === -1 && currentData.y === -1) return inactive;\n\n    return {\n      x: viewBox.x + (currentData.x * viewBox.width),\n      y: viewBox.y + (currentData.y * viewBox.height),\n    };\n  }\n\n  render() {\n    const {\n      active,\n      draws,\n      drawsInterval,\n      intl,\n      metadata,\n      slides,\n      thumbnails,\n    } = this.props;\n\n    const slideId = this.getSlideId();\n    const viewBox = this.getViewBox();\n    const cursor = this.getCursor(viewBox);\n    const canvasId = slideId;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('presentation-wrapper', { inactive: !active })}\n        id={ID.PRESENTATION}\n      >\n        <div className=\"presentation\">\n          <svg\n            viewBox={this.buildViewBoxAttr(viewBox)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <defs>\n              <clipPath id=\"viewBox\">\n                <rect\n                  height={viewBox.height}\n                  x={viewBox.x}\n                  width={viewBox.width}\n                  y={viewBox.y}\n                />\n              </clipPath>\n            </defs>\n            <g clipPath=\"url(#viewBox)\">\n              <Slide\n                id={slideId}\n                metadata={metadata}\n                slides={slides}\n                thumbnails={thumbnails}\n              />\n              <Canvas\n                draws={draws}\n                drawsInterval={drawsInterval}\n                id={canvasId}\n                metadata={metadata}\n              />\n              <Cursor\n                x={cursor.x}\n                y={cursor.y}\n              />\n            </g>\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { thumbnails as config } from 'config';\nimport Button from 'components/utils/button';\nimport {\n  ID,\n  buildFileURL,\n  getScrollLeft,\n  isEmpty,\n  isEqual,\n} from 'utils/data';\nimport './index.scss';\n\nconst SCREENSHARE = 'deskshare';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.thumbnails.wrapper.aria',\n    description: 'Aria label for the thumbnails wrapper',\n  },\n  clear: {\n    id: 'button.clear.aria',\n    description: 'Aria label for the clear button',\n  },\n});\n\nexport default class Thumbnails extends Component {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n    this.interaction = false;\n  }\n\n  componentDidMount() {\n    this.handleAutoScroll();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      currentDataIndex,\n      search,\n    } = this.props;\n\n    if (currentDataIndex !== nextProps.currentDataIndex) {\n      return true;\n    }\n\n    if (!isEqual(search, nextProps.search)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.handleAutoScroll();\n  }\n\n  handleOnClick(timestamp) {\n    const { player } = this.props;\n\n    if (!player) return null;\n\n    player.currentTime(timestamp);\n  }\n\n  handleAutoScroll() {\n    if (!config.scroll || this.interaction) return;\n\n    // Auto-scroll can start after getting the first and current nodes\n    if (this.firstNode && this.currentNode) {\n      const { parentNode } = this.currentNode;\n\n      parentNode.scrollLeft = getScrollLeft(this.firstNode, this.currentNode, config.align);\n    }\n  }\n\n  // Set node as ref so we can manage auto-scroll\n  setRef(node, index) {\n    const { currentDataIndex } = this.props;\n\n    if (index === 0) {\n      this.firstNode = node;\n    }\n\n    if (index === currentDataIndex) {\n      this.currentNode = node;\n    }\n  }\n\n  isFiltered(index) {\n    const {\n      interactive,\n      search,\n    } = this.props;\n\n    if (interactive) {\n      return !isEmpty(search) && !search.includes(index);\n    } else {\n      return !search.includes(index);\n    }\n  }\n\n  renderImage(item) {\n    const {\n      alt,\n      src,\n    } = item;\n\n    const screenshare = src === SCREENSHARE;\n\n    if (screenshare) {\n      return (\n        <div className={cx('thumbnail-image', { screenshare })}>\n          <span className=\"icon-screenshare\" />\n        </div>\n      );\n    }\n\n    const logo = src.includes('logo');\n\n    return (\n      <img\n        alt={alt}\n        className={cx('thumbnail-image', { logo })}\n        src={buildFileURL(this.recordId, src)}\n      />\n    );\n  }\n\n  renderThumbnail(item, index) {\n    const {\n      currentDataIndex,\n      interactive,\n    } = this.props;\n\n    if (!interactive) {\n      return (\n        <div\n          className=\"thumbnail-wrapper\"\n          tabIndex=\"0\"\n        >\n          <div className=\"thumbnail\">\n            {this.renderImage(item)}\n            <div className=\"thumbnail-index\">\n              {index + 1}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    const active = index === currentDataIndex;\n    const onClick = () => this.handleOnClick(item.timestamp);\n\n    const styles = {\n      active,\n      interactive,\n    };\n\n    return (\n      <div\n        className={cx('thumbnail-wrapper', styles)}\n        onClick={onClick}\n        onKeyPress={(e) => e.key === 'Enter' ? onClick() : null}\n        ref={node => this.setRef(node, index)}\n        tabIndex=\"0\"\n      >\n        <div className=\"thumbnail\">\n          {this.renderImage(item)}\n          <div className=\"thumbnail-index\">\n            {index + 1}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderThumbnails() {\n    const { thumbnails } = this.props;\n\n    return thumbnails.reduce((result, item, index) => {\n      if (!this.isFiltered(index)) {\n        result.push(this.renderThumbnail(item, index));\n      }\n\n      return result;\n    }, []);\n  }\n\n  renderClearButton() {\n    const { interactive } = this.props;\n    if (!interactive) return null;\n\n    const { search } = this.props;\n    if (isEmpty(search)) return null;\n\n    const {\n      handleSearch,\n      intl,\n    } = this.props;\n\n    return (\n      <div className=\"clear-button\">\n        <Button\n          aria={intl.formatMessage(intlMessages.clear)}\n          handleOnClick={() => handleSearch ? handleSearch([]) : null}\n          icon=\"close\"\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"thumbnails-wrapper\"\n        id={ID.THUMBNAILS}\n        onMouseEnter={() => this.interaction = true}\n        onMouseLeave={() => this.interaction = false}\n        tabIndex=\"0\"\n      >\n        {this.renderThumbnails()}\n        {this.renderClearButton()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Thumbnails from 'components/thumbnails';\nimport { search as config } from 'config';\nimport Button from 'components/utils/button';\nimport Modal from 'components/utils/modal';\nimport {\n  isEmpty,\n  isEqual,\n  search,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'player.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nexport default class Search extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      disabled: true,\n      search: [],\n    };\n  }\n\n  handleOnChange(event) {\n    if (!event || !event.target) return null;\n\n    const { value } = event.target;\n    if (value) {\n      const disabled = value.length < config.length.min;\n      if (!disabled) {\n        const { thumbnails } = this.props;\n        const result = search(value, thumbnails);\n\n        if (!isEqual(this.state.search, result, 'array')) {\n          this.setState({ search: result });\n        }\n      } else {\n        if (!isEmpty(this.state.search)) {\n          this.setState({ search: [] });\n        }\n      }\n\n      if (this.state.disabled !== disabled) {\n        this.setState({ disabled });\n      }\n    }\n  }\n\n  handleOnClick(event) {\n    const {\n      handleSearch,\n      toggleModal,\n    } = this.props;\n\n    const { search } = this.state;\n\n    handleSearch(search);\n    toggleModal();\n  }\n\n  renderBody() {\n    const {\n      intl,\n      metadata,\n      thumbnails,\n    } = this.props;\n\n    const { search } = this.state;\n\n    return (\n      <div className=\"search-body\">\n        <input\n          maxLength={config.length.max}\n          minLength={config.length.min}\n          onChange={(event) => this.handleOnChange(event)}\n          type=\"text\"\n        />\n        <div className={cx('result', { active: true })}>\n          <Thumbnails\n            currentDataIndex={0}\n            handleSearch={null}\n            interactive={false}\n            intl={intl}\n            metadata={metadata}\n            player={null}\n            search={search}\n            thumbnails={thumbnails}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderFooter() {\n    const { intl } = this.props;\n    const { disabled } = this.state;\n\n    return (\n      <div className=\"search-footer\">\n        <Button\n          aria={intl.formatMessage(intlMessages.search)}\n          disabled={disabled}\n          handleOnClick={(event) => this.handleOnClick(event)}\n          icon=\"search\"\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      toggleModal,\n    } = this.props;\n\n    return (\n      <Modal\n        intl={intl}\n        onClose={toggleModal}\n      >\n        {this.renderBody()}\n        {this.renderFooter()}\n      </Modal>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport videojs from 'video.js/core.es.js';\nimport {\n  ID,\n  buildFileURL,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.screenshare.wrapper.aria',\n    description: 'Aria label for the screenshare wrapper',\n  },\n});\n\nexport default class Screenshare extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      media,\n      metadata,\n    } = props;\n\n    const sources = [\n      {\n        src: buildFileURL(metadata.id, 'deskshare/deskshare.mp4'),\n        type: `video/mp4`,\n      }, {\n        src: buildFileURL(metadata.id, 'deskshare/deskshare.webm'),\n        type: `video/webm`,\n      },\n    ].filter(src => {\n      const { type } = src;\n\n      return media.find(m => type.includes(m));\n    });\n\n    this.options = {\n      controls: false,\n      fill: true,\n      sources,\n    };\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.node, this.options, () => {\n      const { onPlayerReady } = this.props;\n\n      if (onPlayerReady) onPlayerReady(ID.SCREENSHARE, this.player);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const {\n      active,\n      intl,\n    } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('screenshare-wrapper', { inactive: !active })}\n        id={ID.SCREENSHARE}\n      >\n        <div data-vjs-player>\n          <video\n            className=\"video-js\"\n            playsInline\n            preload=\"auto\"\n            ref={node => this.node = node}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport videojs from 'video.js/core.es.js';\nimport { video as config } from 'config';\nimport {\n  ID,\n  buildFileURL,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.video.wrapper.aria',\n    description: 'Aria label for the video wrapper',\n  },\n});\n\nexport default class Video extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      captions,\n      media,\n      metadata,\n    } = props;\n\n    const sources = [\n      {\n        src: buildFileURL(metadata.id, 'video/webcams.mp4'),\n        type: 'video/mp4',\n      }, {\n        src: buildFileURL(metadata.id, 'video/webcams.webm'),\n        type: 'video/webm',\n      },\n    ].filter(src => {\n      const { type } = src;\n\n      return media.find(m => type.includes(m));\n    });\n\n    const tracks = captions.map(lang => {\n      const {\n        locale,\n        localeName,\n      } = lang;\n\n      return {\n        kind: 'captions',\n        src: buildFileURL(metadata.id, `caption_${locale}.vtt`),\n        srclang: locale,\n        label: localeName,\n      };\n    });\n\n    this.options = {\n      controlBar: {\n        fullscreenToggle: false,\n        pictureInPictureToggle: false,\n        volumePanel: {\n          inline: false,\n          vertical: true,\n        },\n      },\n      controls: true,\n      fill: true,\n      inactivityTimeout: 0,\n      playbackRates: config.rates,\n      sources,\n      tracks,\n    };\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.node, this.options, () => {\n      const {\n        onPlayerReady,\n        onTimeUpdate,\n        time,\n      } = this.props;\n\n      if (onTimeUpdate) {\n        this.player.on('play', () => {\n          setInterval(() => {\n            const time = this.player.currentTime();\n            onTimeUpdate(time);\n          }, 1000 / config.rps);\n        });\n\n        this.player.on('pause', () => clearInterval());\n      }\n\n      if (time) {\n        this.player.on('loadedmetadata', () => {\n          const duration = this.player.duration();\n          if (time < duration) {\n            this.player.currentTime(time);\n          }\n        });\n      }\n\n      if (onPlayerReady) onPlayerReady(ID.VIDEO, this.player);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"video-wrapper\"\n        id={ID.VIDEO}\n      >\n        <div data-vjs-player>\n          <video\n            className=\"video-js\"\n            playsInline\n            preload=\"auto\"\n            ref={node => this.node = node}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './index.scss';\n\nexport default () => {\n  return <div className=\"bottom-bar\" />;\n}\n","import React, { PureComponent } from 'react';\nimport {\n  defineMessages,\n  FormattedDate,\n} from 'react-intl';\nimport cx from 'classnames';\nimport { controls as config } from 'config';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  about: {\n    id: 'button.about.aria',\n    description: 'Aria label for the about button',\n  },\n  section: {\n    id: 'button.section.aria',\n    description: 'Aria label for the section button',\n  },\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n  swap: {\n    id: 'button.swap.aria',\n    description: 'Aria label for the swap button',\n  },\n});\n\nexport default class TopBar extends PureComponent {\n  renderSearchButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      toggleSearch,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.search)}\n        circle\n        handleOnClick={toggleSearch}\n        icon=\"search\"\n      />\n    );\n  }\n\n  renderSectionButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      section,\n      toggleSection,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.section)}\n        circle\n        handleOnClick={toggleSection}\n        icon={section ? 'arrow-left' : 'arrow-right'}\n      />\n    );\n  }\n\n  renderSwapButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      toggleSwap,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.swap)}\n        circle\n        handleOnClick={toggleSwap}\n        icon=\"swap\"\n      />\n    );\n  }\n\n  renderTitle(interactive) {\n    const {\n      name,\n      start,\n    } = this.props;\n\n    const date = <FormattedDate value={new Date(start)} />;\n\n    if (interactive) {\n      const {\n        intl,\n        toggleAbout,\n      } = this.props;\n\n      return (\n        <span\n          aria={intl.formatMessage(intlMessages.about)}\n          className={cx('title', { interactive })}\n          onClick={toggleAbout}\n          onKeyPress={(e) => e.key === 'Enter' ? toggleAbout() : null}\n          tabIndex=\"0\"\n        >\n          {name} - {date}\n        </span>\n      );\n    }\n\n    return (\n      <span className=\"title\">\n        {name} - {date}\n      </span>\n    );\n  }\n\n  render() {\n    const {\n      control,\n      single,\n    } = this.props;\n\n    const {\n      about,\n      search,\n      section,\n      swap,\n    } = config;\n\n    return (\n      <div className=\"top-bar\">\n        <div className=\"left\">\n          {this.renderSectionButton(control && section)}\n        </div>\n        <div className=\"center\">\n          {this.renderTitle(control && about)}\n        </div>\n        <div className=\"right\">\n          {this.renderSearchButton(control && search && !single)}\n          {this.renderSwapButton(control && swap && !single)}\n        </div>\n      </div>\n    );\n  }\n}\n","import { parseStringPromise } from 'xml2js';\nimport { files as config } from 'config';\nimport {\n  getFileType,\n  hasProperty,\n  isEmpty,\n} from './data';\nimport logger from './logger';\n\nconst getAttr = data => {\n  if (!data) return {};\n\n  const attr = data['$'];\n  if (!attr) return {};\n\n  return attr;\n};\n\nconst getChildren = data => {\n  if (!data) return [];\n\n  const children = data['$$'];\n  if (!children) return [];\n\n  return children;\n};\n\nconst getId = data => {\n  if (!data) return -1;\n\n  const id = data.match(/\\d+$/);\n  if (!id || id.length === 0) return -1;\n\n  return parseInt(id.shift(), 10);\n};\n\nconst getNumbers = data => {\n  if (!data) return [];\n\n  const trimmed = data.trim().replace(/  +/g, ' ');\n  if (trimmed.length === 0) return [];\n\n  const split = trimmed.split(' ');\n  const numbers = split.map(v => parseFloat(v));\n\n  return numbers;\n};\n\nconst buildAlternates = result => {\n  if (!result) return [];\n\n  let data = [];\n  for (const presentation in result) {\n    if (hasProperty(result, presentation)) {\n      const slides = result[presentation];\n\n      for (const slide in slides) {\n        if (hasProperty(slides, slide)) {\n          const text = slides[slide];\n\n          data.push({\n            src: `presentation/${presentation}/${slide}.png`,\n            text,\n          });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\n// TODO\nconst buildCaptions = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\nconst buildMetadata = result => {\n  let data = {};\n  const { recording } = result;\n\n  if (hasProperty(recording, 'meeting')) {\n    const attr = getAttr(recording.meeting.shift());\n    const { id } = attr;\n    const meta = recording.meta.shift();\n    const end = parseInt(recording.end_time.shift(), 10);\n    const name = meta.name ? meta.name.shift() : attr.name;\n    const participants = parseInt(recording.participants.shift(), 10);\n    const start = parseInt(recording.start_time.shift(), 10);\n\n    data = {\n      end,\n      id,\n      name,\n      participants,\n      start,\n    };\n  }\n\n  return data;\n};\n\nconst buildNotes = result => {\n  if (!result) return '';\n\n  // Extract the notes' body\n  const regex = /<body>\\n.*\\n<\\/body>/g;\n  const match = result.match(regex);\n\n  let data = '';\n  if (!isEmpty(match)) {\n    data = match.shift();\n  }\n\n  return data;\n};\n\nconst buildStyle = data => {\n  const items = data.split(';');\n  let style = {};\n\n  items.forEach(item => {\n    const trimmed = item.trim();\n\n    if (trimmed.length === 0) return;\n\n    const split = trimmed.split(':').map(i => i.trim());\n\n    // Remove visibility\n    if (split[0] === 'visibility') return;\n\n    style[split[0]] = split[1];\n  });\n\n  return style;\n};\n\nconst buildSlides = image => {\n  let slides = [];\n\n  if (image) {\n    image.forEach(img => {\n      const attr = getAttr(img);\n      const src = attr['xlink:href'];\n\n      // Skip the logo\n      if (!src) return;\n\n      // Get the number from the id name\n      const slideId = getId(attr.id);\n      const timestamps = getNumbers(attr.in);\n\n      timestamps.forEach(timestamp => {\n        slides.push({\n          id: slideId,\n          height: parseInt(attr.height),\n          src,\n          timestamp,\n          width: parseInt(attr.width),\n        });\n      });\n    });\n\n    slides = slides.sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  return slides;\n};\n\nconst buildThumbnails = slides => {\n  const screenshare = 'deskshare';\n  const prefix = 'slide-';\n  const url = 'thumbnails/thumb-';\n\n  return slides.reduce((result, slide) => {\n    const {\n      id,\n      src,\n      timestamp,\n    } = slide;\n\n    if (src.includes(screenshare)) {\n      result.push({\n        id,\n        src: screenshare,\n        timestamp,\n      });\n    } else {\n      result.push({\n        id,\n        src: src.replace(prefix, url),\n        timestamp,\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nconst parseText = data => {\n  let text = '';\n\n  const children = getChildren(data);\n  if (!isEmpty(children)) {\n    const child = children.shift();\n    const grandchildren = getChildren(child);\n    if (!isEmpty(grandchildren)) {\n      text = grandchildren.map(grandchild => {\n        const name = grandchild['#name'];\n        if (name === 'br') return '\\r';\n\n        return grandchild['_'];\n      }).join('');\n    }\n  }\n\n  return text;\n};\n\nconst buildCanvases = group => {\n  let canvases = [];\n\n  if (group) {\n    canvases = group.map(canvas => {\n      const canvasAttr = getAttr(canvas);\n      // Get the number from the id name\n      const canvasId = getId(canvasAttr.id);\n\n      let draws = canvas.g.map(g => {\n        const drawAttr = getAttr(g);\n        const timestamp = parseFloat(drawAttr.timestamp);\n        const clear = parseFloat(drawAttr.undo);\n        const style = buildStyle(drawAttr.style);\n        const drawId = getId(drawAttr.shape);\n\n        let shape = {};\n        if (g.image) {\n          shape.type = 'poll';\n          const image = getAttr(g.image.shift());\n          // TODO: Better adapt for old versions\n          // Versions prior to 2.3 included a rect structure along with an image\n          if (g.rect) {\n            const rect = getAttr(g.rect.shift());\n            shape.data = Object.assign({ rect }, { image });\n          } else {\n            shape.data = Object.assign({ image });\n          }\n        } else if (g.polyline) {\n          shape.type = 'polyline';\n          shape.data = Object.assign({}, getAttr(g.polyline.shift()));\n        } else if (g.line) {\n          shape.type = 'line';\n          shape.data = Object.assign({}, getAttr(g.line.shift()));\n        } else if (g.polygon) {\n          shape.type = 'polygon';\n          shape.data = Object.assign({}, getAttr(g.polygon.shift()));\n        } else if (g.circle) {\n          shape.type = 'circle';\n          shape.data = Object.assign({}, getAttr(g.circle.shift()));\n        } else if (g.path) {\n          shape.type = 'path';\n          shape.data = Object.assign({}, getAttr(g.path.shift()));\n        } else if (g.switch) {\n          shape.type = 'text';\n          const foreignObject = g.switch.shift()['foreignObject'].shift();\n          const text = parseText(foreignObject);\n          shape.data = Object.assign({ text }, getAttr(foreignObject));\n        }\n\n        return {\n          clear,\n          id: drawId,\n          shape,\n          style,\n          timestamp,\n        };\n      });\n\n      return {\n        draws,\n        id: canvasId,\n      };\n    });\n  }\n\n  return canvases;\n};\n\nconst buildShapes = result => {\n  let data = {};\n  const { svg } = result;\n\n  if (svg) {\n    const {\n      image,\n      g,\n    } = svg;\n\n    data.slides = buildSlides(image);\n    data.thumbnails = buildThumbnails(data.slides);\n    data.canvases = buildCanvases(g);\n  }\n\n  return data;\n};\n\nconst buildPanzooms = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(panzoom => {\n      const attr = getAttr(panzoom);\n      const viewbox = getNumbers(panzoom.viewBox.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: viewbox.shift(),\n        y: viewbox.shift(),\n        width: viewbox.shift(),\n        height: viewbox.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildCursor = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(cursor => {\n      const attr = getAttr(cursor);\n      const position = getNumbers(cursor.cursor.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: position.shift(),\n        y: position.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst clearHyperlink = message => {\n  const regex = /<a href=\"(.*)\" rel=\"nofollow\"><u>\\1<\\/u><\\/a>/g;\n\n  return message.replace(regex, '$1');\n};\n\nconst decodeXML = message => {\n  return message\n    .replace(/&(quot|#34);/g, '\"')\n    .replace(/&(amp|#38);/g, '&')\n    .replace(/&(apos|#39);/g, \"'\")\n    .replace(/&(lt|#60);/g, '<')\n    .replace(/&(gt|#62);/g, '>');\n};\n\nconst getInitials = name => {\n  let initials;\n\n  if (name) {\n    initials = name\n      .slice(0, 2)\n      .toLowerCase()\n      .trim();\n  }\n\n  return initials;\n};\n\nconst buildChat = result => {\n  const { popcorn } = result;\n  let data = [];\n\n  if (hasProperty(popcorn, 'chattimeline')) {\n    const { chattimeline } = popcorn;\n    data = chattimeline.map(chat => {\n      const attr = getAttr(chat);\n      const clear = attr.out ? parseFloat(attr.out) : -1;\n      const message = decodeXML(clearHyperlink(attr.message));\n      const initials = getInitials(attr.name);\n\n      return {\n        clear,\n        hyperlink: message !== attr.message,\n        initials,\n        name: attr.name,\n        message,\n        timestamp: parseFloat(attr.in),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildScreenshare = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(screenshare => {\n      const attr = getAttr(screenshare);\n\n      return {\n        timestamp: parseFloat(attr.start_timestamp),\n        clear: parseFloat(attr.stop_timestamp),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst getOptions = filename => {\n  let options = {};\n\n  switch (filename) {\n    case config.data.shapes:\n      options = {\n        explicitChildren: true,\n        preserveChildrenOrder: true,\n        charsAsChildren: true,\n      };\n      break;\n    default:\n  }\n\n  return options;\n};\n\nconst build = (filename, value) => {\n  return new Promise((resolve, reject) => {\n    let data;\n    const fileType = getFileType(filename);\n\n    if (fileType === 'json') {\n      switch (filename) {\n        case config.data.alternates:\n          data = buildAlternates(value);\n          break;\n        case config.data.captions:\n          data = buildCaptions(value);\n          break;\n        default:\n          logger.debug('unhandled', 'json', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else if (fileType === 'html') {\n      switch (filename) {\n        case config.data.notes:\n          data = buildNotes(value);\n          break;\n        default:\n          logger.debug('unhandled', 'html', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else {\n      if (!value) {\n        logger.warn('missing', filename);\n\n        return resolve(null);\n      }\n\n      // Parse XML data\n      const options = getOptions(filename);\n      parseStringPromise(value, options).then(result => {\n        switch (filename) {\n          case config.data.chat:\n            data = buildChat(result);\n            break;\n          case config.data.cursor:\n            data = buildCursor(result);\n            break;\n          case config.data.metadata:\n            data = buildMetadata(result);\n            break;\n          case config.data.panzooms:\n            data = buildPanzooms(result);\n            break;\n          case config.data.screenshare:\n            data = buildScreenshare(result);\n            break;\n          case config.data.shapes:\n            data = buildShapes(result);\n            break;\n          default:\n            logger.debug('unhandled', 'xml', filename);\n            reject(filename);\n        }\n        resolve(data);\n      }).catch(error => reject(error));\n    }\n  });\n};\n\nconst addAlternatesToThumbnails = (thumbnails, alternates) => {\n  const prefix = 'thumbnails/thumb-';\n  const url = 'slide-';\n\n  return thumbnails.map(thumbnail => {\n    const { src } = thumbnail;\n    thumbnail.alt = '';\n\n    const found = alternates.find(alt => src.replace(prefix, url) === alt.src);\n    if (found) thumbnail.alt = found.text;\n\n    return thumbnail;\n  });\n};\n\nexport {\n  addAlternatesToThumbnails,\n  build,\n  buildStyle,\n  decodeXML,\n  getAttr,\n  getId,\n  getNumbers,\n};\n","import { controls } from 'config';\nimport {\n  getContentFromData,\n  getControlFromLayout,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  isContentVisible,\n} from 'utils/data';\n\nexport default class Layout {\n  constructor(data, layout) {\n    this.content = getContentFromData(data);\n    this.layout = layout;\n  }\n\n  getContent() {\n    return this.content;\n  }\n\n  initControl() {\n    return getControlFromLayout(this.layout);\n  }\n\n  initSection() {\n    return getSectionFromLayout(this.layout);\n  }\n\n  initSwap() {\n    return getSwapFromLayout(this.layout);\n  }\n\n  getBottomContentStyle(state) {\n    const {\n      fullscreen,\n      thumbnails,\n    } = state;\n\n    const bottom = thumbnails && !fullscreen;\n    const style = { 'inactive': !bottom };\n\n    return style;\n  }\n\n  getContentStyle(state) {\n    const { swap } = state;\n    const style = { 'swapped-content': swap };\n\n    return style;\n  }\n\n  getMediaStyle(state) {\n    const { swap } = state;\n    const single = this.isSingle();\n    const style = { 'swapped-media': swap || single };\n\n    return style;\n  }\n\n  getPlayerStyle(state) {\n    const {\n      fullscreen,\n      section,\n    } = state;\n\n    const single = this.isSingle();\n\n    const style = {\n      'fullscreen-content': fullscreen,\n      'hidden-section': !section,\n      'single-content': single,\n    };\n\n    return style;\n  }\n\n  hasFullscreenButton(layout, state) {\n    const {\n      control,\n      swap,\n    } = state;\n\n    if (!control || !controls.fullscreen) return false;\n\n    const single = this.isSingle();\n    if (!isContentVisible(layout, swap || single)) return false;\n\n    return true;\n  }\n\n  hasScreenshare() {\n    const { screenshare } = this.content;\n\n    return screenshare;\n  }\n\n  isSingle() {\n    const {\n      presentation,\n      screenshare,\n    } = this.content;\n\n    return !presentation && !screenshare;\n  }\n}\n","import { shortcuts as config } from 'config';\nimport logger from './logger';\n\nexport default class Shortcuts {\n  constructor(actions) {\n    this.enabled = config.enabled;\n\n    if (!this.enabled) {\n      logger.debug('shortcuts', 'disabled');\n    } else {\n      this.init(actions);\n    }\n  }\n\n  init(actions) {\n    this.listeners = [];\n\n    for (let prop in actions) {\n      const value = actions[prop];\n      if (typeof value === 'function') {\n        const key = config[prop];\n        this.add(key, value);\n      } else {\n        for (let p in value) {\n          const k = config[prop][p];\n          const v = value[p];\n          this.add(k, v);\n        }\n      }\n    }\n  }\n\n  add(key, action) {\n    if (!key || typeof key !== 'string') {\n      logger.warn('shortcuts', 'invalid', 'key');\n      return null;\n    } else if (key.length === 0) {\n      return null;\n    }\n\n    if (!action || typeof action !== 'function') {\n      logger.warn('shortcuts', 'invalid', 'action');\n      return null;\n    }\n\n    const listener = document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.shiftKey) {\n        if (e.key === key) action();\n      }\n    });\n\n    this.listeners.push(listener);\n  }\n\n  destroy() {\n    this.listeners.forEach(listener => {\n      document.removeEventListener(listener);\n    });\n  }\n}\n","import logger from './logger';\n\nconst STATUSES = [\n  'canplay',\n  'seeking',\n  'waiting',\n];\n\nconst EVENTS = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'interruptbegin',\n  'interruptend',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'mozaudioavailable',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  //'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\nexport default class Synchronizer {\n  constructor(primary, secondary) {\n    this.primary = primary;\n    this.secondary = secondary;\n\n    this.status = {\n      primary: 'waiting',\n      secondary: 'waiting',\n    }\n\n    this.synching = false;\n\n    this.init();\n  }\n\n  init() {\n    STATUSES.forEach(status => {\n      this.primary.on(status, () => this.status.primary = status);\n      this.secondary.on(status, () => this.status.secondary = status);\n    });\n\n    this.primary.on('play', () => this.secondary.play());\n    this.primary.on('pause', () => this.secondary.pause());\n\n    this.primary.on('seeking', () => {\n      const currentTime = this.primary.currentTime();\n      this.secondary.currentTime(currentTime);\n    });\n\n    this.primary.on('ratechange', () => {\n      const playbackRate = this.primary.playbackRate();\n      this.secondary.playbackRate(playbackRate);\n    });\n\n    this.primary.on('waiting', () => {\n      if (!this.synching && this.status.secondary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.primary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    this.secondary.on('waiting', () => {\n      if (!this.synching && this.status.primary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.secondary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    EVENTS.forEach(event => {\n      this.primary.on(event, () => logger.debug(`primary ${event} ${this.status.primary}`));\n      this.secondary.on(event, () => logger.debug(`secondary ${event} ${this.status.secondary}`));\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { shortcuts } from 'config';\nimport About from './about';\nimport Chat from './chat';\nimport Notes from './notes';\nimport Presentation from './presentation';\nimport Search from './search';\nimport Screenshare from './screenshare';\nimport Thumbnails from './thumbnails';\nimport Video from './video';\nimport BottomBar from './bars/bottom';\nimport TopBar from './bars/top';\nimport Button from './utils/button';\nimport { addAlternatesToThumbnails } from 'utils/builder';\nimport {\n  ID,\n  LAYOUT,\n  getActiveContent,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  isEqual,\n  seek,\n  skip,\n} from 'utils/data';\nimport Layout from 'utils/layout';\nimport logger from 'utils/logger';\nimport Shortcuts from 'utils/shortcuts';\nimport Synchronizer from 'utils/synchronizer';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.wrapper.aria',\n    description: 'Aria label for the player wrapper',\n  },\n  fullscreen: {\n    id: 'button.fullscreen.aria',\n    description: 'Aria label for the fullscreen button',\n  },\n  restore: {\n    id: 'button.restore.aria',\n    description: 'Aria label for the restore button',\n  },\n});\n\nexport default class Player extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      data,\n      layout,\n    } = props;\n\n    this.layout = new Layout(data, layout);\n\n    this.state = {\n      application: ID.CHAT,\n      control: this.layout.initControl(),\n      fullscreen: false,\n      modal: '',\n      search: [],\n      section: this.layout.initSection(),\n      swap: this.layout.initSwap(),\n      thumbnails: true,\n      time: 0,\n    }\n\n    this.player = {\n      video: null,\n      screenshare: null,\n    };\n\n    this.initData(data);\n\n    this.handlePlayerReady = this.handlePlayerReady.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.initShortcuts();\n  }\n\n  componentWillUnmount() {\n    if (this.shortcuts) {\n      this.shortcuts.destroy();\n    }\n  }\n\n  initData(data) {\n    this.alternates = getData(data, ID.ALTERNATES);\n    this.captions = getData(data, ID.CAPTIONS);\n    this.chat = getData(data, ID.CHAT);\n    this.cursor = getData(data, ID.CURSOR);\n    this.metadata = getData(data, ID.METADATA);\n    this.notes = getData(data, ID.NOTES);\n    this.panzooms = getData(data, ID.PANZOOMS);\n    this.screenshare = getData(data, ID.SCREENSHARE);\n    this.shapes = getData(data, ID.SHAPES);\n\n    this.canvases = this.shapes.canvases;\n    this.slides = this.shapes.slides;\n    this.thumbnails = addAlternatesToThumbnails(this.shapes.thumbnails, this.alternates);\n\n    logger.debug(ID.PLAYER, data);\n  }\n\n  handlePlayerReady(media, player) {\n    switch (media) {\n      case ID.VIDEO:\n        logger.debug(ID.PLAYER, 'ready', ID.VIDEO);\n        this.player.video = player;\n        break;\n      case ID.SCREENSHARE:\n        logger.debug(ID.PLAYER, 'ready', ID.SCREENSHARE);\n        this.player.screenshare = player;\n        break;\n      default:\n        logger.debug('unhandled', media);\n    }\n\n    if (this.player.video && this.player.screenshare) {\n      this.synchronizer = new Synchronizer(this.player.video, this.player.screenshare);\n    }\n  }\n\n  handleSearch(value) {\n    const { search } = this.state;\n\n    if (!isEqual(search, value, 'array')) {\n      this.setState({ search: value });\n    }\n  }\n\n  handleTimeUpdate(value) {\n    const { time } = this.state;\n\n    if (time !== value) {\n      this.setState({ time: value });\n    }\n  }\n\n  initShortcuts() {\n    const { seconds } = shortcuts.video;\n\n    const actions = {\n      fullscreen: () => this.toggleFullscreen(),\n      section: () => this.toggleSection(),\n      swap: () => this.toggleSwap(),\n      thumbnails: () => this.toggleThumbnails(),\n      slides: {\n        next: () => skip(this.player, this.slides, +1),\n        previous: () => skip(this.player, this.slides, -1),\n      },\n      video: {\n        backward: () => seek(this.player, -seconds),\n        forward: () => seek(this.player, +seconds),\n      },\n    };\n\n    this.shortcuts = new Shortcuts(actions);\n  }\n\n  toggleApplication(type) {\n    const { application } = this.state;\n\n    if (application === type) return null;\n\n    this.setState({ application: type });\n  }\n\n  toggleFullscreen() {\n    const { fullscreen } = this.state;\n\n    this.setState({ fullscreen: !fullscreen });\n  }\n\n  toggleModal(type) {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    this.setState({ modal: open ? '' : type });\n  }\n\n  toggleSection() {\n    const { section } = this.state;\n\n    this.setState({ section: !section });\n  }\n\n  toggleSwap() {\n    const { swap } = this.state;\n\n    this.setState({ swap: !swap });\n  }\n\n  toggleThumbnails() {\n    const { thumbnails } = this.state;\n\n    this.setState({ thumbnails: !thumbnails });\n  }\n\n  renderFullscreenButton(layout) {\n    if (!this.layout.hasFullscreenButton(layout, this.state)) return null;\n\n    const { intl } = this.props;\n    const { fullscreen } = this.state;\n\n    const aria = fullscreen\n      ? intl.formatMessage(intlMessages.restore)\n      : intl.formatMessage(intlMessages.fullscreen)\n    ;\n\n    const icon = fullscreen ? 'restore' : 'fullscreen';\n\n    return (\n      <div className=\"fullscreen-button\">\n        <Button\n          aria={aria}\n          handleOnClick={() => this.toggleFullscreen()}\n          icon={icon}\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  renderModal() {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    if (!open) return null;\n\n    const { intl } = this.props;\n    const content = this.layout.getContent();\n\n    switch (modal) {\n      case ID.ABOUT:\n        return (\n          <About\n            content={content}\n            intl={intl}\n            metadata={this.metadata}\n            toggleModal={() => this.toggleModal(ID.ABOUT)}\n          />\n        );\n      case ID.SEARCH:\n        return (\n          <Search\n            intl={intl}\n            handleSearch={this.handleSearch}\n            metadata={this.metadata}\n            thumbnails={this.thumbnails}\n            toggleModal={() => this.toggleModal(ID.SEARCH)}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderThumbnails() {\n    const { intl } = this.props;\n\n    const {\n      search,\n      time,\n    } = this.state;\n\n    const { video } = this.player;\n\n    const currentDataIndex = getCurrentDataIndex(this.thumbnails, time);\n\n    return (\n      <Thumbnails\n        currentDataIndex={currentDataIndex}\n        handleSearch={this.handleSearch}\n        interactive={true}\n        intl={intl}\n        metadata={this.metadata}\n        player={video}\n        search={search}\n        thumbnails={this.thumbnails}\n      />\n    );\n  }\n\n  renderTopBar() {\n    const { intl } = this.props;\n\n    const {\n      control,\n      section,\n    } = this.state;\n\n    const {\n      name,\n      start,\n    } = this.metadata;\n\n    const single = this.layout.isSingle();\n\n    return (\n      <TopBar\n        control={control}\n        intl={intl}\n        name={name}\n        section={section}\n        single={single}\n        start={start}\n        toggleAbout={() => this.toggleModal(ID.ABOUT)}\n        toggleSearch={() => this.toggleModal(ID.SEARCH)}\n        toggleSection={() => this.toggleSection()}\n        toggleSwap={() => this.toggleSwap()}\n      />\n    );\n  }\n\n  renderMedia() {\n    const {\n      data,\n      intl,\n      time,\n    } = this.props;\n\n    const { media } = data;\n\n    return (\n      <div className={cx('media', this.layout.getMediaStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.MEDIA)}\n        <Video\n          captions={this.captions}\n          intl={intl}\n          media={media}\n          metadata={this.metadata}\n          onPlayerReady={this.handlePlayerReady}\n          onTimeUpdate={this.handleTimeUpdate}\n          time={time}\n        />\n      </div>\n    );\n  }\n\n  renderApplicationIcon(type) {\n    const { application } = this.state;\n    const active = application === type;\n\n    return (\n      <div\n        className={cx('application-icon', { inactive: !active })}\n        onClick={() => active ? null : this.toggleApplication(type)}\n      >\n        <span className={`icon-${type}`} />\n      </div>\n    );\n  }\n\n  renderApplicationContent() {\n    const { intl } = this.props;\n    const { application } = this.state;\n\n    switch (application) {\n      case ID.CHAT:\n        const { time } = this.state;\n        const { video } = this.player;\n        const currentChatIndex = getCurrentDataIndex(this.chat, time);\n\n        return (\n          <Chat\n            chat={this.chat}\n            currentDataIndex={currentChatIndex}\n            intl={intl}\n            player={video}\n          />\n        );\n      case ID.NOTES:\n        return (\n          <Notes\n            notes={this.notes}\n            intl={intl}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderApplicationControl() {\n    const { control } = this.state;\n\n    if (!control) return null;\n\n    return (\n      <div className=\"application-control\">\n        {this.renderApplicationIcon(ID.CHAT)}\n        {this.renderApplicationIcon(ID.NOTES)}\n      </div>\n    );\n  }\n\n  renderApplication() {\n    return (\n      <div className=\"application\">\n        {this.renderApplicationControl()}\n        {this.renderApplicationContent()}\n      </div>\n    );\n  }\n\n  renderPresentation(active) {\n    const { intl } = this.props;\n    const { time } = this.state;\n\n    const currentSlideIndex = getCurrentDataIndex(this.slides, time);\n    const currentPanzoomIndex = getCurrentDataIndex(this.panzooms, time);\n    const currentCursorIndex = getCurrentDataIndex(this.cursor, time);\n    const draws = getDraws(currentSlideIndex, this.slides, this.canvases);\n    const currentDrawsInterval = getCurrentDataInterval(draws, time);\n\n    return (\n      <Presentation\n        active={active}\n        currentCursorIndex={currentCursorIndex}\n        currentPanzoomIndex={currentPanzoomIndex}\n        currentSlideIndex={currentSlideIndex}\n        cursor={this.cursor}\n        draws={draws}\n        drawsInterval={currentDrawsInterval}\n        intl={intl}\n        metadata={this.metadata}\n        panzooms={this.panzooms}\n        slides={this.slides}\n        thumbnails={this.thumbnails}\n      />\n    )\n  }\n\n  renderScreenshare(active) {\n    if (!this.layout.hasScreenshare()) return null;\n\n    const {\n      intl,\n      data,\n    } = this.props;\n\n    const { media } = data;\n\n    return (\n      <Screenshare\n        active={active}\n        intl={intl}\n        media={media}\n        metadata={this.metadata}\n        onPlayerReady={this.handlePlayerReady}\n      />\n    );\n  }\n\n  renderContent() {\n    if (this.layout.isSingle()) return null;\n\n    const { time } = this.state;\n    const content = getActiveContent(this.screenshare, time);\n\n    return (\n      <div className={cx('content', this.layout.getContentStyle(this.state))}>\n        {this.renderFullscreenButton(LAYOUT.CONTENT)}\n        <div className=\"top-content\">\n          {this.renderPresentation(content === ID.PRESENTATION)}\n          {this.renderScreenshare(content === ID.SCREENSHARE)}\n        </div>\n        <div className={cx('bottom-content', this.layout.getBottomContentStyle(this.state))}>\n          {this.renderThumbnails()}\n        </div>\n      </div>\n    );\n  }\n\n  renderBottomBar() {\n    return <BottomBar />;\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('player-wrapper', this.layout.getPlayerStyle(this.state))}\n        id={ID.PLAYER}\n      >\n        {this.renderTopBar()}\n        {this.renderMedia()}\n        {this.renderApplication()}\n        {this.renderContent()}\n        {this.renderBottomBar()}\n        {this.renderModal()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  defineMessages,\n  injectIntl,\n} from 'react-intl';\nimport config from 'config';\nimport Error from './error';\nimport Player from './player';\nimport { build } from 'utils/builder';\nimport {\n  ID,\n  buildFileURL,\n  getFileName,\n  getFileType,\n  getLayout,\n  getRecordId,\n  getTime,\n} from 'utils/data';\nimport logger from 'utils/logger';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'loader.wrapper.aria',\n    description: 'Aria label for the loader wrapper',\n  },\n});\n\nclass Loader extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      location,\n      match,\n    } = props;\n\n    this.counter = 0;\n    this.data = {};\n    this.layout = getLayout(location);\n    this.recordId = getRecordId(match);\n    this.time = getTime(location);\n\n    this.state = {\n      error: this.recordId ? null : config.error['NOT_FOUND'],\n      loaded: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.recordId) return;\n\n    const { data } = config.files;\n\n    for (const file in data) {\n      this.fetchFile(this.recordId, data[file]);\n    }\n\n    this.fetchMedia();\n  }\n\n  fetchFile(recordId, file) {\n    const url = buildFileURL(recordId, file);\n    fetch(url).then(response => {\n      if (response.ok) {\n        logger.debug(ID.LOADER, file, response);\n        const fileType = getFileType(file);\n        switch (fileType) {\n          case 'json':\n            return response.json();\n          case 'html':\n            return response.text();\n          case 'svg':\n            return response.text();\n          case 'xml':\n            return response.text();\n          default:\n            this.setState({ error: config.error['BAD_REQUEST'] });\n            throw Error(file);\n        }\n      } else {\n        logger.warn('loader', file, response);\n        return null;\n      }\n    }).then(value => {\n      build(file, value).then(data => {\n        if (data) logger.debug(ID.LOADER, 'builded', file);\n        this.data[getFileName(file)] = data;\n        this.update();\n      }).catch(error => this.setState({ error: config.error['BAD_REQUEST'] }));\n    }).catch(error => this.setState({ error: config.error['NOT_FOUND'] }));\n  }\n\n  fetchMedia() {\n    const fetches = config.medias.map(type => {\n      const url = buildFileURL(this.recordId, `video/webcams.${type}`);\n      return fetch(url, { method: 'HEAD' });\n    });\n\n    Promise.all(fetches).then(responses => {\n      const media = [];\n      responses.forEach(response => {\n        const { ok, url } = response;\n        if (ok) {\n          logger.debug(ID.LOADER, 'media', response);\n          media.push(config.medias.find(type => url.endsWith(type)));\n        }\n      });\n\n      if (media.length > 0) {\n        this.data.media = media;\n        this.update();\n      } else {\n        // TODO: Handle audio medias\n        this.setState({ error: config.error['NOT_FOUND'] });\n      }\n    });\n  }\n\n  update() {\n    this.counter = this.counter + 1;\n    // TODO: Better control\n    if (this.counter > Object.keys(config.files.data).length) {\n      const { loaded } = this.state;\n      if (!loaded) this.setState({ loaded: true });\n    }\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    const {\n      error,\n      loaded,\n    } = this.state;\n\n    if (error) {\n      return (\n        <Error\n          code={error}\n        />\n      );\n    }\n\n    if (loaded) {\n      return (\n        <Player\n          data={this.data}\n          intl={intl}\n          layout={this.layout}\n          time={this.time}\n        />\n      );\n    }\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"loader-wrapper\"\n        id={ID.LOADER}\n      >\n        <div className=\"loading-dots\">\n          <div className=\"first\" />\n          <div className=\"second\" />\n          <div className=\"third\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Loader);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { error } from 'config';\nimport Error from 'components/error';\nimport Loader from './loader';\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route\n          path=\"/:recordId\"\n          component={Loader}\n        />\n        <Route render={(props) => <Error {...props} code={error['NOT_FOUND']} />} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import ar from './ar.json';\nimport de from './de.json';\nimport en from './en.json';\nimport es from './es.json';\nimport fa from './fa.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport ja from './ja.json';\nimport pt from './pt.json';\nimport ru from './ru.json';\nimport tr from './tr.json';\n\nexport default {\n  ar,\n  de,\n  en,\n  es,\n  fa,\n  fr,\n  it,\n  ja,\n  pt,\n  ru,\n  tr,\n};\n","import { locale as config } from 'config';\nimport messages from './messages';\n\nconst RTL_LOCALES = ['ar', 'fa'];\n\nconst setDirection = (locale) => {\n  if (RTL_LOCALES.includes(locale)) {\n    document.body.parentNode.setAttribute('dir', 'rtl');\n  } else {\n    document.body.parentNode.setAttribute('dir', 'ltr');\n  }\n};\n\nconst getLocale = () => {\n  const locale = navigator.language.split(/[-_]/)[0];\n\n  setDirection(locale);\n\n  if (!messages[locale]) return config.default;\n\n  return locale;\n};\n\nconst getMessages = () => {\n  return messages;\n};\n\nexport {\n  getLocale,\n  getMessages,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from \"react-intl\";\nimport Loader from 'components/loader';\nimport Router from 'components/router';\nimport {\n  getLocale,\n  getMessages,\n} from 'locales';\nimport {\n  ROUTER,\n  getStyle,\n} from 'utils/data';\nimport './index.scss';\n\nconst locale = getLocale();\nconst messages = getMessages();\nconst style = getStyle();\n\nReactDOM.render(\n  (\n    <IntlProvider\n      locale={locale}\n      messages={messages[locale]}\n    >\n      {style ? <link rel=\"stylesheet\" type=\"text/css\" href={style} /> : null}\n      {ROUTER ? <Router /> : <Loader />}\n    </IntlProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}