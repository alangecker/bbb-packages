akka {
  actor {
    debug {
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
    }
  }
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  
  redis-publish-worker-dispatcher {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 512
    }
    
  redis-subscriber-worker-dispatcher {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 512
    }
}

redis {
    host="127.0.0.1"
    port=6379
    password=""
    # recording keys should expire in 14 days
    keyExpiry=1209600
}

expire {
  # time in seconds
  lastUserLeft = 60
  neverJoined = 300
  maxRegUserToJoin = 300
}

services {
  bbbWebAPI = "https://192.168.23.33/bigbluebutton/api"
  sharedSecret = "changeme"
}

red5 {
    deskshareip="10.130.218.89"
    deskshareapp="video-broadcast"
}

eventBus {
  meetingManagerChannel = "MeetingManagerChannel"
  outMessageChannel = "OutgoingMessageChannel"
  incomingJsonMsgChannel = "IncomingJsonMsgChannel"
  outBbbMsgMsgChannel = "OutBbbMsgChannel"
}

http {
  interface = "127.0.0.1"
  port = 9999
}

services {
  telizeHost = "www.telize.com"
  telizePort = 80
}

apps {
  checkPermissions = true
  ejectOnViolation = false
  endMeetingWhenNoMoreAuthedUsers = false
  endMeetingWhenNoMoreAuthedUsersAfterMinutes = 2
}

voiceConf {
  recordPath = "/var/freeswitch/meetings"
  # Use ogg instead of wav to get smaller audio files.
  # Valid values "wav", "ogg", "flac", "opus"
  recordCodec = "opus"
  # Interval seconds to check if FreeSWITCH is recording.
  checkRecordingInterval = 23
  # Internval seconds to sync voice users status.
  syncUserStatusInterval = 41
}

recording {
  # set zero to disable chapter break
  chapterBreakLengthInMinutes = 0
}

whiteboard {
  multiUserDefault = false
}

