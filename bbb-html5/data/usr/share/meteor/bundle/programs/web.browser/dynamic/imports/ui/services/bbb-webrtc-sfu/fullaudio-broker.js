function module(e,t,r){let o,s;r.link("/imports/startup/client/logger",{default(e){o=e}},0),r.link("/imports/ui/services/bbb-webrtc-sfu/sfu-base-broker",{default(e){s=e}},1);const n="iceCandidate",i="subscriberAnswer",a="dtmf",c="fullaudio";class d extends s{constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};super(c,e),this.role=t,this.offering=!0,Object.assign(this,r)}getLocalStream(){return this.webRtcPeer&&this.webRtcPeer.peerConnection?this.webRtcPeer.peerConnection.getLocalStreams()[0]:null}setLocalStream(e){if(null==this.webRtcPeer||null==this.webRtcPeer.peerConnection)throw new Error("Missing peer connection");const{peerConnection:t}=this.webRtcPeer,r=e.getAudioTracks(),o=this.getLocalStream(),s=o?o.getAudioTracks():[];return t.getSenders().forEach(((e,t)=>{if(e.track&&"audio"===e.track.kind){const n=r[t];if(null==n)return;const i=s[t];e.replaceTrack(n),i&&(i.stop(),o.removeTrack(i)),o.addTrack(n)}})),Promise.resolve()}joinAudio(){return new Promise(((e,t)=>{const r={mediaConstraints:{audio:!this.constraints||this.constraints,video:!1},configuration:this.populatePeerConfiguration(),onicecandidate:e=>{this.onIceCandidate(e,this.role)}},n="sendrecv"===this.role?kurentoUtils.WebRtcPeer.WebRtcPeerSendrecv:kurentoUtils.WebRtcPeer.WebRtcPeerRecvonly;return this.webRtcPeer=n(r,(r=>{if(r){const e=s.assembleError(1305);return o.error({logCode:"".concat(this.logCodePrefix,"_peer_creation_failed"),extraInfo:{errorMessage:r.name||r.message||"Unknown error",errorCode:e.errorCode,sfuComponent:this.sfuComponent,started:this.started}},"Audio peer creation failed"),this.onerror(e),t(e)}return this.webRtcPeer.iceQueue=[],this.offering?this.webRtcPeer.generateOffer(this.onOfferGenerated.bind(this)):this.sendStartReq(),e()})),this.webRtcPeer.peerConnection.onconnectionstatechange=this.handleConnectionStateChange.bind(this),e()}))}listen(){return this.openWSConnection().then(this.joinAudio.bind(this))}onWSMessage(e){const t=JSON.parse(e.data);switch(t.id){case"startResponse":this.onRemoteDescriptionReceived(t);break;case"iceCandidate":this.handleIceCandidate(t.candidate);break;case"webRTCAudioSuccess":this.onstart(t.success),this.started=!0;break;case"webRTCAudioError":case"error":this.handleSFUError(t);break;case"pong":break;default:o.debug({logCode:"".concat(this.logCodePrefix,"_invalid_req"),extraInfo:{messageId:t.id||"Unknown",sfuComponent:this.sfuComponent}},"Discarded invalid SFU message")}}handleSFUError(e){const{code:t,reason:r,role:n}=e,i=s.assembleError(t,r);o.error({logCode:"".concat(this.logCodePrefix,"_sfu_error"),extraInfo:{errorCode:t,errorMessage:i.errorMessage,role:n,sfuComponent:this.sfuComponent,started:this.started}},"Listen only failed in SFU"),this.onerror(i)}sendLocalDescription(e){const t={id:i,type:this.sfuComponent,role:this.role,sdpOffer:e};this.sendMessage(t)}onRemoteDescriptionReceived(e){return this.offering?this.processAnswer(e):this.processOffer(e)}sendStartReq(e){const t={id:"start",type:this.sfuComponent,role:this.role,caleeName:this.caleeName,sdpOffer:e,mediaServer:this.mediaServer,extension:this.extension};o.debug({logCode:"".concat(this.logCodePrefix,"_offer_generated"),extraInfo:{sfuComponent:this.sfuComponent,role:this.role}},"SFU audio offer generated"),this.sendMessage(t)}onOfferGenerated(e,t){if(e)return o.error({logCode:"".concat(this.logCodePrefix,"_offer_failure"),extraInfo:{errorMessage:e.name||e.message||"Unknown error",sfuComponent:this.sfuComponent}},"Listen only offer generation failed"),this.onerror(e);this.sendStartReq(t)}dtmf(e){const t={id:a,type:this.sfuComponent,tones:e};this.sendMessage(t)}onIceCandidate(e,t){const r={id:n,role:t,type:this.sfuComponent,candidate:e};this.sendMessage(r)}}r.exportDefault(d)}

