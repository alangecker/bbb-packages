{"version":3,"sources":["meteor://ðŸ’»app/packages/react-meteor-data/react-meteor-data.jsx","meteor://ðŸ’»app/packages/react-meteor-data/ReactMeteorData.jsx","meteor://ðŸ’»app/packages/react-meteor-data/createContainer.jsx"],"names":["checkNpmVersions","module","link","v","default","ReactMeteorData","react","export","connect","React","Meteor","Tracker","MeteorDataManager","constructor","component","computation","oldData","dispose","stop","calculateData","getMeteorData","isServer","data","nonreactive","autorun","c","firstRun","savedSetState","setState","Error","forceUpdate","Package","mongo","Mongo","Object","keys","forEach","key","Cursor","console","warn","updateData","newData","componentWillMount","_meteorDataManager","componentWillUpdate","nextProps","nextState","saveProps","props","saveState","state","componentWillUnmount","ReactComponent","Component","assign","prototype","ReactPureComponent","PureComponent","options","expandedOptions","pure","BaseComponent","WrappedComponent","ReactMeteorDataComponent","render","createContainer","hasDisplayedWarning","isDevelopment"],"mappings":"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","file":"/packages/react-meteor-data.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n\ncheckNpmVersions({\n  react: '15.3 - 16',\n}, 'react-meteor-data');\n\nexport { default as createContainer } from './createContainer.jsx';\nexport { default as withTracker } from './ReactMeteorData.jsx';\nexport { ReactMeteorData } from './ReactMeteorData.jsx';\n","/* global Package */\n/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\n// A class to keep the state and utility methods needed to manage\n// the Meteor data for a component.\nclass MeteorDataManager {\n  constructor(component) {\n    this.component = component;\n    this.computation = null;\n    this.oldData = null;\n  }\n\n  dispose() {\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n  }\n\n  calculateData() {\n    const component = this.component;\n\n    if (!component.getMeteorData) {\n      return null;\n    }\n\n    // When rendering on the server, we don't want to use the Tracker.\n    // We only do the first rendering on the server so we can get the data right away\n    if (Meteor.isServer) {\n      return component.getMeteorData();\n    }\n\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n\n    let data;\n    // Use Tracker.nonreactive in case we are inside a Tracker Computation.\n    // This can happen if someone calls `ReactDOM.render` inside a Computation.\n    // In that case, we want to opt out of the normal behavior of nested\n    // Computations, where if the outer one is invalidated or stopped,\n    // it stops the inner one.\n    this.computation = Tracker.nonreactive(() => (\n      Tracker.autorun((c) => {\n        if (c.firstRun) {\n          const savedSetState = component.setState;\n          try {\n            component.setState = () => {\n              throw new Error(\n                'Can\\'t call `setState` inside `getMeteorData` as this could '\n                + 'cause an endless loop. To respond to Meteor data changing, '\n                + 'consider making this component a \\\"wrapper component\\\" that '\n                + 'only fetches data and passes it in as props to a child '\n                + 'component. Then you can use `componentWillReceiveProps` in '\n                + 'that child component.');\n            };\n\n            data = component.getMeteorData();\n          } finally {\n            component.setState = savedSetState;\n          }\n        } else {\n          // Stop this computation instead of using the re-run.\n          // We use a brand-new autorun for each call to getMeteorData\n          // to capture dependencies on any reactive data sources that\n          // are accessed.  The reason we can't use a single autorun\n          // for the lifetime of the component is that Tracker only\n          // re-runs autoruns at flush time, while we need to be able to\n          // re-call getMeteorData synchronously whenever we want, e.g.\n          // from componentWillUpdate.\n          c.stop();\n          // Calling forceUpdate() triggers componentWillUpdate which\n          // recalculates getMeteorData() and re-renders the component.\n          component.forceUpdate();\n        }\n      })\n    ));\n\n    if (Package.mongo && Package.mongo.Mongo) {\n      Object.keys(data).forEach((key) => {\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\n          console.warn(\n            'Warning: you are returning a Mongo cursor from getMeteorData. '\n            + 'This value will not be reactive. You probably want to call '\n            + '`.fetch()` on the cursor before returning it.'\n          );\n        }\n      });\n    }\n\n    return data;\n  }\n\n  updateData(newData) {\n    const component = this.component;\n    const oldData = this.oldData;\n\n    if (!(newData && (typeof newData) === 'object')) {\n      throw new Error('Expected object returned from getMeteorData');\n    }\n    // update componentData in place based on newData\n    for (let key in newData) {\n      component.data[key] = newData[key];\n    }\n    // if there is oldData (which is every time this method is called\n    // except the first), delete keys in newData that aren't in\n    // oldData.  don't interfere with other keys, in case we are\n    // co-existing with something else that writes to a component's\n    // this.data.\n    if (oldData) {\n      for (let key in oldData) {\n        if (!(key in newData)) {\n          delete component.data[key];\n        }\n      }\n    }\n    this.oldData = newData;\n  }\n}\n\nexport const ReactMeteorData = {\n  componentWillMount() {\n    this.data = {};\n    this._meteorDataManager = new MeteorDataManager(this);\n    const newData = this._meteorDataManager.calculateData();\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    const saveProps = this.props;\n    const saveState = this.state;\n    let newData;\n    try {\n      // Temporarily assign this.state and this.props,\n      // so that they are seen by getMeteorData!\n      // This is a simulation of how the proposed Observe API\n      // for React will work, which calls observe() after\n      // componentWillUpdate and after props and state are\n      // updated, but before render() is called.\n      // See https://github.com/facebook/react/issues/3398.\n      this.props = nextProps;\n      this.state = nextState;\n      newData = this._meteorDataManager.calculateData();\n    } finally {\n      this.props = saveProps;\n      this.state = saveState;\n    }\n\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUnmount() {\n    this._meteorDataManager.dispose();\n  },\n};\n\nclass ReactComponent extends React.Component {}\nObject.assign(ReactComponent.prototype, ReactMeteorData);\nclass ReactPureComponent extends React.PureComponent {}\nObject.assign(ReactPureComponent.prototype, ReactMeteorData);\n\nexport default function connect(options) {\n  let expandedOptions = options;\n  if (typeof options === 'function') {\n    expandedOptions = {\n      getMeteorData: options,\n    };\n  }\n\n  const { getMeteorData, pure = true } = expandedOptions;\n\n  const BaseComponent = pure ? ReactPureComponent : ReactComponent;\n  return (WrappedComponent) => (\n    class ReactMeteorDataComponent extends BaseComponent {\n      getMeteorData() {\n        return getMeteorData(this.props);\n      }\n      render() {\n        return <WrappedComponent {...this.props} {...this.data} />;\n      }\n    }\n  );\n}\n","/**\n * Container helper using react-meteor-data.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport connect from './ReactMeteorData.jsx';\n\nlet hasDisplayedWarning = false;\n\nexport default function createContainer(options, Component) {\n  if (!hasDisplayedWarning && Meteor.isDevelopment) {\n    console.warn(\n      'Warning: createContainer was deprecated in react-meteor-data@0.2.13. Use withTracker instead.\\n' +\n        'https://github.com/meteor/react-packages/tree/devel/packages/react-meteor-data#usage',\n    );\n    hasDisplayedWarning = true;\n  }\n\n  return connect(options)(Component);\n}\n"]}