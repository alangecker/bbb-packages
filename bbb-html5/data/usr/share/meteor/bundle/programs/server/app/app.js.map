{"version":3,"sources":["meteor://ğŸ’»app/imports/api/annotations/server/handlers/whiteboardAnnotations.js","meteor://ğŸ’»app/imports/api/annotations/server/handlers/whiteboardCleared.js","meteor://ğŸ’»app/imports/api/annotations/server/handlers/whiteboardSend.js","meteor://ğŸ’»app/imports/api/annotations/server/handlers/whiteboardUndo.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/clearWhiteboard.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/sendAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/sendAnnotationHelper.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/sendBulkAnnotations.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/undoAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/server/modifiers/addAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/server/modifiers/clearAnnotations.js","meteor://ğŸ’»app/imports/api/annotations/server/modifiers/removeAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/annotations/server/index.js","meteor://ğŸ’»app/imports/api/annotations/server/methods.js","meteor://ğŸ’»app/imports/api/annotations/server/publishers.js","meteor://ğŸ’»app/imports/api/annotations/server/streamer.js","meteor://ğŸ’»app/imports/api/annotations/addAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/index.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/breakoutClosed.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/breakoutJoinURL.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/breakoutStarted.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/joinedUsersChanged.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/updateTimeRemaining.js","meteor://ğŸ’»app/imports/api/breakouts/server/methods/createBreakout.js","meteor://ğŸ’»app/imports/api/breakouts/server/methods/endAllBreakouts.js","meteor://ğŸ’»app/imports/api/breakouts/server/methods/requestJoinURL.js","meteor://ğŸ’»app/imports/api/breakouts/server/modifiers/clearBreakouts.js","meteor://ğŸ’»app/imports/api/breakouts/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/breakouts/server/index.js","meteor://ğŸ’»app/imports/api/breakouts/server/methods.js","meteor://ğŸ’»app/imports/api/breakouts/server/publishers.js","meteor://ğŸ’»app/imports/api/breakouts/index.js","meteor://ğŸ’»app/imports/api/captions/server/handlers/padCreate.js","meteor://ğŸ’»app/imports/api/captions/server/handlers/padUpdate.js","meteor://ğŸ’»app/imports/api/captions/server/methods/appendText.js","meteor://ğŸ’»app/imports/api/captions/server/methods/createCaptions.js","meteor://ğŸ’»app/imports/api/captions/server/methods/editCaptions.js","meteor://ğŸ’»app/imports/api/captions/server/methods/fetchReadOnlyPadId.js","meteor://ğŸ’»app/imports/api/captions/server/methods/takeOwnership.js","meteor://ğŸ’»app/imports/api/captions/server/methods/updateOwner.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/addCaption.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/clearCaptions.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/updateOwnerId.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/updatePad.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/updateReadOnlyPadId.js","meteor://ğŸ’»app/imports/api/captions/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/captions/server/helpers.js","meteor://ğŸ’»app/imports/api/captions/server/index.js","meteor://ğŸ’»app/imports/api/captions/server/methods.js","meteor://ğŸ’»app/imports/api/captions/server/publishers.js","meteor://ğŸ’»app/imports/api/captions/index.js","meteor://ğŸ’»app/imports/api/cursor/server/handlers/cursorUpdate.js","meteor://ğŸ’»app/imports/api/cursor/server/methods/publishCursorUpdate.js","meteor://ğŸ’»app/imports/api/cursor/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/cursor/server/index.js","meteor://ğŸ’»app/imports/api/cursor/server/methods.js","meteor://ğŸ’»app/imports/api/cursor/server/streamer.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/destroyExternalVideo.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/emitExternalVideoEvent.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/initializeExternalVideo.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/startWatchingExternalVideo.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/stopWatchingExternalVideo.js","meteor://ğŸ’»app/imports/api/external-videos/server/index.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods.js","meteor://ğŸ’»app/imports/api/group-chat/server/handlers/groupChatCreated.js","meteor://ğŸ’»app/imports/api/group-chat/server/handlers/groupChatDestroyed.js","meteor://ğŸ’»app/imports/api/group-chat/server/handlers/groupChats.js","meteor://ğŸ’»app/imports/api/group-chat/server/methods/createGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat/server/methods/destroyGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat/server/modifiers/addGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat/server/modifiers/clearGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/group-chat/server/index.js","meteor://ğŸ’»app/imports/api/group-chat/server/methods.js","meteor://ğŸ’»app/imports/api/group-chat/server/publishers.js","meteor://ğŸ’»app/imports/api/group-chat/index.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/handlers/clearPublicGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/handlers/groupChatMsgBroadcast.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/handlers/syncGroupsChat.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/handlers/userTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods/clearPublicChatHistory.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods/sendGroupChatMsg.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods/startUserTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods/stopUserTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/addBulkGroupChatMsgs.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/addGroupChatMsg.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/clearGroupChatMsg.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/startTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/stopTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/syncMeetingChatMsgs.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/index.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/publishers.js","meteor://ğŸ’»app/imports/api/group-chat-msg/index.js","meteor://ğŸ’»app/imports/api/guest-users/server/handlers/guestApproved.js","meteor://ğŸ’»app/imports/api/guest-users/server/handlers/guestsWaitingForApproval.js","meteor://ğŸ’»app/imports/api/guest-users/server/methods/allowPendingUsers.js","meteor://ğŸ’»app/imports/api/guest-users/server/methods/changeGuestPolicy.js","meteor://ğŸ’»app/imports/api/guest-users/server/modifiers/setGuestStatus.js","meteor://ğŸ’»app/imports/api/guest-users/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/guest-users/server/index.js","meteor://ğŸ’»app/imports/api/guest-users/server/methods.js","meteor://ğŸ’»app/imports/api/guest-users/server/publishers.js","meteor://ğŸ’»app/imports/api/guest-users/index.js","meteor://ğŸ’»app/imports/api/local-settings/server/methods/userChangedLocalSettings.js","meteor://ğŸ’»app/imports/api/local-settings/server/modifiers/clearLocalSettings.js","meteor://ğŸ’»app/imports/api/local-settings/server/modifiers/setChangedLocalSettings.js","meteor://ğŸ’»app/imports/api/local-settings/server/index.js","meteor://ğŸ’»app/imports/api/local-settings/server/methods.js","meteor://ğŸ’»app/imports/api/local-settings/server/publishers.js","meteor://ğŸ’»app/imports/api/local-settings/index.js","meteor://ğŸ’»app/imports/api/log-client/server/methods/logClient.js","meteor://ğŸ’»app/imports/api/log-client/server/index.js","meteor://ğŸ’»app/imports/api/log-client/server/methods.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/getAllMeetings.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/meetingCreation.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/meetingDestruction.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/meetingEnd.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/meetingLockChange.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/recordingStatusChange.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/recordingTimerChange.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/timeRemainingUpdate.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/userLockChange.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/webcamOnlyModerator.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/endMeeting.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/toggleLockSettings.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/toggleRecording.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/toggleWebcamsOnlyForModerator.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/transferUser.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/addMeeting.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/changeLockSettings.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/changeUserLock.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/clearRecordMeeting.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/meetingHasEnded.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/setPublishedPoll.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/webcamOnlyModerator.js","meteor://ğŸ’»app/imports/api/meetings/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/meetings/server/index.js","meteor://ğŸ’»app/imports/api/meetings/server/methods.js","meteor://ğŸ’»app/imports/api/meetings/server/publishers.js","meteor://ğŸ’»app/imports/api/meetings/index.js","meteor://ğŸ’»app/imports/api/network-information/server/methods/userInstabilityDetected.js","meteor://ğŸ’»app/imports/api/network-information/server/modifiers/clearNetworkInformation.js","meteor://ğŸ’»app/imports/api/network-information/server/index.js","meteor://ğŸ’»app/imports/api/network-information/server/methods.js","meteor://ğŸ’»app/imports/api/network-information/server/publisher.js","meteor://ğŸ’»app/imports/api/network-information/index.js","meteor://ğŸ’»app/imports/api/note/server/handlers/padUpdate.js","meteor://ğŸ’»app/imports/api/note/server/methods/createNote.js","meteor://ğŸ’»app/imports/api/note/server/modifiers/addNote.js","meteor://ğŸ’»app/imports/api/note/server/modifiers/clearNote.js","meteor://ğŸ’»app/imports/api/note/server/modifiers/updateNote.js","meteor://ğŸ’»app/imports/api/note/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/note/server/helpers.js","meteor://ğŸ’»app/imports/api/note/server/index.js","meteor://ğŸ’»app/imports/api/note/server/publishers.js","meteor://ğŸ’»app/imports/api/note/index.js","meteor://ğŸ’»app/imports/api/ping-pong/server/methods/ping.js","meteor://ğŸ’»app/imports/api/ping-pong/server/index.js","meteor://ğŸ’»app/imports/api/ping-pong/server/methods.js","meteor://ğŸ’»app/imports/api/ping-pong/server/publishers.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/pollPublished.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/pollStarted.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/pollStopped.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/userResponded.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/userVoted.js","meteor://ğŸ’»app/imports/api/polls/server/methods/publishPoll.js","meteor://ğŸ’»app/imports/api/polls/server/methods/publishVote.js","meteor://ğŸ’»app/imports/api/polls/server/methods/startPoll.js","meteor://ğŸ’»app/imports/api/polls/server/methods/stopPoll.js","meteor://ğŸ’»app/imports/api/polls/server/modifiers/addPoll.js","meteor://ğŸ’»app/imports/api/polls/server/modifiers/clearPolls.js","meteor://ğŸ’»app/imports/api/polls/server/modifiers/removePoll.js","meteor://ğŸ’»app/imports/api/polls/server/modifiers/updateVotes.js","meteor://ğŸ’»app/imports/api/polls/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/polls/server/index.js","meteor://ğŸ’»app/imports/api/polls/server/methods.js","meteor://ğŸ’»app/imports/api/polls/server/publishers.js","meteor://ğŸ’»app/imports/api/polls/index.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/handlers/createNewPresentationPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/handlers/removePresentationPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/handlers/setPresenterInPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/handlers/syncGetPresentationPods.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/modifiers/addPresentationPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/modifiers/clearPresentationPods.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/modifiers/removePresentationPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/modifiers/setPresenterInPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/index.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/publishers.js","meteor://ğŸ’»app/imports/api/presentation-pods/index.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/handlers/presentationUploadTokenFail.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/handlers/presentationUploadTokenPass.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/methods/requestPresentationUploadToken.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/methods/setUsedToken.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/modifiers/clearPresentationUploadToken.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/index.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/methods.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/publishers.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/index.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationAdded.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationConversionUpdate.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationCurrentSet.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationDownloadableSet.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationRemove.js","meteor://ğŸ’»app/imports/api/presentations/server/methods/removePresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/methods/setPresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/methods/setPresentationDownloadable.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/addPresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/clearPresentations.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/removePresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/setCurrentPresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/setPresentationDownloadable.js","meteor://ğŸ’»app/imports/api/presentations/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/presentations/server/index.js","meteor://ğŸ’»app/imports/api/presentations/server/methods.js","meteor://ğŸ’»app/imports/api/presentations/server/publishers.js","meteor://ğŸ’»app/imports/api/presentations/index.js","meteor://ğŸ’»app/imports/api/screenshare/server/handlers/screenshareStarted.js","meteor://ğŸ’»app/imports/api/screenshare/server/handlers/screenshareStopped.js","meteor://ğŸ’»app/imports/api/screenshare/server/modifiers/addScreenshare.js","meteor://ğŸ’»app/imports/api/screenshare/server/modifiers/clearScreenshare.js","meteor://ğŸ’»app/imports/api/screenshare/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/screenshare/server/index.js","meteor://ğŸ’»app/imports/api/screenshare/server/methods.js","meteor://ğŸ’»app/imports/api/screenshare/server/publishers.js","meteor://ğŸ’»app/imports/api/screenshare/index.js","meteor://ğŸ’»app/imports/api/slides/server/handlers/slideChange.js","meteor://ğŸ’»app/imports/api/slides/server/handlers/slideResize.js","meteor://ğŸ’»app/imports/api/slides/server/methods/switchSlide.js","meteor://ğŸ’»app/imports/api/slides/server/methods/zoomSlide.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/addSlide.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/addSlidePositions.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/changeCurrentSlide.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/clearSlides.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/clearSlidesPresentation.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/resizeSlide.js","meteor://ğŸ’»app/imports/api/slides/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/slides/server/helpers.js","meteor://ğŸ’»app/imports/api/slides/server/index.js","meteor://ğŸ’»app/imports/api/slides/server/methods.js","meteor://ğŸ’»app/imports/api/slides/server/publishers.js","meteor://ğŸ’»app/imports/api/slides/index.js","meteor://ğŸ’»app/imports/api/users/server/handlers/changeRole.js","meteor://ğŸ’»app/imports/api/users/server/handlers/emojiStatus.js","meteor://ğŸ’»app/imports/api/users/server/handlers/getUsers.js","meteor://ğŸ’»app/imports/api/users/server/handlers/presenterAssigned.js","meteor://ğŸ’»app/imports/api/users/server/handlers/removeUser.js","meteor://ğŸ’»app/imports/api/users/server/handlers/userEjected.js","meteor://ğŸ’»app/imports/api/users/server/handlers/userInactivityInspect.js","meteor://ğŸ’»app/imports/api/users/server/handlers/userJoin.js","meteor://ğŸ’»app/imports/api/users/server/handlers/userJoined.js","meteor://ğŸ’»app/imports/api/users/server/handlers/validateAuthToken.js","meteor://ğŸ’»app/imports/api/users/server/methods/assignPresenter.js","meteor://ğŸ’»app/imports/api/users/server/methods/changeRole.js","meteor://ğŸ’»app/imports/api/users/server/methods/removeUser.js","meteor://ğŸ’»app/imports/api/users/server/methods/setEmojiStatus.js","meteor://ğŸ’»app/imports/api/users/server/methods/setUserEffectiveConnectionType.js","meteor://ğŸ’»app/imports/api/users/server/methods/toggleUserLock.js","meteor://ğŸ’»app/imports/api/users/server/methods/userActivitySign.js","meteor://ğŸ’»app/imports/api/users/server/methods/userLeaving.js","meteor://ğŸ’»app/imports/api/users/server/methods/userLeftMeeting.js","meteor://ğŸ’»app/imports/api/users/server/methods/validateAuthToken.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/addDialInUser.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/addUser.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/changePresenter.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/changeRole.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/clearUsers.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/createDummyUser.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/removeUser.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/setConnectionIdAndAuthToken.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/setUserEffectiveConnectionType.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/userEjected.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/userInactivityInspect.js","meteor://ğŸ’»app/imports/api/users/server/store/bannedUsers.js","meteor://ğŸ’»app/imports/api/users/server/store/pendingAuthentications.js","meteor://ğŸ’»app/imports/api/users/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/users/server/index.js","meteor://ğŸ’»app/imports/api/users/server/methods.js","meteor://ğŸ’»app/imports/api/users/server/publishers.js","meteor://ğŸ’»app/imports/api/users/index.js","meteor://ğŸ’»app/imports/api/users-infos/server/handlers/userInformation.js","meteor://ğŸ’»app/imports/api/users-infos/server/methods/removeUserInformation.js","meteor://ğŸ’»app/imports/api/users-infos/server/methods/requestUserInformation.js","meteor://ğŸ’»app/imports/api/users-infos/server/modifiers/addUserInfo.js","meteor://ğŸ’»app/imports/api/users-infos/server/modifiers/clearUserInfo.js","meteor://ğŸ’»app/imports/api/users-infos/server/modifiers/clearUserInfoForRequester.js","meteor://ğŸ’»app/imports/api/users-infos/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/users-infos/server/index.js","meteor://ğŸ’»app/imports/api/users-infos/server/methods.js","meteor://ğŸ’»app/imports/api/users-infos/server/publishers.js","meteor://ğŸ’»app/imports/api/users-infos/index.js","meteor://ğŸ’»app/imports/api/users-settings/server/methods/addUserSettings.js","meteor://ğŸ’»app/imports/api/users-settings/server/modifiers/addUserSetting.js","meteor://ğŸ’»app/imports/api/users-settings/server/modifiers/clearUsersSettings.js","meteor://ğŸ’»app/imports/api/users-settings/server/index.js","meteor://ğŸ’»app/imports/api/users-settings/server/methods.js","meteor://ğŸ’»app/imports/api/users-settings/server/publishers.js","meteor://ğŸ’»app/imports/api/users-settings/index.js","meteor://ğŸ’»app/imports/api/video-streams/server/handlers/userSharedHtml5Webcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/handlers/userUnsharedHtml5Webcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/methods/userShareWebcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/methods/userUnshareWebcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/modifiers/clearVideoStreams.js","meteor://ğŸ’»app/imports/api/video-streams/server/modifiers/sharedWebcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/modifiers/unsharedWebcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/video-streams/server/helpers.js","meteor://ğŸ’»app/imports/api/video-streams/server/index.js","meteor://ğŸ’»app/imports/api/video-streams/server/methods.js","meteor://ğŸ’»app/imports/api/video-streams/server/publisher.js","meteor://ğŸ’»app/imports/api/video-streams/index.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/handlers/voiceCallStateEvent.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/modifiers/clearVoiceCallStates.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/index.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/publishers.js","meteor://ğŸ’»app/imports/api/voice-call-states/index.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/getVoiceUsers.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/joinVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/leftVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/meetingMuted.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/mutedVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/talkingVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/voiceUsers.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods/ejectUserFromVoice.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods/muteAllExceptPresenterToggle.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods/muteAllToggle.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods/muteToggle.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/addVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/changeMuteMeeting.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/clearVoiceUsers.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/removeVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/updateVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/voice-users/server/index.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods.js","meteor://ğŸ’»app/imports/api/voice-users/server/publishers.js","meteor://ğŸ’»app/imports/api/voice-users/index.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/handlers/modifyWhiteboardAccess.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/methods/changeWhiteboardAccess.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/modifiers/modifyWhiteboardAccess.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/index.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/methods.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/publishers.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/index.js","meteor://ğŸ’»app/imports/api/common/server/helpers.js","meteor://ğŸ’»app/imports/startup/server/index.js","meteor://ğŸ’»app/imports/startup/server/logger.js","meteor://ğŸ’»app/imports/startup/server/metrics.js","meteor://ğŸ’»app/imports/startup/server/minBrowserVersion.js","meteor://ğŸ’»app/imports/startup/server/redis.js","meteor://ğŸ’»app/imports/startup/server/settings.js","meteor://ğŸ’»app/imports/utils/lineEndings.js","meteor://ğŸ’»app/imports/utils/mimeTypes.js","meteor://ğŸ’»app/imports/utils/regex-weburl.js","meteor://ğŸ’»app/server/main.js"],"names":["body","check","header","multiUser","clearAnnotations","annotationsAdded","_","annotation","userId","addAnnotation","modifyWhiteboardAccess","whiteboardId","fullClear","Boolean","AnnotationsStreamer","queueMetrics","Meteor","ANNOTATION_PROCCESS_INTERVAL","annotationsQueue","annotationsRecieverIsRunning","proccess","Object","meetingId","annotations","Metrics","shapeId","removeAnnotation","RedisPubSub","REDIS_CONFIG","CHANNEL","EVENT_NAME","requesterUserId","extractCredentials","payload","sendAnnotationHelper","id","status","annotationType","annotationInfo","x","y","fontColor","calcedFontSize","textBoxWidth","text","textBoxHeight","fontSize","dataPoints","type","String","wbId","position","Number","color","thickness","points","dimensions","Match","query","addAnnotationQuery","insertedId","Annotations","Logger","err","selector","numberAffected","processForHTML5ServerOnly","sendBulkAnnotations","boundAnnotations","streamer","retransmit","ANNOTATION_TYPE_TEXT","ANNOTATION_TYPE_PENCIL","modifier","$set","$setOnInsert","$inc","version","DRAW_START","DRAW_UPDATE","DRAW_END","baseSelector","baseModifier","$push","$each","handleTextUpdate","handlePencilUpdate","handleCommonAnnotation","Mongo","breakoutId","clearBreakouts","users","insertedTime","Breakouts","DEFAULT_TIME_REMAINING","breakout","joinedUsers","timeRemaining","parentMeetingId","flat","usersMapped","user","name","options","multi","record","BREAKOUT_LIM","MIN_BREAKOUT_ROOMS","MAX_BREAKOUT_ROOMS","eventName","rooms","userIdToInvite","endAllBreakouts","ROLE_MODERATOR","User","fields","role","presenterSelector","$or","freeJoin","boundBreakouts","breakouts","pad","fetchReadOnlyPadId","changeset","data","getDataFromChangeset","updatePad","padId","generatePadId","axios","method","url","appendTextURL","responseType","response","error","isEnabled","getLocalesURL","locales","locale","addCaption","getIndex","length","index","startIndex","localeCode","endIndex","readOnlyURL","getReadOnlyIdURL","readOnlyPadId","getDataFromResponse","updateReadOnlyPadId","$regex","updateOwnerId","ownerId","revs","Captions","updateOwner","editCaptions","processForCaptionsPadOnly","CAPTIONS_CONFIG","BASENAME","APP","LOCALES_URL","host","port","localesUrl","CAPTIONS","TOKEN","hashFNV32a","isCaptionsPad","splitPadId","splitChangeset","fn","appendText","boundCaptions","captions","streamerLog","CURSOR_PROCCESS_INTERVAL","cursorQueue","cursors","CursorStreamer","publishCursorUpdate","message","streamName","streamerName","allowRecentMessages","state","externalVideoUrl","presenter","Meetings","meeting","emitExternalVideoEvent","addGroupChat","chats","chat","correlationId","Date","msg","receiver","access","chatId","createdBy","chatDocument","u","safe","GroupChat","clearGroupChatMsg","destroyGroupChat","CHAT_CONFIG","PUBLIC_CHAT_TYPE","$all","boundGroupChat","groupChat","CHAT_ACCESS","PUBLIC","PRIVATE","CHAT_ACCESS_PUBLIC","CHAT_ACCESS_PRIVATE","bufferChatInsertsMs","msgBuffer","bulkFn","addGroupChatMsg","msgs","syncMeetingChatMsgs","startTyping","PUBLIC_GROUP_CHAT_ID","HTML_SAFE_MAP","parseMessage","parsedMessage","c","UsersTyping","userTyping","stopTyping","GroupChatMsg","mappedMsgs","_id","sender","el","insertedCount","BREAK_LINE","timestamp","msgDocument","PUBLIC_CHAT_SYSTEM_ID","CHAT_CLEAR_MESSAGE","clearMsg","$eq","TYPING_TIMEOUT","Users","isTypingTo","time","typingUser","sendMsgInitiated","stillTyping","bulkOperations","msgToSync","_str","stopUserTyping","$in","chatsIds","groupChatMsg","boundUsersTyping","usersTyping","guests","guest","setGuestStatus","stringHash","COLOR_LIST","intId","approved","denied","loginTime","mappedGuests","approvedBy","JSON","setBy","policy","policyRule","GUEST_STATUS_ALLOW","GUEST_STATUS_DENY","GuestUsers","changeGuestPolicy","boundSlides","guestUsers","userLocalSettings","settings","setChangedLocalSettings","LocalSettings","numChanged","userChangedLocalSettings","boundLocalSettings","localSettings","logClient","logCode","extraInfo","userInfo","connectionId","logContents","level","handleMeetingCreation","durationInSecods","addMeeting","destroyExternalVideo","removeAnnotationsStreamer","removeCursorStreamer","cb","meetingType","connectionStatus","meetingHasEnded","meetingEnded","changeLockSettings","recording","RecordMeetings","timeLeftInSec","MeetingTimeRemaining","changeUserLock","changeWebcamOnlyModerator","disableCam","disableMic","disablePrivateChat","disablePublicChat","disableNote","hideUserList","lockedLayout","lockOnJoin","lockOnJoinConfigurable","recordObject","meetingRecorded","allowedToRecord","toMeetingId","breakoutProps","sequence","breakoutRooms","parentId","enabled","privateChatEnabled","meetingProp","extId","isBreakout","usersProp","webcamsOnlyForModerator","guestPolicy","maxUsers","allowModsToUnmuteUsers","durationProps","createdTime","duration","createdDate","maxInactivityTimeoutMinutes","warnMinutesBeforeMax","meetingExpireIfNoUserJoinedInMinutes","meetingExpireWhenLastUserLeftInMinutes","userInactivityInspectTimerInMinutes","userInactivityThresholdInMinutes","userActivitySignResponseDelayInMinutes","welcomeProp","welcomeMsg","modOnlyMessage","welcomeMsgTemplate","recordProp","allowStartStopRecording","autoStartRecording","password","viewerPass","moderatorPass","voiceProp","voiceConf","dialNumber","telVoice","muteOnStart","screenshareProps","red5ScreenshareIp","red5ScreenshareApp","screenshareConf","metadataProp","lockSettingsProps","restProps","newMeeting","sanitizeTextInChat","original","SanitizeHTML","allowedTags","allowedAttributes","a","img","allowedSchemes","sanitizedWelcomeText","insertBlankTarget","s","linkWithoutTarget","publishedPoll","addAnnotationsStreamer","addCursorStreamer","createNote","createCaptions","BannedUsers","disablePrivChat","disablePubChat","locked","lockedBy","clearCaptions","clearGroupChat","clearPresentationPods","clearPolls","clearSlides","clearUsers","clearUsersSettings","clearVoiceUsers","clearUserInfo","clearNote","clearNetworkInformation","clearLocalSettings","clearRecordMeeting","clearVoiceCallStates","clearVideoStreams","isPublished","toggleWebcamsOnlyForModerator","boundMeetings","meetings","boundRecordMeetings","recordMeetings","boundtimeRemaining","meetingTimeRemaining","NetworkInformation","userInstabilityDetected","boundNetworkInformation","networkInformation","updateNote","noteId","generateNoteId","createURL","createPadURL","responseOuter","readOnlyNoteId","addNote","Note","processForNotePadOnly","ETHERPAD","NOTE_CONFIG","BASE_URL","apikey","encodeURIComponent","innerData","isNotePad","boundNote","note","lastPing","ping","COLLECTION_NAME","INTERVAL_IN_SETTINGS","INTERVAL_TIME","PONG_INTERVAL_IN_SETTINGS","PONG_INTERVAL","pongSender","interval","pong","pollId","setPublishedPoll","removePoll","poll","addPoll","answerId","$pull","responses","Polls","answers","key","numVotes","numRespondents","numResponders","updateVotes","requesterId","allowedToVote","pollAnswerId","questionId","pollType","userSelector","$ne","clientType","userIds","requester","stopPoll","boundPolls","currentPoll","polls","currentPresenterId","podId","pod","addPresentationPod","removePresentationPod","nextPresenterId","setPresenterInPod","pods","presentationPodIds","presentationPodsToRemove","$nin","p","currentPresenter","presentations","PresentationPods","presentation","addPresentation","clearPresentations","clearPresentationUploadToken","boundPresentationPods","presentationPods","filename","failed","authzToken","used","PresentationUploadToken","setUsedToken","boundPresentationUploadToken","presentationUploadToken","OFFICE_DOC_CONVERSION_FAILED_KEY","OFFICE_DOC_CONVERSION_INVALID_KEY","SUPPORTED_DOCUMENT_KEY","UNSUPPORTED_DOCUMENT_KEY","PAGE_COUNT_FAILED_KEY","PAGE_COUNT_EXCEEDED_KEY","PDF_HAS_BIG_PAGE_KEY","GENERATED_SLIDE_KEY","messageKey","presName","presentationName","statusModifier","presentationId","Presentations","setCurrentPresentation","downloadable","setPresentationDownloadable","removePresentation","getSlideText","content","HTTP","addSlides","slides","slide","addSlide","current","pages","num","thumbUri","swfUri","txtUri","svgUri","xOffset","yOffset","widthRatio","heightRatio","clearSlidesPresentation","oldCurrent","callback","newCurrent","oldPresentation","newPresentation","boundPresentations","presenterId","stopWatchingExternalVideo","addScreenshare","clearScreenshare","screenshare","Screenshare","boundScreenshare","changeCurrentSlide","resizeSlide","Presentation","Slide","slideNumber","pageId","loadSlidesFromHttpAlways","requestWhiteboardHistory","USER_ID","slideId","SUPPORTED_TYPES","fetchImageSizes","imageUri","result","mime","width","height","reason","restSlide","imageSizeUri","slideData","slidePosition","calculateSlideData","addSlidePositions","Slides","SlidePositions","viewBoxWidth","viewBoxHeight","oldSlide","newSlide","numberAffectedSlidePositions","whiteboardIds","row","SlidePosition","calculatedData","zoomSlide","boundSlidePositions","slidePositions","changedBy","changeRole","emoji","emojiTime","usersIds","m","usersToRemove","removeUser","usersAdded","addUser","assignedBy","changePresenter","prevPresenter","setPresenterPayload","defaultPodSelector","currentDefaultPodPresenter","setPresenterInPodReqMsg","oldPresenter","userEjected","reasonCode","responseDelay","userInactivityInspect","authToken","clearOtherSessions","serverSessions","i","waitForApproval","pendingAuths","pendingAuthenticationsStore","pendingAuth","methodInvocationObject","sessionId","createDummyUser","setConnectionIdAndAuthToken","valid","userJoin","validated","inactivityCheck","sessionUserId","currentConnectionId","newPresenterId","newPresenterName","ejectedBy","banUser","removedUser","effectiveConnectionType","setEffectiveConnectionType","lock","loggedOut","externalId","invalid","error_type","isUserInvalid","ejected","requesterToken","USER_CONFIG","ROLE_VIEWER","callerName","voiceOnlyUser","authed","waitingForAcceptance","guestStatus","avatar","sanitizedName","userData","Meeting","sortName","isBreakoutUser","addVoiceUser","voiceUserId","callerNum","muted","talking","callingWith","listenOnly","joined","doc","clearAllSessions","userToRemove","VideoStreams","clearUserInfoForRequester","ejectedReason","constructor","init","add","delete","has","generateKey","take","matches","e","userLeftMeeting","onCloseConnection","userLeaving","boundUsers","currentUser","addUserInfo","UserInfos","externalUserId","info","removeUserInformation","boundUserInfos","userInfos","oldParameters","askForFeedbackOnLogout","autoJoin","autoShareWebcam","autoSwapLayout","clientTitle","customStyle","customStyleUrl","displayBrandingArea","enableScreensharing","enableVideo","forceListenOnly","hidePresentation","listenOnlyMode","multiUserPenOnly","multiUserTools","outsideToggleRecording","outsideToggleSelfVoice","presenterTools","shortcuts","skipCheck","oldParametersKeys","currentParameters","parsedValue","val","logger","parameters","settingKey","normalizedKey","valueParser","matchingNewKey","settingsAdded","setting","value","addUserSetting","UserSettings","addUserSettings","mainRoomUserSettings","boundUserSettings","userSettings","stream","isValidStream","sharedWebcam","unsharedWebcam","deviceId","getDeviceId","getUserName","FLASH_STREAM_REGEX","splitStream","userUnshareWebcam","boundVideoStreams","videoStreams","callState","clientSession","VoiceCallState","VoiceCallStates","boundVoiceCallStates","voiceCallStates","voiceUsersIdsToUpdate","voiceUsersUpdated","updateVoiceUser","voiceUsersToRemove","removeVoiceUser","voiceUser","addDialInUser","isDialInUser","changeMuteMeeting","VoiceUsers","voiceUsers","voice","toggleMeetingMuted","mutedBy","mute","userToMute","uId","spoke","clearSpokeTimeout","TALKING_TIMEOUT","startTime","timeoutHandle","endTime","spokeDelay","spokeTimeoutHandles","toggleVoice","muteAllUsers","muteAllExceptPresenter","ejectUserFromVoice","boundVoiceUser","WhiteboardMultiUser","changeWhiteboardAccess","boundMultiUser","whiteboardMultiUser","MSG_DIRECT_TYPE","NODE_USER","indexOf","l","envelope","routing","shouldSkip","msgType","hval","seed","str","credentials","credentialsArray","AVAILABLE_LOCALES","fs","process","APP_CONFIG","env","CDN_URL","heapDumpMbThreshold","customHeartbeat","newHeartbeat","currentTime","lastSentFrameTimestamp","supportsHeartbeats","clearTimeout","setTimeout","sentAt","now","newSend","console","socket","recv","session","memoryMonitoringSettings","memwatch","stats","heapDumpTriggered","heapDumpEnabled","heapdump","heapdumpIntervalMs","path","BrowserPolicy","WebAppInternals","fontRegExp","WebApp","req","res","next","setMinBrowserVersions","$lt","html5clientStatus","fallback","override","browserLocale","localeList","usableLocales","file","regionDefault","messages","normalizedLocale","Assets","Langmap","nativeName","userName","rating","reqUserName","feedback","userAgent","lookupUserAgent","eventEmitter","Redis","redisPubSub","LOG_CONFIG","createLogger","format","transports","prettyPrint","humanReadableUnhandledException","colorize","handleExceptions","removeMeetingOnEnd","addEvent","currentlyInQueue","wasInQueue","count","payloadSize","messageLength","processEvent","currentProcessingTimestamp","processTime","min","max","last","total","avg","size","processingTime","setAnnotationQueueLength","startDumpFile","fileDate","fullYear","month","day","hour","minutes","seconds","folderName","fileName","folderPath","fullFilePath","removeMeeting","metricsSingleton","minBrowserVersions","versions","elem","setMinimumBrowserVersions","NO_MEETING_ID","makeEnvelope","core","asyncMessages","redisDebugEnabled","handleTask","channel","isAsync","beginHandleTimestamp","called","callNext","queueId","dataLength","queueLength","onError","config","redisConf","channelsToSubscribe","updateConfig","handleSubscribe","handleMessage","ignored","async","ignoredMessages","destroyMeetingQueue","on","publishVoiceMessage","publishSystemMessage","publishMeetingMessage","publishUserMessage","RedisPubSubSingleton","YAML_FILE_PATH","SETTINGS","YAML","__meteor_runtime_config__","CARRIAGE_RETURN","NEW_LINE","XLS","XLSX","DOC","DOCX","PPT","PPTX","ODT","RTF","TXT","ODS","ODP","PDF","JPEG","PNG","SVG","UPLOAD_SUPORTED","global"],"mappings":"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","file":"/app.js","sourcesContent":["import _ from 'lodash';\nimport { check } from 'meteor/check';\nimport modifyWhiteboardAccess from '/imports/api/whiteboard-multi-user/server/modifiers/modifyWhiteboardAccess';\nimport clearAnnotations from '../modifiers/clearAnnotations';\nimport addAnnotation from '../modifiers/addAnnotation';\n\nexport default function handleWhiteboardAnnotations({ header, body }, meetingId) {\n  check(header, Object);\n  if (header.userId !== 'nodeJSapp') { return false; }\n\n  check(meetingId, String);\n  check(body, Object);\n\n  const { annotations, whiteboardId, multiUser } = body;\n\n  check(annotations, Array);\n  check(whiteboardId, String);\n  check(multiUser, Boolean);\n\n  clearAnnotations(meetingId, whiteboardId);\n\n  const annotationsAdded = [];\n  _.each(annotations, (annotation) => {\n    const { wbId, userId } = annotation;\n    annotationsAdded.push(addAnnotation(meetingId, wbId, userId, annotation));\n  });\n\n  modifyWhiteboardAccess(meetingId, whiteboardId, multiUser);\n\n  return annotationsAdded;\n}\n","import { check } from 'meteor/check';\nimport AnnotationsStreamer from '/imports/api/annotations/server/streamer';\n\nimport clearAnnotations from '../modifiers/clearAnnotations';\n\nexport default function handleWhiteboardCleared({ body }, meetingId) {\n  check(body, {\n    userId: String,\n    whiteboardId: String,\n    fullClear: Boolean,\n  });\n\n  const { whiteboardId, fullClear, userId } = body;\n\n  if (fullClear) {\n    AnnotationsStreamer(meetingId).emit('removed', { meetingId, whiteboardId });\n    return clearAnnotations(meetingId, whiteboardId);\n  }\n\n  AnnotationsStreamer(meetingId).emit('removed', { meetingId, whiteboardId, userId });\n  return clearAnnotations(meetingId, whiteboardId, userId);\n}\n","import { check } from 'meteor/check';\nimport AnnotationsStreamer from '/imports/api/annotations/server/streamer';\nimport addAnnotation from '../modifiers/addAnnotation';\nimport Metrics from '/imports/startup/server/metrics';\n\nconst { queueMetrics } = Meteor.settings.private.redis.metrics;\n\nconst ANNOTATION_PROCCESS_INTERVAL = 60;\n\nlet annotationsQueue = {};\nlet annotationsRecieverIsRunning = false;\n\nconst proccess = () => {\n  if (!Object.keys(annotationsQueue).length) {\n    annotationsRecieverIsRunning = false;\n    return;\n  }\n  annotationsRecieverIsRunning = true;\n  Object.keys(annotationsQueue).forEach((meetingId) => {\n    AnnotationsStreamer(meetingId).emit('added', { meetingId, annotations: annotationsQueue[meetingId] });\n    if (queueMetrics) {\n      Metrics.setAnnotationQueueLength(meetingId, 0);\n    }\n  });\n  annotationsQueue = {};\n\n  Meteor.setTimeout(proccess, ANNOTATION_PROCCESS_INTERVAL);\n};\n\nexport default function handleWhiteboardSend({ header, body }, meetingId) {\n  const userId = header.userId;\n  const annotation = body.annotation;\n\n  check(userId, String);\n  check(annotation, Object);\n\n  const whiteboardId = annotation.wbId;\n  check(whiteboardId, String);\n\n  if (!annotationsQueue.hasOwnProperty(meetingId)) {\n    annotationsQueue[meetingId] = [];\n  }\n\n  annotationsQueue[meetingId].push({ meetingId, whiteboardId, userId, annotation });\n  if (queueMetrics) {\n    Metrics.setAnnotationQueueLength(meetingId, annotationsQueue[meetingId].length);\n  }\n  if (!annotationsRecieverIsRunning) proccess();\n\n  return addAnnotation(meetingId, whiteboardId, userId, annotation);\n}\n","import { check } from 'meteor/check';\n\nimport AnnotationsStreamer from '/imports/api/annotations/server/streamer';\nimport removeAnnotation from '../modifiers/removeAnnotation';\n\nexport default function handleWhiteboardUndo({ body }, meetingId) {\n  const whiteboardId = body.whiteboardId;\n  const shapeId = body.annotationId;\n\n  check(whiteboardId, String);\n  check(shapeId, String);\n\n  AnnotationsStreamer(meetingId).emit('removed', { meetingId, whiteboardId, shapeId });\n  return removeAnnotation(meetingId, whiteboardId, shapeId);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function clearWhiteboard(whiteboardId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ClearWhiteboardPubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(whiteboardId, String);\n\n  const payload = {\n    whiteboardId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import sendAnnotationHelper from './sendAnnotationHelper';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function sendAnnotation(annotation) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  sendAnnotationHelper(annotation, meetingId, requesterUserId);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nexport default function sendAnnotationHelper(annotation, meetingId, requesterUserId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SendWhiteboardAnnotationPubMsg';\n\n  const whiteboardId = annotation.wbId;\n\n  check(annotation, Object);\n  check(whiteboardId, String);\n\n  if (annotation.annotationType === 'text') {\n    check(annotation, {\n      id: String,\n      status: String,\n      annotationType: String,\n      annotationInfo: {\n        x: Number,\n        y: Number,\n        fontColor: Number,\n        calcedFontSize: Number,\n        textBoxWidth: Number,\n        text: String,\n        textBoxHeight: Number,\n        id: String,\n        whiteboardId: String,\n        status: String,\n        fontSize: Number,\n        dataPoints: String,\n        type: String,\n      },\n      wbId: String,\n      userId: String,\n      position: Number,\n    });\n  } else {\n    check(annotation, {\n      id: String,\n      status: String,\n      annotationType: String,\n      annotationInfo: {\n        color: Number,\n        thickness: Number,\n        points: Array,\n        id: String,\n        whiteboardId: String,\n        status: String,\n        type: String,\n        dimensions: Match.Maybe([Number]),\n      },\n      wbId: String,\n      userId: String,\n      position: Number,\n    });\n  }\n\n  const payload = {\n    annotation,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { extractCredentials } from '/imports/api/common/server/helpers';\nimport sendAnnotationHelper from './sendAnnotationHelper';\n\nexport default function sendBulkAnnotations(payload) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  payload.forEach(annotation => sendAnnotationHelper(annotation, meetingId, requesterUserId));\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function undoAnnotation(whiteboardId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UndoWhiteboardPubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(whiteboardId, String);\n\n  const payload = {\n    whiteboardId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Annotations from '/imports/api/annotations';\nimport addAnnotationQuery from '/imports/api/annotations/addAnnotation';\n\nexport default function addAnnotation(meetingId, whiteboardId, userId, annotation) {\n  check(meetingId, String);\n  check(whiteboardId, String);\n  check(annotation, Object);\n\n  const query = addAnnotationQuery(meetingId, whiteboardId, userId, annotation);\n\n  try {\n    const { insertedId } = Annotations.upsert(query.selector, query.modifier);\n\n    if (insertedId) {\n      Logger.info(`Added annotation id=${annotation.id} whiteboard=${whiteboardId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding annotation to collection: ${err}`);\n  }\n}\n","import Annotations from '/imports/api/annotations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearAnnotations(meetingId, whiteboardId, userId) {\n  const selector = {};\n\n  if (meetingId) {\n    selector.meetingId = meetingId;\n  }\n\n  if (whiteboardId) {\n    selector.whiteboardId = whiteboardId;\n  }\n\n  if (userId) {\n    selector.userId = userId;\n  }\n\n  try {\n    const numberAffected = Annotations.remove(selector);\n\n    if (numberAffected) {\n      if (userId) {\n        Logger.info(`Cleared Annotations for userId=${userId} where whiteboard=${whiteboardId}`);\n        return;\n      }\n\n      if (whiteboardId) {\n        Logger.info(`Cleared Annotations for whiteboard=${whiteboardId}`);\n        return;\n      }\n\n      if (meetingId) {\n        Logger.info(`Cleared Annotations (${meetingId})`);\n        return;\n      }\n\n      Logger.info('Cleared Annotations (all)');\n    }\n  } catch (err) {\n    Logger.error(`Removing Annotations from collection: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Annotations from '/imports/api/annotations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function removeAnnotation(meetingId, whiteboardId, shapeId) {\n  check(meetingId, String);\n  check(whiteboardId, String);\n  check(shapeId, String);\n\n  const selector = {\n    meetingId,\n    whiteboardId,\n    id: shapeId,\n  };\n\n  try {\n    const numberAffected = Annotations.remove(selector);\n\n    if (numberAffected) {\n      Logger.info(`Removed annotation id=${shapeId} whiteboard=${whiteboardId}`);\n    }\n  } catch (err) {\n    Logger.error(`Removing annotation from collection: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\nimport handleWhiteboardCleared from './handlers/whiteboardCleared';\nimport handleWhiteboardUndo from './handlers/whiteboardUndo';\nimport handleWhiteboardSend from './handlers/whiteboardSend';\nimport handleWhiteboardAnnotations from './handlers/whiteboardAnnotations';\n\nRedisPubSub.on('ClearWhiteboardEvtMsg', handleWhiteboardCleared);\nRedisPubSub.on('UndoWhiteboardEvtMsg', handleWhiteboardUndo);\nRedisPubSub.on('SendWhiteboardAnnotationEvtMsg', handleWhiteboardSend);\nRedisPubSub.on('GetWhiteboardAnnotationsRespMsg', processForHTML5ServerOnly(handleWhiteboardAnnotations));\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport undoAnnotation from './methods/undoAnnotation';\nimport clearWhiteboard from './methods/clearWhiteboard';\nimport sendAnnotation from './methods/sendAnnotation';\nimport sendBulkAnnotations from './methods/sendBulkAnnotations';\n\nMeteor.methods({\n  undoAnnotation,\n  clearWhiteboard,\n  sendAnnotation,\n  sendBulkAnnotations,\n});\n","import Annotations from '/imports/api/annotations';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction annotations() {\n  if (!this.userId) {\n    return Annotations.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing Annotations', { meetingId, requesterUserId });\n\n  return Annotations.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundAnnotations = annotations.bind(this);\n  return boundAnnotations(...args);\n}\n\nMeteor.publish('annotations', publish);\n","import Logger from '/imports/startup/server/logger';\n\nexport function removeAnnotationsStreamer(meetingId) {\n  Logger.info(`Removing Annotations streamer object for meeting ${meetingId}`);\n  delete Meteor.StreamerCentral.instances[`annotations-${meetingId}`];\n}\n\nexport function addAnnotationsStreamer(meetingId) {\n  const streamer = new Meteor.Streamer(`annotations-${meetingId}`, { retransmit: false });\n\n  streamer.allowRead(function allowRead() {\n    if (!this.userId) return false;\n\n    return this.userId && this.userId.includes(meetingId);\n  });\n\n  streamer.allowWrite(function allowWrite() {\n    return false;\n  });\n}\n\nexport default function get(meetingId) {\n  return Meteor.StreamerCentral.instances[`annotations-${meetingId}`];\n}\n","import { check } from 'meteor/check';\n\nconst ANNOTATION_TYPE_TEXT = 'text';\nconst ANNOTATION_TYPE_PENCIL = 'pencil';\n\n// line, triangle, ellipse, rectangle\nfunction handleCommonAnnotation(meetingId, whiteboardId, userId, annotation) {\n  const {\n    id, status, annotationType, annotationInfo, wbId, position,\n  } = annotation;\n\n  const selector = {\n    meetingId,\n    id,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      whiteboardId,\n      meetingId,\n      id,\n      status,\n      annotationType,\n      annotationInfo,\n      wbId,\n    },\n    $setOnInsert: {\n      position,\n    },\n    $inc: { version: 1 },\n  };\n\n  return { selector, modifier };\n}\n\nfunction handleTextUpdate(meetingId, whiteboardId, userId, annotation) {\n  const {\n    id, status, annotationType, annotationInfo, wbId, position,\n  } = annotation;\n\n  const selector = {\n    meetingId,\n    id,\n    userId,\n  };\n\n  annotationInfo.text = annotationInfo.text.replace(/[\\r]/g, '\\n');\n\n  const modifier = {\n    $set: {\n      whiteboardId,\n      meetingId,\n      id,\n      status,\n      annotationType,\n      annotationInfo,\n      wbId,\n    },\n    $setOnInsert: {\n      position,\n    },\n    $inc: { version: 1 },\n  };\n\n  return { selector, modifier };\n}\n\nfunction handlePencilUpdate(meetingId, whiteboardId, userId, annotation) {\n  const DRAW_START = 'DRAW_START';\n  const DRAW_UPDATE = 'DRAW_UPDATE';\n  const DRAW_END = 'DRAW_END';\n\n  const {\n    id, status, annotationType, annotationInfo, wbId, position,\n  } = annotation;\n\n  const baseSelector = {\n    meetingId,\n    id,\n    userId,\n    whiteboardId,\n  };\n\n  let baseModifier;\n  switch (status) {\n    case DRAW_START:\n      // on start we split the points\n\n      // create the 'pencil_base'\n      // TODO: find and removed unused props (chunks, version, etc)\n      baseModifier = {\n        $set: {\n          id,\n          userId,\n          meetingId,\n          whiteboardId,\n          position,\n          status,\n          annotationType,\n          annotationInfo,\n          wbId,\n          version: 1,\n        },\n      };\n      break;\n    case DRAW_UPDATE:\n      baseModifier = {\n        $push: {\n          'annotationInfo.points': { $each: annotationInfo.points },\n        },\n        $set: {\n          status,\n        },\n        $inc: { version: 1 },\n      };\n      break;\n    case DRAW_END:\n      // Updating the main pencil object with the final info\n      baseModifier = {\n        $set: {\n          whiteboardId,\n          meetingId,\n          id,\n          status,\n          annotationType,\n          annotationInfo,\n          wbId,\n          position,\n        },\n        $inc: { version: 1 },\n      };\n      break;\n    default:\n      break;\n  }\n\n  return { selector: baseSelector, modifier: baseModifier };\n}\n\nexport default function addAnnotation(meetingId, whiteboardId, userId, annotation) {\n  check(meetingId, String);\n  check(whiteboardId, String);\n  check(annotation, Object);\n\n  switch (annotation.annotationType) {\n    case ANNOTATION_TYPE_TEXT:\n      return handleTextUpdate(meetingId, whiteboardId, userId, annotation);\n    case ANNOTATION_TYPE_PENCIL:\n      return handlePencilUpdate(meetingId, whiteboardId, userId, annotation);\n    default:\n      return handleCommonAnnotation(meetingId, whiteboardId, userId, annotation);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\n\nconst Annotations = new Mongo.Collection('annotations');\n\nif (Meteor.isServer) {\n  // types of queries for the annotations  (Total):\n  // 1. meetingId, id, userId               ( 8 )\n  // 2. meetingId, id, userId, whiteboardId ( 1 )\n  // 3. meetingId                           ( 1 )\n  // 4. meetingId, whiteboardId             ( 1 )\n  // 5. meetingId, whiteboardId, id         ( 1 )\n  // 6. meetingId, whiteboardId, userId     ( 1 )\n  // These 2 indexes seem to cover all of the cases\n\n  Annotations._ensureIndex({ id: 1 });\n  Annotations._ensureIndex({ meetingId: 1, whiteboardId: 1, userId: 1 });\n}\n\nexport default Annotations;\n","import { check } from 'meteor/check';\nimport clearBreakouts from '../modifiers/clearBreakouts';\n\nexport default function handleBreakoutClosed({ body }) {\n  const { breakoutId } = body;\n  check(breakoutId, String);\n\n  return clearBreakouts(breakoutId);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Breakouts from '/imports/api/breakouts';\n\nexport default function handleBreakoutJoinURL({ body }) {\n  const {\n    redirectToHtml5JoinURL,\n    userId,\n    breakoutId,\n  } = body;\n\n  check(redirectToHtml5JoinURL, String);\n\n  const selector = {\n    breakoutId,\n  };\n\n  const modifier = {\n    $push: {\n      users: {\n        userId,\n        redirectToHtml5JoinURL,\n        insertedTime: new Date().getTime(),\n      },\n    },\n  };\n\n  try {\n    const { insertedId, numberAffected } = Breakouts.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.info(`Added breakout id=${breakoutId}`);\n    } else if (numberAffected) {\n      Logger.info(`Upserted breakout id=${breakoutId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding breakout to collection: ${err}`);\n  }\n}\n","import Breakouts from '/imports/api/breakouts';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\nimport flat from 'flat';\n\nexport default function handleBreakoutRoomStarted({ body }, meetingId) {\n  // 0 seconds default breakout time, forces use of real expiration time\n  const DEFAULT_TIME_REMAINING = 0;\n\n  const {\n    parentMeetingId,\n    breakout,\n  } = body;\n\n  const { breakoutId } = breakout;\n\n  check(meetingId, String);\n\n  const selector = {\n    breakoutId,\n  };\n\n  const modifier = {\n    $set: Object.assign(\n      {\n        users: [],\n        joinedUsers: [],\n      },\n      { timeRemaining: DEFAULT_TIME_REMAINING },\n      { parentMeetingId },\n      flat(breakout),\n    ),\n  };\n\n  try {\n    const { numberAffected } = Breakouts.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info('Updated timeRemaining and externalMeetingId '\n        + `for breakout id=${breakoutId}`);\n    }\n  } catch (err) {\n    Logger.error(`updating breakout: ${err}`);\n  }\n}\n","import Breakouts from '/imports/api/breakouts';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\n\nexport default function joinedUsersChanged({ body }) {\n  check(body, Object);\n\n  const {\n    parentId,\n    breakoutId,\n    users,\n  } = body;\n\n  check(parentId, String);\n  check(breakoutId, String);\n  check(users, Array);\n\n  const selector = {\n    parentMeetingId: parentId,\n    breakoutId,\n  };\n\n  const usersMapped = users.map(user => ({ userId: user.id, name: user.name }));\n  const modifier = {\n    $set: {\n      joinedUsers: usersMapped,\n    },\n  };\n\n  try {\n    const numberAffected = Breakouts.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Updated joined users in breakout id=${breakoutId}`);\n    }\n  } catch (err) {\n    Logger.error(`updating joined users in breakout: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Breakouts from '/imports/api/breakouts';\n\nexport default function handleUpdateTimeRemaining({ body }, meetingId) {\n  const {\n    timeRemaining,\n  } = body;\n\n  check(meetingId, String);\n  check(timeRemaining, Number);\n\n  const selector = {\n    parentMeetingId: meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      timeRemaining,\n    },\n  };\n\n  const options = {\n    multi: true,\n  };\n\n  try {\n    const numberAffected = Breakouts.update(selector, modifier, options);\n\n    if (numberAffected) {\n      Logger.info(`Updated breakout time remaining for breakouts where parentMeetingId=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Updating breakouts: ${err}`);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function createBreakoutRoom(rooms, durationInMinutes, record = false) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const BREAKOUT_LIM = Meteor.settings.public.app.breakoutRoomLimit;\n  const MIN_BREAKOUT_ROOMS = 2;\n  const MAX_BREAKOUT_ROOMS = BREAKOUT_LIM > MIN_BREAKOUT_ROOMS ? BREAKOUT_LIM : MIN_BREAKOUT_ROOMS;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const eventName = 'CreateBreakoutRoomsCmdMsg';\n  if (rooms.length > MAX_BREAKOUT_ROOMS) {\n    Logger.info(`Attempt to create breakout rooms with invalid number of rooms in meeting id=${meetingId}`);\n    return;\n  }\n  const payload = {\n    record,\n    durationInMinutes,\n    rooms,\n    meetingId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, eventName, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function endAllBreakouts() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(meetingId, String);\n  check(requesterUserId, String);\n\n  const eventName = 'EndAllBreakoutRoomsMsg';\n  return RedisPubSub.publishUserMessage(CHANNEL, eventName, meetingId, requesterUserId, null);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function requestJoinURL({ breakoutId, userId: userIdToInvite }) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const userId = userIdToInvite || requesterUserId;\n  const eventName = 'RequestBreakoutJoinURLReqMsg';\n\n  return RedisPubSub.publishUserMessage(\n    CHANNEL, eventName, meetingId, requesterUserId,\n    {\n      meetingId,\n      breakoutId,\n      userId,\n    },\n  );\n}\n","import Logger from '/imports/startup/server/logger';\nimport Breakouts from '/imports/api/breakouts';\n\nexport default function clearBreakouts(breakoutId) {\n  if (breakoutId) {\n    const selector = {\n      breakoutId,\n    };\n\n    try {\n      const numberAffected = Breakouts.remove(selector);\n\n      if (numberAffected) {\n        Logger.info(`Cleared Breakouts (${breakoutId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing Breakouts (${breakoutId})`);\n    }\n  } else {\n    try {\n      const numberAffected = Breakouts.remove({});\n      if (numberAffected) {\n        Logger.info('Cleared Breakouts (all)');\n      }\n    } catch (err) {\n      Logger.error('Error on clearing Breakouts (all)');\n    }\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleBreakoutJoinURL from './handlers/breakoutJoinURL';\nimport handleBreakoutStarted from './handlers/breakoutStarted';\nimport handleUpdateTimeRemaining from './handlers/updateTimeRemaining';\nimport handleBreakoutClosed from './handlers/breakoutClosed';\nimport joinedUsersChanged from './handlers/joinedUsersChanged';\n\nRedisPubSub.on('BreakoutRoomStartedEvtMsg', handleBreakoutStarted);\nRedisPubSub.on('BreakoutRoomJoinURLEvtMsg', handleBreakoutJoinURL);\nRedisPubSub.on('RequestBreakoutJoinURLRespMsg', handleBreakoutJoinURL);\nRedisPubSub.on('BreakoutRoomsTimeRemainingUpdateEvtMsg', handleUpdateTimeRemaining);\nRedisPubSub.on('BreakoutRoomEndedEvtMsg', handleBreakoutClosed);\nRedisPubSub.on('UpdateBreakoutUsersEvtMsg', joinedUsersChanged);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport createBreakoutRoom from '/imports/api/breakouts/server/methods/createBreakout';\nimport requestJoinURL from './methods/requestJoinURL';\nimport endAllBreakouts from './methods/endAllBreakouts';\n\nMeteor.methods({\n  requestJoinURL,\n  createBreakoutRoom,\n  endAllBreakouts,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Breakouts from '/imports/api/breakouts';\nimport Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst ROLE_MODERATOR = Meteor.settings.public.user.role_moderator;\n\nfunction breakouts(role) {\n  if (!this.userId) {\n    return Breakouts.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  Logger.debug('Publishing Breakouts', { meetingId, requesterUserId });\n\n  const User = Users.findOne({ userId: requesterUserId, meetingId }, { fields: { role: 1 } });\n  if (!!User && User.role === ROLE_MODERATOR) {\n    const presenterSelector = {\n      $or: [\n        { parentMeetingId: meetingId },\n        { breakoutId: meetingId },\n      ],\n    };\n\n    return Breakouts.find(presenterSelector);\n  }\n\n  const selector = {\n    $or: [\n      {\n        parentMeetingId: meetingId,\n        freeJoin: true,\n      },\n      {\n        parentMeetingId: meetingId,\n        'users.userId': requesterUserId,\n      },\n      {\n        breakoutId: meetingId,\n      },\n    ],\n  };\n\n  return Breakouts.find(selector);\n}\n\nfunction publish(...args) {\n  const boundBreakouts = breakouts.bind(this);\n  return boundBreakouts(...args);\n}\n\nMeteor.publish('breakouts', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Breakouts = new Mongo.Collection('breakouts');\n\nif (Meteor.isServer) {\n  // types of queries for the breakouts:\n  // 1. breakoutId ( handleJoinUrl, roomStarted, clearBreakouts )\n  // 2. parentMeetingId ( updateTimeRemaining )\n\n  Breakouts._ensureIndex({ breakoutId: 1 });\n  Breakouts._ensureIndex({ parentMeetingId: 1 });\n}\n\nexport default Breakouts;\n","import { check } from 'meteor/check';\nimport fetchReadOnlyPadId from '/imports/api/captions/server/methods/fetchReadOnlyPadId';\n\nexport default function handlePadCreate({ body }) {\n  const { pad } = body;\n  const { id } = pad;\n\n  check(id, String);\n\n  fetchReadOnlyPadId(id);\n}\n","import { check } from 'meteor/check';\nimport { getDataFromChangeset } from '/imports/api/captions/server/helpers';\nimport updatePad from '/imports/api/captions/server/modifiers/updatePad';\n\nexport default function handlePadUpdate({ body }) {\n  const { pad, revs, changeset } = body;\n  const { id } = pad;\n\n  check(id, String);\n  check(changeset, String);\n  check(revs, Number);\n\n  const data = getDataFromChangeset(changeset);\n\n  if (data !== '') {\n    updatePad(id, data, revs);\n  }\n}\n","import axios from 'axios';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport {\n  generatePadId,\n} from '/imports/api/captions/server/helpers';\nimport {\n  appendTextURL,\n} from '/imports/api/note/server/helpers';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function appendText(text, locale) {\n  const { meetingId } = extractCredentials(this.userId);\n  check(meetingId, String);\n  check(text, String);\n  check(locale, String);\n\n  const padId = generatePadId(meetingId, locale);\n\n  axios({\n    method: 'get',\n    url: appendTextURL(padId, text),\n    responseType: 'json',\n  }).then((response) => {\n    const { status } = response;\n    if (status === 200) {\n      Logger.verbose('Captions: appended text', { padId });\n    }\n  }).catch(error => Logger.error(`Could not append captions for padId=${padId}: ${error}`));\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport {\n  generatePadId,\n  isEnabled,\n  getLocalesURL,\n} from '/imports/api/captions/server/helpers';\nimport addCaption from '/imports/api/captions/server/modifiers/addCaption';\nimport axios from 'axios';\n\nexport default function createCaptions(meetingId) {\n  // Avoid captions creation if this feature is disabled\n  if (!isEnabled()) {\n    Logger.warn(`Captions are disabled for ${meetingId}`);\n    return;\n  }\n\n  check(meetingId, String);\n\n  axios({\n    method: 'get',\n    url: getLocalesURL(),\n    responseType: 'json',\n  }).then((response) => {\n    const { status } = response;\n    if (status !== 200) {\n      Logger.error(`Could not get locales info for ${meetingId} ${status}`);\n    }\n    const locales = response.data;\n    locales.forEach((locale) => {\n      const padId = generatePadId(meetingId, locale.locale);\n      addCaption(meetingId, padId, locale);\n    });\n  }).catch(error => Logger.error(`Could not create captions for ${meetingId}: ${error}`));\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nconst getIndex = (data, length) => length - data.length;\n\nexport default function editCaptions(padId, data) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'EditCaptionHistoryPubMsg';\n\n  check(padId, String);\n  check(data, String);\n\n  const pad = Captions.findOne({ padId });\n\n  if (!pad) {\n    Logger.error(`Editing captions history: ${padId}`);\n    return;\n  }\n\n\n  const {\n    meetingId,\n    ownerId,\n    locale,\n    length,\n  } = pad;\n\n  check(meetingId, String);\n  check(ownerId, String);\n  check(locale, { locale: String, name: String });\n  check(length, Number);\n\n  const index = getIndex(data, length);\n\n  const payload = {\n    startIndex: index,\n    localeCode: locale.locale,\n    locale: locale.name,\n    endIndex: index,\n    text: data,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, ownerId, payload);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport {\n  getReadOnlyIdURL,\n  getDataFromResponse,\n} from '/imports/api/note/server/helpers';\nimport updateReadOnlyPadId from '/imports/api/captions/server/modifiers/updateReadOnlyPadId';\nimport axios from 'axios';\n\nexport default function fetchReadOnlyPadId(padId) {\n  check(padId, String);\n\n  const readOnlyURL = getReadOnlyIdURL(padId);\n  axios({\n    method: 'get',\n    url: readOnlyURL,\n    responseType: 'json',\n  }).then((response) => {\n    const readOnlyPadId = getDataFromResponse(response.data, 'readOnlyID');\n    if (readOnlyPadId) {\n      updateReadOnlyPadId(padId, readOnlyPadId);\n    } else {\n      Logger.error(`Could not get pad readOnlyID for ${padId}`);\n    }\n  }).catch(error => Logger.error(`Could not get pad readOnlyID for ${padId}: ${error}`));\n}\n","import { check } from 'meteor/check';\nimport Captions from '/imports/api/captions';\nimport updateOwnerId from '/imports/api/captions/server/modifiers/updateOwnerId';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function takeOwnership(locale) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(locale, String);\n\n  const pad = Captions.findOne({ meetingId, padId: { $regex: `_captions_${locale}$` } });\n\n  if (pad) {\n    updateOwnerId(meetingId, requesterUserId, pad.padId);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nexport default function editCaptions(meetingId, userId, padId) { // TODO\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UpdateCaptionOwnerPubMsg';\n\n  check(meetingId, String);\n  check(userId, String);\n  check(padId, String);\n\n  const pad = Captions.findOne({ meetingId, padId });\n\n  if (!pad) {\n    Logger.error(`Editing captions owner: ${padId}`);\n    return;\n  }\n\n  const { locale } = pad;\n\n  check(locale, { locale: String, name: String });\n\n  const payload = {\n    ownerId: userId,\n    locale: locale.name,\n    localeCode: locale.locale,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n}\n","import { check } from 'meteor/check';\nimport Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function addCaption(meetingId, padId, locale) {\n  check(meetingId, String);\n  check(padId, String);\n  check(locale, {\n    locale: String,\n    name: String,\n  });\n\n  const selector = {\n    meetingId,\n    padId,\n  };\n\n  const modifier = {\n    meetingId,\n    padId,\n    locale,\n    ownerId: '',\n    readOnlyPadId: '',\n    data: '',\n    revs: 0,\n    length: 0,\n  };\n\n  try {\n    const { insertedId, numberAffected } = Captions.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.verbose('Captions: added locale', { locale: locale.locale, meetingId });\n    } else if (numberAffected) {\n      Logger.verbose('Captions: upserted locale', { locale: locale.locale, meetingId });\n    }\n  } catch (err) {\n    Logger.error(`Adding caption to collection: ${err}`);\n  }\n}\n","import Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearCaptions(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffected = Captions.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared Captions (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing captions (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = Captions.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared Captions (all)');\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing captions (all). ${err}`);\n    }\n  }\n}\n","import Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport updateOwner from '/imports/api/captions/server/methods/updateOwner';\nimport { check } from 'meteor/check';\n\nexport default function updateOwnerId(meetingId, userId, padId) {\n  check(meetingId, String);\n  check(userId, String);\n  check(padId, String);\n\n  const selector = {\n    meetingId,\n    padId,\n  };\n\n  const modifier = {\n    $set: {\n      ownerId: userId,\n    },\n  };\n\n  try {\n    const numberAffected = Captions.update(selector, modifier, { multi: true });\n\n    if (numberAffected) {\n      updateOwner(meetingId, userId, padId);\n      Logger.verbose('Captions: updated caption', { padId, ownerId: userId });\n    }\n  } catch (err) {\n    Logger.error('Captions: error while updating pad', { err });\n  }\n}\n","import Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport editCaptions from '/imports/api/captions/server/methods/editCaptions';\nimport { check } from 'meteor/check';\n\nexport default function updatePad(padId, data, revs) {\n  check(padId, String);\n  check(data, String);\n  check(revs, Number);\n\n  const selector = {\n    padId,\n  };\n\n  const modifier = {\n    $set: {\n      data,\n      revs,\n    },\n    $inc: {\n      length: data.length,\n    },\n  };\n\n  try {\n    const numberAffected = Captions.update(selector, modifier, { multi: true });\n\n    if (numberAffected) {\n      editCaptions(padId, data, revs);\n      Logger.verbose('Captions: updated pad', { padId, revs });\n    }\n  } catch (err) {\n    Logger.error(`Updating captions pad: ${err}`);\n  }\n}\n","import Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\n\nexport default function updateReadOnlyPadId(padId, readOnlyPadId) {\n  check(padId, String);\n  check(readOnlyPadId, String);\n\n  const selector = {\n    padId,\n  };\n\n  const modifier = {\n    $set: {\n      readOnlyPadId,\n    },\n  };\n\n  try {\n    const numberAffected = Captions.update(selector, modifier, { multi: true });\n\n    if (numberAffected) {\n      Logger.verbose('Captions: added readOnlyPadId', { padId, readOnlyPadId });\n    }\n  } catch (err) {\n    Logger.error('Captions: error when adding readOnlyPadId', { err });\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForCaptionsPadOnly } from '/imports/api/captions/server/helpers';\nimport handlePadCreate from './handlers/padCreate';\nimport handlePadUpdate from './handlers/padUpdate';\n\nRedisPubSub.on('PadCreateSysMsg', processForCaptionsPadOnly(handlePadCreate));\nRedisPubSub.on('PadUpdateSysMsg', processForCaptionsPadOnly(handlePadUpdate));\n","import { Meteor } from 'meteor/meteor';\nimport { hashFNV32a } from '/imports/api/common/server/helpers';\nimport { check } from 'meteor/check';\n\nconst CAPTIONS_CONFIG = Meteor.settings.public.captions;\nconst BASENAME = Meteor.settings.public.app.basename;\nconst APP = Meteor.settings.private.app;\nconst LOCALES_URL = `http://${APP.host}:${APP.port}${BASENAME}${APP.localesUrl}`;\nconst CAPTIONS = '_captions_';\nconst TOKEN = '$';\n\n// Captions padId should look like: {padId}_captions_{locale}\nconst generatePadId = (meetingId, locale) => {\n  const padId = `${hashFNV32a(meetingId, true)}${CAPTIONS}${locale}`;\n  return padId;\n};\n\nconst isCaptionsPad = (padId) => {\n  const splitPadId = padId.split(CAPTIONS);\n  return splitPadId.length === 2;\n};\n\nconst getDataFromChangeset = (changeset) => {\n  const splitChangeset = changeset.split(TOKEN);\n  if (splitChangeset.length > 1) {\n    splitChangeset.shift();\n    return splitChangeset.join(TOKEN);\n  }\n  return '';\n};\n\nconst isEnabled = () => CAPTIONS_CONFIG.enabled;\n\nconst getLocalesURL = () => LOCALES_URL;\n\nconst processForCaptionsPadOnly = fn => (message, ...args) => {\n  const { body } = message;\n  const { pad } = body;\n  const { id } = pad;\n\n  check(id, String);\n\n  if (isCaptionsPad(id)) return fn(message, ...args);\n  return () => {};\n};\n\nexport {\n  generatePadId,\n  processForCaptionsPadOnly,\n  isEnabled,\n  getLocalesURL,\n  getDataFromChangeset,\n};\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport takeOwnership from '/imports/api/captions/server/methods/takeOwnership';\nimport appendText from '/imports/api/captions/server/methods/appendText';\n\nMeteor.methods({\n  takeOwnership,\n  appendText,\n});\n","import Captions from '/imports/api/captions';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction captions() {\n  if (!this.userId) {\n    return Captions.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n  Logger.debug('Publishing Captions', { meetingId });\n\n  return Captions.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundCaptions = captions.bind(this);\n  return boundCaptions(...args);\n}\n\nMeteor.publish('captions', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Captions = new Mongo.Collection('captions');\n\nif (Meteor.isServer) {\n  Captions._ensureIndex({ meetingId: 1, padId: 1 });\n}\n\nexport default Captions;\n","import { check } from 'meteor/check';\nimport CursorStreamer from '/imports/api/cursor/server/streamer';\nimport Logger from '/imports/startup/server/logger';\nimport _ from 'lodash';\n\nconst { streamerLog } = Meteor.settings.private.serverLog;\n\nconst CURSOR_PROCCESS_INTERVAL = 30;\n\nconst cursorQueue = {};\n\nconst proccess = _.throttle(() => {\n  try {\n    Object.keys(cursorQueue).forEach((meetingId) => {\n      try {\n        const cursors = cursorQueue[meetingId];\n        delete cursorQueue[meetingId];\n        CursorStreamer(meetingId).emit('message', { meetingId, cursors });\n\n        // if (streamerLog) {\n        //   Logger.debug('CursorUpdate process has finished', { meetingId });\n        // }\n      } catch (error) {\n        Logger.error(`Error while trying to send cursor streamer data for meeting ${meetingId}. ${error}`);\n      }\n    });\n  } catch (error) {\n    Logger.error(`Error while processing cursor queue. ${error}`);\n  }\n}, CURSOR_PROCCESS_INTERVAL);\n\nexport default function handleCursorUpdate({ header, body }, meetingId) {\n  const { userId } = header;\n  check(body, Object);\n\n  check(meetingId, String);\n  check(userId, String);\n\n  if (!cursorQueue[meetingId]) {\n    cursorQueue[meetingId] = {};\n  }\n\n  // overwrite since we dont care about the other positions\n  cursorQueue[meetingId][userId] = body;\n\n  proccess();\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\n\nexport default function publishCursorUpdate(meetingId, requesterUserId, payload) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SendCursorPositionPubMsg';\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleCursorUpdate from './handlers/cursorUpdate';\n\nRedisPubSub.on('SendCursorPositionEvtMsg', handleCursorUpdate);\n","import './eventHandlers';\nimport './methods';\n","import { Meteor } from 'meteor/meteor';\nimport publishCursorUpdate from './methods/publishCursorUpdate';\n\nMeteor.methods({\n  publishCursorUpdate,\n});\n","import Logger from '/imports/startup/server/logger';\nimport publishCursorUpdate from './methods/publishCursorUpdate';\n\nconst { streamerLog } = Meteor.settings.private.serverLog;\n\nexport function removeCursorStreamer(meetingId) {\n  Logger.info(`Removing Cursor streamer object for meeting ${meetingId}`);\n  delete Meteor.StreamerCentral.instances[`cursor-${meetingId}`];\n}\n\nexport function addCursorStreamer(meetingId) {\n  const streamer = new Meteor.Streamer(`cursor-${meetingId}`, { retransmit: false });\n  if (streamerLog) {\n    Logger.debug('Cursor streamer created', { meetingId });\n  }\n\n  streamer.allowRead(function allowRead() {\n    if (streamerLog) {\n      Logger.debug('Cursor streamer called allowRead', { userId: this.userId, meetingId });\n    }\n    return this.userId && this.userId.includes(meetingId);\n  });\n\n  streamer.allowWrite(function allowWrite() {\n    return this.userId && this.userId.includes(meetingId);\n  });\n\n  streamer.on('publish', (message) => {\n    publishCursorUpdate(meetingId, message.userId, message.payload);\n  });\n}\n\nexport default function get(meetingId) {\n  return Meteor.StreamerCentral.instances[`cursor-${meetingId}`];\n}\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function destroyExternalVideo(meetingId) {\n  const streamName = `external-videos-${meetingId}`;\n\n  if (Meteor.StreamerCentral.instances[streamName]) {\n    Logger.info(`Destroying External Video streamer object for ${streamName}`);\n    delete Meteor.StreamerCentral.instances[streamName];\n  }\n}\n","import Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function emitExternalVideoEvent(messageName, ...rest) {\n  const { meetingId, requesterUserId: userId } = extractCredentials(this.userId);\n\n  const user = Users.findOne({ userId, meetingId });\n\n  if (user && user.presenter) {\n    const streamerName = `external-videos-${meetingId}`;\n    const streamer = Meteor.StreamerCentral.instances[streamerName];\n\n    if (streamer) {\n      streamer.emit(messageName, ...rest);\n    } else {\n      Logger.error(`External Video Streamer not found for meetingId: ${meetingId} userId: ${userId}`);\n    }\n  }\n}\n","import { extractCredentials } from '/imports/api/common/server/helpers';\nimport Logger from '/imports/startup/server/logger';\n\nconst allowRecentMessages = (eventName, message) => {\n  const {\n    userId,\n    meetingId,\n    time,\n    rate,\n    state,\n  } = message;\n\n  Logger.debug('ExternalVideo Streamer auth allowed', {userId, meetingId, eventName, time, rate, state});\n  return true;\n};\n\nexport default function initializeExternalVideo() {\n  const { meetingId } = extractCredentials(this.userId);\n\n  const streamName = `external-videos-${meetingId}`;\n  if (!Meteor.StreamerCentral.instances[streamName]) {\n    const streamer = new Meteor.Streamer(streamName);\n    streamer.allowRead('all');\n    streamer.allowWrite('none');\n    streamer.allowEmit(allowRecentMessages);\n    Logger.info(`Created External Video streamer for ${streamName}`);\n  } else {\n    Logger.debug('External Video streamer is already created', { streamName });\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Meetings from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function startWatchingExternalVideo(options) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'StartExternalVideoMsg';\n\n  const { meetingId, requesterUserId: userId } = extractCredentials(this.userId);\n  const { externalVideoUrl } = options;\n\n  try {\n    check(meetingId, String);\n    check(userId, String);\n    check(externalVideoUrl, String);\n\n    const user = Users.findOne({ meetingId, userId, presenter: true }, { presenter: 1 });\n\n    if (!user) {\n      Logger.error(`Only presenters are allowed to start external video for a meeting. meeting=${meetingId} userId=${userId}`);\n      return;\n    }\n\n    Meetings.update({ meetingId }, { $set: { externalVideoUrl } });\n\n    const payload = { externalVideoUrl };\n\n    Logger.info(`User id=${userId} sharing an external video: ${externalVideoUrl} for meeting ${meetingId}`);\n\n    return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n  } catch (error) {\n    Logger.error(`Error on sharing an external video: ${externalVideoUrl} ${error}`);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport Meetings from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function stopWatchingExternalVideo(options) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'StopExternalVideoMsg';\n\n  const { meetingId, requesterUserId } = this.userId ? extractCredentials(this.userId) : options;\n\n  try {\n    check(meetingId, String);\n    check(requesterUserId, String);\n\n    const user = Users.findOne({\n      meetingId,\n      userId: requesterUserId,\n      presenter: true,\n    }, { presenter: 1 });\n\n    if (this.userId && !user) {\n      Logger.error(`Only presenters are allowed to stop external video for a meeting. meeting=${meetingId} userId=${requesterUserId}`);\n      return;\n    }\n\n    const meeting = Meetings.findOne({ meetingId });\n    if (!meeting || meeting.externalVideoUrl === null) return;\n\n    Meetings.update({ meetingId }, { $set: { externalVideoUrl: null } });\n    const payload = {};\n\n    Logger.info(`User id=${requesterUserId} stopped sharing an external video for meeting=${meetingId}`);\n\n    RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n  } catch (error) {\n    Logger.error(`Error on stop sharing an external video for meeting=${meetingId} ${error}`);\n  }\n}\n","import './methods';\n\n","import { Meteor } from 'meteor/meteor';\nimport startWatchingExternalVideo from './methods/startWatchingExternalVideo';\nimport stopWatchingExternalVideo from './methods/stopWatchingExternalVideo';\nimport initializeExternalVideo from './methods/initializeExternalVideo';\nimport emitExternalVideoEvent from './methods/emitExternalVideoEvent';\n\nMeteor.methods({\n  initializeExternalVideo,\n  startWatchingExternalVideo,\n  stopWatchingExternalVideo,\n  emitExternalVideoEvent,\n});\n","import { check } from 'meteor/check';\nimport addGroupChat from '../modifiers/addGroupChat';\n\nexport default function handleGroupChatCreated({ body }, meetingId) {\n  check(meetingId, String);\n  check(body, Object);\n\n  addGroupChat(meetingId, body);\n}\n","import { check } from 'meteor/check';\nimport addGroupChat from '../modifiers/addGroupChat';\n\nexport default function handleGroupChatDestroyed({ body }, meetingId) {\n  check(meetingId, String);\n  check(body, Object);\n\n  addGroupChat(meetingId, body);\n}\n","import { check } from 'meteor/check';\nimport addGroupChat from '../modifiers/addGroupChat';\n\nexport default function handleGroupChats({ body }, meetingId) {\n  const { chats } = body;\n\n  check(meetingId, String);\n  check(chats, Array);\n\n  chats.forEach(chat => addGroupChat(meetingId, chat));\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { CHAT_ACCESS_PRIVATE } from '/imports/api/group-chat';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function createGroupChat(receiver) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'CreateGroupChatReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(receiver, Object);\n\n  const payload = {\n    correlationId: `${requesterUserId}-${Date.now()}`,\n    msg: [],\n    users: [receiver.userId],\n    access: CHAT_ACCESS_PRIVATE,\n    name: receiver.name,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function createGroupChat() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const eventName = 'DestroyGroupChatReqMsg';\n\n  const payload = {\n    // TODO: Implement this together with #4988\n    // chats: Array[String],\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, eventName, meetingId, requesterUserId, payload);\n}\n","import flat from 'flat';\nimport { Match, check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport GroupChat from '/imports/api/group-chat';\n\nexport default function addGroupChat(meetingId, chat) {\n  check(meetingId, String);\n  check(chat, {\n    id: Match.Maybe(String),\n    chatId: Match.Maybe(String),\n    correlationId: Match.Maybe(String),\n    name: String,\n    access: String,\n    createdBy: Object,\n    users: Array,\n    msg: Match.Maybe(Array),\n  });\n\n  const chatDocument = {\n    meetingId,\n    chatId: chat.chatId || chat.id,\n    name: chat.name,\n    access: chat.access,\n    users: chat.users.map(u => u.id),\n    createdBy: chat.createdBy.id,\n  };\n\n  const selector = {\n    chatId: chatDocument.chatId,\n    meetingId,\n  };\n\n  const modifier = {\n    $set: flat(chatDocument, { safe: true }),\n  };\n\n  try {\n    const { insertedId } = GroupChat.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.info(`Added group-chat name=${chat.name} meetingId=${meetingId}`);\n    } else {\n      Logger.info(`Upserted group-chat name=${chat.name} meetingId=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding group-chat to collection: ${err}`);\n  }\n}\n","import GroupChat from '/imports/api/group-chat';\nimport Logger from '/imports/startup/server/logger';\nimport clearGroupChatMsg from '/imports/api/group-chat-msg/server/modifiers/clearGroupChatMsg';\n\nexport default function clearGroupChat(meetingId) {\n  try {\n    clearGroupChatMsg(meetingId);\n    const numberAffected = GroupChat.remove({ meetingId });\n\n    if (numberAffected) {\n      Logger.info(`Cleared GroupChat (${meetingId})`);\n    }\n  } catch (err) {\n    Logger.error(`Error on clearing GroupChat (${meetingId}). ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleGroupChats from './handlers/groupChats';\nimport handleGroupChatCreated from './handlers/groupChatCreated';\nimport handleGroupChatDestroyed from './handlers/groupChatDestroyed';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\n\nRedisPubSub.on('GetGroupChatsRespMsg', processForHTML5ServerOnly(handleGroupChats));\nRedisPubSub.on('GroupChatCreatedEvtMsg', handleGroupChatCreated);\nRedisPubSub.on('GroupChatDestroyedEvtMsg', handleGroupChatDestroyed);\nRedisPubSub.on('SyncGetGroupChatsRespMsg', handleGroupChats);\n","import '/imports/api/group-chat-msg/server';\nimport './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport createGroupChat from './methods/createGroupChat';\nimport destroyGroupChat from './methods/destroyGroupChat';\n\nMeteor.methods({\n  createGroupChat,\n  destroyGroupChat,\n});\n","import GroupChat from '/imports/api/group-chat';\nimport { Meteor } from 'meteor/meteor';\n\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction groupChat() {\n  if (!this.userId) {\n    return GroupChat.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_CHAT_TYPE = CHAT_CONFIG.type_public;\n\n  Logger.debug('Publishing group-chat', { meetingId, requesterUserId });\n\n  return GroupChat.find({\n    $or: [\n      { meetingId, access: PUBLIC_CHAT_TYPE },\n      { meetingId, users: { $all: [requesterUserId] } },\n    ],\n\n  });\n}\n\nfunction publish(...args) {\n  const boundGroupChat = groupChat.bind(this);\n  return boundGroupChat(...args);\n}\n\nMeteor.publish('group-chat', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst GroupChat = new Mongo.Collection('group-chat');\n\nif (Meteor.isServer) {\n  GroupChat._ensureIndex({\n    meetingId: 1, chatId: 1, access: 1, users: 1,\n  });\n}\n\nexport default GroupChat;\n\nconst CHAT_ACCESS = {\n  PUBLIC: 'PUBLIC_ACCESS',\n  PRIVATE: 'PRIVATE_ACCESS',\n};\n\nexport const CHAT_ACCESS_PUBLIC = CHAT_ACCESS.PUBLIC;\nexport const CHAT_ACCESS_PRIVATE = CHAT_ACCESS.PRIVATE;\n","import { check } from 'meteor/check';\nimport clearGroupChatMsg from '../modifiers/clearGroupChatMsg';\n\nexport default function clearPublicChatHistory({ header, body }) {\n  const { meetingId } = header;\n  const { chatId } = body;\n\n  check(meetingId, String);\n  check(chatId, String);\n\n  return clearGroupChatMsg(meetingId, chatId);\n}\n","import { check } from 'meteor/check';\nimport _ from 'lodash';\nimport addGroupChatMsg from '../modifiers/addGroupChatMsg';\nimport addBulkGroupChatMsgs from '../modifiers/addBulkGroupChatMsgs';\n\nconst { bufferChatInsertsMs } = Meteor.settings.public.chat;\n\nconst msgBuffer = [];\n\nconst bulkFn = _.throttle(addBulkGroupChatMsgs, bufferChatInsertsMs);\n\nexport default function handleGroupChatMsgBroadcast({ body }, meetingId) {\n  const { chatId, msg } = body;\n\n  check(meetingId, String);\n  check(chatId, String);\n  check(msg, Object);\n\n  if (bufferChatInsertsMs) {\n    msgBuffer.push({ meetingId, chatId, msg });\n    bulkFn(msgBuffer);\n  } else {\n    addGroupChatMsg(meetingId, chatId, msg);\n  }\n}\n","import { Match, check } from 'meteor/check';\nimport syncMeetingChatMsgs from '../modifiers/syncMeetingChatMsgs';\n\nexport default function handleSyncGroupChat({ body }, meetingId) {\n  const { chatId, msgs } = body;\n\n  check(meetingId, String);\n  check(chatId, String);\n  check(msgs, Match.Maybe(Array));\n\n  syncMeetingChatMsgs(meetingId, chatId, msgs);\n}\n","import { check } from 'meteor/check';\nimport startTyping from '../modifiers/startTyping';\n\nexport default function handleUserTyping({ body }, meetingId) {\n  const { chatId, userId } = body;\n\n  check(meetingId, String);\n  check(userId, String);\n  check(chatId, String);\n\n  startTyping(meetingId, userId, chatId);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function clearPublicChatHistory() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ClearPublicChatHistoryPubMsg';\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_GROUP_CHAT_ID = CHAT_CONFIG.public_group_id;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const payload = {\n    chatId: PUBLIC_GROUP_CHAT_ID,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport RegexWebUrl from '/imports/utils/regex-weburl';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst HTML_SAFE_MAP = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\nconst parseMessage = (message) => {\n  let parsedMessage = message || '';\n  parsedMessage = parsedMessage.trim();\n\n  // Replace <br/> with \\n\\r\n  parsedMessage = parsedMessage.replace(/<br\\s*[\\\\/]?>/gi, '\\n\\r');\n\n  // Sanitize. See: http://shebang.brandonmintern.com/foolproof-html-escaping-in-javascript/\n  parsedMessage = parsedMessage.replace(/[<>'\"]/g, c => HTML_SAFE_MAP[c]);\n\n  // Replace flash links to flash valid ones\n  parsedMessage = parsedMessage.replace(RegexWebUrl, \"<a href='event:$&'><u>$&</u></a>\");\n\n  return parsedMessage;\n};\n\nexport default function sendGroupChatMsg(chatId, message) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SendGroupChatMessageMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(message, Object);\n\n  const parsedMessage = parseMessage(message.message);\n\n  message.message = parsedMessage;\n\n  const payload = {\n    msg: message,\n    chatId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function startUserTyping(chatId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserTypingPubMsg';\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_GROUP_CHAT_ID = CHAT_CONFIG.public_group_id;\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(chatId, String);\n\n  const payload = {\n    chatId: chatId || PUBLIC_GROUP_CHAT_ID,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { UsersTyping } from '/imports/api/group-chat-msg';\nimport stopTyping from '../modifiers/stopTyping';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function stopUserTyping() {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const userTyping = UsersTyping.findOne({\n    meetingId,\n    userId: requesterUserId,\n  });\n\n  if (userTyping && meetingId && requesterUserId) {\n    stopTyping(meetingId, requesterUserId, true);\n  }\n}\n","import { GroupChatMsg } from '/imports/api/group-chat-msg';\nimport Logger from '/imports/startup/server/logger';\nimport flat from 'flat';\nimport { parseMessage } from './addGroupChatMsg';\n\nexport default async function addBulkGroupChatMsgs(msgs) {\n  if (!msgs.length) return;\n\n  const mappedMsgs = msgs\n    .map(({ chatId, meetingId, msg }) => ({\n      _id: new Mongo.ObjectID()._str,\n      ...msg,\n      meetingId,\n      chatId,\n      message: parseMessage(msg.message),\n      sender: msg.sender.id,\n    }))\n    .map(el => flat(el, { safe: true }));\n\n  try {\n    const { insertedCount } = await GroupChatMsg.rawCollection().insertMany(mappedMsgs);\n    msgs.length = 0;\n\n    if (insertedCount) {\n      Logger.info(`Inserted ${insertedCount} messages`);\n    }\n  } catch (err) {\n    Logger.error(`Error on bulk insert. ${err}`);\n  }\n}\n","import flat from 'flat';\nimport { Match, check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport { GroupChatMsg } from '/imports/api/group-chat-msg';\nimport { BREAK_LINE } from '/imports/utils/lineEndings';\n\nexport function parseMessage(message) {\n  let parsedMessage = message || '';\n\n  // Replace \\r and \\n to <br/>\n  parsedMessage = parsedMessage.replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, `$1${BREAK_LINE}$2`);\n\n  // Replace flash links to html valid ones\n  parsedMessage = parsedMessage.split('<a href=\\'event:').join('<a target=\"_blank\" href=\\'');\n  parsedMessage = parsedMessage.split('<a href=\"event:').join('<a target=\"_blank\" href=\"');\n\n  return parsedMessage;\n}\n\nexport default function addGroupChatMsg(meetingId, chatId, msg) {\n  check(meetingId, String);\n  check(chatId, String);\n  check(msg, {\n    id: Match.Maybe(String),\n    timestamp: Number,\n    sender: Object,\n    color: String,\n    message: String,\n    correlationId: Match.Maybe(String),\n  });\n\n  const msgDocument = {\n    ...msg,\n    meetingId,\n    chatId,\n    message: parseMessage(msg.message),\n    sender: msg.sender.id,\n  };\n\n  const modifier = flat(msgDocument, { safe: true });\n\n  try {\n    const insertedId = GroupChatMsg.insert(modifier);\n\n    if (insertedId) {\n      Logger.info(`Added group-chat-msg msgId=${msg.id} chatId=${chatId} meetingId=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Error on adding group-chat-msg to collection: ${err}`);\n  }\n}\n","import { GroupChatMsg } from '/imports/api/group-chat-msg';\nimport Logger from '/imports/startup/server/logger';\nimport addGroupChatMsg from '/imports/api/group-chat-msg/server/modifiers/addGroupChatMsg';\n\nexport default function clearGroupChatMsg(meetingId, chatId) {\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_CHAT_SYSTEM_ID = CHAT_CONFIG.system_userid;\n  const PUBLIC_GROUP_CHAT_ID = CHAT_CONFIG.public_group_id;\n  const CHAT_CLEAR_MESSAGE = CHAT_CONFIG.system_messages_keys.chat_clear;\n\n  if (chatId) {\n    try {\n      const numberAffected = GroupChatMsg.remove({ meetingId, chatId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared GroupChatMsg (${meetingId}, ${chatId})`);\n        const clearMsg = {\n          color: '0',\n          timestamp: Date.now(),\n          correlationId: `${PUBLIC_CHAT_SYSTEM_ID}-${Date.now()}`,\n          sender: {\n            id: PUBLIC_CHAT_SYSTEM_ID,\n            name: '',\n          },\n          message: CHAT_CLEAR_MESSAGE,\n        };\n        addGroupChatMsg(meetingId, PUBLIC_GROUP_CHAT_ID, clearMsg);\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing GroupChat (${meetingId}, ${chatId}). ${err}`);\n    }\n    return true;\n  }\n\n  if (meetingId) {\n    try {\n      const numberAffected = GroupChatMsg.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared GroupChatMsg (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing GroupChatMsg (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = GroupChatMsg.remove({ chatId: { $eq: PUBLIC_GROUP_CHAT_ID } });\n\n      if (numberAffected) {\n        Logger.info('Cleared GroupChatMsg (all)');\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing GroupChatMsg (all). ${err}`);\n    }\n  }\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport { UsersTyping } from '/imports/api/group-chat-msg';\nimport stopTyping from './stopTyping';\n\nconst TYPING_TIMEOUT = 5000;\n\nexport default function startTyping(meetingId, userId, chatId) {\n  check(meetingId, String);\n  check(userId, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const user = Users.findOne(selector);\n\n  const modifier = {\n    meetingId,\n    userId,\n    name: user.name,\n    isTypingTo: chatId,\n    role: user.role,\n    time: (new Date()),\n  };\n\n  const typingUser = UsersTyping.findOne(selector, {\n    fields: {\n      time: 1,\n    },\n  });\n\n  if (typingUser) {\n    if (modifier.time - typingUser.time <= TYPING_TIMEOUT - 100) return;\n  }\n\n  try {\n    const { numberAffected } = UsersTyping.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.debug('Typing indicator update', { userId, chatId });\n      Meteor.setTimeout(() => {\n        stopTyping(meetingId, userId);\n      }, TYPING_TIMEOUT);\n    }\n  } catch (err) {\n    Logger.error(`Typing indicator update error: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport { UsersTyping } from '/imports/api/group-chat-msg';\n\nexport default function stopTyping(meetingId, userId, sendMsgInitiated = false) {\n  check(meetingId, String);\n  check(userId, String);\n  check(sendMsgInitiated, Boolean);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const user = UsersTyping.findOne(selector);\n  const stillTyping = !sendMsgInitiated && user && (new Date()) - user.time < 3000;\n  if (stillTyping) return;\n\n  try {\n    const numberAffected = UsersTyping.remove(selector);\n\n    if (numberAffected) {\n      Logger.debug('Stopped typing indicator', { userId });\n    }\n  } catch (err) {\n    Logger.error(`Stop user=${userId} typing indicator error: ${err}`);\n  }\n}\n","import { Match, check } from 'meteor/check';\nimport flat from 'flat';\nimport { GroupChatMsg } from '/imports/api/group-chat-msg';\nimport Logger from '/imports/startup/server/logger';\nimport { parseMessage } from './addGroupChatMsg';\n\nexport default function syncMeetingChatMsgs(meetingId, chatId, msgs) {\n  if (!msgs.length) return;\n\n  check(meetingId, String);\n  check(chatId, String);\n  check(msgs, Match.Maybe(Array));\n\n  try {\n    const bulkOperations = GroupChatMsg.rawCollection().initializeOrderedBulkOp();\n\n    msgs\n      .forEach((msg) => {\n        const msgToSync = {\n          ...msg,\n          meetingId,\n          chatId,\n          message: parseMessage(msg.message),\n          sender: msg.sender.id,\n        };\n\n        const modifier = flat(msgToSync, { safe: true });\n\n        bulkOperations\n          .find({ chatId, meetingId, id: msg.id })\n          .upsert()\n          .updateOne({\n            $setOnInsert: { _id: new Mongo.ObjectID()._str },\n            $set: { ...modifier },\n          });\n      });\n\n    bulkOperations.execute();\n\n    Logger.info('Chat messages synchronized', { chatId, meetingId });\n  } catch (err) {\n    Logger.error(`Error on sync chat messages: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleGroupChatMsgBroadcast from './handlers/groupChatMsgBroadcast';\nimport handleClearPublicGroupChat from './handlers/clearPublicGroupChat';\nimport handleUserTyping from './handlers/userTyping';\nimport handleSyncGroupChatMsg from './handlers/syncGroupsChat';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\n\nRedisPubSub.on('GetGroupChatMsgsRespMsg', processForHTML5ServerOnly(handleSyncGroupChatMsg));\nRedisPubSub.on('GroupChatMessageBroadcastEvtMsg', handleGroupChatMsgBroadcast);\nRedisPubSub.on('ClearPublicChatHistoryEvtMsg', handleClearPublicGroupChat);\nRedisPubSub.on('SyncGetGroupChatMsgsRespMsg', handleSyncGroupChatMsg);\nRedisPubSub.on('UserTypingEvtMsg', handleUserTyping);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport sendGroupChatMsg from './methods/sendGroupChatMsg';\nimport clearPublicChatHistory from './methods/clearPublicChatHistory';\nimport startUserTyping from './methods/startUserTyping';\nimport stopUserTyping from './methods/stopUserTyping';\n\nMeteor.methods({\n  sendGroupChatMsg,\n  clearPublicChatHistory,\n  startUserTyping,\n  stopUserTyping,\n});\n","import { GroupChatMsg, UsersTyping } from '/imports/api/group-chat-msg';\nimport { Meteor } from 'meteor/meteor';\n\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction groupChatMsg(chatsIds) {\n  if (!this.userId) {\n    return GroupChatMsg.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_GROUP_CHAT_ID = CHAT_CONFIG.public_group_id;\n\n  Logger.debug('Publishing group-chat-msg', { meetingId, requesterUserId });\n\n  return GroupChatMsg.find({\n    $or: [\n      { meetingId, chatId: { $eq: PUBLIC_GROUP_CHAT_ID } },\n      { chatId: { $in: chatsIds } },\n    ],\n  });\n}\n\nfunction publish(...args) {\n  const boundGroupChat = groupChatMsg.bind(this);\n  return boundGroupChat(...args);\n}\n\nMeteor.publish('group-chat-msg', publish);\n\nfunction usersTyping() {\n  if (!this.userId) {\n    return UsersTyping.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing users-typing', { meetingId, requesterUserId });\n\n  return UsersTyping.find({ meetingId });\n}\n\nfunction pubishUsersTyping(...args) {\n  const boundUsersTyping = usersTyping.bind(this);\n  return boundUsersTyping(...args);\n}\n\nMeteor.publish('users-typing', pubishUsersTyping);\n","import { Meteor } from 'meteor/meteor';\n\nconst GroupChatMsg = new Mongo.Collection('group-chat-msg');\nconst UsersTyping = new Mongo.Collection('users-typing');\n\nif (Meteor.isServer) {\n  GroupChatMsg._ensureIndex({ meetingId: 1, chatId: 1 });\n  UsersTyping._ensureIndex({ meetingId: 1, isTypingTo: 1 });\n}\n\nexport { GroupChatMsg, UsersTyping };\n","import { check } from 'meteor/check';\nimport setGuestStatus from '../modifiers/setGuestStatus';\n\nexport default function handleGuestApproved({ body }, meetingId) {\n  const { approvedBy, guests } = body;\n  check(meetingId, String);\n  check(approvedBy, String);\n  check(guests, Array);\n\n  return guests.forEach(guest => setGuestStatus(meetingId, guest.guest, guest.status, approvedBy));\n}\n","import stringHash from 'string-hash';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport GuestUsers from '/imports/api/guest-users/';\n\nconst COLOR_LIST = [\n  '#7b1fa2', '#6a1b9a', '#4a148c', '#5e35b1', '#512da8', '#4527a0',\n  '#311b92', '#3949ab', '#303f9f', '#283593', '#1a237e', '#1976d2', '#1565c0',\n  '#0d47a1', '#0277bd', '#01579b',\n];\n\nexport default function handleGuestsWaitingForApproval({ body }, meetingId) {\n  const { guests } = body;\n  check(guests, Array);\n  check(meetingId, String);\n\n  return guests.map((guest) => {\n    try {\n      const { insertedId, numberAffected } = GuestUsers.upsert({\n        meetingId,\n        intId: guest.intId,\n      }, {\n        approved: false,\n        denied: false,\n        ...guest,\n        meetingId,\n        loginTime: new Date().getTime(),\n        color: COLOR_LIST[stringHash(guest.intId) % COLOR_LIST.length],\n      });\n\n      if (insertedId) {\n        Logger.info(`Added guest user meeting=${meetingId}`);\n      } else if (numberAffected) {\n        Logger.info(`Upserted guest user meeting=${meetingId}`);\n      }\n    } catch (err) {\n      Logger.error(`Adding guest user to collection: ${err}`);\n    }\n  });\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst REDIS_CONFIG = Meteor.settings.private.redis;\nconst CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\nconst EVENT_NAME = 'GuestsWaitingApprovedMsg';\n\nexport default function allowPendingUsers(guests, status) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(guests, Array);\n  const mappedGuests = guests.map(guest => ({ status, guest: guest.intId }));\n\n  const payload = {\n    approvedBy: requesterUserId,\n    guests: mappedGuests,\n  };\n\n  Logger.info(`User=${requesterUserId} ${status} guests ${JSON.stringify(mappedGuests)}`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst REDIS_CONFIG = Meteor.settings.private.redis;\nconst CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\nconst EVENT_NAME = 'SetGuestPolicyCmdMsg';\n\nexport default function changeGuestPolicy(policyRule) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(policyRule, String);\n\n  const payload = {\n    setBy: requesterUserId,\n    policy: policyRule,\n  };\n\n  Logger.info(`User=${requesterUserId} change guest policy to ${policyRule}`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport GuestUsers from '/imports/api/guest-users';\nimport Logger from '/imports/startup/server/logger';\n\nconst GUEST_STATUS_ALLOW = 'ALLOW';\nconst GUEST_STATUS_DENY = 'DENY';\nexport default function setGuestStatus(meetingId, intId, status, approvedBy = null) {\n  check(meetingId, String);\n  check(intId, String);\n  check(status, String);\n\n  const selector = {\n    meetingId,\n    intId,\n  };\n\n  const modifier = {\n    $set: {\n      approved: status === GUEST_STATUS_ALLOW,\n      denied: status === GUEST_STATUS_DENY,\n      approvedBy,\n    },\n  };\n\n  try {\n    const numberAffected = GuestUsers.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Updated status=${status} user=${intId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Updating status=${status} user=${intId}: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\nimport handleGuestApproved from './handlers/guestApproved';\nimport handleGuestsWaitingForApproval from './handlers/guestsWaitingForApproval';\n\nRedisPubSub.on('GuestsWaitingForApprovalEvtMsg', processForHTML5ServerOnly(handleGuestsWaitingForApproval));\nRedisPubSub.on('GuestsWaitingApprovedEvtMsg', processForHTML5ServerOnly(handleGuestApproved));\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport allowPendingUsers from '/imports/api/guest-users/server/methods/allowPendingUsers';\nimport changeGuestPolicy from '/imports/api/guest-users/server/methods/changeGuestPolicy';\n\nMeteor.methods({\n  allowPendingUsers,\n  changeGuestPolicy,\n});\n","import GuestUsers from '/imports/api/guest-users/';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction guestUsers() {\n  if (!this.userId) {\n    return GuestUsers.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.info(`Publishing Slides for ${meetingId} ${requesterUserId}`);\n\n  return GuestUsers.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundSlides = guestUsers.bind(this);\n  return boundSlides(...args);\n}\n\nMeteor.publish('guestUser', publish);\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nconst GuestUsers = new Mongo.Collection('guestUsers');\n\nexport default GuestUsers;\n","import _ from 'lodash';\nimport { check } from 'meteor/check';\nimport LocalSettings from '/imports/api/local-settings';\nimport setChangedLocalSettings from '../modifiers/setChangedLocalSettings';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userChangedLocalSettings(settings) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  if (!meetingId || !requesterUserId) return;\n\n  check(settings, Object);\n\n  const userLocalSettings = LocalSettings\n    .findOne({ meetingId, userId: requesterUserId },\n      {\n        fields: { settings: 1 },\n      });\n\n  if (!userLocalSettings || !_.isEqual(userLocalSettings.settings, settings)) {\n    setChangedLocalSettings(meetingId, requesterUserId, settings);\n  }\n}\n","import LocalSettings from '/imports/api/local-settings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearLocalSettings(meetingId) {\n  try {\n    const numberAffected = LocalSettings.remove({ meetingId });\n\n    if (numberAffected) {\n      Logger.info(`Cleared Local Settings (${meetingId})`);\n    }\n  } catch (err) {\n    Logger.error(`Error on clearing Local Settings (${meetingId}). ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport LocalSettings from '/imports/api/local-settings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setChangedLocalSettings(meetingId, userId, settings) {\n  check(meetingId, String);\n  check(userId, String);\n  check(settings, Object);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      settings,\n    },\n  };\n\n  try {\n    const { numChanged } = LocalSettings.upsert(selector, modifier);\n\n    if (numChanged) {\n      Logger.info(`Updated settings for user ${userId} on meeting ${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Error on update settings. ${err}`);\n  }\n}\n","import './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport userChangedLocalSettings from './methods/userChangedLocalSettings';\n\nMeteor.methods({\n  userChangedLocalSettings,\n});\n","import { Meteor } from 'meteor/meteor';\nimport LocalSettings from '/imports/api/local-settings';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction localSettings() {\n  if (!this.userId) {\n    return LocalSettings.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing local settings', { requesterUserId });\n\n  return LocalSettings.find({ meetingId, userId: requesterUserId });\n}\n\nfunction publish(...args) {\n  const boundLocalSettings = localSettings.bind(this);\n  return boundLocalSettings(...args);\n}\n\nMeteor.publish('local-settings', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst LocalSettings = new Mongo.Collection('local-settings');\n\nif (Meteor.isServer) {\n  LocalSettings._ensureIndex({\n    meetingId: 1, userId: 1,\n  });\n}\n\nexport default LocalSettings;\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nconst logClient = function (type, logDescription, logCode = 'was_not_provided', extraInfo = {}, userInfo = {}) {\n  const connectionId = this.connection.id;\n  const User = Users.findOne({ connectionId });\n  const logContents = {\n    logCode,\n    logDescription,\n    connectionId,\n    extraInfo,\n    userInfo,\n  };\n\n  if (User) { // TODO--\n    if ((userInfo.credentials && User.meetingId === userInfo.credentials.meetingId)\n      || ((userInfo.meetingId && User.meetingId === userInfo.meetingId))) {\n      logContents.extraInfo.validUser = 'valid';\n    } else {\n      logContents.extraInfo.validUser = 'invalid';\n    }\n  } else {\n    logContents.extraInfo.validUser = 'notFound';\n  }\n\n  // If I don't pass message, logs will start with `undefined`\n  Logger.log({ message: JSON.stringify(logContents), level: type });\n  // Logger.log({ message: 'client->server', level: type, logContents });\n};\n\nexport default logClient;\n","import './methods';\n","import { Meteor } from 'meteor/meteor';\nimport logClient from './methods/logClient';\n\nMeteor.methods({ logClient });\n","import handleMeetingCreation from './meetingCreation';\n\nexport default function handleGetAllMeetings({ body }) {\n  return handleMeetingCreation({ body });\n}\n","import { check } from 'meteor/check';\nimport addMeeting from '../modifiers/addMeeting';\n\nexport default function handleMeetingCreation({ body }) {\n  const meeting = body.props;\n  const durationInSecods = (meeting.durationProps.duration * 60);\n  meeting.durationProps.timeRemaining = durationInSecods;\n  check(meeting, Object);\n\n  return addMeeting(meeting);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\n\nimport destroyExternalVideo from '/imports/api/external-videos/server/methods/destroyExternalVideo';\nimport { removeAnnotationsStreamer } from '/imports/api/annotations/server/streamer';\nimport { removeCursorStreamer } from '/imports/api/cursor/server/streamer';\n\nexport default function handleMeetingDestruction({ body }) {\n  check(body, Object);\n  const { meetingId } = body;\n  check(meetingId, String);\n\n  destroyExternalVideo(meetingId);\n  removeAnnotationsStreamer(meetingId);\n  removeCursorStreamer(meetingId);\n\n  return RedisPubSub.destroyMeetingQueue(meetingId);\n}\n","import { check } from 'meteor/check';\nimport meetingHasEnded from '../modifiers/meetingHasEnded';\nimport Meetings from '/imports/api/meetings';\nimport Breakouts from '/imports/api/breakouts';\nimport Users from '/imports/api/users/';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function handleMeetingEnd({ body }) {\n  check(body, Object);\n  const { meetingId } = body;\n  check(meetingId, String);\n\n  const cb = (err, num, meetingType) => {\n    if (err) {\n      Logger.error(`${meetingType} ending error: ${err}`);\n      return;\n    }\n    if (num) {\n      Users.update({ meetingId },\n        { $set: { connectionStatus: 'offline' } },\n        (error, numAffected) => {\n          if (error) {\n            Logger.error(`Error marking ending ${meetingType} users as offline: ${meetingId} ${err}`);\n            return;\n          }\n\n          if (numAffected) {\n            Logger.info(`Success marking ending ${meetingType} users as offline: ${meetingId}`);\n          }\n        });\n      Meteor.setTimeout(() => { meetingHasEnded(meetingId); }, 10000);\n    }\n  };\n\n  Meetings.update({ meetingId },\n    { $set: { meetingEnded: true } },\n    (err, num) => { cb(err, num, 'Meeting'); });\n\n  Breakouts.update({ parentMeetingId: meetingId },\n    { $set: { meetingEnded: true } },\n    (err, num) => { cb(err, num, 'Breakout'); });\n}\n","import changeLockSettings from '../modifiers/changeLockSettings';\n\nexport default function handleLockSettingsInMeeting({ body }, meetingId) {\n  changeLockSettings(meetingId, body);\n}\n","import { check } from 'meteor/check';\nimport { RecordMeetings } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function handleRecordingStatusChange({ body }, meetingId) {\n  const { recording } = body;\n  check(recording, Boolean);\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: { recording },\n  };\n\n  try {\n    const { numberAffected } = RecordMeetings.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Changed meeting record status id=${meetingId} recording=${recording}`);\n    }\n  } catch (err) {\n    Logger.error(`Changing record status: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport { RecordMeetings } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function handleRecordingTimerChange({ body }, meetingId) {\n  const { time } = body;\n\n  check(meetingId, String);\n\n  check(body, {\n    time: Number,\n  });\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: { time },\n  };\n\n  try {\n    RecordMeetings.upsert(selector, modifier);\n  } catch (err) {\n    Logger.error(`Changing recording time: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport { MeetingTimeRemaining } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function handleTimeRemainingUpdate({ body }, meetingId) {\n  check(meetingId, String);\n\n  check(body, {\n    timeLeftInSec: Number,\n  });\n  const { timeLeftInSec } = body;\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      timeRemaining: timeLeftInSec,\n    },\n  };\n\n  try {\n    MeetingTimeRemaining.upsert(selector, modifier);\n  } catch (err) {\n    Logger.error(`Changing recording time: ${err}`);\n  }\n}\n","import changeUserLock from '../modifiers/changeUserLock';\n\nexport default function handleLockSettingsInMeeting({ body }, meetingId) {\n  changeUserLock(meetingId, body);\n}\n","import changeWebcamOnlyModerator from '../modifiers/webcamOnlyModerator';\n\nexport default function handleChangeWebcamOnlyModerator({ body }, meetingId) {\n  changeWebcamOnlyModerator(meetingId, body);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function endMeeting() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'LogoutAndEndMeetingCmdMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const payload = {\n    userId: requesterUserId,\n  };\n  Logger.warn(`Meeting '${meetingId}' is destroyed by '${requesterUserId}'`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function toggleLockSettings(lockSettingsProps) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ChangeLockSettingsInMeetingCmdMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(lockSettingsProps, {\n    disableCam: Boolean,\n    disableMic: Boolean,\n    disablePrivateChat: Boolean,\n    disablePublicChat: Boolean,\n    disableNote: Boolean,\n    hideUserList: Boolean,\n    lockedLayout: Boolean,\n    lockOnJoin: Boolean,\n    lockOnJoinConfigurable: Boolean,\n    setBy: Match.Maybe(String),\n  });\n\n  const {\n    disableCam,\n    disableMic,\n    disablePrivateChat: disablePrivChat,\n    disablePublicChat: disablePubChat,\n    disableNote,\n    hideUserList,\n    lockedLayout,\n    lockOnJoin,\n    lockOnJoinConfigurable,\n  } = lockSettingsProps;\n\n  const payload = {\n    disableCam,\n    disableMic,\n    disablePrivChat,\n    disablePubChat,\n    disableNote,\n    hideUserList,\n    lockedLayout,\n    lockOnJoin,\n    lockOnJoinConfigurable,\n    setBy: requesterUserId,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import Logger from '/imports/startup/server/logger';\nimport { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { RecordMeetings } from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function toggleRecording() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const ROLE_MODERATOR = Meteor.settings.public.user.role_moderator;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const EVENT_NAME = 'SetRecordingStatusCmdMsg';\n\n  let meetingRecorded;\n  let allowedToRecord;\n\n  const recordObject = RecordMeetings.findOne({ meetingId });\n\n  if (recordObject != null) {\n    const {\n      allowStartStopRecording,\n      recording,\n      record,\n    } = recordObject;\n\n    meetingRecorded = recording;\n    allowedToRecord = record && allowStartStopRecording; // TODO-- remove some day\n  }\n\n  const payload = {\n    recording: !meetingRecorded,\n    setBy: requesterUserId,\n  };\n\n  const selector = {\n    meetingId,\n    userId: requesterUserId,\n  };\n  const user = Users.findOne(selector);\n\n  if (allowedToRecord && !!user && user.role === ROLE_MODERATOR) {\n    Logger.info(`Setting the record parameter to ${!meetingRecorded} for ${meetingId} by ${requesterUserId}`);\n    return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n  }\n  return null;\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '../../../common/server/helpers';\n\nexport default function toggleWebcamsOnlyForModerator(webcamsOnlyForModerator) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UpdateWebcamsOnlyForModeratorCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(webcamsOnlyForModerator, Boolean);\n\n  const payload = {\n    webcamsOnlyForModerator,\n    setBy: requesterUserId,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\n\nexport default function transferUser(fromMeetingId, toMeetingId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'TransferUserToMeetingRequestMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const payload = {\n    fromMeetingId,\n    toMeetingId,\n    userId: requesterUserId,\n  };\n\n  Logger.verbose('User was transferred from one meting to another', { requesterUserId, fromMeetingId, toMeetingId });\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import flat from 'flat';\nimport {\n  check,\n  Match,\n} from 'meteor/check';\nimport SanitizeHTML from 'sanitize-html';\nimport Meetings, { RecordMeetings } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\nimport createNote from '/imports/api/note/server/methods/createNote';\nimport createCaptions from '/imports/api/captions/server/methods/createCaptions';\nimport { addAnnotationsStreamer } from '/imports/api/annotations/server/streamer';\nimport { addCursorStreamer } from '/imports/api/cursor/server/streamer';\nimport BannedUsers from '/imports/api/users/server/store/bannedUsers';\n\nexport default function addMeeting(meeting) {\n  const meetingId = meeting.meetingProp.intId;\n\n  check(meetingId, String);\n  check(meeting, {\n    breakoutProps: {\n      sequence: Number,\n      freeJoin: Boolean,\n      breakoutRooms: Array,\n      parentId: String,\n      enabled: Boolean,\n      record: Boolean,\n      privateChatEnabled: Boolean,\n    },\n    meetingProp: {\n      intId: String,\n      extId: String,\n      isBreakout: Boolean,\n      name: String,\n    },\n    usersProp: {\n      webcamsOnlyForModerator: Boolean,\n      guestPolicy: String,\n      maxUsers: Number,\n      allowModsToUnmuteUsers: Boolean,\n    },\n    durationProps: {\n      createdTime: Number,\n      duration: Number,\n      createdDate: String,\n      maxInactivityTimeoutMinutes: Number,\n      warnMinutesBeforeMax: Number,\n      meetingExpireIfNoUserJoinedInMinutes: Number,\n      meetingExpireWhenLastUserLeftInMinutes: Number,\n      userInactivityInspectTimerInMinutes: Number,\n      userInactivityThresholdInMinutes: Number,\n      userActivitySignResponseDelayInMinutes: Number,\n      timeRemaining: Number,\n    },\n    welcomeProp: {\n      welcomeMsg: String,\n      modOnlyMessage: String,\n      welcomeMsgTemplate: String,\n    },\n    recordProp: Match.ObjectIncluding({\n      allowStartStopRecording: Boolean,\n      autoStartRecording: Boolean,\n      record: Boolean,\n    }),\n    password: {\n      viewerPass: String,\n      moderatorPass: String,\n    },\n    voiceProp: {\n      voiceConf: String,\n      dialNumber: String,\n      telVoice: String,\n      muteOnStart: Boolean,\n    },\n    screenshareProps: {\n      red5ScreenshareIp: String,\n      red5ScreenshareApp: String,\n      screenshareConf: String,\n    },\n    metadataProp: Object,\n    lockSettingsProps: {\n      disableCam: Boolean,\n      disableMic: Boolean,\n      disablePrivateChat: Boolean,\n      disablePublicChat: Boolean,\n      disableNote: Boolean,\n      hideUserList: Boolean,\n      lockOnJoin: Boolean,\n      lockOnJoinConfigurable: Boolean,\n      lockedLayout: Boolean,\n    },\n  });\n\n  const {\n    recordProp,\n    ...restProps\n  } = meeting;\n\n  const newMeeting = restProps;\n\n  const selector = {\n    meetingId,\n  };\n\n  newMeeting.lockSettingsProps = Object.assign(meeting.lockSettingsProps, { setBy: 'temp' });\n\n  const meetingEnded = false;\n\n  let { welcomeMsg } = newMeeting.welcomeProp;\n\n  const sanitizeTextInChat = original => SanitizeHTML(original, {\n    allowedTags: ['a', 'b', 'br', 'i', 'img', 'li', 'small', 'span', 'strong', 'u', 'ul'],\n    allowedAttributes: {\n      a: ['href', 'name', 'target'],\n      img: ['src', 'width', 'height'],\n    },\n    allowedSchemes: ['https'],\n  });\n\n  const sanitizedWelcomeText = sanitizeTextInChat(welcomeMsg);\n  welcomeMsg = sanitizedWelcomeText.replace(\n    'href=\"event:',\n    'href=\"',\n  );\n\n  const insertBlankTarget = (s, i) => `${s.substr(0, i)} target=\"_blank\"${s.substr(i)}`;\n  const linkWithoutTarget = new RegExp('<a href=\"(.*?)\">', 'g');\n  linkWithoutTarget.test(welcomeMsg);\n\n  if (linkWithoutTarget.lastIndex > 0) {\n    welcomeMsg = insertBlankTarget(\n      welcomeMsg,\n      linkWithoutTarget.lastIndex - 1,\n    );\n  }\n\n  newMeeting.welcomeProp.welcomeMsg = welcomeMsg;\n\n  // note: as of July 2020 `modOnlyMessage` is not published to the client side.\n  // We are sanitizing this data simply to prevent future potential usage\n  // At the moment `modOnlyMessage` is obtained from client side as a response to Enter API\n  newMeeting.welcomeProp.modOnlyMessage = sanitizeTextInChat(newMeeting.welcomeProp.modOnlyMessage);\n\n  const modifier = {\n    $set: Object.assign({\n      meetingId,\n      meetingEnded,\n      publishedPoll: false,\n    }, flat(newMeeting, {\n      safe: true,\n    })),\n  };\n\n  try {\n    const { insertedId, numberAffected } = RecordMeetings.upsert(selector, { meetingId, ...recordProp });\n\n    if (insertedId) {\n      Logger.info(`Added record prop id=${meetingId}`);\n    } else if (numberAffected) {\n      Logger.info(`Upserted record prop id=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding record prop to collection: ${err}`);\n  }\n\n  try {\n    const { insertedId, numberAffected } = Meetings.upsert(selector, modifier);\n\n    addAnnotationsStreamer(meetingId);\n    addCursorStreamer(meetingId);\n\n    if (insertedId) {\n      Logger.info(`Added meeting id=${meetingId}`);\n      // TODO: Here we call Etherpad API to create this meeting notes. Is there a\n      // better place we can run this post-creation routine?\n      createNote(meetingId);\n      createCaptions(meetingId);\n      BannedUsers.init(meetingId);\n    } else if (numberAffected) {\n      Logger.info(`Upserted meeting id=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding meeting to collection: ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport Meetings from '/imports/api/meetings';\nimport { check } from 'meteor/check';\n\nexport default function changeLockSettings(meetingId, payload) {\n  check(meetingId, String);\n  check(payload, {\n    disableCam: Boolean,\n    disableMic: Boolean,\n    disablePrivChat: Boolean,\n    disablePubChat: Boolean,\n    disableNote: Boolean,\n    hideUserList: Boolean,\n    lockedLayout: Boolean,\n    lockOnJoin: Boolean,\n    lockOnJoinConfigurable: Boolean,\n    setBy: Match.Maybe(String),\n  });\n\n  const {\n    disableCam,\n    disableMic,\n    disablePrivChat,\n    disablePubChat,\n    disableNote,\n    hideUserList,\n    lockedLayout,\n    lockOnJoin,\n    lockOnJoinConfigurable,\n    setBy,\n  } = payload;\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      lockSettingsProps: {\n        disableCam,\n        disableMic,\n        disablePrivateChat: disablePrivChat,\n        disablePublicChat: disablePubChat,\n        disableNote,\n        hideUserList,\n        lockedLayout,\n        lockOnJoin,\n        lockOnJoinConfigurable,\n        setBy,\n      },\n    },\n  };\n\n\n  try {\n    const { numberAffected } = Meetings.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Changed meeting={${meetingId}} updated lock settings`);\n    } else {\n      Logger.info(`meeting={${meetingId}} lock settings were not updated`);\n    }\n  } catch (err) {\n    Logger.error(`Changing meeting={${meetingId}} lock settings: ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport { check } from 'meteor/check';\n\nexport default function changeUserLock(meetingId, payload) {\n  check(meetingId, String);\n  check(payload, {\n    userId: String,\n    locked: Boolean,\n    lockedBy: String,\n  });\n\n  const { userId, locked, lockedBy } = payload;\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      locked,\n    },\n  };\n\n  try {\n    const { numberAffected } = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`User's userId=${userId} lock status was changed to: ${locked} by user userId=${lockedBy}`);\n    } else {\n      Logger.info(`User's userId=${userId} lock status wasn't updated`);\n    }\n  } catch (err) {\n    Logger.error(`Changing user lock setting: ${err}`);\n  }\n}\n","import { RecordMeetings } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function meetingHasEnded(meetingId) {\n  try {\n    const numberAffected = RecordMeetings.remove({ meetingId });\n\n    if (numberAffected) {\n      Logger.info(`Cleared record prop from meeting with id ${meetingId}`)\n    }\n  } catch (err) {\n    Logger.error(`Error on clearing record prop from meeting with id ${meetingId}. ${err}`);\n  }\n}\n","import Meetings from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nimport { removeAnnotationsStreamer } from '/imports/api/annotations/server/streamer';\nimport { removeCursorStreamer } from '/imports/api/cursor/server/streamer';\n\nimport clearUsers from '/imports/api/users/server/modifiers/clearUsers';\nimport clearUsersSettings from '/imports/api/users-settings/server/modifiers/clearUsersSettings';\nimport clearGroupChat from '/imports/api/group-chat/server/modifiers/clearGroupChat';\nimport clearBreakouts from '/imports/api/breakouts/server/modifiers/clearBreakouts';\nimport clearAnnotations from '/imports/api/annotations/server/modifiers/clearAnnotations';\nimport clearSlides from '/imports/api/slides/server/modifiers/clearSlides';\nimport clearPolls from '/imports/api/polls/server/modifiers/clearPolls';\nimport clearCaptions from '/imports/api/captions/server/modifiers/clearCaptions';\nimport clearPresentationPods from '/imports/api/presentation-pods/server/modifiers/clearPresentationPods';\nimport clearVoiceUsers from '/imports/api/voice-users/server/modifiers/clearVoiceUsers';\nimport clearUserInfo from '/imports/api/users-infos/server/modifiers/clearUserInfo';\nimport clearNote from '/imports/api/note/server/modifiers/clearNote';\nimport clearNetworkInformation from '/imports/api/network-information/server/modifiers/clearNetworkInformation';\nimport clearLocalSettings from '/imports/api/local-settings/server/modifiers/clearLocalSettings';\nimport clearRecordMeeting from './clearRecordMeeting';\nimport clearVoiceCallStates from '/imports/api/voice-call-states/server/modifiers/clearVoiceCallStates';\nimport clearVideoStreams from '/imports/api/video-streams/server/modifiers/clearVideoStreams';\nimport BannedUsers from '/imports/api/users/server/store/bannedUsers';\nimport Metrics from '/imports/startup/server/metrics';\n\nexport default function meetingHasEnded(meetingId) {\n  removeAnnotationsStreamer(meetingId);\n  removeCursorStreamer(meetingId);\n\n  return Meetings.remove({ meetingId }, () => {\n    clearCaptions(meetingId);\n    clearGroupChat(meetingId);\n    clearPresentationPods(meetingId);\n    clearBreakouts(meetingId);\n    clearPolls(meetingId);\n    clearAnnotations(meetingId);\n    clearSlides(meetingId);\n    clearUsers(meetingId);\n    clearUsersSettings(meetingId);\n    clearVoiceUsers(meetingId);\n    clearUserInfo(meetingId);\n    clearNote(meetingId);\n    clearNetworkInformation(meetingId);\n    clearLocalSettings(meetingId);\n    clearRecordMeeting(meetingId);\n    clearVoiceCallStates(meetingId);\n    clearVideoStreams(meetingId);\n    BannedUsers.delete(meetingId);\n    Metrics.removeMeeting(meetingId);\n\n    Logger.info(`Cleared Meetings with id ${meetingId}`);\n  });\n}\n","import Meetings from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\n\nexport default function setPublishedPoll(meetingId, isPublished) {\n  check(meetingId, String);\n  check(isPublished, Boolean);\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      publishedPoll: isPublished,\n    },\n  };\n\n  try {\n    const { numberAffected } = Meetings.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Set publishedPoll=${isPublished} in meeitingId=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Setting publishedPoll=${isPublished} for meetingId=${meetingId}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport Meetings from '/imports/api/meetings';\nimport { check } from 'meteor/check';\n\nexport default function changeWebcamOnlyModerator(meetingId, payload) {\n  check(meetingId, String);\n  check(payload, {\n    webcamsOnlyForModerator: Boolean,\n    setBy: String,\n  });\n  const { webcamsOnlyForModerator } = payload;\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      'usersProp.webcamsOnlyForModerator': webcamsOnlyForModerator,\n    },\n  };\n\n  try {\n    const { numberAffected } = Meetings.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Changed meeting={${meetingId}} updated webcam Only for Moderator`)\n    } else {\n      Logger.info(`meeting={${meetingId}} webcam Only for Moderator were not updated`);\n    }\n  } catch (err) {\n    Logger.error(`Changwing meeting={${meetingId}} webcam Only for Moderator: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleMeetingCreation from './handlers/meetingCreation';\nimport handleGetAllMeetings from './handlers/getAllMeetings';\nimport handleMeetingEnd from './handlers/meetingEnd';\nimport handleMeetingDestruction from './handlers/meetingDestruction';\nimport handleMeetingLocksChange from './handlers/meetingLockChange';\nimport handleUserLockChange from './handlers/userLockChange';\nimport handleRecordingStatusChange from './handlers/recordingStatusChange';\nimport handleRecordingTimerChange from './handlers/recordingTimerChange';\nimport handleTimeRemainingUpdate from './handlers/timeRemainingUpdate';\nimport handleChangeWebcamOnlyModerator from './handlers/webcamOnlyModerator';\n\nRedisPubSub.on('MeetingCreatedEvtMsg', handleMeetingCreation);\nRedisPubSub.on('SyncGetMeetingInfoRespMsg', handleGetAllMeetings);\nRedisPubSub.on('MeetingEndingEvtMsg', handleMeetingEnd);\nRedisPubSub.on('MeetingDestroyedEvtMsg', handleMeetingDestruction);\nRedisPubSub.on('LockSettingsInMeetingChangedEvtMsg', handleMeetingLocksChange);\nRedisPubSub.on('UserLockedInMeetingEvtMsg', handleUserLockChange);\nRedisPubSub.on('RecordingStatusChangedEvtMsg', handleRecordingStatusChange);\nRedisPubSub.on('UpdateRecordingTimerEvtMsg', handleRecordingTimerChange);\nRedisPubSub.on('WebcamsOnlyForModeratorChangedEvtMsg', handleChangeWebcamOnlyModerator);\nRedisPubSub.on('GetLockSettingsRespMsg', handleMeetingLocksChange);\nRedisPubSub.on('MeetingTimeRemainingUpdateEvtMsg', handleTimeRemainingUpdate);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport endMeeting from './methods/endMeeting';\nimport toggleRecording from './methods/toggleRecording';\nimport transferUser from './methods/transferUser';\nimport toggleLockSettings from './methods/toggleLockSettings';\nimport toggleWebcamsOnlyForModerator from './methods/toggleWebcamsOnlyForModerator';\n\nMeteor.methods({\n  endMeeting,\n  toggleRecording,\n  toggleLockSettings,\n  transferUser,\n  toggleWebcamsOnlyForModerator,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Meetings, { RecordMeetings, MeetingTimeRemaining } from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst ROLE_MODERATOR = Meteor.settings.public.user.role_moderator;\n\nfunction meetings(role) {\n  if (!this.userId) {\n    return Meetings.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing meeting', { meetingId, requesterUserId });\n\n  const selector = {\n    $or: [\n      { meetingId },\n    ],\n  };\n\n  const User = Users.findOne({ userId: requesterUserId, meetingId }, { fields: { role: 1 } });\n  if (!!User && User.role === ROLE_MODERATOR) {\n    selector.$or.push({\n      'meetingProp.isBreakout': true,\n      'breakoutProps.parentId': meetingId,\n    });\n  }\n\n  const options = {\n    fields: {\n      password: false,\n      'welcomeProp.modOnlyMessage': false,\n    },\n  };\n\n  return Meetings.find(selector, options);\n}\n\nfunction publish(...args) {\n  const boundMeetings = meetings.bind(this);\n  return boundMeetings(...args);\n}\n\nMeteor.publish('meetings', publish);\n\nfunction recordMeetings() {\n  if (!this.userId) {\n    return RecordMeetings.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  return RecordMeetings.find({ meetingId });\n}\nfunction recordPublish(...args) {\n  const boundRecordMeetings = recordMeetings.bind(this);\n  return boundRecordMeetings(...args);\n}\n\nMeteor.publish('record-meetings', recordPublish);\n\nfunction meetingTimeRemaining() {\n  if (!this.userId) {\n    return MeetingTimeRemaining.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  return MeetingTimeRemaining.find({ meetingId });\n}\nfunction timeRemainingPublish(...args) {\n  const boundtimeRemaining = meetingTimeRemaining.bind(this);\n  return boundtimeRemaining(...args);\n}\n\nMeteor.publish('meeting-time-remaining', timeRemainingPublish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Meetings = new Mongo.Collection('meetings');\nconst RecordMeetings = new Mongo.Collection('record-meetings');\nconst MeetingTimeRemaining = new Mongo.Collection('meeting-time-remaining');\n\nif (Meteor.isServer) {\n  // types of queries for the meetings:\n  // 1. meetingId\n\n  Meetings._ensureIndex({ meetingId: 1 });\n  RecordMeetings._ensureIndex({ meetingId: 1 });\n  MeetingTimeRemaining._ensureIndex({ meetingId: 1 });\n}\n\nexport {\n  RecordMeetings,\n  MeetingTimeRemaining,\n};\nexport default Meetings;\n","import { check } from 'meteor/check';\nimport NetworkInformation from '/imports/api/network-information';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userInstabilityDetected(sender) {\n  const { meetingId, requesterUserId: receiver } = extractCredentials(this.userId);\n  check(sender, String);\n\n  const payload = {\n    time: new Date().getTime(),\n    meetingId,\n    receiver,\n    sender,\n  };\n\n  Logger.debug('Receiver reported a network instability', { receiver, meetingId });\n\n  return NetworkInformation.insert(payload);\n}\n","import NetworkInformation from '/imports/api/network-information';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearNetworkInformation(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffected = NetworkInformation.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared Network Information (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing Network Information (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = NetworkInformation.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared Network Information (all)');\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing Network Information (all). ${err}`);\n    }\n  }\n}\n","import './methods';\nimport './publisher';\n","import { Meteor } from 'meteor/meteor';\nimport userInstabilityDetected from './methods/userInstabilityDetected';\n\nMeteor.methods({\n  userInstabilityDetected,\n});\n","import { Meteor } from 'meteor/meteor';\nimport NetworkInformation from '/imports/api/network-information';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction networkInformation() {\n  if (!this.userId) {\n    return NetworkInformation.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  return NetworkInformation.find({\n    meetingId,\n  });\n}\n\nfunction publish(...args) {\n  const boundNetworkInformation = networkInformation.bind(this);\n\n  return boundNetworkInformation(...args);\n}\n\nMeteor.publish('network-information', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst NetworkInformation = new Mongo.Collection('network-information');\n\nif (Meteor.isServer) {\n  NetworkInformation._ensureIndex({ meetingId: 1 });\n}\n\nexport default NetworkInformation;\n","import { check } from 'meteor/check';\nimport updateNote from '/imports/api/note/server/modifiers/updateNote';\n\nexport default function handlePadUpdate({ body }) {\n  const { pad, revs } = body;\n  const { id } = pad;\n\n  check(id, String);\n  check(revs, Number);\n\n  updateNote(id, revs);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport {\n  generateNoteId,\n  createPadURL,\n  getReadOnlyIdURL,\n  isEnabled,\n  getDataFromResponse,\n} from '/imports/api/note/server/helpers';\nimport addNote from '/imports/api/note/server/modifiers/addNote';\nimport axios from 'axios';\n\nexport default function createNote(meetingId) {\n  // Avoid note creation if this feature is disabled\n  if (!isEnabled()) {\n    Logger.warn(`Notes are disabled for ${meetingId}`);\n    return;\n  }\n\n  check(meetingId, String);\n\n  const noteId = generateNoteId(meetingId);\n\n  const createURL = createPadURL(noteId);\n  axios({\n    method: 'get',\n    url: createURL,\n    responseType: 'json',\n  }).then((responseOuter) => {\n    const { status } = responseOuter;\n    if (status !== 200) {\n      Logger.error(`Could not get note info for ${meetingId} ${status}`);\n    }\n    const readOnlyURL = getReadOnlyIdURL(noteId);\n    axios({\n      method: 'get',\n      url: readOnlyURL,\n      responseType: 'json',\n    }).then((response) => {\n      const readOnlyNoteId = getDataFromResponse(response.data, 'readOnlyID');\n      if (readOnlyNoteId) {\n        addNote(meetingId, noteId, readOnlyNoteId);\n      } else {\n        Logger.error(`Could not get note readOnlyID for ${meetingId}`);\n      }\n    }).catch(error => Logger.error(`Could not get note readOnlyID for ${meetingId}: ${error}`));\n  }).catch(error => Logger.error(`Could not create note for ${meetingId}: ${error}`));\n}\n","import { check } from 'meteor/check';\nimport Note from '/imports/api/note';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function addNote(meetingId, noteId, readOnlyNoteId) {\n  check(meetingId, String);\n  check(noteId, String);\n  check(readOnlyNoteId, String);\n\n  const selector = {\n    meetingId,\n    noteId,\n  };\n\n  const modifier = {\n    meetingId,\n    noteId,\n    readOnlyNoteId,\n    revs: 0,\n  };\n\n  try {\n    const { insertedId } = Note.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.info(`Added note id=${noteId} readOnlyId=${readOnlyNoteId} meeting=${meetingId}`);\n    } else {\n      Logger.info(`Upserted note id=${noteId} readOnlyId=${readOnlyNoteId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding note to the collection: ${err}`);\n  }\n}\n","import Note from '/imports/api/note';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearNote(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffected = Note.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared Note (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing Note (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = Note.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared Note (all)');\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing Note (all). ${err}`);\n    }\n  }\n}\n","import Note from '/imports/api/note';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\n\nexport default function updateNote(noteId, revs) {\n  check(noteId, String);\n  check(revs, Number);\n\n  const selector = {\n    noteId,\n  };\n\n  const modifier = {\n    $set: {\n      revs,\n    },\n  };\n\n  try {\n    const numberAffected = Note.update(selector, modifier, { multi: true });\n\n    if (numberAffected) {\n      Logger.verbose('Notes: update note pad', { pad: noteId, revs });\n    }\n  } catch (err) {\n    Logger.error('Notes: error when updating note pad', { err });\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForNotePadOnly } from '/imports/api/note/server/helpers';\nimport handlePadUpdate from './handlers/padUpdate';\n\nRedisPubSub.on('PadUpdateSysMsg', processForNotePadOnly(handlePadUpdate));\n","import { Meteor } from 'meteor/meteor';\nimport { hashFNV32a } from '/imports/api/common/server/helpers';\n\nconst ETHERPAD = Meteor.settings.private.etherpad;\nconst NOTE_CONFIG = Meteor.settings.public.note;\nconst BASE_URL = `http://${ETHERPAD.host}:${ETHERPAD.port}/api/${ETHERPAD.version}`;\nconst TOKEN = '_';\n\nconst createPadURL = padId => `${BASE_URL}/createPad?apikey=${ETHERPAD.apikey}&padID=${padId}`;\n\nconst getReadOnlyIdURL = padId => `${BASE_URL}/getReadOnlyID?apikey=${ETHERPAD.apikey}&padID=${padId}`;\n\nconst appendTextURL = (padId, text) => `${BASE_URL}/appendText?apikey=${ETHERPAD.apikey}&padID=${padId}&text=${encodeURIComponent(text)}`;\n\nconst generateNoteId = (meetingId) => {\n  const noteId = hashFNV32a(meetingId, true);\n  return noteId;\n};\n\nconst isEnabled = () => NOTE_CONFIG.enabled;\n\nconst getDataFromResponse = (data, key) => {\n  if (data) {\n    const innerData = data.data;\n    if (innerData && innerData[key]) {\n      return innerData[key];\n    }\n  }\n  return null;\n};\n\nconst isNotePad = padId => padId.search(TOKEN);\n\nconst processForNotePadOnly = fn => (message, ...args) => {\n  const { body } = message;\n  const { pad } = body;\n  const { id } = pad;\n\n  check(id, String);\n\n  if (isNotePad(id)) return fn(message, ...args);\n  return () => {};\n};\n\nexport {\n  generateNoteId,\n  createPadURL,\n  getReadOnlyIdURL,\n  isEnabled,\n  getDataFromResponse,\n  appendTextURL,\n  processForNotePadOnly,\n};\n","import './publishers';\nimport './eventHandlers';\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport Note from '/imports/api/note';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction note() {\n  if (!this.userId) {\n    return Note.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.info(`Publishing note for ${meetingId} ${requesterUserId}`);\n\n  return Note.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundNote = note.bind(this);\n  return boundNote(...args);\n}\n\nMeteor.publish('note', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Note = new Mongo.Collection('note');\n\nif (Meteor.isServer) {\n  Note._ensureIndex({ meetingId: 1, noteId: 1 });\n}\n\nexport default Note;\n","import Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function ping() {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const selector = {\n    meetingId,\n    userId: requesterUserId,\n  };\n\n  const modifier = {\n    $set: {\n      lastPing: Date.now(),\n    },\n  };\n\n  try {\n    Users.update(selector, modifier);\n  } catch (err) {\n    Logger.error(`Error updating lastPing for ${requesterUserId}: ${err}`);\n  }\n}\n","import './publishers';\nimport './methods';\n","import { Meteor } from 'meteor/meteor';\nimport ping from './methods/ping';\n\nMeteor.methods({\n  ping,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport _ from 'lodash';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst COLLECTION_NAME = 'ping-pong';\nconst INTERVAL_IN_SETTINGS = (Meteor.settings.public.pingPong.clearUsersInSeconds) * 1000;\nconst INTERVAL_TIME = INTERVAL_IN_SETTINGS < 10000 ? 10000 : INTERVAL_IN_SETTINGS;\nconst PONG_INTERVAL_IN_SETTINGS = (Meteor.settings.public.pingPong.pongTimeInSeconds) * 1000;\nconst PONG_INTERVAL = PONG_INTERVAL_IN_SETTINGS >= (INTERVAL_TIME / 2)\n  ? (INTERVAL_TIME / 2) : PONG_INTERVAL_IN_SETTINGS;\n\nfunction pingPong() {\n  if (!this.userId) {\n    return; // TODO-- is there a more appropriate set to return?\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const id = _.uniqueId('pong-');\n  Logger.info(`Starting ping-pong publish for userId: ${requesterUserId}`);\n  const pongSender = (interval) => {\n    const payload = {\n      pong: {\n        message: 'pong',\n        time: Date.now(),\n        meetingId,\n      },\n    };\n    let fn = this.added.bind(this);\n    if (interval) fn = this.changed.bind(this);\n    fn(COLLECTION_NAME, id, payload);\n  };\n  pongSender();\n  this.ready();\n  const interval = Meteor.setInterval(() => pongSender(true), PONG_INTERVAL);\n\n  this.onStop(() => {\n    Meteor.clearInterval(interval);\n  });\n}\n\nMeteor.publish('ping-pong', pingPong);\n","import { check } from 'meteor/check';\nimport removePoll from '../modifiers/removePoll';\nimport setPublishedPoll from '../../../meetings/server/modifiers/setPublishedPoll';\n\nexport default function pollPublished({ body }, meetingId) {\n  const { pollId } = body;\n\n  check(meetingId, String);\n  check(pollId, String);\n\n  setPublishedPoll(meetingId, true);\n\n  return removePoll(meetingId, pollId);\n}\n","import { check } from 'meteor/check';\nimport addPoll from '../modifiers/addPoll';\nimport setPublishedPoll from '../../../meetings/server/modifiers/setPublishedPoll';\n\nexport default function pollStarted({ body }, meetingId) {\n  const { userId } = body;\n  const { poll } = body;\n\n  check(meetingId, String);\n  check(userId, String);\n  check(poll, Object);\n\n  setPublishedPoll(meetingId, false);\n\n  return addPoll(meetingId, userId, poll);\n}\n","import { check } from 'meteor/check';\nimport removePoll from '../modifiers/removePoll';\nimport clearPolls from '../modifiers/clearPolls';\n\nexport default function pollStopped({ body }, meetingId) {\n  const { poll } = body;\n\n  check(meetingId, String);\n\n  if (poll) {\n    const { pollId } = poll;\n\n    check(pollId, String);\n\n    return removePoll(meetingId, pollId);\n  }\n\n  return clearPolls(meetingId);\n}\n","import { check } from 'meteor/check';\nimport Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function userResponded({ body }) {\n  const { pollId, userId, answerId } = body;\n\n  check(pollId, String);\n  check(userId, String);\n  check(answerId, Number);\n\n  const selector = {\n    id: pollId,\n  };\n\n  const modifier = {\n    $pull: {\n      users: userId,\n    },\n    $push: {\n      responses: { userId, answerId },\n    },\n  };\n\n  try {\n    const numberAffected = Polls.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Updating Poll response (userId: ${userId}, response: ${answerId}, pollId: ${pollId})`);\n    }\n  } catch (err) {\n    Logger.error(`Updating Poll responses: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport updateVotes from '../modifiers/updateVotes';\n\nexport default function userVoted({ body }, meetingId) {\n  const { poll } = body;\n\n  check(meetingId, String);\n  check(poll, {\n    id: String,\n    answers: [\n      {\n        id: Number,\n        key: String,\n        numVotes: Number,\n      },\n    ],\n    numRespondents: Number,\n    numResponders: Number,\n  });\n\n  return updateVotes(poll, meetingId);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function publishPoll() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ShowPollResultReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const poll = Polls.findOne({ meetingId }); // TODO--send pollid from client\n  if (!poll) {\n    Logger.error(`Attempted to publish inexisting poll for meetingId: ${meetingId}`);\n    return false;\n  }\n\n  return RedisPubSub.publishUserMessage(\n    CHANNEL,\n    EVENT_NAME,\n    meetingId,\n    requesterUserId,\n    ({ requesterId: requesterUserId, pollId: poll.id }),\n  );\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function publishVote(pollId, pollAnswerId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'RespondToPollReqMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(pollAnswerId, Number);\n  check(pollId, String);\n\n  const allowedToVote = Polls.findOne({ id: pollId, users: { $in: [requesterUserId] } }, {\n    fields: {\n      users: 1,\n    },\n  });\n\n  if (!allowedToVote) {\n    Logger.info(`Poll User={${requesterUserId}} has already voted in PollId={${pollId}}`);\n    return null;\n  }\n\n  const selector = {\n    users: requesterUserId,\n    meetingId,\n    'answers.id': pollAnswerId,\n  };\n\n  const payload = {\n    requesterId: requesterUserId,\n    pollId,\n    questionId: 0,\n    answerId: pollAnswerId,\n  };\n\n  /*\n   We keep an array of people who were in the meeting at the time the poll\n   was started. The poll is published to them only.\n   Once they vote - their ID is removed and they cannot see the poll anymore\n  */\n  const modifier = {\n    $pull: {\n      users: requesterUserId,\n    },\n  };\n\n  try {\n    const numberAffected = Polls.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Removed responded user=${requesterUserId} from poll (meetingId: ${meetingId}, pollId: ${pollId}!)`);\n\n      RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n    }\n  } catch (err) {\n    Logger.error(`Removing responded user from Polls collection: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function startPoll(pollType, pollId, answers) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n\n  let EVENT_NAME = 'StartPollReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(pollId, String);\n  check(pollType, String);\n\n  const payload = {\n    requesterId: requesterUserId,\n    pollId: `${pollId}/${new Date().getTime()}`,\n    pollType,\n  };\n\n  if (pollType === 'custom') {\n    EVENT_NAME = 'StartCustomPollReqMsg';\n    check(answers, Array);\n    payload.answers = answers;\n  }\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function stopPoll() {\n  const { meetingId, requesterUserId: requesterId } = extractCredentials(this.userId);\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'StopPollReqMsg';\n\n  return RedisPubSub.publishUserMessage(\n    CHANNEL,\n    EVENT_NAME,\n    meetingId,\n    requesterId,\n    ({ requesterId }),\n  );\n}\n","import Users from '/imports/api/users';\nimport Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\nimport flat from 'flat';\nimport { check } from 'meteor/check';\n\nexport default function addPoll(meetingId, requesterId, poll) {\n  check(requesterId, String);\n  check(meetingId, String);\n  check(poll, {\n    id: String,\n    answers: [\n      {\n        id: Number,\n        key: String,\n      },\n    ],\n  });\n\n  const userSelector = {\n    meetingId,\n    userId: { $ne: requesterId },\n    clientType: { $ne: 'dial-in-user' },\n  };\n\n  const userIds = Users.find(userSelector, { fields: { userId: 1 } })\n    .fetch()\n    .map(user => user.userId);\n\n  const selector = {\n    meetingId,\n    requester: requesterId,\n    id: poll.id,\n  };\n\n  const modifier = Object.assign(\n    { meetingId },\n    { requester: requesterId },\n    { users: userIds },\n    flat(poll, { safe: true }),\n  );\n\n\n  try {\n    const { insertedId } = Polls.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.info(`Added Poll id=${poll.id}`);\n    } else {\n      Logger.info(`Upserted Poll id=${poll.id}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding Poll to collection: ${poll.id}`);\n  }\n}\n","import Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearPolls(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffected = Polls.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared Polls (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.info(`Error on clearing Polls (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = Polls.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared Polls (all)');\n      }\n    } catch (err) {\n      Logger.info(`Error on clearing Polls (all). ${err}`);\n    }\n  }\n}\n","import Polls from '/imports/api/polls';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function removePoll(meetingId, id) {\n  check(meetingId, String);\n  check(id, String);\n\n  const selector = {\n    meetingId,\n    id,\n  };\n\n  try {\n    const numberAffected = Polls.remove(selector);\n\n    if (numberAffected) {\n      Logger.info(`Removed Poll id=${id}`);\n    }\n\n  } catch (err) {\n    Logger.error(`Removing Poll from collection: ${err}`);\n  }\n}\n","import Polls from '/imports/api/polls';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport flat from 'flat';\n\nexport default function updateVotes(poll, meetingId) {\n  check(meetingId, String);\n  check(poll, Object);\n\n  const {\n    id,\n    answers,\n    numResponders,\n    numRespondents,\n  } = poll;\n\n  check(id, String);\n  check(answers, Array);\n\n  check(numResponders, Number);\n  check(numRespondents, Number);\n\n  const selector = {\n    meetingId,\n    id,\n  };\n\n  const modifier = {\n    $set: flat(poll, { safe: true }),\n  };\n\n  try {\n    const numberAffected = Polls.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Updating Polls collection (meetingId: ${meetingId}, pollId: ${id}!)`);\n    }\n  } catch (err) {\n    Logger.error(`Updating Polls collection: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handlePollStarted from './handlers/pollStarted';\nimport handlePollStopped from './handlers/pollStopped';\nimport handlePollPublished from './handlers/pollPublished';\nimport handleUserVoted from './handlers/userVoted';\nimport handleUserResponded from './handlers/userResponded';\n\nRedisPubSub.on('PollShowResultEvtMsg', handlePollPublished);\nRedisPubSub.on('PollStartedEvtMsg', handlePollStarted);\nRedisPubSub.on('PollStoppedEvtMsg', handlePollStopped);\nRedisPubSub.on('PollUpdatedEvtMsg', handleUserVoted);\nRedisPubSub.on('UserRespondedToPollRespMsg', handleUserResponded);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport publishVote from './methods/publishVote';\nimport publishPoll from './methods/publishPoll';\nimport startPoll from './methods/startPoll';\nimport stopPoll from './methods/stopPoll';\n\nMeteor.methods({\n  publishVote,\n  publishPoll,\n  startPoll,\n  stopPoll,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport Polls from '/imports/api/polls';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction currentPoll() {\n  if (!this.userId) {\n    return Polls.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  const selector = {\n    meetingId,\n  };\n\n  Logger.debug('Publishing poll', { meetingId });\n\n  return Polls.find(selector);\n}\n\nfunction publishCurrentPoll(...args) {\n  const boundPolls = currentPoll.bind(this);\n  return boundPolls(...args);\n}\n\nMeteor.publish('current-poll', publishCurrentPoll);\n\n\nfunction polls() {\n  if (!this.userId) {\n    return Polls.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing polls', { meetingId, requesterUserId });\n\n  const selector = {\n    meetingId,\n    users: requesterUserId,\n  };\n\n  return Polls.find(selector);\n}\n\nfunction publish(...args) {\n  const boundPolls = polls.bind(this);\n  return boundPolls(...args);\n}\n\nMeteor.publish('polls', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Polls = new Mongo.Collection('polls');\n\nif (Meteor.isServer) {\n  // We can have just one active poll per meeting\n  // makes no sense to index it by anything other than meetingId\n\n  Polls._ensureIndex({ meetingId: 1 });\n}\n\nexport default Polls;\n","import { check } from 'meteor/check';\nimport addPresentationPod from '../modifiers/addPresentationPod';\n\nexport default function handleCreateNewPresentationPod({ body }, meetingId) {\n  check(body, {\n    currentPresenterId: String,\n    podId: String,\n  });\n  check(meetingId, String);\n\n  const { currentPresenterId, podId } = body;\n\n  const pod = {\n    currentPresenterId,\n    podId,\n  };\n\n  addPresentationPod(meetingId, pod);\n}\n","import { check } from 'meteor/check';\nimport removePresentationPod from '../modifiers/removePresentationPod';\n\nexport default function handleRemovePresentationPod({ body }, meetingId) {\n  check(body, Object);\n  check(meetingId, String);\n\n  const { podId } = body;\n\n  check(podId, String);\n\n  removePresentationPod(meetingId, podId);\n}\n","import { check } from 'meteor/check';\nimport setPresenterInPod from '../modifiers/setPresenterInPod';\n\nexport default function handleSetPresenterInPod({ body }, meetingId) {\n  check(body, Object);\n\n  const { podId, nextPresenterId } = body;\n\n  check(podId, String);\n  check(nextPresenterId, String);\n\n  setPresenterInPod(meetingId, podId, nextPresenterId);\n}\n","import { check } from 'meteor/check';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport removePresentationPod from '../modifiers/removePresentationPod';\nimport addPresentationPod from '../modifiers/addPresentationPod';\n\nexport default function handleSyncGetPresentationPods({ body }, meetingId) {\n  check(body, Object);\n  check(meetingId, String);\n\n  const { pods } = body;\n  check(pods, Array);\n\n  const presentationPodIds = pods.map(pod => pod.id);\n\n  const presentationPodsToRemove = PresentationPods.find({\n    meetingId,\n    podId: { $nin: presentationPodIds },\n  }, { fields: { podId: 1 } }).fetch();\n\n  presentationPodsToRemove.forEach(p => removePresentationPod(meetingId, p.podId));\n\n  pods.forEach((pod) => {\n    // 'podId' and 'currentPresenterId' for some reason called 'id' and 'currentPresenter'\n    // in this message\n    const {\n      id: podId,\n      currentPresenter: currentPresenterId,\n      presentations,\n    } = pod;\n    addPresentationPod(meetingId, { podId, currentPresenterId }, presentations);\n  });\n}\n","import { Match, check } from 'meteor/check';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\nimport addPresentation from '/imports/api/presentations/server/modifiers/addPresentation';\n\n// 'presentations' is passed down here when we receive a Sync message\n// and it's not used when we just create a new presentation pod\nexport default function addPresentationPod(meetingId, pod, presentations = undefined) {\n  check(meetingId, String);\n  check(presentations, Match.Maybe(Array));\n  check(pod, {\n    currentPresenterId: String,\n    podId: String,\n  });\n\n  const { currentPresenterId, podId } = pod;\n\n  const selector = {\n    meetingId,\n    podId,\n  };\n\n  const modifier = {\n    meetingId,\n    podId,\n    currentPresenterId,\n  };\n\n  try {\n    const { insertedId } = PresentationPods.upsert(selector, modifier);\n\n    // if it's a Sync message - continue adding the attached presentations\n    if (presentations) {\n      presentations.forEach(presentation => addPresentation(meetingId, podId, presentation));\n    }\n\n    if (insertedId) {\n      Logger.info(`Added presentation pod id=${podId} meeting=${meetingId}`);\n    } else {\n      Logger.info(`Upserted presentation pod id=${podId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding presentation pod to the collection: ${err}`);\n  }\n}\n","import PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\nimport clearPresentations from '/imports/api/presentations/server/modifiers/clearPresentations';\nimport clearPresentationUploadToken from '/imports/api/presentation-upload-token/server/modifiers/clearPresentationUploadToken';\n\nexport default function clearPresentationPods(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffected = PresentationPods.remove({ meetingId });\n\n      if (numberAffected) {\n        clearPresentations(meetingId);\n        clearPresentationUploadToken(meetingId);\n        Logger.info(`Cleared Presentations Pods (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing Presentations Pods (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = PresentationPods.remove({});\n\n      if (numberAffected) {\n        clearPresentations();\n        clearPresentationUploadToken();\n        Logger.info('Cleared Presentations Pods (all)');\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing Presentations Pods (all). ${err}`);\n    }\n  }\n}\n","import { check } from 'meteor/check';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\nimport clearPresentations from '/imports/api/presentations/server/modifiers/clearPresentations';\nimport clearPresentationUploadToken from '/imports/api/presentation-upload-token/server/modifiers/clearPresentationUploadToken';\n\nexport default function removePresentationPod(meetingId, podId) {\n  check(meetingId, String);\n  check(podId, String);\n\n  const selector = {\n    meetingId,\n    podId,\n  };\n\n  try {\n    const numberAffected = PresentationPods.remove(selector);\n\n    if (numberAffected && podId) {\n      Logger.info(`Removed presentation pod id=${podId} meeting=${meetingId}`);\n      clearPresentations(meetingId, podId);\n      clearPresentationUploadToken(meetingId, podId);\n    }\n  } catch (err) {\n    Logger.error(`Error on removing presentation pod from collection: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setPresenterInPod(meetingId, podId, nextPresenterId) {\n  check(meetingId, String);\n  check(podId, String);\n  check(nextPresenterId, String);\n\n  const selector = {\n    meetingId,\n    podId,\n  };\n\n  const modifier = {\n    $set: {\n      currentPresenterId: nextPresenterId,\n    },\n  };\n\n  try {\n    const { numberAffected } = PresentationPods.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Set a new presenter in pod id=${podId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Setting a presenter in pod: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleCreateNewPresentationPod from './handlers/createNewPresentationPod';\nimport handleRemovePresentationPod from './handlers/removePresentationPod';\nimport handleSyncGetPresentationPods from './handlers/syncGetPresentationPods';\nimport handleSetPresenterInPod from './handlers/setPresenterInPod';\n\nRedisPubSub.on('CreateNewPresentationPodEvtMsg', handleCreateNewPresentationPod);\nRedisPubSub.on('RemovePresentationPodEvtMsg', handleRemovePresentationPod);\nRedisPubSub.on('SetPresenterInPodRespMsg', handleSetPresenterInPod);\nRedisPubSub.on('SyncGetPresentationPodsRespMsg', handleSyncGetPresentationPods);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction presentationPods() {\n  if (!this.userId) {\n    return PresentationPods.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  Logger.debug('Publishing presentation-pods', { meetingId, requesterUserId });\n\n  return PresentationPods.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundPresentationPods = presentationPods.bind(this);\n  return boundPresentationPods(...args);\n}\n\nMeteor.publish('presentation-pods', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst PresentationPods = new Mongo.Collection('presentation-pods');\n\nif (Meteor.isServer) {\n  // types of queries for the presentation pods:\n  // 1. meetingId, podId  ( 4 )\n\n  PresentationPods._ensureIndex({ meetingId: 1, podId: 1 });\n}\n\nexport default PresentationPods;\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport PresentationUploadToken from '/imports/api/presentation-upload-token';\n\nexport default function handlePresentationUploadTokenFail({ body, header }, meetingId) {\n  check(body, Object);\n\n  const { userId } = header;\n  const { podId, filename } = body;\n\n  check(userId, String);\n  check(podId, String);\n  check(filename, String);\n\n  const selector = {\n    meetingId,\n    userId,\n    podId,\n    filename,\n  };\n\n  try {\n    const { numberAffected } = PresentationUploadToken.upsert(selector, { failed: true, authzToken: null });\n\n    if (numberAffected) {\n      Logger.info(`Removing presentationToken filename=${filename} podId=${podId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Removing presentationToken from collection: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport PresentationUploadToken from '/imports/api/presentation-upload-token';\n\nexport default function handlePresentationUploadTokenPass({ body, header }, meetingId) {\n  check(body, Object);\n\n  const { userId } = header;\n  const { podId, authzToken, filename } = body;\n\n  check(userId, String);\n  check(podId, String);\n  check(authzToken, String);\n  check(filename, String);\n\n  const selector = {\n    meetingId,\n    podId,\n    userId,\n    filename,\n  };\n\n  const modifier = {\n    meetingId,\n    podId,\n    userId,\n    filename,\n    authzToken,\n    failed: false,\n    used: false,\n  };\n\n  try {\n    const { insertedId } = PresentationUploadToken.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.info(`Inserting presentationToken filename=${filename} podId=${podId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Inserting presentationToken from collection: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function requestPresentationUploadToken(podId, filename) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'PresentationUploadTokenReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(podId, String);\n  check(filename, String);\n\n  const payload = {\n    podId,\n    filename,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import PresentationUploadToken from '/imports/api/presentation-upload-token';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function setUsedToken(authzToken) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const payload = {\n    $set: {\n      used: true,\n    },\n  };\n\n  try {\n    const numberAffected = PresentationUploadToken.update({\n      meetingId,\n      userId: requesterUserId,\n      authzToken,\n    }, payload);\n\n    if (numberAffected) {\n      Logger.info(`Token: ${authzToken} has been set as used in meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Unable to set token as used : ${err}`);\n  }\n}\n","import PresentationUploadToken from '/imports/api/presentation-upload-token';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearPresentationUploadToken(meetingId, podId) {\n  if (meetingId && podId) {\n    try {\n      const numberAffected = PresentationUploadToken.remove({ meetingId, podId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared Presentations Upload Token (${meetingId}, ${podId})`);\n        return true;\n      }\n    } catch (err) {\n      Logger.info(`Error on clearing Presentations Upload Token (${meetingId}, ${podId}). ${err}`);\n      return false;\n    }\n  }\n\n  if (meetingId) {\n    try {\n      const numberAffected = PresentationUploadToken.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared Presentations Upload Token (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.info(`Error on clearing Presentations Upload Token (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      // clearing presentations for the whole server\n      const numberAffected = PresentationUploadToken.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared Presentations Upload Token (all)');\n      }\n    } catch (err) {\n      Logger.info(`Error on clearing Presentations Upload Token (all). ${err}`);\n    }\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\n\nimport handlePresentationUploadTokenPass from './handlers/presentationUploadTokenPass';\nimport handlePresentationUploadTokenFail from './handlers/presentationUploadTokenFail';\n\nRedisPubSub.on('PresentationUploadTokenPassRespMsg', processForHTML5ServerOnly(handlePresentationUploadTokenPass));\nRedisPubSub.on('PresentationUploadTokenFailRespMsg', processForHTML5ServerOnly(handlePresentationUploadTokenFail));\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport requestPresentationUploadToken from './methods/requestPresentationUploadToken';\nimport setUsedToken from './methods/setUsedToken';\n\nMeteor.methods({\n  requestPresentationUploadToken,\n  setUsedToken,\n});\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport PresentationUploadToken from '/imports/api/presentation-upload-token';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction presentationUploadToken(podId, filename) {\n  if (!this.userId) {\n    return PresentationUploadToken.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(podId, String);\n  check(filename, String);\n\n  const selector = {\n    meetingId,\n    podId,\n    userId: requesterUserId,\n    filename,\n  };\n\n  Logger.debug('Publishing PresentationUploadToken', { meetingId, requesterUserId });\n\n  return PresentationUploadToken.find(selector);\n}\n\nfunction publish(...args) {\n  const boundPresentationUploadToken = presentationUploadToken.bind(this);\n  return boundPresentationUploadToken(...args);\n}\n\nMeteor.publish('presentation-upload-token', publish);\n","const PresentationUploadToken = new Mongo.Collection('presentation-upload-token');\n\nexport default PresentationUploadToken;\n","import { check } from 'meteor/check';\nimport addPresentation from '../modifiers/addPresentation';\n\nexport default function handlePresentationAdded({ body }, meetingId) {\n  check(body, Object);\n\n  const { presentation, podId } = body;\n\n  check(meetingId, String);\n  check(podId, String);\n  check(presentation, Object);\n\n  return addPresentation(meetingId, podId, presentation);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Presentations from '/imports/api/presentations';\n\n// const OFFICE_DOC_CONVERSION_SUCCESS_KEY = 'OFFICE_DOC_CONVERSION_SUCCESS';\nconst OFFICE_DOC_CONVERSION_FAILED_KEY = 'OFFICE_DOC_CONVERSION_FAILED';\nconst OFFICE_DOC_CONVERSION_INVALID_KEY = 'OFFICE_DOC_CONVERSION_INVALID';\nconst SUPPORTED_DOCUMENT_KEY = 'SUPPORTED_DOCUMENT';\nconst UNSUPPORTED_DOCUMENT_KEY = 'UNSUPPORTED_DOCUMENT';\nconst PAGE_COUNT_FAILED_KEY = 'PAGE_COUNT_FAILED';\nconst PAGE_COUNT_EXCEEDED_KEY = 'PAGE_COUNT_EXCEEDED';\nconst PDF_HAS_BIG_PAGE_KEY = 'PDF_HAS_BIG_PAGE';\nconst GENERATED_SLIDE_KEY = 'GENERATED_SLIDE';\n// const GENERATING_THUMBNAIL_KEY = 'GENERATING_THUMBNAIL';\n// const GENERATED_THUMBNAIL_KEY = 'GENERATED_THUMBNAIL';\n// const GENERATING_TEXTFILES_KEY = 'GENERATING_TEXTFILES';\n// const GENERATED_TEXTFILES_KEY = 'GENERATED_TEXTFILES';\n// const GENERATING_SVGIMAGES_KEY = 'GENERATING_SVGIMAGES';\n// const GENERATED_SVGIMAGES_KEY = 'GENERATED_SVGIMAGES';\n// const CONVERSION_COMPLETED_KEY = 'CONVERSION_COMPLETED';\n\nexport default function handlePresentationConversionUpdate({ body }, meetingId) {\n  check(body, Object);\n\n  const {\n    presentationId, podId, messageKey: status, presName: presentationName,\n  } = body;\n\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n  check(status, String);\n\n  const statusModifier = {\n    'conversion.status': status,\n    'conversion.error': false,\n    'conversion.done': false,\n  };\n\n  switch (status) {\n    case SUPPORTED_DOCUMENT_KEY:\n      statusModifier.id = presentationId;\n      statusModifier.name = presentationName;\n      break;\n\n    case UNSUPPORTED_DOCUMENT_KEY:\n    case OFFICE_DOC_CONVERSION_FAILED_KEY:\n    case OFFICE_DOC_CONVERSION_INVALID_KEY:\n    case PAGE_COUNT_FAILED_KEY:\n    case PAGE_COUNT_EXCEEDED_KEY:\n    case PDF_HAS_BIG_PAGE_KEY:\n      statusModifier.id = presentationId;\n      statusModifier.name = presentationName;\n      statusModifier['conversion.error'] = true;\n      break;\n\n    case GENERATED_SLIDE_KEY:\n      statusModifier['conversion.pagesCompleted'] = body.pagesCompleted;\n      statusModifier['conversion.numPages'] = body.numberOfPages;\n      break;\n\n    default:\n      break;\n  }\n\n  const selector = {\n    meetingId,\n    podId,\n    id: presentationId,\n  };\n\n  const modifier = {\n    $set: Object.assign({ meetingId, podId }, statusModifier),\n  };\n\n  try {\n    const { insertedId } = Presentations.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.info(`Updated presentation conversion status=${status} id=${presentationId} meeting=${meetingId}`);\n    } else {\n      Logger.debug('Upserted presentation conversion', { status, presentationId, meetingId });\n    }\n  } catch (err) {\n    Logger.error(`Updating conversion status presentation to collection: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport setCurrentPresentation from '../modifiers/setCurrentPresentation';\n\nexport default function handlePresentationCurrentSet({ body }, meetingId) {\n  check(body, Object);\n\n  const { presentationId, podId } = body;\n\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n\n  return setCurrentPresentation(meetingId, podId, presentationId);\n}\n","import { check } from 'meteor/check';\nimport setPresentationDownloadable from '../modifiers/setPresentationDownloadable';\n\nexport default function handlePresentationDownloadableSet({ body }, meetingId) {\n  check(body, Object);\n\n  const { presentationId, podId, downloadable } = body;\n\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n  check(downloadable, Boolean);\n\n  return setPresentationDownloadable(meetingId, podId, presentationId, downloadable);\n}\n","import { check } from 'meteor/check';\n\nimport removePresentation from '../modifiers/removePresentation';\n\nexport default function handlePresentationRemove({ body }, meetingId) {\n  const { podId, presentationId } = body;\n\n  check(meetingId, String);\n  check(podId, String);\n  check(presentationId, String);\n\n  return removePresentation(meetingId, podId, presentationId);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function removePresentation(presentationId, podId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'RemovePresentationPubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(presentationId, String);\n  check(podId, String);\n\n  const payload = {\n    presentationId,\n    podId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function setPresentation(presentationId, podId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SetCurrentPresentationPubMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(presentationId, String);\n  check(podId, String);\n\n  const payload = {\n    presentationId,\n    podId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function setPresentationDownloadable(presentationId, downloadable) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SetPresentationDownloadablePubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(downloadable, Boolean);\n  check(presentationId, String);\n\n  const payload = {\n    presentationId,\n    podId: 'DEFAULT_PRESENTATION_POD',\n    downloadable,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { HTTP } from 'meteor/http';\nimport { check } from 'meteor/check';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\nimport flat from 'flat';\nimport addSlide from '/imports/api/slides/server/modifiers/addSlide';\nimport setCurrentPresentation from './setCurrentPresentation';\n\nconst getSlideText = async (url) => {\n  let content = '';\n  try {\n    content = await HTTP.get(url).content;\n  } catch (error) {\n    Logger.error(`No file found. ${error}`);\n  }\n  return content;\n};\n\nconst addSlides = (meetingId, podId, presentationId, slides) => {\n  slides.forEach(async (slide) => {\n    const content = await getSlideText(slide.txtUri);\n\n    Object.assign(slide, { content });\n\n    addSlide(meetingId, podId, presentationId, slide);\n  });\n};\n\nexport default function addPresentation(meetingId, podId, presentation) {\n  check(meetingId, String);\n  check(podId, String);\n  check(presentation, {\n    id: String,\n    name: String,\n    current: Boolean,\n    pages: [\n      {\n        id: String,\n        num: Number,\n        thumbUri: String,\n        swfUri: String,\n        txtUri: String,\n        svgUri: String,\n        current: Boolean,\n        xOffset: Number,\n        yOffset: Number,\n        widthRatio: Number,\n        heightRatio: Number,\n      },\n    ],\n    downloadable: Boolean,\n  });\n\n  const selector = {\n    meetingId,\n    podId,\n    id: presentation.id,\n  };\n\n  const modifier = {\n    $set: Object.assign({\n      meetingId,\n      podId,\n      'conversion.done': true,\n      'conversion.error': false,\n    }, flat(presentation, { safe: true })),\n  };\n\n  try {\n    const { insertedId } = Presentations.upsert(selector, modifier);\n\n    addSlides(meetingId, podId, presentation.id, presentation.pages);\n    \n    if (insertedId) {\n      if (presentation.current) {\n        setCurrentPresentation(meetingId, podId, presentation.id);\n        Logger.info(`Added presentation id=${presentation.id} meeting=${meetingId}`);\n      } else {\n        Logger.info(`Upserted presentation id=${presentation.id} meeting=${meetingId}`);\n      }\n    }\n  } catch (err) {\n    Logger.error(`Adding presentation to collection: ${err}`);\n  }\n}\n","import Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearPresentations(meetingId, podId) {\n  // clearing presentations for 1 pod\n  if (meetingId && podId) {\n    try {\n      const numberAffected = Presentations.remove({ meetingId, podId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared Presentations (${meetingId}, ${podId})`);\n        return true;\n      }\n    } catch (err) {\n      Logger.error(`Error on cleaning Presentations (${meetingId}, ${podId}). ${err}`);\n      return false;\n    }\n  }\n\n  // clearing presentations for the whole meeting\n  if (meetingId) {\n    try {\n      const numberAffected = Presentations.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared Presentations (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on cleaning Presentations (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = Presentations.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared Presentations (all)');\n      }\n    } catch (err) {\n      Logger.error(`Error on cleaning Presentations (all). ${err}`);\n    }\n  }\n}\n","import { check } from 'meteor/check';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\n\nimport clearSlidesPresentation from '/imports/api/slides/server/modifiers/clearSlidesPresentation';\n\nexport default function removePresentation(meetingId, podId, presentationId) {\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n\n  const selector = {\n    meetingId,\n    podId,\n    id: presentationId,\n  };\n\n  try {\n    const numberAffected = Presentations.remove(selector);\n\n    if (numberAffected) {\n      clearSlidesPresentation(meetingId, presentationId);\n      Logger.info(`Removed presentation id=${presentationId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Removing presentation from collection: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setCurrentPresentation(meetingId, podId, presentationId) {\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n\n  const oldCurrent = {\n    selector: {\n      meetingId,\n      podId,\n      current: true,\n    },\n    modifier: {\n      $set: { current: false },\n    },\n    callback: (err) => {\n      if (err) {\n        Logger.error(`Unsetting the current presentation: ${err}`);\n        return;\n      }\n\n      Logger.info('Unsetted as current presentation');\n      return;\n    },\n  };\n\n  const newCurrent = {\n    selector: {\n      meetingId,\n      podId,\n      id: presentationId,\n    },\n    modifier: {\n      $set: { current: true },\n    },\n    callback: (err) => {\n      if (err) {\n        Logger.error(`Setting as current presentation id=${presentationId}: ${err}`);\n        return;\n      }\n\n      Logger.info(`Setted as current presentation id=${presentationId}`);\n      return;\n    },\n  };\n\n  const oldPresentation = Presentations.findOne(oldCurrent.selector);\n  const newPresentation = Presentations.findOne(newCurrent.selector);\n\n  // Prevent bug with presentation being unset, same happens in the slide\n  // See: https://github.com/bigbluebutton/bigbluebutton/pull/4431\n  if (oldPresentation && newPresentation && (oldPresentation._id === newPresentation._id)) {\n    return;\n  }\n\n  if (newPresentation) {\n    Presentations.update(newPresentation._id, newCurrent.modifier, newCurrent.callback);\n  }\n\n  if (oldPresentation) {\n    Presentations.update(oldPresentation._id, oldCurrent.modifier, oldCurrent.callback);\n  }\n}\n","import { check } from 'meteor/check';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setPresentationDownloadable(meetingId, podId,\n  presentationId, downloadable) {\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n  check(downloadable, Boolean);\n\n  const selector = {\n    meetingId,\n    podId,\n    id: presentationId,\n  };\n\n  const modifier = {\n    $set: {\n      downloadable,\n    },\n  };\n\n  try {\n    const { numberAffected } = Presentations.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Set downloadable status on presentation {${presentationId} in meeting {${meetingId}}`);\n    }\n  } catch (err) {\n    Logger.error(`Could not set downloadable on pres {${presentationId} in meeting {${meetingId}} ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handlePresentationAdded from './handlers/presentationAdded';\nimport handlePresentationRemove from './handlers/presentationRemove';\nimport handlePresentationCurrentSet from './handlers/presentationCurrentSet';\nimport handlePresentationConversionUpdate from './handlers/presentationConversionUpdate';\nimport handlePresentationDownloadableSet from './handlers/presentationDownloadableSet';\n\nRedisPubSub.on('PdfConversionInvalidErrorEvtMsg', handlePresentationConversionUpdate);\nRedisPubSub.on('PresentationPageGeneratedEvtMsg', handlePresentationConversionUpdate);\nRedisPubSub.on('PresentationPageCountErrorEvtMsg', handlePresentationConversionUpdate);\nRedisPubSub.on('PresentationConversionUpdateEvtMsg', handlePresentationConversionUpdate);\nRedisPubSub.on('PresentationConversionCompletedEvtMsg', handlePresentationAdded);\nRedisPubSub.on('RemovePresentationEvtMsg', handlePresentationRemove);\nRedisPubSub.on('SetCurrentPresentationEvtMsg', handlePresentationCurrentSet);\nRedisPubSub.on('SetPresentationDownloadableEvtMsg', handlePresentationDownloadableSet);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport removePresentation from './methods/removePresentation';\nimport setPresentation from './methods/setPresentation';\nimport setPresentationDownloadable from './methods/setPresentationDownloadable';\n\nMeteor.methods({\n  removePresentation,\n  setPresentation,\n  setPresentationDownloadable,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction presentations() {\n  if (!this.userId) {\n    return Presentations.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing Presentations', { meetingId, requesterUserId });\n\n  return Presentations.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundPresentations = presentations.bind(this);\n  return boundPresentations(...args);\n}\n\nMeteor.publish('presentations', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Presentations = new Mongo.Collection('presentations');\n\nif (Meteor.isServer) {\n  // types of queries for the presentations:\n  // 1. meetingId, podId, id        ( 3 )\n  // 2. meetingId, id               ( 1 )\n  // 3. meetingId, id, current      ( 2 )\n  // 4. meetingId                   ( 1 )\n\n  Presentations._ensureIndex({ meetingId: 1, podId: 1, id: 1 });\n}\n\nexport default Presentations;\n","import { check } from 'meteor/check';\nimport Meetings from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport addScreenshare from '../modifiers/addScreenshare';\nimport Logger from '/imports/startup/server/logger';\nimport stopWatchingExternalVideo from '/imports/api/external-videos/server/methods/stopWatchingExternalVideo';\n\nexport default function handleScreenshareStarted({ body }, meetingId) {\n  check(meetingId, String);\n  check(body, Object);\n\n  const meeting = Meetings.findOne({ meetingId });\n  const presenter = Users.findOne({ meetingId, presenter: true });\n  const presenterId = presenter && presenter.userId ? presenter.userId : 'system-screenshare-starting';\n  if (meeting && meeting.externalVideoUrl) {\n    Logger.info(`ScreenshareStarted: There is external video being shared. Stopping it due to presenter change, ${meeting.externalVideoUrl}`);\n    stopWatchingExternalVideo({ meetingId, requesterUserId: presenterId });\n  }\n  return addScreenshare(meetingId, body);\n}\n","import { check } from 'meteor/check';\nimport clearScreenshare from '../modifiers/clearScreenshare';\n\nexport default function handleScreenshareStopped({ body }, meetingId) {\n  const { screenshareConf } = body;\n\n  check(meetingId, String);\n  check(screenshareConf, String);\n\n  return clearScreenshare(meetingId, screenshareConf);\n}\n","import { check } from 'meteor/check';\nimport flat from 'flat';\nimport Logger from '/imports/startup/server/logger';\nimport Screenshare from '/imports/api/screenshare';\n\nexport default function addScreenshare(meetingId, body) {\n  check(meetingId, String);\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      meetingId,\n      screenshare: flat(body),\n    },\n  };\n\n  try {\n    const { numberAffected } = Screenshare.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Upserted screenshare id=${body.screenshareConf}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding screenshare to collection: ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport Screenshare from '/imports/api/screenshare';\n\nexport default function clearScreenshare(meetingId, screenshareConf) {\n  try {\n    let numberAffected;\n\n    if (meetingId && screenshareConf) {\n      numberAffected = Screenshare.remove({ meetingId, 'screenshare.screenshareConf': screenshareConf });\n    } else {\n      numberAffected = Screenshare.remove({});\n    }\n\n    if (numberAffected) {\n      Logger.info(`removed screenshare meetingId=${meetingId} id=${screenshareConf}`);\n    }\n  } catch (err) {\n    Logger.error(`removing screenshare to collection: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleScreenshareStarted from './handlers/screenshareStarted';\nimport handleScreenshareStopped from './handlers/screenshareStopped';\n\nRedisPubSub.on('ScreenshareRtmpBroadcastStartedEvtMsg', handleScreenshareStarted);\nRedisPubSub.on('ScreenshareRtmpBroadcastStoppedEvtMsg', handleScreenshareStopped);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.methods({\n});\n","import Screenshare from '/imports/api/screenshare';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction screenshare() {\n  if (!this.userId) {\n    return Screenshare.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing Screenshare', { meetingId, requesterUserId });\n\n  return Screenshare.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundScreenshare = screenshare.bind(this);\n  return boundScreenshare(...args);\n}\n\nMeteor.publish('screenshare', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Screenshare = new Mongo.Collection('screenshare');\n\nif (Meteor.isServer) {\n  // types of queries for the screenshare:\n  // 1. meetingId\n\n  Screenshare._ensureIndex({ meetingId: 1 });\n}\n\nexport default Screenshare;\n","import { check } from 'meteor/check';\nimport changeCurrentSlide from '../modifiers/changeCurrentSlide';\n\nexport default function handleSlideChange({ body }, meetingId) {\n  const { pageId, presentationId, podId } = body;\n\n  check(pageId, String);\n  check(presentationId, String);\n  check(podId, String);\n\n  return changeCurrentSlide(meetingId, podId, presentationId, pageId);\n}\n","import { check } from 'meteor/check';\nimport resizeSlide from '../modifiers/resizeSlide';\n\nexport default function handleSlideResize({ body }, meetingId) {\n  check(meetingId, String);\n  check(body, Object);\n\n  return resizeSlide(meetingId, body);\n}\n","import Presentations from '/imports/api/presentations';\nimport { Slides } from '/imports/api/slides';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function switchSlide(slideNumber, podId) { // TODO-- send presentationId and SlideId\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SetCurrentPagePubMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(slideNumber, Number);\n\n  const selector = {\n    meetingId,\n    podId,\n    current: true,\n  };\n\n  const Presentation = Presentations.findOne(selector);\n\n  if (!Presentation) {\n    throw new Meteor.Error('presentation-not-found', 'You need a presentation to be able to switch slides');\n  }\n\n  const Slide = Slides.findOne({\n    meetingId,\n    podId,\n    presentationId: Presentation.id,\n    num: slideNumber,\n  });\n\n  if (!Slide) {\n    throw new Meteor.Error('slide-not-found', `Slide number ${slideNumber} not found in the current presentation`);\n  }\n\n  const payload = {\n    podId,\n    presentationId: Presentation.id,\n    pageId: Slide.id,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import Presentations from '/imports/api/presentations';\nimport { Slides } from '/imports/api/slides';\nimport { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function zoomSlide(slideNumber, podId, widthRatio, heightRatio, x, y) { // TODO-- send presentationId and SlideId\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ResizeAndMovePagePubMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const selector = {\n    meetingId,\n    podId,\n    current: true,\n  };\n  const Presentation = Presentations.findOne(selector);\n\n  if (!Presentation) {\n    throw new Meteor.Error('presentation-not-found', 'You need a presentation to be able to switch slides');\n  }\n\n  const Slide = Slides.findOne({\n    meetingId,\n    podId,\n    presentationId: Presentation.id,\n    num: slideNumber,\n  });\n\n  if (!Slide) {\n    throw new Meteor.Error('slide-not-found', `Slide number ${slideNumber} not found in the current presentation`);\n  }\n\n  const payload = {\n    podId,\n    presentationId: Presentation.id,\n    pageId: Slide.id,\n    xOffset: x,\n    yOffset: y,\n    widthRatio,\n    heightRatio,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import probe from 'probe-image-size';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport flat from 'flat';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { Slides } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\nimport { SVG, PNG } from '/imports/utils/mimeTypes';\nimport calculateSlideData from '/imports/api/slides/server/helpers';\nimport addSlidePositions from './addSlidePositions';\n\nconst loadSlidesFromHttpAlways = Meteor.settings.private.app.loadSlidesFromHttpAlways || false;\n\nconst requestWhiteboardHistory = (meetingId, slideId) => {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'GetWhiteboardAnnotationsReqMsg';\n  const USER_ID = 'nodeJSapp';\n\n  const payload = {\n    whiteboardId: slideId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, USER_ID, payload);\n};\n\nconst SUPPORTED_TYPES = [SVG, PNG];\n\nconst fetchImageSizes = imageUri => probe(imageUri)\n  .then((result) => {\n    if (!SUPPORTED_TYPES.includes(result.mime)) {\n      throw new Meteor.Error('invalid-image-type', `received ${result.mime} expecting ${SUPPORTED_TYPES.join()}`);\n    }\n\n    return {\n      width: result.width,\n      height: result.height,\n    };\n  })\n  .catch((reason) => {\n    Logger.error(`Error parsing image size. ${reason}. uri=${imageUri}`);\n    return reason;\n  });\n\nexport default function addSlide(meetingId, podId, presentationId, slide) {\n  check(podId, String);\n  check(presentationId, String);\n\n  check(slide, {\n    id: String,\n    num: Number,\n    thumbUri: String,\n    swfUri: String,\n    txtUri: String,\n    svgUri: String,\n    current: Boolean,\n    xOffset: Number,\n    yOffset: Number,\n    widthRatio: Number,\n    heightRatio: Number,\n    content: String,\n  });\n\n  const {\n    id: slideId,\n    xOffset,\n    yOffset,\n    widthRatio,\n    heightRatio,\n    ...restSlide\n  } = slide;\n\n  const selector = {\n    meetingId,\n    podId,\n    presentationId,\n    id: slideId,\n  };\n\n  const imageUri = slide.svgUri || slide.pngUri;\n\n  const modifier = {\n    $set: Object.assign(\n      { meetingId },\n      { podId },\n      { presentationId },\n      { id: slideId },\n      { imageUri },\n      flat(restSlide),\n      { safe: true },\n    ),\n  };\n\n  const imageSizeUri = (loadSlidesFromHttpAlways ? imageUri.replace(/^https/i, 'http') : imageUri);\n\n  return fetchImageSizes(imageSizeUri)\n    .then(({ width, height }) => {\n      // there is a rare case when for a very long not-active meeting the presentation\n      // files just disappear and width/height can't be retrieved\n      if (width && height) {\n        // pre-calculating the width, height, and vieBox coordinates / dimensions\n        // to unload the client-side\n        const slideData = {\n          width,\n          height,\n          xOffset,\n          yOffset,\n          widthRatio,\n          heightRatio,\n        };\n        const slidePosition = calculateSlideData(slideData);\n\n        addSlidePositions(meetingId, podId, presentationId, slideId, slidePosition);\n      }\n\n      try {\n        const { insertedId, numberAffected } = Slides.upsert(selector, modifier);\n\n        requestWhiteboardHistory(meetingId, slideId);\n\n        if (insertedId) {\n          Logger.info(`Added slide id=${slideId} pod=${podId} presentation=${presentationId}`);\n        } else if (numberAffected) {\n          Logger.info(`Upserted slide id=${slideId} pod=${podId} presentation=${presentationId}`);\n        }\n\n      } catch (err) {\n        Logger.error(`Error on adding slide to collection: ${err}`);\n      }\n    })\n    .catch(reason => Logger.error(`Error parsing image size. ${reason}. slide=${slideId} uri=${imageUri}`));\n}\n","import { SlidePositions } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\nimport flat from 'flat';\n\nexport default function addSlidePositions(\n  meetingId,\n  podId,\n  presentationId,\n  slideId,\n  slidePosition,\n) {\n  check(meetingId, String);\n  check(podId, String);\n  check(presentationId, String);\n  check(slideId, String);\n\n  check(slidePosition, {\n    width: Number,\n    height: Number,\n    x: Number,\n    y: Number,\n    viewBoxWidth: Number,\n    viewBoxHeight: Number,\n  });\n\n  const selector = {\n    meetingId,\n    podId,\n    presentationId,\n    id: slideId,\n  };\n\n  const modifier = {\n    $set: Object.assign(\n      { meetingId },\n      { podId },\n      { presentationId },\n      { id: slideId },\n      flat(slidePosition),\n      { safe: true },\n    ),\n  };\n\n  try {\n    const { insertedId } = SlidePositions.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.info(`Added slide position id=${slideId} pod=${podId} presentation=${presentationId}`);\n    } else {\n      Logger.info(`Upserted slide position id=${slideId} pod=${podId} presentation=${presentationId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding slide position to collection: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport { Slides } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function changeCurrentSlide(meetingId, podId, presentationId, slideId) {\n  check(meetingId, String);\n  check(presentationId, String);\n  check(slideId, String);\n  check(podId, String);\n\n  const oldCurrent = {\n    selector: {\n      meetingId,\n      podId,\n      presentationId,\n      current: true,\n    },\n    modifier: {\n      $set: { current: false },\n    },\n    callback: (err) => {\n      if (err) {\n        Logger.error(`Unsetting the current slide: ${err}`);\n        return;\n      }\n\n      Logger.info('Unsetted the current slide');\n      return;\n    },\n  };\n\n  const newCurrent = {\n    selector: {\n      meetingId,\n      podId,\n      presentationId,\n      id: slideId,\n    },\n    modifier: {\n      $set: { current: true },\n    },\n    callback: (err) => {\n      if (err) {\n        Logger.error(`Setting as current slide id=${slideId}: ${err}`);\n        return;\n      }\n\n      Logger.info(`Setted as current slide id=${slideId}`);\n      return;\n    },\n  };\n\n  const oldSlide = Slides.findOne(oldCurrent.selector);\n  const newSlide = Slides.findOne(newCurrent.selector);\n\n  // if the oldCurrent and newCurrent have the same ids\n  if (oldSlide && newSlide && (oldSlide._id === newSlide._id)) {\n    return;\n  }\n\n  if (newSlide) {\n    Slides.update(newSlide._id, newCurrent.modifier, newCurrent.callback);\n  }\n\n  if (oldSlide) {\n    Slides.update(oldSlide._id, oldCurrent.modifier, oldCurrent.callback);\n  }\n}\n","import { Slides, SlidePositions } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearSlides(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffectedSlidePositions = SlidePositions.remove({ meetingId });\n\n      const numberAffected = Slides.remove({ meetingId });\n\n      if (numberAffectedSlidePositions) {\n        Logger.info(`Cleared SlidePositions (${meetingId})`);\n      }\n\n      if (numberAffected) {\n        Logger.info(`Cleared Slides (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on cleaning Slides (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffectedSlidePositions = SlidePositions.remove({ meetingId });\n\n      const numberAffected = Slides.remove({ meetingId });\n\n      if (numberAffectedSlidePositions) {\n        Logger.info(`Cleared SlidePositions (${meetingId})`);\n      }\n\n      if (numberAffected) {\n        Logger.info('Cleared Slides (all)');\n      }\n    } catch (err) {\n      Logger.error(`Error on cleaning Slides (all). ${err}`);\n    }\n  }\n}\n","import { Slides, SlidePositions } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\nimport clearAnnotations from '/imports/api/annotations/server/modifiers/clearAnnotations';\n\nexport default function clearSlidesPresentation(meetingId, presentationId) {\n  check(meetingId, String);\n  check(presentationId, String);\n\n  const selector = {\n    meetingId,\n    presentationId,\n  };\n\n  const whiteboardIds = Slides.find(selector, { fields: { id: 1 } }).map(row => row.id);\n\n  try {\n    SlidePositions.remove(selector);\n\n    const numberAffected = Slides.remove(selector);\n\n    if (numberAffected) {\n      whiteboardIds.forEach(whiteboardId => clearAnnotations(meetingId, whiteboardId));\n\n      Logger.info(`Removed Slides where presentationId=${presentationId}`);\n    }\n  } catch (err) {\n    Logger.error(`Removing Slides from collection: ${err}`);\n    return;\n  }\n}\n","import { check } from 'meteor/check';\nimport { SlidePositions } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\nimport calculateSlideData from '/imports/api/slides/server/helpers';\n\nexport default function resizeSlide(meetingId, slide) {\n  check(meetingId, String);\n\n  const {\n    podId,\n    presentationId,\n    pageId,\n    widthRatio,\n    heightRatio,\n    xOffset,\n    yOffset,\n  } = slide;\n\n  const selector = {\n    meetingId,\n    podId,\n    presentationId,\n    id: pageId,\n  };\n\n  // fetching the current slide data\n  // and pre-calculating the width, height, and vieBox coordinates / sizes\n  // to reduce the client-side load\n  const SlidePosition = SlidePositions.findOne(selector);\n\n  if (SlidePosition) {\n    const {\n      width,\n      height,\n    } = SlidePosition;\n\n    const slideData = {\n      width,\n      height,\n      xOffset,\n      yOffset,\n      widthRatio,\n      heightRatio,\n    };\n    const calculatedData = calculateSlideData(slideData);\n\n    const modifier = {\n      $set: calculatedData,\n    };\n\n    try {\n      const numberAffected = SlidePositions.update(selector, modifier);\n\n      if (numberAffected) {\n        Logger.debug(`Resized slide positions id=${pageId}`);\n      } else {\n        Logger.info(`No slide positions found with id=${pageId}`);\n      }\n    } catch (err) {\n      Logger.error(`Resizing slide positions id=${pageId}: ${err}`);\n    }\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleSlideResize from './handlers/slideResize';\nimport handleSlideChange from './handlers/slideChange';\n\nRedisPubSub.on('ResizeAndMovePageEvtMsg', handleSlideResize);\nRedisPubSub.on('SetCurrentPageEvtMsg', handleSlideChange);\n","\nconst calculateSlideData = (slideData) => {\n  const {\n    width, height, xOffset, yOffset, widthRatio, heightRatio,\n  } = slideData;\n\n  // calculating viewBox and offsets for the current presentation\n  return {\n    width,\n    height,\n    x: ((-xOffset * 2) * width) / 100,\n    y: ((-yOffset * 2) * height) / 100,\n    viewBoxWidth: (width * widthRatio) / 100,\n    viewBoxHeight: (height * heightRatio) / 100,\n  };\n};\n\nexport default calculateSlideData;\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport switchSlide from './methods/switchSlide';\nimport zoomSlide from './methods/zoomSlide';\n\nMeteor.methods({\n  switchSlide,\n  zoomSlide,\n});\n","import { Slides, SlidePositions } from '/imports/api/slides';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction slides() {\n  if (!this.userId) {\n    return Slides.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  Logger.debug('Publishing Slides', { meetingId, requesterUserId });\n\n  return Slides.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundSlides = slides.bind(this);\n  return boundSlides(...args);\n}\n\nMeteor.publish('slides', publish);\n\nfunction slidePositions() {\n  if (!this.userId) {\n    return SlidePositions.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing SlidePositions', { meetingId, requesterUserId });\n\n  return SlidePositions.find({ meetingId });\n}\n\nfunction publishPositions(...args) {\n  const boundSlidePositions = slidePositions.bind(this);\n  return boundSlidePositions(...args);\n}\n\nMeteor.publish('slide-positions', publishPositions);\n","import { Meteor } from 'meteor/meteor';\n\nconst Slides = new Mongo.Collection('slides');\nconst SlidePositions = new Mongo.Collection('slide-positions');\n\nif (Meteor.isServer) {\n  // types of queries for the slides:\n\n  // 1. meetingId                                  ( 1 )\n  // 2. meetingId, podId                           ( 1 )\n  // 3. meetingId, presentationId                  ( 1 )\n  // 3. meetingId, presentationId, num             ( 1 )\n  // 4. meetingId, podId, presentationId, id       ( 3 ) - incl. resizeSlide, which can be intense\n  // 5. meetingId, podId, presentationId, current  ( 1 )\n\n  Slides._ensureIndex({\n    meetingId: 1, podId: 1, presentationId: 1, id: 1,\n  });\n\n  SlidePositions._ensureIndex({\n    meetingId: 1, podId: 1, presentationId: 1, id: 1,\n  });\n}\n\nexport { Slides, SlidePositions };\n","import { check } from 'meteor/check';\nimport changeRole from '/imports/api/users/server/modifiers/changeRole';\n\nexport default function handleChangeRole(payload, meetingId) {\n  check(payload.body, Object);\n  check(meetingId, String);\n\n  const { userId, role, changedBy } = payload.body;\n\n  changeRole(role, userId, meetingId, changedBy);\n}\n","import Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\nimport Users from '/imports/api/users';\n\nexport default function handleEmojiStatus({ body }, meetingId) {\n  const { userId, emoji } = body;\n\n  check(userId, String);\n  check(emoji, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      emojiTime: (new Date()).getTime(),\n      emoji,\n    },\n  };\n\n  try {\n    const numberAffected = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Assigned user emoji status ${emoji} id=${userId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Assigning user emoji status: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users/';\nimport addUser from '../modifiers/addUser';\nimport removeUser from '../modifiers/removeUser';\n\nexport default function handleGetUsers({ body }, meetingId) {\n  const { users } = body;\n\n  check(meetingId, String);\n  check(users, Array);\n\n  const usersIds = users.map(m => m.intId);\n\n  const usersToRemove = Users.find({\n    meetingId,\n    userId: { $nin: usersIds },\n  }, { fields: { userId: 1 } }).fetch();\n\n  usersToRemove.forEach(user => removeUser(meetingId, user.userId));\n\n  const usersAdded = [];\n  users.forEach((user) => {\n    usersAdded.push(addUser(meetingId, user));\n  });\n\n  return usersAdded;\n}\n","import Users from '/imports/api/users';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport changePresenter from '/imports/api/users/server/modifiers/changePresenter';\nimport RedisPubSub from '/imports/startup/server/redis';\n\nfunction setPresenterInPodReqMsg(credentials) { // TODO-- switch to meetingId, etc\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SetPresenterInPodReqMsg';\n\n  const { meetingId, requesterUserId, presenterId } = credentials;\n\n  const payload = {\n    podId: 'DEFAULT_PRESENTATION_POD',\n    nextPresenterId: presenterId,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n\nexport default function handlePresenterAssigned({ body }, meetingId) {\n  const { presenterId, assignedBy } = body;\n\n  changePresenter(true, presenterId, meetingId, assignedBy);\n\n  const selector = {\n    meetingId,\n    userId: { $ne: presenterId },\n    presenter: true,\n  };\n\n  const prevPresenter = Users.findOne(selector);\n\n  // no previous presenters\n  // The below code is responsible for set Meeting presenter to be default pod presenter as well.\n  // It's been handled here because right now akka-apps don't handle all cases scenarios.\n  if (!prevPresenter) {\n    const setPresenterPayload = {\n      meetingId,\n      requesterUserId: assignedBy,\n      presenterId,\n    };\n\n    const defaultPodSelector = {\n      meetingId,\n      podId: 'DEFAULT_PRESENTATION_POD',\n    };\n    const currentDefaultPodPresenter = PresentationPods.findOne(defaultPodSelector);\n    const { currentPresenterId } = currentDefaultPodPresenter;\n\n    if (currentPresenterId === '') {\n      return setPresenterInPodReqMsg(setPresenterPayload);\n    }\n\n    const oldPresenter = Users.findOne({ meetingId, userId: currentPresenterId, connectionStatus: 'offline' });\n\n    if (oldPresenter) {\n      return setPresenterInPodReqMsg(setPresenterPayload);\n    }\n\n    return true;\n  }\n\n  changePresenter(false, prevPresenter.userId, meetingId, assignedBy);\n}\n","import { check } from 'meteor/check';\n\nimport removeUser from '../modifiers/removeUser';\n\nexport default function handleRemoveUser({ body }, meetingId) {\n  const { intId } = body;\n\n  check(meetingId, String);\n  check(intId, String);\n\n  return removeUser(meetingId, intId);\n}\n","import userEjected from '../modifiers/userEjected';\n\nexport default function handleEjectedUser({ header, body }) {\n  const { meetingId, userId } = header;\n  const { reasonCode } = body;\n\n  userEjected(meetingId, userId, reasonCode);\n}\n","import { check } from 'meteor/check';\nimport userInactivityInspect from '../modifiers/userInactivityInspect';\n\nexport default function handleUserInactivityInspect({ header, body }, meetingId) {\n  const { userId } = header;\n  const { responseDelay } = body;\n\n  check(userId, String);\n  check(responseDelay, Match.Integer);\n  check(meetingId, String);\n\n\n  userInactivityInspect(userId, responseDelay);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function userJoin(meetingId, userId, authToken) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserJoinMeetingReqMsg';\n\n  check(authToken, String);\n\n  const payload = {\n    userId,\n    authToken,\n    clientType: 'HTML5',\n  };\n\n  Logger.info(`User='${userId}' is joining meeting='${meetingId}' authToken='${authToken}'`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n}\n","import { check } from 'meteor/check';\n\nimport addUser from '../modifiers/addUser';\n\nexport default function handleUserJoined({ body }, meetingId) {\n  const user = body;\n\n  check(user, Object);\n\n  addUser(meetingId, user);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport userJoin from './userJoin';\nimport pendingAuthenticationsStore from '../store/pendingAuthentications';\nimport createDummyUser from '../modifiers/createDummyUser';\nimport setConnectionIdAndAuthToken from '../modifiers/setConnectionIdAndAuthToken';\n\nconst clearOtherSessions = (sessionUserId, current = false) => {\n  const serverSessions = Meteor.server.sessions;\n  Object.keys(serverSessions)\n    .filter(i => serverSessions[i].userId === sessionUserId)\n    .filter(i => i !== current)\n    .forEach(i => serverSessions[i].close());\n};\n\nexport default function handleValidateAuthToken({ body }, meetingId) {\n  const {\n    userId,\n    valid,\n    authToken,\n    waitForApproval,\n  } = body;\n\n  check(userId, String);\n  check(authToken, String);\n  check(valid, Boolean);\n  check(waitForApproval, Boolean);\n\n  const pendingAuths = pendingAuthenticationsStore.take(meetingId, userId, authToken);\n\n  if (!valid) {\n    pendingAuths.forEach(\n      (pendingAuth) => {\n        try {\n          const { methodInvocationObject } = pendingAuth;\n          const connectionId = methodInvocationObject.connection.id;\n\n          // Schedule socket disconnection for this user, giving some time for client receiving the reason of disconnection\n          Meteor.setTimeout(() => {\n            methodInvocationObject.connection.close();\n          }, 2000);\n\n          Logger.info(`Closed connection ${connectionId} due to invalid auth token.`);\n        } catch (e) {\n          Logger.error(`Error closing socket for meetingId '${meetingId}', userId '${userId}', authToken ${authToken}`);\n        }\n      },\n    );\n\n    return;\n  }\n\n  if (valid) {\n    // Define user ID on connections\n    pendingAuths.forEach(\n      (pendingAuth) => {\n        const { methodInvocationObject } = pendingAuth;\n\n        /* Logic migrated from validateAuthToken method ( postponed to only run in case of success response ) - Begin */\n        const sessionId = `${meetingId}--${userId}`;\n\n        methodInvocationObject.setUserId(sessionId);\n\n        const User = Users.findOne({\n          meetingId,\n          userId,\n        });\n\n        if (!User) {\n          createDummyUser(meetingId, userId, authToken);\n        }\n\n        setConnectionIdAndAuthToken(meetingId, userId, methodInvocationObject.connection.id, authToken);\n        /* End of logic migrated from validateAuthToken */\n      },\n    );\n  }\n\n  const selector = {\n    meetingId,\n    userId,\n    clientType: 'HTML5',\n  };\n\n  const User = Users.findOne(selector);\n\n  // If we dont find the user on our collection is a flash user and we can skip\n  if (!User) return;\n\n  // Publish user join message\n  if (valid && !waitForApproval) {\n    Logger.info('User=', User);\n    userJoin(meetingId, userId, User.authToken);\n  }\n\n  const modifier = {\n    $set: {\n      validated: valid,\n      approved: !waitForApproval,\n      loginTime: Date.now(),\n      inactivityCheck: false,\n    },\n  };\n\n  try {\n    const numberAffected = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      if (valid) {\n        const sessionUserId = `${meetingId}-${userId}`;\n        const currentConnectionId = User.connectionId ? User.connectionId : false;\n        clearOtherSessions(sessionUserId, currentConnectionId);\n      }\n\n      Logger.info(`Validated auth token as ${valid} user=${userId} meeting=${meetingId}`);\n    } else {\n      Logger.info('No auth to validate');\n    }\n  } catch (err) {\n    Logger.error(`Validating auth token: ${err}`);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function assignPresenter(userId) { // TODO-- send username from client side\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'AssignPresenterReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(userId, String);\n\n  const User = Users.findOne({\n    meetingId,\n    userId,\n  });\n\n  if (!User) {\n    throw new Meteor.Error('user-not-found', 'You need a valid user to be able to set presenter');\n  }\n\n  const payload = {\n    newPresenterId: userId,\n    newPresenterName: User.name,\n    assignedBy: requesterUserId,\n    requesterId: requesterUserId,\n  };\n\n  Logger.verbose('User set as presenter', { userId, meetingId, setBy: requesterUserId });\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function changeRole(userId, role) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ChangeUserRoleCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(userId, String);\n  check(role, String);\n\n  const payload = {\n    userId,\n    role,\n    changedBy: requesterUserId,\n  };\n\n  Logger.verbose('Changed user role', {\n    userId, role, changedBy: requesterUserId, meetingId,\n  });\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport Users from '/imports/api/users';\nimport BannedUsers from '/imports/api/users/server/store/bannedUsers';\n\nexport default function removeUser(userId, banUser) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'EjectUserFromMeetingCmdMsg';\n\n  const { meetingId, requesterUserId: ejectedBy } = extractCredentials(this.userId);\n\n  check(userId, String);\n\n  const payload = {\n    userId,\n    ejectedBy,\n    banUser,\n  };\n\n  const removedUser = Users.findOne({ meetingId, userId }, { extId: 1 });\n\n  if (banUser && removedUser) BannedUsers.add(meetingId, removedUser.extId);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, ejectedBy, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function setEmojiStatus(userId, status) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ChangeUserEmojiCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(userId, String);\n\n  const payload = {\n    emoji: status,\n    userId,\n  };\n\n  Logger.verbose('User emoji status updated', {\n    userId, status, requesterUserId, meetingId,\n  });\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport setEffectiveConnectionType from '../modifiers/setUserEffectiveConnectionType';\n\nexport default function setUserEffectiveConnectionType(effectiveConnectionType) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ChangeUserEffectiveConnectionMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(effectiveConnectionType, String);\n\n  const payload = {\n    meetingId,\n    userId: requesterUserId,\n    effectiveConnectionType,\n  };\n\n  setEffectiveConnectionType(meetingId, requesterUserId, effectiveConnectionType);\n\n  Logger.verbose('Updated user effective connection', { requesterUserId, effectiveConnectionType });\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function toggleUserLock(userId, lock) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'LockUserInMeetingCmdMsg';\n\n  const { meetingId, requesterUserId: lockedBy } = extractCredentials(this.userId);\n\n  check(lockedBy, String);\n  check(userId, String);\n  check(lock, Boolean);\n\n  const payload = {\n    lockedBy,\n    userId,\n    lock,\n  };\n\n  Logger.verbose('Updated lock status for user', {\n    meetingId, userId, lock, lockedBy,\n  });\n\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, lockedBy, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport Users from '/imports/api/users';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userActivitySign() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserActivitySignCmdMsg';\n  const { meetingId, requesterUserId: userId } = extractCredentials(this.userId);\n  const payload = {\n    userId,\n  };\n\n  const selector = {\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      inactivityCheck: false,\n    },\n  };\n\n  Users.update(selector, modifier); // TODO-- we should move this to a modifier\n\n  Logger.info(`User ${userId} sent a activity sign for meeting ${meetingId}`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nexport default function userLeaving(meetingId, userId, connectionId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserLeaveReqMsg';\n\n  check(userId, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const User = Users.findOne(selector);\n\n  if (!User) {\n    Logger.info(`Skipping userLeaving. Could not find ${userId} in ${meetingId}`);\n    return;\n  }\n\n  // If the current user connection is not the same that triggered the leave we skip\n  if (User.connectionId !== connectionId) {\n    Logger.info(`Skipping userLeaving. User connectionId=${User.connectionId} is different from requester connectionId=${connectionId}`);\n    return false;\n  }\n\n  const payload = {\n    userId,\n    sessionId: meetingId,\n  };\n\n  Logger.info(`User '${userId}' is leaving meeting '${meetingId}'`);\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userLeftMeeting() { // TODO-- spread the code to method/modifier/handler\n  // so we don't update the db in a method\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const selector = {\n    meetingId,\n    userId: requesterUserId,\n  };\n\n  try {\n    const numberAffected = Users.update(selector, { $set: { loggedOut: true } });\n\n    if (numberAffected) {\n      Logger.info(`user left id=${requesterUserId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`leaving dummy user to collection: ${err}`);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport pendingAuthenticationsStore from '../store/pendingAuthentications';\nimport BannedUsers from '../store/bannedUsers';\nimport Users from '/imports/api/users';\n\nexport default function validateAuthToken(meetingId, requesterUserId, requesterToken, externalId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ValidateAuthTokenReqMsg';\n\n  // Check if externalId is banned from the meeting\n  if (externalId) {\n    if (BannedUsers.has(meetingId, externalId)) {\n      Logger.warn(`A banned user with extId ${externalId} tried to enter in meeting ${meetingId}`);\n      return { invalid: true, reason: 'User has been banned', error_type: 'user_banned' };\n    }\n  }\n\n  // Prevent users who have left or been ejected to use the same sessionToken again.\n  const isUserInvalid = Users.findOne({\n    meetingId,\n    userId: requesterUserId,\n    authToken: requesterToken,\n    $or: [{ ejected: true }, { loggedOut: true }],\n  });\n\n  if (isUserInvalid) {\n    Logger.warn(`An invalid sessionToken tried to validateAuthToken meetingId=${meetingId} authToken=${requesterToken}`);\n    return {\n      invalid: true,\n      reason: `User has an invalid sessionToken due to ${isUserInvalid.ejected ? 'ejection' : 'log out'}`,\n      error_type: `invalid_session_token_due_to_${isUserInvalid.ejected ? 'eject' : 'log_out'}`,\n    };\n  }\n\n  // Store reference of methodInvocationObject ( to postpone the connection userId definition )\n  pendingAuthenticationsStore.add(meetingId, requesterUserId, requesterToken, this);\n\n  const payload = {\n    userId: requesterUserId,\n    authToken: requesterToken,\n  };\n\n  Logger.info(`User '${requesterUserId}' is trying to validate auth token for meeting '${meetingId}' from connection '${this.connection.id}'`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport addUser from '/imports/api/users/server/modifiers/addUser';\n\n\nexport default function addDialInUser(meetingId, voiceUser) {\n  check(meetingId, String);\n  check(voiceUser, Object);\n\n  const USER_CONFIG = Meteor.settings.public.user;\n  const ROLE_VIEWER = USER_CONFIG.role_viewer;\n\n  const { intId, callerName } = voiceUser;\n\n  const voiceOnlyUser = {\n    intId,\n    extId: intId, // TODO\n    name: callerName,\n    role: ROLE_VIEWER.toLowerCase(),\n    guest: false,\n    authed: true,\n    waitingForAcceptance: false,\n    guestStatus: 'ALLOW',\n    emoji: 'none',\n    presenter: false,\n    locked: false, // TODO\n    avatar: '',\n    clientType: 'dial-in-user',\n  };\n\n  return addUser(meetingId, voiceOnlyUser);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport Meetings from '/imports/api/meetings';\nimport VoiceUsers from '/imports/api/voice-users/';\nimport _ from 'lodash';\nimport SanitizeHTML from 'sanitize-html';\n\nimport stringHash from 'string-hash';\nimport flat from 'flat';\n\nimport addVoiceUser from '/imports/api/voice-users/server/modifiers/addVoiceUser';\n\nconst COLOR_LIST = [\n  '#7b1fa2', '#6a1b9a', '#4a148c', '#5e35b1', '#512da8', '#4527a0',\n  '#311b92', '#3949ab', '#303f9f', '#283593', '#1a237e', '#1976d2', '#1565c0',\n  '#0d47a1', '#0277bd', '#01579b',\n];\n\nexport default function addUser(meetingId, userData) {\n  const user = userData;\n  const sanitizedName = SanitizeHTML(userData.name, {\n    allowedTags: [],\n    allowedAttributes: {},\n  });\n  // if user typed only tags\n  user.name = sanitizedName.length === 0\n    ? _.escape(userData.name)\n    : sanitizedName;\n\n  check(meetingId, String);\n\n  check(user, {\n    intId: String,\n    extId: String,\n    name: String,\n    role: String,\n    guest: Boolean,\n    authed: Boolean,\n    waitingForAcceptance: Match.Maybe(Boolean),\n    guestStatus: String,\n    emoji: String,\n    presenter: Boolean,\n    locked: Boolean,\n    avatar: String,\n    clientType: String,\n  });\n\n  const userId = user.intId;\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n  const Meeting = Meetings.findOne({ meetingId });\n\n  /* While the akka-apps dont generate a color we just pick one\n    from a list based on the userId */\n  const color = COLOR_LIST[stringHash(user.intId) % COLOR_LIST.length];\n\n  const modifier = {\n    $set: Object.assign(\n      {\n        meetingId,\n        connectionStatus: 'online',\n        sortName: user.name.trim().toLowerCase(),\n        color,\n        breakoutProps: {\n          isBreakoutUser: Meeting.meetingProp.isBreakout,\n          parentId: Meeting.breakoutProps.parentId,\n        },\n        effectiveConnectionType: null,\n        inactivityCheck: false,\n        responseDelay: 0,\n        loggedOut: false,\n      },\n      flat(user),\n    ),\n  };\n\n  // Only add an empty VoiceUser if there isn't one already and if the user coming in isn't a\n  // dial-in user. We want to avoid overwriting good data\n  if (user.clientType !== 'dial-in-user' && !VoiceUsers.findOne({ meetingId, intId: userId })) {\n    addVoiceUser(meetingId, {\n      voiceUserId: '',\n      intId: userId,\n      callerName: user.name,\n      callerNum: '',\n      muted: false,\n      talking: false,\n      callingWith: '',\n      listenOnly: false,\n      voiceConf: '',\n      joined: false,\n    });\n  }\n\n  try {\n    const { insertedId } = Users.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.info(`Added user id=${userId} meeting=${meetingId}`);\n    } else {\n      Logger.info(`Upserted user id=${userId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding user to collection: ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport Meetings from '/imports/api/meetings';\nimport stopWatchingExternalVideo from '/imports/api/external-videos/server/methods/stopWatchingExternalVideo';\n\nexport default function changePresenter(presenter, userId, meetingId, changedBy) {\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      presenter,\n    },\n  };\n\n  try {\n    const meeting = Meetings.findOne({ meetingId });\n    if (meeting && meeting.externalVideoUrl) {\n      Logger.info(`ChangePresenter:There is external video being shared. Stopping it due to presenter change, ${meeting.externalVideoUrl}`);\n      stopWatchingExternalVideo({ meetingId, requesterUserId: userId });\n    }\n\n    const numberAffected = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Changed presenter=${presenter} id=${userId} meeting=${meetingId}`\n        + `${changedBy ? ` changedBy=${changedBy}` : ''}`);\n    }\n  } catch (err) {\n    Logger.error(`Changed user role: ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nexport default function changeRole(role, userId, meetingId, changedBy) {\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      role,\n    },\n  };\n\n  try {\n    const numberAffected = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Changed user role=${role} id=${userId} meeting=${meetingId}`\n        + `${changedBy ? ` changedBy=${changedBy}` : ''}`);\n    }\n  } catch (err) {\n    Logger.error(`Changed user role: ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users/index';\n\nexport default function clearUsers(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffected = Users.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared Users (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error clearing Users (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = Users.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared Users (all)');\n      }\n    } catch (err) {\n      Logger.error(`Error clearing Users (all). ${err}`);\n    }\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nexport default function createDummyUser(meetingId, userId, authToken) {\n  check(meetingId, String);\n  check(userId, String);\n  check(authToken, String);\n\n  const User = Users.findOne({ meetingId, userId });\n  if (User) {\n    throw new Meteor.Error('existing-user', 'Tried to create a dummy user for an existing user');\n  }\n\n  const doc = {\n    meetingId,\n    userId,\n    authToken,\n    clientType: 'HTML5',\n    validated: null,\n  };\n\n  try {\n    const insertedId = Users.insert(doc);\n\n    if (insertedId) {\n      Logger.info(`Created dummy user id=${userId} token=${authToken} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Creating dummy user to collection: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users';\nimport VideoStreams from '/imports/api/video-streams';\nimport Logger from '/imports/startup/server/logger';\nimport stopWatchingExternalVideo from '/imports/api/external-videos/server/methods/stopWatchingExternalVideo';\nimport clearUserInfoForRequester from '/imports/api/users-infos/server/modifiers/clearUserInfoForRequester';\n\nconst clearAllSessions = (sessionUserId) => {\n  const serverSessions = Meteor.server.sessions;\n  Object.keys(serverSessions)\n    .filter(i => serverSessions[i].userId === sessionUserId)\n    .forEach(i => serverSessions[i].close());\n};\n\nexport default function removeUser(meetingId, userId) {\n  check(meetingId, String);\n  check(userId, String);\n\n  const userToRemove = Users.findOne({ userId, meetingId });\n\n  if (userToRemove) {\n    const { presenter } = userToRemove;\n    if (presenter) {\n      stopWatchingExternalVideo({ meetingId, requesterUserId: userId });\n    }\n  }\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      connectionStatus: 'offline',\n      validated: false,\n      emoji: 'none',\n      presenter: false,\n      role: 'VIEWER',\n    },\n  };\n\n  try {\n    VideoStreams.remove({ meetingId, userId });\n    const numberAffected = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      const sessionUserId = `${meetingId}-${userId}`;\n      clearAllSessions(sessionUserId);\n\n      clearUserInfoForRequester(meetingId, userId);\n\n      Logger.info(`Removed user id=${userId} meeting=${meetingId}`);\n      return;\n    }\n  } catch (err) {\n    Logger.error(`Removing user from collection: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setConnectionIdAndAuthToken(meetingId, userId, connectionId, authToken) {\n  check(meetingId, String);\n  check(userId, String);\n  check(authToken, String);\n  check(connectionId, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      connectionId,\n      authToken,\n    },\n  };\n\n  try {\n    const numberAffected = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Updated connectionId and authToken user=${userId} connectionId=${connectionId} meeting=${meetingId} authToken=${authToken}`);\n    }\n  } catch (err) {\n    Logger.error(`Updating connectionId user=${userId}: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setUserEffectiveConnectionType(meetingId, userId, effectiveConnectionType) {\n  check(meetingId, String);\n  check(userId, String);\n  check(effectiveConnectionType, String);\n\n  const selector = {\n    meetingId,\n    userId,\n    effectiveConnectionType: { $ne: effectiveConnectionType },\n  };\n\n  const modifier = {\n    $set: {\n      effectiveConnectionType,\n    },\n  };\n\n  try {\n    const numberAffected = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Updated user ${userId} effective connection to ${effectiveConnectionType} in meeting ${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Updating user ${userId}: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport clearUserInfoForRequester from '/imports/api/users-infos/server/modifiers/clearUserInfoForRequester';\n\nexport default function userEjected(meetingId, userId, ejectedReason) {\n  check(meetingId, String);\n  check(userId, String);\n  check(ejectedReason, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      ejected: true,\n      ejectedReason,\n    },\n  };\n\n  try {\n    const numberAffected = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      clearUserInfoForRequester(meetingId, userId);\n      Logger.info(`Ejected user id=${userId} meeting=${meetingId} reason=${ejectedReason}`);\n    }\n  } catch (err) {\n    Logger.error(`Ejecting user from collection: ${err}`);\n  }\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nexport default function userInactivityInspect(userId, responseDelay) {\n  check(userId, String);\n  check(responseDelay, Match.Integer);\n\n  const selector = {\n    userId,\n    inactivityCheck: false,\n  };\n\n  const modifier = {\n    $set: {\n      inactivityCheck: true,\n      responseDelay,\n    },\n  };\n\n  try {\n    const { numberAffected } = Users.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Updated user ${userId} with inactivity inspect`);\n    }\n  } catch (err) {\n    Logger.error(`Inactivity check for user ${userId}: ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\n\nclass BannedUsers {\n  constructor() {\n    Logger.debug('BannedUsers :: Initializing');\n    this.store = {};\n  }\n\n  init(meetingId) {\n    Logger.debug('BannedUsers :: init', { meetingId });\n\n    if (!this.store[meetingId]) this.store[meetingId] = new Set();\n  }\n\n  add(meetingId, externalId) {\n    Logger.debug('BannedUsers :: add', { meetingId, externalId });\n    if (!this.store[meetingId]) this.store[meetingId] = new Set();\n\n    this.store[meetingId].add(externalId);\n  }\n\n  delete(meetingId) {\n    Logger.debug('BannedUsers :: delete', { meetingId });\n    delete this.store[meetingId];\n  }\n\n  has(meetingId, externalId) {\n    Logger.debug('BannedUsers :: has', { meetingId, externalId });\n    if (!this.store[meetingId]) this.store[meetingId] = new Set();\n\n    return this.store[meetingId].has(externalId);\n  }\n}\n\nexport default new BannedUsers();\n","import Logger from '/imports/startup/server/logger';\n\nclass PendingAuthentitcations {\n    constructor () {\n        Logger.debug(\"PendingAuthentitcations :: constructor\");\n        this.store = [];\n    }\n\n    generateKey (meetingId, userId, authToken) {\n        // Protect against separator injection\n        meetingId = meetingId.replace(/ /g, '');\n        userId    = userId.replace(/ /g, '');\n        authToken = authToken.replace(/ /g, '');\n\n        // Space separated key\n        return `${meetingId} ${userId} ${authToken}`;\n    }\n\n    add (meetingId, userId, authToken, methodInvocationObject) {\n        Logger.debug(\"PendingAuthentitcations :: add\", {meetingId, userId, authToken});\n        this.store.push({\n            key: this.generateKey(meetingId, userId, authToken),\n            meetingId, userId, authToken, methodInvocationObject\n        });\n    }\n\n    take (meetingId, userId, authToken) {\n        const key = this.generateKey(meetingId, userId, authToken);\n        Logger.debug(\"PendingAuthentitcations :: take\", {key, meetingId, userId, authToken});\n        \n        // find matches\n        const matches = this.store.filter( e => e.key === key );\n        \n        // remove matches (if any)\n        if(matches.length) { \n            this.store = this.store.filter( e => e.key !== key ) ;\n        }\n\n        // return matches\n        return matches;\n    }\n}\nexport default new PendingAuthentitcations();","import RedisPubSub from '/imports/startup/server/redis';\nimport handleRemoveUser from './handlers/removeUser';\nimport handleUserJoined from './handlers/userJoined';\nimport handleValidateAuthToken from './handlers/validateAuthToken';\nimport handlePresenterAssigned from './handlers/presenterAssigned';\nimport handleEmojiStatus from './handlers/emojiStatus';\nimport handleGetUsers from './handlers/getUsers';\nimport handleUserEjected from './handlers/userEjected';\nimport handleChangeRole from './handlers/changeRole';\nimport handleUserInactivityInspect from './handlers/userInactivityInspect';\n\nRedisPubSub.on('PresenterAssignedEvtMsg', handlePresenterAssigned);\nRedisPubSub.on('UserJoinedMeetingEvtMsg', handleUserJoined);\nRedisPubSub.on('UserLeftMeetingEvtMsg', handleRemoveUser);\nRedisPubSub.on('ValidateAuthTokenRespMsg', handleValidateAuthToken);\nRedisPubSub.on('UserEmojiChangedEvtMsg', handleEmojiStatus);\nRedisPubSub.on('SyncGetUsersMeetingRespMsg', handleGetUsers);\nRedisPubSub.on('UserEjectedFromMeetingEvtMsg', handleUserEjected);\nRedisPubSub.on('UserRoleChangedEvtMsg', handleChangeRole);\nRedisPubSub.on('UserInactivityInspectMsg', handleUserInactivityInspect);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport validateAuthToken from './methods/validateAuthToken';\nimport setEmojiStatus from './methods/setEmojiStatus';\nimport assignPresenter from './methods/assignPresenter';\nimport changeRole from './methods/changeRole';\nimport removeUser from './methods/removeUser';\nimport toggleUserLock from './methods/toggleUserLock';\nimport setUserEffectiveConnectionType from './methods/setUserEffectiveConnectionType';\nimport userActivitySign from './methods/userActivitySign';\nimport userLeftMeeting from './methods/userLeftMeeting';\n\nMeteor.methods({\n  setEmojiStatus,\n  assignPresenter,\n  changeRole,\n  removeUser,\n  validateAuthToken,\n  toggleUserLock,\n  setUserEffectiveConnectionType,\n  userActivitySign,\n  userLeftMeeting,\n});\n","import _ from 'lodash';\nimport Users from '/imports/api/users';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\n\nimport userLeaving from './methods/userLeaving';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst ROLE_MODERATOR = Meteor.settings.public.user.role_moderator;\n\nfunction currentUser() {\n  if (!this.userId) {\n    return Users.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(meetingId, String);\n  check(requesterUserId, String);\n\n  const connectionId = this.connection.id;\n  const onCloseConnection = Meteor.bindEnvironment(() => {\n    try {\n      userLeaving(meetingId, requesterUserId, connectionId);\n    } catch (e) {\n      Logger.error(`Exception while executing userLeaving: ${e}`);\n    }\n  });\n\n  this._session.socket.on('close', _.debounce(onCloseConnection, 100));\n\n  const selector = {\n    meetingId,\n    userId: requesterUserId,\n  };\n\n  const options = {\n    fields: {\n      user: false,\n      authToken: false, // Not asking for authToken from client side but also not exposing it\n    },\n  };\n\n  return Users.find(selector, options);\n}\n\nfunction publishCurrentUser(...args) {\n  const boundUsers = currentUser.bind(this);\n  return boundUsers(...args);\n}\n\nMeteor.publish('current-user', publishCurrentUser);\n\nfunction users(role) {\n  if (!this.userId) {\n    return Users.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const selector = {\n    $or: [\n      { meetingId },\n    ],\n  };\n\n  const User = Users.findOne({ userId: requesterUserId, meetingId }, { fields: { role: 1 } });\n  if (!!User && User.role === ROLE_MODERATOR) {\n    selector.$or.push({\n      'breakoutProps.isBreakoutUser': true,\n      'breakoutProps.parentId': meetingId,\n      connectionStatus: 'online',\n    });\n  }\n\n  const options = {\n    fields: {\n      authToken: false,\n      lastPing: false,\n    },\n  };\n\n  Logger.debug('Publishing Users', { meetingId, requesterUserId });\n\n  return Users.find(selector, options);\n}\n\nfunction publish(...args) {\n  const boundUsers = users.bind(this);\n  return boundUsers(...args);\n}\n\nMeteor.publish('users', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Users = new Mongo.Collection('users');\n\nif (Meteor.isServer) {\n  // types of queries for the users:\n  // 1. meetingId\n  // 2. meetingId, userId\n\n  Users._ensureIndex({ meetingId: 1, userId: 1 });\n}\n\nexport default Users;\n","import { check } from 'meteor/check';\nimport addUserInfo from '../modifiers/addUserInfo';\n\nexport default function handleUserInformation({ header, body }) {\n  check(body, Object);\n  check(header, Object);\n\n  const { userInfo } = body;\n  const { userId, meetingId } = header;\n\n  check(userInfo, Array);\n  check(userId, String);\n  check(meetingId, String);\n\n  return addUserInfo(userInfo, userId, meetingId);\n}\n","import UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function removeUserInformation() {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const selector = {\n    meetingId,\n    requesterUserId,\n  };\n\n  try {\n    const numberAffected = UserInfos.remove(selector);\n\n    if (numberAffected) {\n      Logger.info(`Removed user information: requester id=${requesterUserId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Removing user information from collection: ${err}`);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function getUserInformation(externalUserId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toThirdParty;\n  const EVENT_NAME = 'LookUpUserReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(externalUserId, String);\n\n  const payload = {\n    externalUserId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function addUserInfo(userInfo, requesterUserId, meetingId) {\n  const info = {\n    meetingId,\n    requesterUserId,\n    userInfo,\n  };\n\n  try {\n    const numberAffected = UserInfos.insert(info);\n\n    if (numberAffected) {\n      Logger.info(`Added user information: requester id=${requesterUserId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Adding user information to collection: ${err}`);\n  }\n}\n","import UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearUsersInfo(meetingId) {\n  try {\n    const numberAffected = UserInfos.remove({ meetingId });\n\n    if (numberAffected) {\n      Logger.info(`Cleared User Infos (${meetingId})`);\n    }\n  } catch (err) {\n    Logger.error(`Error on clearing User Infos (${meetingId}). ${err}`);\n  }\n}\n","import UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearUsersInfoForRequester(meetingId, requesterUserId) {\n  try {\n    const numberAffected = UserInfos.remove({ meetingId });\n\n    if (numberAffected) {\n      Logger.info(`Cleared User Infos requested by user=${requesterUserId}`);\n    }\n  } catch (err) {\n    Logger.info(`Error on clearing User Infos requested by user=${requesterUserId}. ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleUserInformation from './handlers/userInformation';\n\nRedisPubSub.on('LookUpUserRespMsg', handleUserInformation);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport requestUserInformation from './methods/requestUserInformation';\nimport removeUserInformation from './methods/removeUserInformation';\n\nMeteor.methods({\n  requestUserInformation,\n  removeUserInformation,\n});\n","import { Meteor } from 'meteor/meteor';\nimport UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction userInfos() {\n  if (!this.userId) {\n    return UserInfos.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing user infos requested', { requesterUserId });\n\n  return UserInfos.find({ meetingId, requesterUserId });\n}\n\nfunction publish(...args) {\n  const boundUserInfos = userInfos.bind(this);\n  return boundUserInfos(...args);\n}\n\nMeteor.publish('users-infos', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst UserInfos = new Mongo.Collection('users-infos');\n\nif (Meteor.isServer) {\n  UserInfos._ensureIndex({ meetingId: 1, userId: 1 });\n}\n\nexport default UserInfos;\n","import { check } from 'meteor/check';\nimport addUserSetting from '/imports/api/users-settings/server/modifiers/addUserSetting';\nimport logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst oldParameters = {\n  askForFeedbackOnLogout: 'bbb_ask_for_feedback_on_logout',\n  autoJoin: 'bbb_auto_join_audio',\n  autoShareWebcam: 'bbb_auto_share_webcam',\n  autoSwapLayout: 'bbb_auto_swap_layout',\n  clientTitle: 'bbb_client_title',\n  customStyle: 'bbb_custom_style',\n  customStyleUrl: 'bbb_custom_style_url',\n  displayBrandingArea: 'bbb_display_branding_area',\n  enableScreensharing: 'bbb_enable_screen_sharing',\n  enableVideo: 'bbb_enable_video',\n  forceListenOnly: 'bbb_force_listen_only',\n  hidePresentation: 'bbb_hide_presentation',\n  listenOnlyMode: 'bbb_listen_only_mode',\n  multiUserPenOnly: 'bbb_multi_user_pen_only',\n  multiUserTools: 'bbb_multi_user_tools',\n  outsideToggleRecording: 'bbb_outside_toggle_recording',\n  outsideToggleSelfVoice: 'bbb_outside_toggle_self_voice',\n  presenterTools: 'bbb_presenter_tools',\n  shortcuts: 'bbb_shortcuts',\n  skipCheck: 'bbb_skip_check_audio',\n};\n\nconst oldParametersKeys = Object.keys(oldParameters);\n\nconst currentParameters = [\n  // APP\n  'bbb_ask_for_feedback_on_logout',\n  'bbb_auto_join_audio',\n  'bbb_client_title',\n  'bbb_force_listen_only',\n  'bbb_listen_only_mode',\n  'bbb_skip_check_audio',\n  // BRANDING\n  'bbb_display_branding_area',\n  // SHORTCUTS\n  'bbb_shortcuts',\n  // KURENTO\n  'bbb_auto_share_webcam',\n  'bbb_preferred_camera_profile',\n  'bbb_enable_screen_sharing',\n  'bbb_enable_video',\n  'bbb_record_video',\n  'bbb_skip_video_preview',\n  'bbb_mirror_own_webcam',\n  // PRESENTATION\n  'bbb_force_restore_presentation_on_new_events',\n  // WHITEBOARD\n  'bbb_multi_user_pen_only',\n  'bbb_presenter_tools',\n  'bbb_multi_user_tools',\n  // SKINNING/THEMMING\n  'bbb_custom_style',\n  'bbb_custom_style_url',\n  // LAYOUT\n  'bbb_auto_swap_layout',\n  'bbb_hide_presentation',\n  'bbb_show_participants_on_login',\n  'bbb_show_public_chat_on_login',\n  // OUTSIDE COMMANDS\n  'bbb_outside_toggle_self_voice',\n  'bbb_outside_toggle_recording',\n];\n\nfunction valueParser(val) {\n  try {\n    const parsedValue = JSON.parse(val.toLowerCase().trim());\n    return parsedValue;\n  } catch (error) {\n    logger.warn(`addUserSettings:Parameter ${val} could not be parsed (was not json)`);\n    return val;\n  }\n}\n\nexport default function addUserSettings(settings) {\n  check(settings, [Object]);\n\n  const { meetingId, requesterUserId: userId } = extractCredentials(this.userId);\n\n  let parameters = {};\n\n  settings.forEach((el) => {\n    const settingKey = Object.keys(el).shift();\n    const normalizedKey = settingKey.trim();\n\n    if (currentParameters.includes(normalizedKey)) {\n      if (!Object.keys(parameters).includes(normalizedKey)) {\n        parameters = {\n          [normalizedKey]: valueParser(el[settingKey]),\n          ...parameters,\n        };\n      } else {\n        parameters[normalizedKey] = el[settingKey];\n      }\n      return;\n    }\n\n    if (oldParametersKeys.includes(normalizedKey)) {\n      const matchingNewKey = oldParameters[normalizedKey];\n      if (!Object.keys(parameters).includes(matchingNewKey)) {\n        parameters = {\n          [matchingNewKey]: valueParser(el[settingKey]),\n          ...parameters,\n        };\n      }\n      return;\n    }\n\n    logger.warn(`Parameter ${normalizedKey} not handled`);\n  });\n\n  const settingsAdded = [];\n  Object.entries(parameters).forEach((el) => {\n    const setting = el[0];\n    const value = el[1];\n    settingsAdded.push(addUserSetting(meetingId, userId, setting, value));\n  });\n\n  return settingsAdded;\n}\n","import { check } from 'meteor/check';\nimport UserSettings from '/imports/api/users-settings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function addUserSetting(meetingId, userId, setting, value) {\n  check(meetingId, String);\n  check(userId, String);\n  check(setting, String);\n  check(value, Match.Any);\n\n  const selector = {\n    meetingId,\n    userId,\n    setting,\n  };\n  const modifier = {\n    $set: {\n      meetingId,\n      userId,\n      setting,\n      value,\n    },\n  };\n\n  try {\n    const { numberAffected } = UserSettings.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.verbose('Upserted user setting', { meetingId, userId, setting });\n    }\n  } catch (err) {\n    Logger.error(`Adding user setting to collection: ${err}`);\n  }\n}\n","import UserSettings from '/imports/api/users-settings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearUsersSettings(meetingId) {\n  try {\n    const numberAffected = UserSettings.remove({ meetingId });\n\n    if (numberAffected) {\n      Logger.info(`Cleared User Settings (${meetingId})`);\n    }\n  } catch (err) {\n    Logger.error(`Error on clearing User Settings (${meetingId}). ${err}`);\n  }\n}\n","import './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport addUserSettings from './methods/addUserSettings';\n\nMeteor.methods({\n  addUserSettings,\n});\n","import { Meteor } from 'meteor/meteor';\nimport UserSettings from '/imports/api/users-settings';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport User from '/imports/api/users';\n\nfunction userSettings() {\n  if (!this.userId) {\n    return UserSettings.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const currentUser = User.findOne({ userId: requesterUserId });\n\n  if (currentUser && currentUser.breakoutProps.isBreakoutUser) {\n    const { parentId } = currentUser.breakoutProps;\n\n    const [externalId] = currentUser.extId.split('-');\n\n    const mainRoomUserSettings = UserSettings.find({ meetingId: parentId, userId: externalId });\n\n    mainRoomUserSettings.map(({ setting, value }) => ({\n      meetingId,\n      setting,\n      userId: requesterUserId,\n      value,\n    })).forEach((doc) => {\n      const selector = {\n        meetingId,\n        setting: doc.setting,\n      };\n\n      UserSettings.upsert(selector, doc);\n    });\n\n    Logger.debug('Publishing user settings', { requesterUserId });\n\n    return UserSettings.find({ meetingId, userId: requesterUserId });\n  }\n\n  Logger.debug('Publishing user settings', { requesterUserId });\n\n  return UserSettings.find({ meetingId, userId: requesterUserId });\n}\n\nfunction publish(...args) {\n  const boundUserSettings = userSettings.bind(this);\n  return boundUserSettings(...args);\n}\n\nMeteor.publish('users-settings', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst UserSettings = new Mongo.Collection('users-settings');\n\nif (Meteor.isServer) {\n  UserSettings._ensureIndex({\n    meetingId: 1, userId: 1,\n  });\n}\n\nexport default UserSettings;\n","import { check } from 'meteor/check';\nimport sharedWebcam from '../modifiers/sharedWebcam';\nimport { isValidStream } from '/imports/api/video-streams/server/helpers';\n\nexport default function handleUserSharedHtml5Webcam({ header, body }, meetingId) {\n  const { userId, stream } = body;\n\n  check(header, Object);\n  check(meetingId, String);\n  check(userId, String);\n  check(stream, String);\n\n  if (!isValidStream(stream)) return false;\n\n  return sharedWebcam(meetingId, userId, stream);\n}\n","import { check } from 'meteor/check';\nimport unsharedWebcam from '../modifiers/unsharedWebcam';\nimport { isValidStream } from '/imports/api/video-streams/server/helpers';\n\nexport default function handleUserUnsharedHtml5Webcam({ header, body }, meetingId) {\n  const { userId, stream } = body;\n\n  check(header, Object);\n  check(meetingId, String);\n  check(userId, String);\n  check(stream, String);\n\n  if (!isValidStream(stream)) return false;\n\n  return unsharedWebcam(meetingId, userId, stream);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userShareWebcam(stream) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserBroadcastCamStartMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.info(`user sharing webcam: ${meetingId} ${requesterUserId}`);\n\n  check(stream, String);\n\n  // const actionName = 'joinVideo';\n  /* TODO throw an error if user has no permission to share webcam\n  if (!isAllowedTo(actionName, credentials)) {\n    throw new Meteor.Error('not-allowed', `You are not allowed to share webcam`);\n  } */\n\n  const payload = {\n    stream,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userUnshareWebcam(stream) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserBroadcastCamStopMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.info(`user unsharing webcam: ${meetingId} ${requesterUserId}`);\n\n  check(stream, String);\n\n  // const actionName = 'joinVideo';\n  /* TODO throw an error if user has no permission to share webcam\n  if (!isAllowedTo(actionName, credentials)) {\n    throw new Meteor.Error('not-allowed', `You are not allowed to share webcam`);\n  } */\n\n  const payload = {\n    stream,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import Logger from '/imports/startup/server/logger';\nimport VideoStreams from '/imports/api/video-streams';\n\nexport default function clearVideoStreams(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffected = VideoStreams.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared VideoStreams in (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing VideoStreams (${ meetingId }). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = VideoStreams.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared VideoStreams in all meetings');\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing VideoStreams (all). ${err}`);\n    }\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport VideoStreams from '/imports/api/video-streams';\nimport { check } from 'meteor/check';\nimport {\n  getDeviceId,\n  getUserName,\n} from '/imports/api/video-streams/server/helpers';\n\nexport default function sharedWebcam(meetingId, userId, stream) {\n  check(meetingId, String);\n  check(userId, String);\n  check(stream, String);\n\n  const deviceId = getDeviceId(stream);\n  const name = getUserName(userId);\n\n  const selector = {\n    meetingId,\n    userId,\n    deviceId,\n  };\n\n  const modifier = {\n    $set: {\n      stream,\n      name,\n    },\n  };\n\n  try {\n    const { insertedId } = VideoStreams.upsert(selector, modifier);\n\n    if (insertedId) {\n      Logger.info(`Updated stream=${stream} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Error setting stream: ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport VideoStreams from '/imports/api/video-streams';\nimport { check } from 'meteor/check';\nimport { getDeviceId } from '/imports/api/video-streams/server/helpers';\n\nexport default function unsharedWebcam(meetingId, userId, stream) {\n  check(meetingId, String);\n  check(userId, String);\n  check(stream, String);\n\n  const deviceId = getDeviceId(stream);\n\n  const selector = {\n    meetingId,\n    userId,\n    deviceId,\n  };\n\n  try {\n    VideoStreams.remove(selector);\n\n    Logger.info(`Removed stream=${stream} meeting=${meetingId}`);\n  } catch (err) {\n    Logger.error(`Error removing stream: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleUserSharedHtml5Webcam from './handlers/userSharedHtml5Webcam';\nimport handleUserUnsharedHtml5Webcam from './handlers/userUnsharedHtml5Webcam';\n\nRedisPubSub.on('UserBroadcastCamStartedEvtMsg', handleUserSharedHtml5Webcam);\nRedisPubSub.on('UserBroadcastCamStoppedEvtMsg', handleUserUnsharedHtml5Webcam);\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nconst FLASH_STREAM_REGEX = /^([A-z0-9]+)-([A-z0-9]+)-([A-z0-9]+)(-recorded)?$/;\nconst TOKEN = '_';\n\nconst isValidStream = stream => !FLASH_STREAM_REGEX.test(stream);\nconst getDeviceId = (stream) => {\n  const splitStream = stream.split(TOKEN);\n  if (splitStream.length === 3) return splitStream[2];\n  Logger.warn(`Could not get deviceId from stream=${stream}`);\n  return stream;\n};\n\nconst getUserName = (userId) => {\n  const user = Users.findOne(\n    { userId },\n    { fields: { name: 1 } },\n  );\n  if (user) return user.name;\n  return userId;\n};\n\nexport {\n  isValidStream,\n  getDeviceId,\n  getUserName,\n};\n","import './eventHandlers';\nimport './methods';\nimport './publisher';\n","import { Meteor } from 'meteor/meteor';\nimport userShareWebcam from './methods/userShareWebcam';\nimport userUnshareWebcam from './methods/userUnshareWebcam';\n\nMeteor.methods({\n  userShareWebcam,\n  userUnshareWebcam,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport VideoStreams from '/imports/api/video-streams';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction videoStreams() {\n  if (!this.userId) {\n    return VideoStreams.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing video users', { meetingId });\n\n  const selector = {\n    meetingId,\n  };\n\n  return VideoStreams.find(selector);\n}\n\nfunction publish(...args) {\n  const boundVideoStreams = videoStreams.bind(this);\n  return boundVideoStreams(...args);\n}\n\nMeteor.publish('video-streams', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst VideoStreams = new Mongo.Collection('video-streams');\n\nif (Meteor.isServer) {\n  // types of queries for the video users:\n  // 2. meetingId\n\n  VideoStreams._ensureIndex({ meetingId: 1 });\n}\n\nexport default VideoStreams;\n","import { check } from 'meteor/check';\nimport VoiceCallState from '/imports/api/voice-call-states';\nimport Logger from '/imports/startup/server/logger';\n\n// \"CALL_STARTED\", \"IN_ECHO_TEST\", \"IN_CONFERENCE\", \"CALL_ENDED\"\n\nexport default function handleVoiceCallStateEvent({ body }, meetingId) {\n  const {\n    voiceConf,\n    clientSession,\n    userId,\n    callerName,\n    callState,\n  } = body;\n\n  check(meetingId, String);\n  check(voiceConf, String);\n  check(clientSession, String);\n  check(userId, String);\n  check(callerName, String);\n  check(callState, String);\n\n  const selector = {\n    meetingId,\n    userId,\n    clientSession,\n  };\n\n  const modifier = {\n    $set: {\n      meetingId,\n      userId,\n      voiceConf,\n      clientSession,\n      callState,\n    },\n  };\n\n  try {\n    const { numberAffected } = VoiceCallState.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.debug('Update voice call', {\n        state: userId, meetingId, clientSession, callState,\n      });\n    }\n  } catch (err) {\n    Logger.error(`Update voice call state=${userId}: ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport VoiceCallStates from '/imports/api/voice-users';\n\nexport default function clearVoiceCallStates(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffected = VoiceCallStates.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared VoiceCallStates in (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.info(`Error on clearing VoiceCallStates in (${meetingId}). ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = VoiceCallStates.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared VoiceCallStates in all meetings');\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing VoiceCallStates in all meetings. ${err}`);\n    }\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleVoiceCallStateEvent from './handlers/voiceCallStateEvent';\n\nRedisPubSub.on('VoiceCallStateEvtMsg', handleVoiceCallStateEvent);\n","import './eventHandlers';\nimport './publishers';\n","import VoiceCallStates from '/imports/api/voice-call-states';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction voiceCallStates() {\n  if (!this.userId) {\n    return VoiceCallStates.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing Voice Call States', { meetingId, requesterUserId });\n\n  return VoiceCallStates.find({ meetingId, userId: requesterUserId });\n}\n\nfunction publish(...args) {\n  const boundVoiceCallStates = voiceCallStates.bind(this);\n  return boundVoiceCallStates(...args);\n}\n\nMeteor.publish('voice-call-states', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst VoiceCallStates = new Mongo.Collection('voiceCallStates');\n\nif (Meteor.isServer) {\n  // types of queries for the voice users:\n  // 1. intId\n  // 2. meetingId, intId\n\n  VoiceCallStates._ensureIndex({ meetingId: 1, userId: 1 });\n}\n\nexport default VoiceCallStates;\n","import { check } from 'meteor/check';\nimport VoiceUsers from '/imports/api/voice-users/';\nimport Meetings from '/imports/api/meetings';\nimport addVoiceUser from '../modifiers/addVoiceUser';\nimport removeVoiceUser from '../modifiers/removeVoiceUser';\nimport updateVoiceUser from '../modifiers/updateVoiceUser';\n\nexport default function handleGetVoiceUsers({ body }, meetingId) {\n  const { users } = body;\n\n  check(meetingId, String);\n  check(users, Array);\n\n  const meeting = Meetings.findOne({ meetingId }, { fields: { 'voiceProp.voiceConf': 1 } });\n  const usersIds = users.map(m => m.intId);\n\n  const voiceUsersIdsToUpdate = VoiceUsers.find({\n    meetingId,\n    intId: { $in: usersIds },\n  }, { fields: { intId: 1 } }).fetch().map(m => m.intId);\n\n  const voiceUsersUpdated = [];\n  users.forEach((user) => {\n    if (voiceUsersIdsToUpdate.indexOf(user.intId) >= 0) {\n      // user already exist, then update\n      voiceUsersUpdated.push(updateVoiceUser(meetingId, {\n        intId: user.intId,\n        voiceUserId: user.voiceUserId,\n        talking: user.talking,\n        muted: user.muted,\n        voiceConf: meeting.voiceProp.voiceConf,\n        joined: true,\n      }));\n    } else {\n      // user doesn't exist yet, then add it\n      addVoiceUser(meetingId, {\n        voiceUserId: user.voiceUserId,\n        intId: user.intId,\n        callerName: user.callerName,\n        callerNum: user.callerNum,\n        muted: user.muted,\n        talking: user.talking,\n        callingWith: user.callingWith,\n        listenOnly: user.listenOnly,\n        voiceConf: meeting.voiceProp.voiceConf,\n        joined: true,\n      });\n    }\n  });\n\n  // removing extra users already existing in Mongo\n  const voiceUsersToRemove = VoiceUsers.find({\n    meetingId,\n    intId: { $nin: usersIds },\n  }).fetch();\n  voiceUsersToRemove.forEach(user => removeVoiceUser(meetingId, {\n    voiceConf: meeting.voiceProp.voiceConf,\n    voiceUserId: user.voiceUserId,\n    intId: user.intId,\n  }));\n\n  return voiceUsersUpdated;\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users';\nimport addDialInUser from '/imports/api/users/server/modifiers/addDialInUser';\nimport addVoiceUser from '../modifiers/addVoiceUser';\n\n\nexport default function handleJoinVoiceUser({ body }, meetingId) {\n  const voiceUser = body;\n  voiceUser.joined = true;\n\n  check(meetingId, String);\n  check(voiceUser, {\n    voiceConf: String,\n    intId: String,\n    voiceUserId: String,\n    callerName: String,\n    callerNum: String,\n    muted: Boolean,\n    talking: Boolean,\n    callingWith: String,\n    listenOnly: Boolean,\n    joined: Boolean,\n  });\n\n  const {\n    intId,\n  } = voiceUser;\n\n  const User = Users.findOne({\n    meetingId,\n    intId,\n    connectionStatus: 'online',\n  });\n\n  if (!User) {\n    /* voice-only user - called into the conference */\n    addDialInUser(meetingId, voiceUser);\n  }\n\n  return addVoiceUser(meetingId, voiceUser);\n}\n","import { check } from 'meteor/check';\n\nimport removeVoiceUser from '/imports/api/voice-users/server/modifiers/removeVoiceUser';\nimport removeUser from '/imports/api/users/server/modifiers/removeUser';\nimport Users from '/imports/api/users';\n\nexport default function handleVoiceUpdate({ body }, meetingId) {\n  const voiceUser = body;\n\n  check(meetingId, String);\n  check(voiceUser, {\n    voiceConf: String,\n    intId: String,\n    voiceUserId: String,\n  });\n\n  const {\n    intId,\n    voiceUserId,\n  } = voiceUser;\n\n  const isDialInUser = (userId, meetingID) => !!Users.findOne({ meetingId: meetingID, userId, clientType: 'dial-in-user' });\n\n  // if the user is dial-in, leaving voice also means leaving userlist\n  if (isDialInUser(voiceUserId, meetingId)) removeUser(meetingId, intId);\n\n  return removeVoiceUser(meetingId, voiceUser);\n}\n","import changeMuteMeeting from '../modifiers/changeMuteMeeting';\n\nexport default function handleMeetingMuted({ body }, meetingId) {\n  changeMuteMeeting(meetingId, body);\n}\n","import { check } from 'meteor/check';\n\nimport updateVoiceUser from '../modifiers/updateVoiceUser';\n\nexport default function handleVoiceUpdate({ body }, meetingId) {\n  const voiceUser = body;\n\n  check(meetingId, String);\n\n  // If a person is muted we have to force them to not talking\n  if (voiceUser.muted) {\n    voiceUser.talking = false;\n  }\n\n  return updateVoiceUser(meetingId, voiceUser);\n}\n","import { check } from 'meteor/check';\n\nimport updateVoiceUser from '../modifiers/updateVoiceUser';\n\nexport default function handleVoiceUpdate({ body }, meetingId) {\n  const voiceUser = body;\n\n  check(meetingId, String);\n\n  return updateVoiceUser(meetingId, voiceUser);\n}\n","import VoiceUsers from '/imports/api/voice-users/';\nimport Meetings from '/imports/api/meetings';\nimport addDialInUser from '/imports/api/users/server/modifiers/addDialInUser';\nimport removeVoiceUser from '../modifiers/removeVoiceUser';\nimport updateVoiceUser from '../modifiers/updateVoiceUser';\nimport addVoiceUser from '../modifiers/addVoiceUser';\n\n\nexport default function handleVoiceUsers({ header, body }) {\n  const { voiceUsers } = body;\n  const { meetingId } = header;\n\n  const meeting = Meetings.findOne({ meetingId }, { fields: { 'voiceProp.voiceConf': 1 } });\n  const usersIds = voiceUsers.map(m => m.intId);\n\n  const voiceUsersIdsToUpdate = VoiceUsers.find({\n    meetingId,\n    intId: { $in: usersIds },\n  }, { fields: { intId: 1 } }).fetch().map(m => m.intId);\n\n  const voiceUsersUpdated = [];\n  voiceUsers.forEach((voice) => {\n    if (voiceUsersIdsToUpdate.indexOf(voice.intId) >= 0) {\n      // user already exist, then update\n      voiceUsersUpdated.push(updateVoiceUser(meetingId, {\n        intId: voice.intId,\n        voiceUserId: voice.voiceUserId,\n        talking: voice.talking,\n        muted: voice.muted,\n        voiceConf: meeting.voiceProp.voiceConf,\n        joined: true,\n      }));\n    } else {\n      // user doesn't exist yet, then add it\n      addVoiceUser(meetingId, {\n        voiceUserId: voice.voiceUserId,\n        intId: voice.intId,\n        callerName: voice.callerName,\n        callerNum: voice.callerNum,\n        muted: voice.muted,\n        talking: voice.talking,\n        callingWith: voice.callingWith,\n        listenOnly: voice.listenOnly,\n        voiceConf: meeting.voiceProp.voiceConf,\n        joined: true,\n      });\n\n      addDialInUser(meetingId, voice);\n    }\n  });\n\n  // removing extra users already existing in Mongo\n  const voiceUsersToRemove = VoiceUsers.find({\n    meetingId,\n    intId: { $nin: usersIds },\n  }, { fields: { voiceUserId: 1, intId: 1 } }).fetch();\n  voiceUsersToRemove.forEach(user => removeVoiceUser(meetingId, {\n    voiceConf: meeting.voiceProp.voiceConf,\n    voiceUserId: user.voiceUserId,\n    intId: user.intId,\n  }));\n\n  return voiceUsersUpdated;\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function ejectUserFromVoice(userId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'EjectUserFromVoiceCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(userId, String);\n\n  const payload = {\n    userId,\n    ejectedBy: requesterUserId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Meetings from '/imports/api/meetings';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function muteAllExceptPresenterToggle() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'MuteAllExceptPresentersCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const meeting = Meetings.findOne({ meetingId });\n  const toggleMeetingMuted = !meeting.voiceProp.muteOnStart;\n\n  const payload = {\n    mutedBy: requesterUserId,\n    mute: toggleMeetingMuted,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Meetings from '/imports/api/meetings';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function muteAllToggle() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'MuteMeetingCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const meeting = Meetings.findOne({ meetingId });\n  const toggleMeetingMuted = !meeting.voiceProp.muteOnStart;\n\n  const payload = {\n    mutedBy: requesterUserId,\n    mute: toggleMeetingMuted,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Users from '/imports/api/users';\nimport VoiceUsers from '/imports/api/voice-users';\nimport Meetings from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function muteToggle(uId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'MuteUserCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const userToMute = uId || requesterUserId;\n\n  const requester = Users.findOne({\n    meetingId,\n    userId: requesterUserId,\n  });\n\n  const voiceUser = VoiceUsers.findOne({\n    intId: userToMute,\n    meetingId,\n  });\n\n  if (!requester || !voiceUser) return;\n\n  const { listenOnly, muted } = voiceUser;\n  if (listenOnly) return;\n\n  // if allowModsToUnmuteUsers is false, users will be kicked out for attempting to unmute others\n  if (requesterUserId !== userToMute && muted) {\n    const meeting = Meetings.findOne({ meetingId },\n      { fields: { 'usersProp.allowModsToUnmuteUsers': 1 } });\n    if (meeting.usersProp && !meeting.usersProp.allowModsToUnmuteUsers) {\n      Logger.warn(`Attempted unmuting by another user meetingId:${meetingId} requester: ${requesterUserId} userId: ${userToMute}`);\n      return;\n    }\n  }\n\n  const payload = {\n    userId: userToMute,\n    mutedBy: requesterUserId,\n    mute: !muted,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport VoiceUsers from '/imports/api/voice-users';\nimport Users from '/imports/api/users';\nimport flat from 'flat';\n\nexport default function addVoiceUser(meetingId, voiceUser) {\n  check(meetingId, String);\n  check(voiceUser, {\n    voiceUserId: String,\n    intId: String,\n    callerName: String,\n    callerNum: String,\n    muted: Boolean,\n    talking: Boolean,\n    callingWith: String,\n    listenOnly: Boolean,\n    voiceConf: String,\n    joined: Boolean, // This is a HTML5 only param.\n  });\n\n  const { intId, talking } = voiceUser;\n\n  const selector = {\n    meetingId,\n    intId,\n  };\n\n  const modifier = {\n    $set: Object.assign(\n      { meetingId, spoke: talking },\n      flat(voiceUser),\n    ),\n  };\n\n  const user = Users.findOne({ meetingId, userId: intId }, {\n    fields: {\n      color: 1,\n    },\n  });\n\n  if (user) modifier.$set.color = user.color;\n\n  try {\n    const { numberAffected } = VoiceUsers.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Add voice user=${intId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Add voice user=${intId}: ${err}`);\n  }\n}\n","import Meetings from '/imports/api/meetings';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function changeMuteMeeting(meetingId, payload) {\n  check(meetingId, String);\n  check(payload, {\n    muted: Boolean,\n    mutedBy: String,\n  });\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      'voiceProp.muteOnStart': payload.muted,\n    },\n  };\n\n  try {\n    const { numberAffected } = Meetings.upsert(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Changed meeting mute status meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Changing meeting mute status meeting={${meetingId}} ${err}`);\n  }\n}\n","import Logger from '/imports/startup/server/logger';\nimport VoiceUsers from '/imports/api/voice-users';\n\nexport default function clearVoiceUser(meetingId) {\n  if (meetingId) {\n    try {\n      const numberAffected = VoiceUsers.remove({ meetingId });\n\n      if (numberAffected) {\n        Logger.info(`Cleared VoiceUsers in (${meetingId})`);\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing VoiceUsers in ${meetingId}. ${err}`);\n    }\n  } else {\n    try {\n      const numberAffected = VoiceUsers.remove({});\n\n      if (numberAffected) {\n        Logger.info('Cleared VoiceUsers in all meetings');\n      }\n    } catch (err) {\n      Logger.error(`Error on clearing VoiceUsers. ${err}`);\n    }\n  }\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport VoiceUsers from '/imports/api/voice-users';\nimport { clearSpokeTimeout } from '/imports/api/common/server/helpers';\n\nexport default function removeVoiceUser(meetingId, voiceUser) {\n  check(meetingId, String);\n  check(voiceUser, {\n    voiceConf: String,\n    voiceUserId: String,\n    intId: String,\n  });\n\n  const { intId } = voiceUser;\n\n  const selector = {\n    meetingId,\n    intId,\n  };\n\n  const modifier = {\n    $set: {\n      muted: false,\n      talking: false,\n      listenOnly: false,\n      joined: false,\n      spoke: false,\n    },\n  };\n\n  try {\n    clearSpokeTimeout(meetingId, intId);\n    const numberAffected = VoiceUsers.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.info(`Remove voiceUser=${intId} meeting=${meetingId}`);\n    }\n  } catch (err) {\n    Logger.error(`Remove voiceUser=${intId}: ${err}`);\n  }\n}\n","import { Match, check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport VoiceUsers from '/imports/api/voice-users';\nimport flat from 'flat';\nimport { spokeTimeoutHandles, clearSpokeTimeout } from '/imports/api/common/server/helpers';\n\nconst TALKING_TIMEOUT = 6000;\n\nexport default function updateVoiceUser(meetingId, voiceUser) {\n  check(meetingId, String);\n  check(voiceUser, {\n    intId: String,\n    voiceUserId: String,\n    talking: Match.Maybe(Boolean),\n    muted: Match.Maybe(Boolean),\n    voiceConf: String,\n    joined: Match.Maybe(Boolean),\n  });\n\n  const { intId } = voiceUser;\n\n  const selector = {\n    meetingId,\n    intId,\n  };\n\n  const modifier = {\n    $set: Object.assign(\n      flat(voiceUser),\n    ),\n  };\n\n  if (voiceUser.talking) {\n    const user = VoiceUsers.findOne({ meetingId, intId }, {\n      fields: {\n        startTime: 1,\n      },\n    });\n\n    if (user && !user.startTime) modifier.$set.startTime = Date.now();\n    modifier.$set.spoke = true;\n    modifier.$set.endTime = null;\n    clearSpokeTimeout(meetingId, intId);\n  }\n\n  if (!voiceUser.talking) {\n    const timeoutHandle = Meteor.setTimeout(() => {\n      const user = VoiceUsers.findOne({ meetingId, intId }, {\n        fields: {\n          endTime: 1,\n          talking: 1,\n        },\n      });\n\n      if (user) {\n        const { endTime, talking } = user;\n        const spokeDelay = ((Date.now() - endTime) < TALKING_TIMEOUT);\n        if (talking || spokeDelay) return;\n        modifier.$set.spoke = false;\n        modifier.$set.startTime = null;\n        try {\n          const numberAffected = VoiceUsers.update(selector, modifier);\n\n          if (numberAffected) {\n            Logger.debug('Update voiceUser', { voiceUser: intId, meetingId });\n          }\n        } catch (err) {\n          Logger.error(`Update voiceUser=${intId}: ${err}`);\n        }\n      }\n    }, TALKING_TIMEOUT);\n\n    spokeTimeoutHandles[`${meetingId}-${intId}`] = timeoutHandle;\n    modifier.$set.endTime = Date.now();\n  }\n\n  try {\n    const numberAffected = VoiceUsers.update(selector, modifier);\n\n    if (numberAffected) {\n      Logger.debug('Update voiceUser', { voiceUser: intId, meetingId });\n    }\n  } catch (err) {\n    Logger.error(`Update voiceUser=${intId}: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\nimport handleJoinVoiceUser from './handlers/joinVoiceUser';\nimport handleLeftVoiceUser from './handlers/leftVoiceUser';\nimport handleTalkingVoiceUser from './handlers/talkingVoiceUser';\nimport handleMutedVoiceUser from './handlers/mutedVoiceUser';\nimport handleGetVoiceUsers from './handlers/getVoiceUsers';\nimport handleVoiceUsers from './handlers/voiceUsers';\nimport handleMeetingMuted from './handlers/meetingMuted';\n\nRedisPubSub.on('UserLeftVoiceConfToClientEvtMsg', handleLeftVoiceUser);\nRedisPubSub.on('UserJoinedVoiceConfToClientEvtMsg', handleJoinVoiceUser);\nRedisPubSub.on('UserTalkingVoiceEvtMsg', handleTalkingVoiceUser);\nRedisPubSub.on('UserMutedVoiceEvtMsg', handleMutedVoiceUser);\nRedisPubSub.on('GetVoiceUsersMeetingRespMsg', processForHTML5ServerOnly(handleGetVoiceUsers));\nRedisPubSub.on('SyncGetVoiceUsersRespMsg', handleVoiceUsers);\nRedisPubSub.on('MeetingMutedEvtMsg', handleMeetingMuted);\n","import './eventHandlers';\nimport './publishers';\nimport './methods';\n","import { Meteor } from 'meteor/meteor';\nimport muteToggle from './methods/muteToggle';\nimport muteAllToggle from './methods/muteAllToggle';\nimport muteAllExceptPresenterToggle from './methods/muteAllExceptPresenterToggle';\nimport ejectUserFromVoice from './methods/ejectUserFromVoice';\n\nMeteor.methods({\n  toggleVoice: muteToggle,\n  muteAllUsers: muteAllToggle,\n  muteAllExceptPresenter: muteAllExceptPresenterToggle,\n  ejectUserFromVoice,\n});\n","import VoiceUsers from '/imports/api/voice-users';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport ejectUserFromVoice from './methods/ejectUserFromVoice';\n\nfunction voiceUser() {\n  if (!this.userId) {\n    return VoiceUsers.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(meetingId, String);\n  check(requesterUserId, String);\n  const onCloseConnection = Meteor.bindEnvironment(() => {\n    try {\n      // I used user because voiceUser is the function's name\n      const User = VoiceUsers.findOne({ meetingId, requesterUserId });\n      if (User) {\n        ejectUserFromVoice(requesterUserId);\n      }\n    } catch (e) {\n      Logger.error(`Exception while executing ejectUserFromVoice for ${requesterUserId}: ${e}`);\n    }\n  });\n\n  Logger.debug('Publishing Voice User', { meetingId, requesterUserId });\n\n  this._session.socket.on('close', _.debounce(onCloseConnection, 100));\n  return VoiceUsers.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundVoiceUser = voiceUser.bind(this);\n  return boundVoiceUser(...args);\n}\n\nMeteor.publish('voiceUsers', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst VoiceUsers = new Mongo.Collection('voiceUsers');\n\nif (Meteor.isServer) {\n  // types of queries for the voice users:\n  // 1. intId\n  // 2. meetingId, intId\n\n  VoiceUsers._ensureIndex({ intId: 1 });\n  VoiceUsers._ensureIndex({ meetingId: 1, intId: 1 });\n}\n\nexport default VoiceUsers;\n","import { check } from 'meteor/check';\nimport modifyWhiteboardAccess from '../modifiers/modifyWhiteboardAccess';\n\nexport default function handleModifyWhiteboardAccess({ body }, meetingId) {\n  const { multiUser, whiteboardId } = body;\n\n  check(multiUser, Boolean);\n  check(whiteboardId, String);\n  check(meetingId, String);\n\n  return modifyWhiteboardAccess(meetingId, whiteboardId, multiUser);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function changeWhiteboardAccess(multiUser, whiteboardId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ModifyWhiteboardAccessPubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(multiUser, Boolean);\n  check(whiteboardId, String);\n\n  const payload = {\n    multiUser,\n    whiteboardId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport WhiteboardMultiUser from '/imports/api/whiteboard-multi-user/';\n\nexport default function modifyWhiteboardAccess(meetingId, whiteboardId, multiUser) {\n  check(meetingId, String);\n  check(whiteboardId, String);\n  check(multiUser, Boolean);\n\n  const selector = {\n    meetingId,\n    whiteboardId,\n  };\n\n  const modifier = {\n    meetingId,\n    whiteboardId,\n    multiUser,\n  };\n\n  try {\n    const { insertedId } = WhiteboardMultiUser.upsert(selector, modifier);\n    if (insertedId) {\n      Logger.info(`Added multiUser flag=${multiUser} meetingId=${meetingId} whiteboardId=${whiteboardId}`);\n    } else {\n      Logger.info(`Upserted multiUser flag=${multiUser} meetingId=${meetingId} whiteboardId=${whiteboardId}`);\n    }\n  } catch (err) {\n    Logger.error(`Error while adding an entry to Multi-User collection: ${err}`);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\nimport handleGetWhiteboardAccess from './handlers/modifyWhiteboardAccess';\n\nRedisPubSub.on('GetWhiteboardAccessRespMsg', processForHTML5ServerOnly(handleGetWhiteboardAccess));\nRedisPubSub.on('SyncGetWhiteboardAccessRespMsg', handleGetWhiteboardAccess);\nRedisPubSub.on('ModifyWhiteboardAccessEvtMsg', handleGetWhiteboardAccess);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport changeWhiteboardAccess from './methods/changeWhiteboardAccess';\n\nMeteor.methods({\n  changeWhiteboardAccess,\n});\n","import WhiteboardMultiUser from '/imports/api/whiteboard-multi-user/';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction whiteboardMultiUser() {\n  if (!this.userId) {\n    return WhiteboardMultiUser.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug('Publishing whiteboard-multi-user', { meetingId, requesterUserId });\n\n  return WhiteboardMultiUser.find({ meetingId });\n}\n\n\nfunction publish(...args) {\n  const boundMultiUser = whiteboardMultiUser.bind(this);\n  return boundMultiUser(...args);\n}\n\nMeteor.publish('whiteboard-multi-user', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst WhiteboardMultiUser = new Mongo.Collection('whiteboard-multi-user');\n\nif (Meteor.isServer) {\n  // types of queries for the whiteboard-multi-user:\n  // 1. meetingId\n\n  WhiteboardMultiUser._ensureIndex({ meetingId: 1 });\n}\n\nexport default WhiteboardMultiUser;\n","import Users from '/imports/api/users';\n\nconst MSG_DIRECT_TYPE = 'DIRECT';\nconst NODE_USER = 'nodeJSapp';\n\nexport const spokeTimeoutHandles = {};\nexport const clearSpokeTimeout = (meetingId, userId) => {\n  if (spokeTimeoutHandles[`${meetingId}-${userId}`]) {\n    Meteor.clearTimeout(spokeTimeoutHandles[`${meetingId}-${userId}`]);\n    delete spokeTimeoutHandles[`${meetingId}-${userId}`];\n  }\n};\n\nexport const indexOf = [].indexOf || function (item) {\n  for (let i = 0, l = this.length; i < l; i += 1) {\n    if (i in this && this[i] === item) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nexport const processForHTML5ServerOnly = fn => (message, ...args) => {\n  const { envelope } = message;\n  const { routing } = envelope;\n  const { msgType, meetingId, userId } = routing;\n\n  const selector = {\n    userId,\n    meetingId,\n  };\n\n  const user = Users.findOne(selector);\n\n  const shouldSkip = user && msgType === MSG_DIRECT_TYPE && userId !== NODE_USER && user.clientType !== 'HTML5';\n  if (shouldSkip) return () => { };\n  return fn(message, ...args);\n};\n\n/**\n * Calculate a 32 bit FNV-1a hash\n * Found here: https://gist.github.com/vaiorabbit/5657561\n * Ref.: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param {string} str the input value\n * @param {boolean} [asString=false] set to true to return the hash value as\n *     8-digit hex string instead of an integer\n * @param {integer} [seed] optionally pass the hash of the previous chunk\n * @returns {integer | string}\n */\n/* eslint-disable */\nexport const hashFNV32a = (str, asString, seed) => {\n  let hval = (seed === undefined) ? 0x811c9dc5 : seed;\n\n  for (let i = 0, l = str.length; i < l; i++) {\n    hval ^= str.charCodeAt(i);\n    hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);\n  }\n  if (asString) {\n    return (`0000000${(hval >>> 0).toString(16)}`).substr(-8);\n  }\n  return hval >>> 0;\n};\n/* eslint-enable */\n\nexport const extractCredentials = (credentials) => {\n  if (!credentials) return {};\n  const credentialsArray = credentials.split('--');\n  const meetingId = credentialsArray[0];\n  const requesterUserId = credentialsArray[1];\n  return { meetingId, requesterUserId };\n};\n","import { Meteor } from 'meteor/meteor';\nimport { WebAppInternals } from 'meteor/webapp';\nimport Langmap from 'langmap';\nimport fs from 'fs';\nimport path from 'path';\nimport heapdump from 'heapdump';\nimport Users from '/imports/api/users';\nimport './settings';\nimport { lookup as lookupUserAgent } from 'useragent';\nimport { check } from 'meteor/check';\nimport memwatch from 'memwatch-next';\nimport Logger from './logger';\nimport Redis from './redis';\nimport setMinBrowserVersions from './minBrowserVersion';\nimport userLeaving from '/imports/api/users/server/methods/userLeaving';\n\nconst AVAILABLE_LOCALES = fs.readdirSync('assets/app/locales');\n\nprocess.on('uncaughtException', (err) => {\n  Logger.error(`uncaughtException: ${err}`);\n  process.exit(1);\n});\n\nMeteor.startup(() => {\n  const APP_CONFIG = Meteor.settings.public.app;\n  const INTERVAL_IN_SETTINGS = (Meteor.settings.public.pingPong.clearUsersInSeconds) * 1000;\n  const INTERVAL_TIME = INTERVAL_IN_SETTINGS < 10000 ? 10000 : INTERVAL_IN_SETTINGS;\n  const env = Meteor.isDevelopment ? 'development' : 'production';\n  const CDN_URL = APP_CONFIG.cdn;\n  let heapDumpMbThreshold = 100;\n\n  const { customHeartbeat } = APP_CONFIG;\n\n  if (customHeartbeat) {\n    Logger.warn('Custom heartbeat functions are enabled');\n    // https://github.com/sockjs/sockjs-node/blob/1ef08901f045aae7b4df0f91ef598d7a11e82897/lib/transport/websocket.js#L74-L82\n    const newHeartbeat = function heartbeat() {\n      const currentTime = new Date().getTime();\n\n      // Skipping heartbeat, because websocket is sending data\n      if (currentTime - this.ws.lastSentFrameTimestamp < 10000) {\n        try {\n          Logger.info('Skipping heartbeat, because websocket is sending data', {\n            currentTime,\n            lastSentFrameTimestamp: this.ws.lastSentFrameTimestamp,\n            userId: this.session.connection._meteorSession.userId,\n          });\n          return;\n        } catch (err) {\n          Logger.error(`Skipping heartbeat error: ${err}`);\n        }\n      }\n\n      const supportsHeartbeats = this.ws.ping(null, () => clearTimeout(this.hto_ref));\n      if (supportsHeartbeats) {\n        this.hto_ref = setTimeout(() => {\n          try {\n            Logger.info('Heartbeat timeout', { userId: this.session.connection._meteorSession.userId, sentAt: currentTime, now: new Date().getTime() });\n          } catch (err) {\n            Logger.error(`Heartbeat timeout error: ${err}`);\n          }\n        }, Meteor.server.options.heartbeatTimeout);\n      } else {\n        Logger.error('Unexpected error supportsHeartbeats=false');\n      }\n    };\n\n    // https://github.com/davhani/hagty/blob/6a5c78e9ae5a5e4ade03e747fb4cc8ea2df4be0c/faye-websocket/lib/faye/websocket/api.js#L84-L88\n    const newSend = function send(data) {\n      try {\n        this.lastSentFrameTimestamp = new Date().getTime();\n\n        if (this.meteorHeartbeat) {\n          // Call https://github.com/meteor/meteor/blob/1e7e56eec8414093cd0c1c70750b894069fc972a/packages/ddp-common/heartbeat.js#L80-L88\n          this.meteorHeartbeat._seenPacket = true;\n          if (this.meteorHeartbeat._heartbeatTimeoutHandle) {\n            this.meteorHeartbeat._clearHeartbeatTimeoutTimer();\n          }\n        }\n\n        if (this.readyState > 1/* API.OPEN = 1 */) return false;\n        if (!(data instanceof Buffer)) data = String(data);\n        return this._driver.messages.write(data);\n      } catch (err) {\n        console.error('Error on send data', err);\n        return false;\n      }\n    };\n\n    Meteor.setInterval(() => {\n      for (const session of Meteor.server.sessions.values()) {\n        const { socket } = session;\n        const recv = socket._session.recv;\n\n        if (session.bbbFixApplied || !recv || !recv.ws) {\n          continue;\n        }\n\n        recv.ws.meteorHeartbeat = session.heartbeat;\n        recv.__proto__.heartbeat = newHeartbeat;\n        recv.ws.__proto__.send = newSend;\n        session.bbbFixApplied = true;\n      }\n    }, 5000);\n  }\n\n  const memoryMonitoringSettings = Meteor.settings.private.memoryMonitoring;\n  if (memoryMonitoringSettings.stat.enabled) {\n    memwatch.on('stats', (stats) => {\n      let heapDumpTriggered = false;\n\n      if (memoryMonitoringSettings.heapdump.enabled) {\n        heapDumpTriggered = (stats.current_base / 1048576) > heapDumpMbThreshold;\n      }\n      Logger.info('memwatch stats', { ...stats, heapDumpEnabled: memoryMonitoringSettings.heapdump.enabled, heapDumpTriggered });\n\n      if (heapDumpTriggered) {\n        heapdump.writeSnapshot(`./heapdump-stats-${Date.now()}.heapsnapshot`);\n        heapDumpMbThreshold += 100;\n      }\n    });\n  }\n\n  if (memoryMonitoringSettings.leak.enabled) {\n    memwatch.on('leak', (info) => {\n      Logger.info('memwatch leak', info);\n    });\n  }\n\n  if (memoryMonitoringSettings.heapdump.enabled) {\n    const { heapdumpFolderPath, heapdumpIntervalMs } = memoryMonitoringSettings.heapdump;\n    Meteor.setInterval(() => {\n      heapdump.writeSnapshot(path.join(heapdumpFolderPath, `${new Date().toISOString()}.heapsnapshot`));\n      Logger.info('Heapsnapshot file successfully written');\n    }, heapdumpIntervalMs);\n  }\n\n  if (CDN_URL.trim()) {\n    // Add CDN\n    BrowserPolicy.content.disallowEval();\n    BrowserPolicy.content.allowInlineScripts();\n    BrowserPolicy.content.allowInlineStyles();\n    BrowserPolicy.content.allowImageDataUrl(CDN_URL);\n    BrowserPolicy.content.allowFontDataUrl(CDN_URL);\n    BrowserPolicy.content.allowOriginForAll(CDN_URL);\n    WebAppInternals.setBundledJsCssPrefix(CDN_URL + APP_CONFIG.basename);\n\n    const fontRegExp = /\\.(eot|ttf|otf|woff|woff2)$/;\n\n    WebApp.rawConnectHandlers.use('/', (req, res, next) => {\n      if (fontRegExp.test(req._parsedUrl.pathname)) {\n        res.setHeader('Access-Control-Allow-Origin', '*');\n        res.setHeader('Vary', 'Origin');\n        res.setHeader('Pragma', 'public');\n        res.setHeader('Cache-Control', '\"public\"');\n      }\n      return next();\n    });\n  }\n\n  setMinBrowserVersions();\n\n  Meteor.setInterval(() => {\n    const currentTime = Date.now();\n    Logger.info('Checking for inactive users');\n    const users = Users.find({\n      connectionStatus: 'online',\n      clientType: 'HTML5',\n      lastPing: {\n        $lt: (currentTime - INTERVAL_TIME), // get user who has not pinged in the last 10 seconds\n      },\n      loginTime: {\n        $lt: (currentTime - INTERVAL_TIME),\n      },\n    }).fetch();\n    if (!users.length) return Logger.info('No inactive users');\n    Logger.info('Removing inactive users');\n    users.forEach((user) => {\n      Logger.info(`Detected inactive user, userId:${user.userId}, meetingId:${user.meetingId}`);\n      return userLeaving(user.meetingId, user.userId, user.connectionId);\n    });\n    return Logger.info('All inactive users have been removed');\n  }, INTERVAL_TIME);\n\n  Logger.warn(`SERVER STARTED.\\nENV=${env},\\nnodejs version=${process.version}\\nCDN=${CDN_URL}\\n`, APP_CONFIG);\n});\n\nWebApp.connectHandlers.use('/check', (req, res) => {\n  const payload = { html5clientStatus: 'running' };\n\n  res.setHeader('Content-Type', 'application/json');\n  res.writeHead(200);\n  res.end(JSON.stringify(payload));\n});\n\nWebApp.connectHandlers.use('/locale', (req, res) => {\n  const APP_CONFIG = Meteor.settings.public.app;\n  const fallback = APP_CONFIG.defaultSettings.application.fallbackLocale;\n  const override = APP_CONFIG.defaultSettings.application.overrideLocale;\n  const browserLocale = override && req.query.init === 'true'\n    ? override.split(/[-_]/g) : req.query.locale.split(/[-_]/g);\n\n  const localeList = [fallback];\n\n  const usableLocales = AVAILABLE_LOCALES\n    .map(file => file.replace('.json', ''))\n    .reduce((locales, locale) => (locale.match(browserLocale[0])\n      ? [...locales, locale]\n      : locales), []);\n\n  const regionDefault = usableLocales.find(locale => browserLocale[0] === locale);\n\n  if (regionDefault) localeList.push(regionDefault);\n  if (!regionDefault && usableLocales.length) localeList.push(usableLocales[0]);\n\n  let normalizedLocale;\n  let messages = {};\n\n  if (browserLocale.length > 1) {\n    normalizedLocale = `${browserLocale[0]}_${browserLocale[1].toUpperCase()}`;\n    localeList.push(normalizedLocale);\n  }\n\n  localeList.forEach((locale) => {\n    try {\n      const data = Assets.getText(`locales/${locale}.json`);\n      messages = Object.assign(messages, JSON.parse(data));\n      normalizedLocale = locale;\n    } catch (e) {\n      Logger.warn(`'Could not process locale ${locale}:${e}`);\n      // Getting here means the locale is not available in the current locale files.\n    }\n  });\n\n  res.setHeader('Content-Type', 'application/json');\n  res.end(JSON.stringify({ normalizedLocale, messages }));\n});\n\nWebApp.connectHandlers.use('/locales', (req, res) => {\n  let locales = [];\n  try {\n    locales = AVAILABLE_LOCALES\n      .map(file => file.replace('.json', ''))\n      .map(file => file.replace('_', '-'))\n      .map(locale => ({\n        locale,\n        name: Langmap[locale].nativeName,\n      }));\n  } catch (e) {\n    Logger.warn(`'Could not process locales error: ${e}`);\n  }\n\n  res.setHeader('Content-Type', 'application/json');\n  res.writeHead(200);\n  res.end(JSON.stringify(locales));\n});\n\nWebApp.connectHandlers.use('/feedback', (req, res) => {\n  req.on('data', Meteor.bindEnvironment((data) => {\n    const body = JSON.parse(data);\n    const {\n      meetingId,\n      userId,\n      authToken,\n      userName: reqUserName,\n      comment,\n      rating,\n    } = body;\n\n    check(meetingId, String);\n    check(userId, String);\n    check(authToken, String);\n    check(reqUserName, String);\n    check(comment, String);\n    check(rating, Number);\n\n    const user = Users.findOne({\n      meetingId,\n      userId,\n      connectionStatus: 'offline',\n      authToken,\n    });\n\n    if (!user) {\n      Logger.warn('Couldn\\'t find user for feedback');\n    }\n\n    res.setHeader('Content-Type', 'application/json');\n    res.writeHead(200);\n    res.end(JSON.stringify({ status: 'ok' }));\n\n    body.userName = user ? user.name : `[unconfirmed] ${reqUserName}`;\n\n    const feedback = {\n      ...body,\n    };\n    Logger.info('FEEDBACK LOG:', feedback);\n  }));\n});\n\nWebApp.connectHandlers.use('/useragent', (req, res) => {\n  const userAgent = req.headers['user-agent'];\n  let response = 'No user agent found in header';\n  if (userAgent) {\n    response = lookupUserAgent(userAgent).toString();\n  }\n\n  Logger.info(`The requesting user agent is ${response}`);\n\n  // res.setHeader('Content-Type', 'application/json');\n  res.writeHead(200);\n  res.end(response);\n});\n\nexport const eventEmitter = Redis.emitter;\n\nexport const redisPubSub = Redis;\n","import { Meteor } from 'meteor/meteor';\nimport { createLogger, format, transports } from 'winston';\n\nconst LOG_CONFIG = Meteor.settings.private.serverLog || {};\nconst { level } = LOG_CONFIG;\n\nconst Logger = createLogger({\n  level,\n  format: format.combine(\n    format.colorize({ level: true }),\n    format.splat(),\n    format.simple(),\n  ),\n  transports: [\n    // console logging\n    new transports.Console({\n      prettyPrint: false,\n      humanReadableUnhandledException: true,\n      colorize: true,\n      handleExceptions: true,\n      level,\n    }),\n  ],\n});\n\nexport default Logger;\n\nexport const logger = Logger;\n","/* eslint-disable no-prototype-builtins */\n\nimport fs from 'fs';\nimport path from 'path';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from './logger';\n\nconst {\n  metricsDumpIntervalMs,\n  metricsFolderPath,\n  removeMeetingOnEnd,\n} = Meteor.settings.private.redis.metrics;\n\nclass Metrics {\n  constructor() {\n    this.metrics = {};\n  }\n\n  addEvent(meetingId, eventName, messageLength) {\n    if (!this.metrics.hasOwnProperty(meetingId)) {\n      this.metrics[meetingId] = {\n        currentlyInQueue: {},\n        wasInQueue: {},\n      };\n    }\n\n    const { currentlyInQueue } = this.metrics[meetingId];\n\n    if (!currentlyInQueue.hasOwnProperty(eventName)) {\n      currentlyInQueue[eventName] = {\n        count: 1,\n        payloadSize: messageLength,\n      };\n    } else {\n      currentlyInQueue[eventName].count += 1;\n      currentlyInQueue[eventName].payloadSize += messageLength;\n    }\n  }\n\n  processEvent(meetingId, eventName, size, processingStartTimestamp) {\n    const currentProcessingTimestamp = Date.now();\n    const processTime = currentProcessingTimestamp - processingStartTimestamp;\n\n    if (!this.metrics[meetingId].wasInQueue.hasOwnProperty(eventName)) {\n      this.metrics[meetingId].wasInQueue[eventName] = {\n        count: 1,\n        payloadSize: {\n          min: size,\n          max: size,\n          last: size,\n          total: size,\n          avg: size,\n        },\n        processingTime: {\n          min: processTime,\n          max: processTime,\n          last: processTime,\n          total: processTime,\n          avg: processTime,\n        },\n      };\n      this.metrics[meetingId].currentlyInQueue[eventName].count -= 1;\n\n      if (!this.metrics[meetingId].currentlyInQueue[eventName].count) {\n        delete this.metrics[meetingId].currentlyInQueue[eventName];\n      }\n    } else {\n      const { currentlyInQueue, wasInQueue } = this.metrics[meetingId];\n\n      currentlyInQueue[eventName].count -= 1;\n\n      if (!currentlyInQueue[eventName].count) {\n        delete currentlyInQueue[eventName];\n      }\n\n      const { payloadSize, processingTime } = wasInQueue[eventName];\n\n      wasInQueue[eventName].count += 1;\n\n      payloadSize.last = size;\n      payloadSize.total += size;\n\n      if (payloadSize.min > size) payloadSize.min = size;\n      if (payloadSize.max < size) payloadSize.max = size;\n\n      payloadSize.avg = payloadSize.total / wasInQueue[eventName].count;\n\n      if (processingTime.min > processTime) processingTime.min = processTime;\n      if (processingTime.max < processTime) processingTime.max = processTime;\n\n      processingTime.last = processTime;\n      processingTime.total += processTime;\n      processingTime.avg = processingTime.total / wasInQueue[eventName].count;\n    }\n  }\n\n  setAnnotationQueueLength(meetingId, size) {\n    this.metrics[meetingId].annotationQueueLength = size;\n  }\n\n  startDumpFile() {\n    Meteor.setInterval(() => {\n      try {\n        const fileDate = new Date();\n        const fullYear = fileDate.getFullYear();\n        const month = (fileDate.getMonth() + 1).toString().padStart(2, '0');\n        const day = fileDate.getDate().toString().padStart(2, '0');\n        const hour = fileDate.getHours().toString().padStart(2, '0');\n        const minutes = fileDate.getMinutes().toString().padStart(2, '0');\n        const seconds = fileDate.getSeconds().toString().padStart(2, '0');\n\n        const folderName = `${fullYear}${month}${day}_${hour}`;\n        const fileName = `${folderName}${minutes}${seconds}_metrics.json`;\n\n        const folderPath = path.join(metricsFolderPath, folderName);\n        const fullFilePath = path.join(folderPath, fileName);\n\n        if (!fs.existsSync(folderPath)) {\n          Logger.debug(`Creating folder: ${folderPath}`);\n          fs.mkdirSync(folderPath);\n        }\n\n        fs.writeFileSync(fullFilePath, JSON.stringify(this.metrics));\n\n        Logger.info('Metric file successfully written');\n      } catch (err) {\n        Logger.error('Error on writing metrics to disk.', err);\n      }\n    }, metricsDumpIntervalMs);\n  }\n\n  removeMeeting(meetingId) {\n    if (removeMeetingOnEnd) {\n      Logger.info(`Removing meeting ${meetingId} from metrics`);\n      delete this.metrics[meetingId];\n    } else {\n      Logger.info(`Skipping remove of meeting ${meetingId} from metrics`);\n    }\n  }\n}\n\nconst metricsSingleton = new Metrics();\n\nexport default metricsSingleton;\n","import { Meteor } from 'meteor/meteor';\nimport { setMinimumBrowserVersions } from 'meteor/modern-browsers';\n\nconst setMinBrowserVersions = () => {\n  const { minBrowserVersions } = Meteor.settings.private;\n\n  const versions = {};\n\n  minBrowserVersions.forEach((elem) => {\n    let { version } = elem;\n    if (version === 'Infinity') version = Infinity;\n\n    versions[elem.browser] = version;\n  });\n\n  setMinimumBrowserVersions(versions, 'bbb-min');\n};\n\nexport default setMinBrowserVersions;\n","/* global PowerQueue */\nimport Redis from 'redis';\nimport { Meteor } from 'meteor/meteor';\nimport { EventEmitter2 } from 'eventemitter2';\nimport { check } from 'meteor/check';\nimport fs from 'fs';\nimport Logger from './logger';\nimport Metrics from './metrics';\n\n// Fake meetingId used for messages that have no meetingId\nconst NO_MEETING_ID = '_';\n\nconst { queueMetrics } = Meteor.settings.private.redis.metrics;\n\nconst makeEnvelope = (channel, eventName, header, body, routing) => {\n  const envelope = {\n    envelope: {\n      name: eventName,\n      routing: routing || {\n        sender: 'bbb-apps-akka',\n        // sender: 'html5-server', // TODO\n      },\n      timestamp: Date.now(),\n    },\n    core: {\n      header,\n      body,\n    },\n  };\n\n  return JSON.stringify(envelope);\n};\n\nclass MeetingMessageQueue {\n  constructor(eventEmitter, asyncMessages = [], redisDebugEnabled = false) {\n    this.asyncMessages = asyncMessages;\n    this.emitter = eventEmitter;\n    this.queue = new PowerQueue();\n    this.redisDebugEnabled = redisDebugEnabled;\n\n    this.handleTask = this.handleTask.bind(this);\n    this.queue.taskHandler = this.handleTask;\n  }\n\n  handleTask(data, next) {\n    const { channel } = data;\n    const { envelope } = data.parsedMessage;\n    const { header } = data.parsedMessage.core;\n    const { body } = data.parsedMessage.core;\n    const { meetingId } = header;\n    const eventName = header.name;\n    const isAsync = this.asyncMessages.includes(channel)\n      || this.asyncMessages.includes(eventName);\n\n    const beginHandleTimestamp = Date.now();\n    let called = false;\n\n    check(eventName, String);\n    check(body, Object);\n\n    const callNext = () => {\n      if (called) return;\n      if (this.redisDebugEnabled) {\n        Logger.debug(`Redis: ${eventName} completed ${isAsync ? 'async' : 'sync'}`);\n      }\n      called = true;\n\n      if (queueMetrics) {\n        const queueId = meetingId || NO_MEETING_ID;\n        const dataLength = JSON.stringify(data).length;\n\n        Metrics.processEvent(queueId, eventName, dataLength, beginHandleTimestamp);\n      }\n\n      const queueLength = this.queue.length();\n      if (queueLength > 100) {\n        Logger.warn(`Redis: MeetingMessageQueue for meetingId=${meetingId} has queue size=${queueLength} `);\n      }\n      next();\n    };\n\n    const onError = (reason) => {\n      Logger.error(`${eventName}: ${reason.stack ? reason.stack : reason}`);\n      callNext();\n    };\n\n    try {\n      if (this.redisDebugEnabled) {\n        Logger.debug(`Redis: ${JSON.stringify(data.parsedMessage.core)} emitted`);\n      }\n\n      if (isAsync) {\n        callNext();\n      }\n\n      this.emitter\n        .emitAsync(eventName, { envelope, header, body }, meetingId)\n        .then(callNext)\n        .catch(onError);\n    } catch (reason) {\n      onError(reason);\n    }\n  }\n\n  add(...args) {\n    return this.queue.add(...args);\n  }\n}\n\nclass RedisPubSub {\n  static handlePublishError(err) {\n    if (err) {\n      Logger.error(err);\n    }\n  }\n\n  constructor(config = {}) {\n    this.config = config;\n\n    this.didSendRequestEvent = false;\n    const host = process.env.REDIS_HOST || Meteor.settings.private.redis.host;\n    const redisConf = Meteor.settings.private.redis;\n    const { password, port } = redisConf;\n\n    if (password) {\n      this.pub = Redis.createClient({ host, port, password });\n      this.sub = Redis.createClient({ host, port, password });\n      this.pub.auth(password);\n      this.sub.auth(password);\n    } else {\n      this.pub = Redis.createClient({ host, port });\n      this.sub = Redis.createClient({ host, port });\n    }\n\n    if (queueMetrics) {\n      Metrics.startDumpFile();\n    }\n\n    this.emitter = new EventEmitter2();\n    this.mettingsQueues = {};\n\n    this.handleSubscribe = this.handleSubscribe.bind(this);\n    this.handleMessage = this.handleMessage.bind(this);\n  }\n\n  init() {\n    this.sub.on('psubscribe', Meteor.bindEnvironment(this.handleSubscribe));\n    this.sub.on('pmessage', Meteor.bindEnvironment(this.handleMessage));\n\n    const channelsToSubscribe = this.config.subscribeTo;\n\n    channelsToSubscribe.forEach((channel) => {\n      this.sub.psubscribe(channel);\n    });\n\n    if (this.redisDebugEnabled) {\n      Logger.debug(`Redis: Subscribed to '${channelsToSubscribe}'`);\n    }\n  }\n\n  updateConfig(config) {\n    this.config = Object.assign({}, this.config, config);\n    this.redisDebugEnabled = this.config.debug;\n  }\n\n\n  // TODO: Move this out of this class, maybe pass as a callback to init?\n  handleSubscribe() {\n    if (this.didSendRequestEvent) return;\n\n    // populate collections with pre-existing data\n    const REDIS_CONFIG = Meteor.settings.private.redis;\n    const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n    const EVENT_NAME = 'GetAllMeetingsReqMsg';\n\n    const body = {\n      requesterId: 'nodeJSapp',\n    };\n\n    this.publishSystemMessage(CHANNEL, EVENT_NAME, body);\n    this.didSendRequestEvent = true;\n  }\n\n  handleMessage(pattern, channel, message) {\n    const parsedMessage = JSON.parse(message);\n    const { name: eventName, meetingId } = parsedMessage.core.header;\n    const { ignored: ignoredMessages, async } = this.config;\n\n    if (ignoredMessages.includes(channel)\n      || ignoredMessages.includes(eventName)) {\n      if (eventName === 'CheckAlivePongSysMsg') {\n        return;\n      }\n      if (this.redisDebugEnabled) {\n        Logger.debug(`Redis: ${eventName} skipped`);\n      }\n      return;\n    }\n\n    const queueId = meetingId || NO_MEETING_ID;\n\n    if (queueMetrics) {\n      Metrics.addEvent(queueId, eventName, message.length);\n    }\n\n    if (!(queueId in this.mettingsQueues)) {\n      this.mettingsQueues[meetingId] = new MeetingMessageQueue(this.emitter, async, this.redisDebugEnabled);\n    }\n\n    this.mettingsQueues[meetingId].add({\n      pattern,\n      channel,\n      eventName,\n      parsedMessage,\n    });\n  }\n\n  destroyMeetingQueue(id) {\n    delete this.mettingsQueues[id];\n  }\n\n  on(...args) {\n    return this.emitter.on(...args);\n  }\n\n  publishVoiceMessage(channel, eventName, voiceConf, payload) {\n    const header = {\n      name: eventName,\n      voiceConf,\n    };\n\n    const envelope = makeEnvelope(channel, eventName, header, payload);\n\n    return this.pub.publish(channel, envelope, RedisPubSub.handlePublishError);\n  }\n\n  publishSystemMessage(channel, eventName, payload) {\n    const header = {\n      name: eventName,\n    };\n\n    const envelope = makeEnvelope(channel, eventName, header, payload);\n\n    return this.pub.publish(channel, envelope, RedisPubSub.handlePublishError);\n  }\n\n  publishMeetingMessage(channel, eventName, meetingId, payload) {\n    const header = {\n      name: eventName,\n      meetingId,\n    };\n\n    const envelope = makeEnvelope(channel, eventName, header, payload);\n\n    return this.pub.publish(channel, envelope, RedisPubSub.handlePublishError);\n  }\n\n  publishUserMessage(channel, eventName, meetingId, userId, payload) {\n    const header = {\n      name: eventName,\n      meetingId,\n      userId,\n    };\n\n    if (!meetingId || !userId) {\n      Logger.warn(`Publishing ${eventName} with potentially missing data userId=${userId} meetingId=${meetingId}`);\n    }\n    const envelope = makeEnvelope(channel, eventName, header, payload, { meetingId, userId });\n\n    return this.pub.publish(channel, envelope, RedisPubSub.handlePublishError);\n  }\n}\n\nconst RedisPubSubSingleton = new RedisPubSub();\n\nMeteor.startup(() => {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n\n  RedisPubSubSingleton.updateConfig(REDIS_CONFIG);\n  RedisPubSubSingleton.init();\n});\n\nexport default RedisPubSubSingleton;\n","import { Meteor } from 'meteor/meteor';\nimport fs from 'fs';\nimport YAML from 'yaml';\n\nconst YAML_FILE_PATH = 'assets/app/config/settings.yml';\n\ntry {\n  if (fs.existsSync(YAML_FILE_PATH)) {\n    const SETTINGS = YAML.parse(fs.readFileSync(YAML_FILE_PATH, 'utf-8'));\n\n    Meteor.settings = SETTINGS;\n    __meteor_runtime_config__.PUBLIC_SETTINGS = SETTINGS.public;\n  } else {\n    throw new Error('File doesn\\'t exists');\n  }\n} catch (error) {\n  console.error('Error on load configuration file.', error);\n}\n","// Used in Flash and HTML to show a legitimate break in the line\nconst BREAK_LINE = '<br/>';\n\n// Soft return in HTML to signify a broken line without\n// displaying the escaped '<br/>' line break text\nconst CARRIAGE_RETURN = '\\r';\n\n// Handle this the same as carriage return, in case text copied has this\nconst NEW_LINE = '\\n';\n\nexport { BREAK_LINE, CARRIAGE_RETURN, NEW_LINE };\n","export const XLS = 'application/vnd.ms-excel';\nexport const XLSX = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\nexport const DOC = 'application/msword';\nexport const DOCX = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\nexport const PPT = 'application/vnd.ms-powerpoint';\nexport const PPTX = 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\nexport const ODT = 'application/vnd.oasis.opendocument.text';\nexport const RTF = 'application/rtf';\nexport const TXT = 'text/plain';\nexport const ODS = 'application/vnd.oasis.opendocument.spreadsheet';\nexport const ODP = 'application/vnd.oasis.opendocument.presentation';\nexport const PDF = 'application/pdf';\nexport const JPEG = 'image/jpeg';\nexport const PNG = 'image/png';\nexport const SVG = 'image/svg+xml';\n\nexport const UPLOAD_SUPORTED = [\n  XLS,\n  XLSX,\n  DOC,\n  DOCX,\n  PPT,\n  PPTX,\n  ODT,\n  RTF,\n  TXT,\n  ODS,\n  ODP,\n  PDF,\n  JPEG,\n  PNG,\n];\n","//\n// Regular Expression for URL validation\n//\n// Author: Diego Perini\n// Updated: 2010/12/05\n// License: MIT\n//\n// Copyright (c) 2010-2013 Diego Perini (http://www.iport.it)\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation\n// files (the \"Software\"), to deal in the Software without\n// restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n// OTHER DEALINGS IN THE SOFTWARE.\n//\n// the regular expression composed & commented\n// could be easily tweaked for RFC compliance,\n// it was expressly modified to fit & satisfy\n// these test for an URL shortener:\n//\n//   http://mathiasbynens.be/demo/url-regex\n//\n// Notes on possible differences from a standard/generic validation:\n//\n// - utf-8 char class take in consideration the full Unicode range\n// - TLDs have been made mandatory so single names like \"localhost\" fails\n// - protocols have been restricted to ftp, http and https only as requested\n//\n// Changes:\n//\n// - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255\n//   first and last IP address of each class is considered invalid\n//   (since they are broadcast/network addresses)\n//\n// - Added exclusion of private, reserved and/or local networks ranges\n//\n// - Made starting path slash optional (http://example.com?foo=bar)\n//\n// - Allow a dot (.) at the end of hostnames (http://example.com.)\n//\n// Compressed one-line versions:\n//\n// Javascript version (merge into one line)\n//\n// /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})\n// (?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})\n// (?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}\n// (?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)\n// (?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)\n// (?::\\d{2,5})?(?:[/?#]\\S*)?$/i\n//\n// PHP version (merge into one line)\n//\n// _^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)\n// (?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])\n// (?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5]))\n// {2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\x{00a1}-\\x{ffff}0-9]-*)\n// *[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}0-9]-*)*[a-z\\x{00a1}-\\x{ffff}0-9]+)\n// *(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$_iuS\n//\n\nexport default new RegExp(\n\n  // protocol identifier\n  '(?:(?:https?|ftp)://)' +\n\n  // user:pass authentication\n  '(?:\\\\S+(?::\\\\S*)?@)?' +\n  '(?:' +\n\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n  '|' +\n\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n\n    // TLD may end with dot\n    '\\\\.?' +\n  ')' +\n\n  // port number\n  '(?::\\\\d{2,5})?' +\n\n  // resource path\n  '(?:[/?#]\\\\S*)?', 'img',\n);\n","import '/imports/startup/server';\n\n// 2x\nimport '/imports/api/meetings/server';\nimport '/imports/api/users/server';\nimport '/imports/api/annotations/server';\nimport '/imports/api/cursor/server';\nimport '/imports/api/polls/server';\nimport '/imports/api/captions/server';\nimport '/imports/api/presentations/server';\nimport '/imports/api/presentation-pods/server';\nimport '/imports/api/presentation-upload-token/server';\nimport '/imports/api/slides/server';\nimport '/imports/api/breakouts/server';\nimport '/imports/api/group-chat/server';\nimport '/imports/api/group-chat-msg/server';\nimport '/imports/api/screenshare/server';\nimport '/imports/api/users-settings/server';\nimport '/imports/api/voice-users/server';\nimport '/imports/api/whiteboard-multi-user/server';\nimport '/imports/api/video-streams/server';\nimport '/imports/api/network-information/server';\nimport '/imports/api/users-infos/server';\nimport '/imports/api/note/server';\nimport '/imports/api/external-videos/server';\nimport '/imports/api/guest-users/server';\nimport '/imports/api/ping-pong/server';\nimport '/imports/api/local-settings/server';\nimport '/imports/api/voice-call-states/server';\n\n// Commons\nimport '/imports/api/log-client/server';\nimport '/imports/api/common/server/helpers';\nimport '/imports/startup/server/logger';\n\n// Needed for Atmosphere package RocketChat/meteor-streamer\n// It is out of date and was written when Meteor contained lodash\n// package. However, we now import lodash as an npm package\n// in order to control versions, update flexibly, etc..\n// Setting the global._ to utilize the npm lodash package is an interim fix\n// and its introduction was inspired by\n// https://github.com/RocketChat/meteor-streamer/issues/40#issuecomment-497627893\nimport _ from 'lodash';\n\nglobal._ = _;\n"]}