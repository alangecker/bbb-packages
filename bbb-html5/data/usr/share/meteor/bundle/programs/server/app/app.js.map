{"version":3,"sources":["meteor://ğŸ’»app/imports/api/annotations/server/handlers/whiteboardAnnotations.js","meteor://ğŸ’»app/imports/api/annotations/server/handlers/whiteboardCleared.js","meteor://ğŸ’»app/imports/api/annotations/server/handlers/whiteboardSend.js","meteor://ğŸ’»app/imports/api/annotations/server/handlers/whiteboardUndo.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/clearWhiteboard.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/sendAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/sendAnnotationHelper.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/sendBulkAnnotations.js","meteor://ğŸ’»app/imports/api/annotations/server/methods/undoAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/server/modifiers/addAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/server/modifiers/clearAnnotations.js","meteor://ğŸ’»app/imports/api/annotations/server/modifiers/removeAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/annotations/server/index.js","meteor://ğŸ’»app/imports/api/annotations/server/methods.js","meteor://ğŸ’»app/imports/api/annotations/server/publishers.js","meteor://ğŸ’»app/imports/api/annotations/server/streamer.js","meteor://ğŸ’»app/imports/api/annotations/addAnnotation.js","meteor://ğŸ’»app/imports/api/annotations/index.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/breakoutClosed.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/breakoutJoinURL.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/breakoutStarted.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/joinedUsersChanged.js","meteor://ğŸ’»app/imports/api/breakouts/server/handlers/updateTimeRemaining.js","meteor://ğŸ’»app/imports/api/breakouts/server/methods/createBreakout.js","meteor://ğŸ’»app/imports/api/breakouts/server/methods/endAllBreakouts.js","meteor://ğŸ’»app/imports/api/breakouts/server/methods/requestJoinURL.js","meteor://ğŸ’»app/imports/api/breakouts/server/modifiers/clearBreakouts.js","meteor://ğŸ’»app/imports/api/breakouts/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/breakouts/server/index.js","meteor://ğŸ’»app/imports/api/breakouts/server/methods.js","meteor://ğŸ’»app/imports/api/breakouts/server/publishers.js","meteor://ğŸ’»app/imports/api/breakouts/index.js","meteor://ğŸ’»app/imports/api/captions/server/handlers/padCreate.js","meteor://ğŸ’»app/imports/api/captions/server/handlers/padUpdate.js","meteor://ğŸ’»app/imports/api/captions/server/methods/appendText.js","meteor://ğŸ’»app/imports/api/captions/server/methods/createCaptions.js","meteor://ğŸ’»app/imports/api/captions/server/methods/editCaptions.js","meteor://ğŸ’»app/imports/api/captions/server/methods/fetchReadOnlyPadId.js","meteor://ğŸ’»app/imports/api/captions/server/methods/takeOwnership.js","meteor://ğŸ’»app/imports/api/captions/server/methods/updateOwner.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/addCaption.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/clearCaptions.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/updateOwnerId.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/updatePad.js","meteor://ğŸ’»app/imports/api/captions/server/modifiers/updateReadOnlyPadId.js","meteor://ğŸ’»app/imports/api/captions/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/captions/server/helpers.js","meteor://ğŸ’»app/imports/api/captions/server/index.js","meteor://ğŸ’»app/imports/api/captions/server/methods.js","meteor://ğŸ’»app/imports/api/captions/server/publishers.js","meteor://ğŸ’»app/imports/api/captions/index.js","meteor://ğŸ’»app/imports/api/cursor/server/handlers/cursorUpdate.js","meteor://ğŸ’»app/imports/api/cursor/server/methods/publishCursorUpdate.js","meteor://ğŸ’»app/imports/api/cursor/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/cursor/server/index.js","meteor://ğŸ’»app/imports/api/cursor/server/methods.js","meteor://ğŸ’»app/imports/api/cursor/server/streamer.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/destroyExternalVideo.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/emitExternalVideoEvent.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/initializeExternalVideo.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/startWatchingExternalVideo.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods/stopWatchingExternalVideo.js","meteor://ğŸ’»app/imports/api/external-videos/server/index.js","meteor://ğŸ’»app/imports/api/external-videos/server/methods.js","meteor://ğŸ’»app/imports/api/group-chat/server/handlers/groupChatCreated.js","meteor://ğŸ’»app/imports/api/group-chat/server/handlers/groupChatDestroyed.js","meteor://ğŸ’»app/imports/api/group-chat/server/handlers/groupChats.js","meteor://ğŸ’»app/imports/api/group-chat/server/methods/createGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat/server/methods/destroyGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat/server/modifiers/addGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat/server/modifiers/clearGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/group-chat/server/index.js","meteor://ğŸ’»app/imports/api/group-chat/server/methods.js","meteor://ğŸ’»app/imports/api/group-chat/server/publishers.js","meteor://ğŸ’»app/imports/api/group-chat/index.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/handlers/clearPublicGroupChat.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/handlers/groupChatMsgBroadcast.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/handlers/groupChatsMsgs.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/handlers/userTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods/clearPublicChatHistory.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods/sendGroupChatMsg.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods/startUserTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods/stopUserTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/addGroupChatMsg.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/clearGroupChatMsg.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/startTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/modifiers/stopTyping.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/index.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/methods.js","meteor://ğŸ’»app/imports/api/group-chat-msg/server/publishers.js","meteor://ğŸ’»app/imports/api/group-chat-msg/index.js","meteor://ğŸ’»app/imports/api/guest-users/server/handlers/guestApproved.js","meteor://ğŸ’»app/imports/api/guest-users/server/handlers/guestsWaitingForApproval.js","meteor://ğŸ’»app/imports/api/guest-users/server/methods/allowPendingUsers.js","meteor://ğŸ’»app/imports/api/guest-users/server/methods/changeGuestPolicy.js","meteor://ğŸ’»app/imports/api/guest-users/server/modifiers/setGuestStatus.js","meteor://ğŸ’»app/imports/api/guest-users/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/guest-users/server/index.js","meteor://ğŸ’»app/imports/api/guest-users/server/methods.js","meteor://ğŸ’»app/imports/api/guest-users/server/publishers.js","meteor://ğŸ’»app/imports/api/guest-users/index.js","meteor://ğŸ’»app/imports/api/local-settings/server/methods/userChangedLocalSettings.js","meteor://ğŸ’»app/imports/api/local-settings/server/modifiers/clearLocalSettings.js","meteor://ğŸ’»app/imports/api/local-settings/server/modifiers/setChangedLocalSettings.js","meteor://ğŸ’»app/imports/api/local-settings/server/index.js","meteor://ğŸ’»app/imports/api/local-settings/server/methods.js","meteor://ğŸ’»app/imports/api/local-settings/server/publishers.js","meteor://ğŸ’»app/imports/api/local-settings/index.js","meteor://ğŸ’»app/imports/api/log-client/server/methods/logClient.js","meteor://ğŸ’»app/imports/api/log-client/server/index.js","meteor://ğŸ’»app/imports/api/log-client/server/methods.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/getAllMeetings.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/meetingCreation.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/meetingDestruction.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/meetingEnd.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/meetingLockChange.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/recordingStatusChange.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/recordingTimerChange.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/timeRemainingUpdate.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/userLockChange.js","meteor://ğŸ’»app/imports/api/meetings/server/handlers/webcamOnlyModerator.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/endMeeting.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/toggleLockSettings.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/toggleRecording.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/toggleWebcamsOnlyForModerator.js","meteor://ğŸ’»app/imports/api/meetings/server/methods/transferUser.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/addMeeting.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/changeLockSettings.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/changeUserLock.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/clearRecordMeeting.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/meetingHasEnded.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/setPublishedPoll.js","meteor://ğŸ’»app/imports/api/meetings/server/modifiers/webcamOnlyModerator.js","meteor://ğŸ’»app/imports/api/meetings/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/meetings/server/index.js","meteor://ğŸ’»app/imports/api/meetings/server/methods.js","meteor://ğŸ’»app/imports/api/meetings/server/publishers.js","meteor://ğŸ’»app/imports/api/meetings/index.js","meteor://ğŸ’»app/imports/api/network-information/server/methods/userInstabilityDetected.js","meteor://ğŸ’»app/imports/api/network-information/server/modifiers/clearNetworkInformation.js","meteor://ğŸ’»app/imports/api/network-information/server/index.js","meteor://ğŸ’»app/imports/api/network-information/server/methods.js","meteor://ğŸ’»app/imports/api/network-information/server/publisher.js","meteor://ğŸ’»app/imports/api/network-information/index.js","meteor://ğŸ’»app/imports/api/note/server/handlers/padUpdate.js","meteor://ğŸ’»app/imports/api/note/server/methods/createNote.js","meteor://ğŸ’»app/imports/api/note/server/modifiers/addNote.js","meteor://ğŸ’»app/imports/api/note/server/modifiers/clearNote.js","meteor://ğŸ’»app/imports/api/note/server/modifiers/updateNote.js","meteor://ğŸ’»app/imports/api/note/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/note/server/helpers.js","meteor://ğŸ’»app/imports/api/note/server/index.js","meteor://ğŸ’»app/imports/api/note/server/publishers.js","meteor://ğŸ’»app/imports/api/note/index.js","meteor://ğŸ’»app/imports/api/ping-pong/server/methods/ping.js","meteor://ğŸ’»app/imports/api/ping-pong/server/index.js","meteor://ğŸ’»app/imports/api/ping-pong/server/methods.js","meteor://ğŸ’»app/imports/api/ping-pong/server/publishers.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/pollPublished.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/pollStarted.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/pollStopped.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/userResponded.js","meteor://ğŸ’»app/imports/api/polls/server/handlers/userVoted.js","meteor://ğŸ’»app/imports/api/polls/server/methods/publishPoll.js","meteor://ğŸ’»app/imports/api/polls/server/methods/publishVote.js","meteor://ğŸ’»app/imports/api/polls/server/methods/startPoll.js","meteor://ğŸ’»app/imports/api/polls/server/methods/stopPoll.js","meteor://ğŸ’»app/imports/api/polls/server/modifiers/addPoll.js","meteor://ğŸ’»app/imports/api/polls/server/modifiers/clearPolls.js","meteor://ğŸ’»app/imports/api/polls/server/modifiers/removePoll.js","meteor://ğŸ’»app/imports/api/polls/server/modifiers/updateVotes.js","meteor://ğŸ’»app/imports/api/polls/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/polls/server/index.js","meteor://ğŸ’»app/imports/api/polls/server/methods.js","meteor://ğŸ’»app/imports/api/polls/server/publishers.js","meteor://ğŸ’»app/imports/api/polls/index.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/handlers/createNewPresentationPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/handlers/removePresentationPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/handlers/setPresenterInPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/handlers/syncGetPresentationPods.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/modifiers/addPresentationPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/modifiers/clearPresentationPods.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/modifiers/removePresentationPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/modifiers/setPresenterInPod.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/index.js","meteor://ğŸ’»app/imports/api/presentation-pods/server/publishers.js","meteor://ğŸ’»app/imports/api/presentation-pods/index.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/handlers/presentationUploadTokenFail.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/handlers/presentationUploadTokenPass.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/methods/requestPresentationUploadToken.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/methods/setUsedToken.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/modifiers/clearPresentationUploadToken.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/index.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/methods.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/server/publishers.js","meteor://ğŸ’»app/imports/api/presentation-upload-token/index.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationAdded.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationConversionUpdate.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationCurrentSet.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationDownloadableSet.js","meteor://ğŸ’»app/imports/api/presentations/server/handlers/presentationRemove.js","meteor://ğŸ’»app/imports/api/presentations/server/methods/removePresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/methods/setPresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/methods/setPresentationDownloadable.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/addPresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/clearPresentations.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/removePresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/setCurrentPresentation.js","meteor://ğŸ’»app/imports/api/presentations/server/modifiers/setPresentationDownloadable.js","meteor://ğŸ’»app/imports/api/presentations/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/presentations/server/index.js","meteor://ğŸ’»app/imports/api/presentations/server/methods.js","meteor://ğŸ’»app/imports/api/presentations/server/publishers.js","meteor://ğŸ’»app/imports/api/presentations/index.js","meteor://ğŸ’»app/imports/api/screenshare/server/handlers/screenshareStarted.js","meteor://ğŸ’»app/imports/api/screenshare/server/handlers/screenshareStopped.js","meteor://ğŸ’»app/imports/api/screenshare/server/modifiers/addScreenshare.js","meteor://ğŸ’»app/imports/api/screenshare/server/modifiers/clearScreenshare.js","meteor://ğŸ’»app/imports/api/screenshare/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/screenshare/server/index.js","meteor://ğŸ’»app/imports/api/screenshare/server/methods.js","meteor://ğŸ’»app/imports/api/screenshare/server/publishers.js","meteor://ğŸ’»app/imports/api/screenshare/index.js","meteor://ğŸ’»app/imports/api/slides/server/handlers/slideChange.js","meteor://ğŸ’»app/imports/api/slides/server/handlers/slideResize.js","meteor://ğŸ’»app/imports/api/slides/server/methods/switchSlide.js","meteor://ğŸ’»app/imports/api/slides/server/methods/zoomSlide.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/addSlide.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/addSlidePositions.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/changeCurrentSlide.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/clearSlides.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/clearSlidesPresentation.js","meteor://ğŸ’»app/imports/api/slides/server/modifiers/resizeSlide.js","meteor://ğŸ’»app/imports/api/slides/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/slides/server/helpers.js","meteor://ğŸ’»app/imports/api/slides/server/index.js","meteor://ğŸ’»app/imports/api/slides/server/methods.js","meteor://ğŸ’»app/imports/api/slides/server/publishers.js","meteor://ğŸ’»app/imports/api/slides/index.js","meteor://ğŸ’»app/imports/api/users/server/handlers/changeRole.js","meteor://ğŸ’»app/imports/api/users/server/handlers/emojiStatus.js","meteor://ğŸ’»app/imports/api/users/server/handlers/getUsers.js","meteor://ğŸ’»app/imports/api/users/server/handlers/presenterAssigned.js","meteor://ğŸ’»app/imports/api/users/server/handlers/removeUser.js","meteor://ğŸ’»app/imports/api/users/server/handlers/userEjected.js","meteor://ğŸ’»app/imports/api/users/server/handlers/userInactivityInspect.js","meteor://ğŸ’»app/imports/api/users/server/handlers/userJoin.js","meteor://ğŸ’»app/imports/api/users/server/handlers/userJoined.js","meteor://ğŸ’»app/imports/api/users/server/handlers/validateAuthToken.js","meteor://ğŸ’»app/imports/api/users/server/methods/assignPresenter.js","meteor://ğŸ’»app/imports/api/users/server/methods/changeRole.js","meteor://ğŸ’»app/imports/api/users/server/methods/removeUser.js","meteor://ğŸ’»app/imports/api/users/server/methods/setEmojiStatus.js","meteor://ğŸ’»app/imports/api/users/server/methods/setUserEffectiveConnectionType.js","meteor://ğŸ’»app/imports/api/users/server/methods/toggleUserLock.js","meteor://ğŸ’»app/imports/api/users/server/methods/userActivitySign.js","meteor://ğŸ’»app/imports/api/users/server/methods/userLeaving.js","meteor://ğŸ’»app/imports/api/users/server/methods/userLeftMeeting.js","meteor://ğŸ’»app/imports/api/users/server/methods/validateAuthToken.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/addDialInUser.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/addUser.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/changePresenter.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/changeRole.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/clearUsers.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/createDummyUser.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/removeUser.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/setConnectionIdAndAuthToken.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/setUserEffectiveConnectionType.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/userEjected.js","meteor://ğŸ’»app/imports/api/users/server/modifiers/userInactivityInspect.js","meteor://ğŸ’»app/imports/api/users/server/store/bannedUsers.js","meteor://ğŸ’»app/imports/api/users/server/store/pendingAuthentications.js","meteor://ğŸ’»app/imports/api/users/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/users/server/index.js","meteor://ğŸ’»app/imports/api/users/server/methods.js","meteor://ğŸ’»app/imports/api/users/server/publishers.js","meteor://ğŸ’»app/imports/api/users/index.js","meteor://ğŸ’»app/imports/api/users-infos/server/handlers/userInformation.js","meteor://ğŸ’»app/imports/api/users-infos/server/methods/removeUserInformation.js","meteor://ğŸ’»app/imports/api/users-infos/server/methods/requestUserInformation.js","meteor://ğŸ’»app/imports/api/users-infos/server/modifiers/addUserInfo.js","meteor://ğŸ’»app/imports/api/users-infos/server/modifiers/clearUserInfo.js","meteor://ğŸ’»app/imports/api/users-infos/server/modifiers/clearUserInfoForRequester.js","meteor://ğŸ’»app/imports/api/users-infos/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/users-infos/server/index.js","meteor://ğŸ’»app/imports/api/users-infos/server/methods.js","meteor://ğŸ’»app/imports/api/users-infos/server/publishers.js","meteor://ğŸ’»app/imports/api/users-infos/index.js","meteor://ğŸ’»app/imports/api/users-settings/server/methods/addUserSettings.js","meteor://ğŸ’»app/imports/api/users-settings/server/modifiers/addUserSetting.js","meteor://ğŸ’»app/imports/api/users-settings/server/modifiers/clearUsersSettings.js","meteor://ğŸ’»app/imports/api/users-settings/server/index.js","meteor://ğŸ’»app/imports/api/users-settings/server/methods.js","meteor://ğŸ’»app/imports/api/users-settings/server/publishers.js","meteor://ğŸ’»app/imports/api/users-settings/index.js","meteor://ğŸ’»app/imports/api/video-streams/server/handlers/userSharedHtml5Webcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/handlers/userUnsharedHtml5Webcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/methods/userShareWebcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/methods/userUnshareWebcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/modifiers/clearVideoStreams.js","meteor://ğŸ’»app/imports/api/video-streams/server/modifiers/sharedWebcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/modifiers/unsharedWebcam.js","meteor://ğŸ’»app/imports/api/video-streams/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/video-streams/server/helpers.js","meteor://ğŸ’»app/imports/api/video-streams/server/index.js","meteor://ğŸ’»app/imports/api/video-streams/server/methods.js","meteor://ğŸ’»app/imports/api/video-streams/server/publisher.js","meteor://ğŸ’»app/imports/api/video-streams/index.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/handlers/voiceCallStateEvent.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/modifiers/clearVoiceCallStates.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/index.js","meteor://ğŸ’»app/imports/api/voice-call-states/server/publishers.js","meteor://ğŸ’»app/imports/api/voice-call-states/index.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/getVoiceUsers.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/joinVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/leftVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/meetingMuted.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/mutedVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/talkingVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/handlers/voiceUsers.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods/ejectUserFromVoice.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods/muteAllExceptPresenterToggle.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods/muteAllToggle.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods/muteToggle.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/addVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/changeMuteMeeting.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/clearVoiceUsers.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/removeVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/modifiers/updateVoiceUser.js","meteor://ğŸ’»app/imports/api/voice-users/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/voice-users/server/index.js","meteor://ğŸ’»app/imports/api/voice-users/server/methods.js","meteor://ğŸ’»app/imports/api/voice-users/server/publishers.js","meteor://ğŸ’»app/imports/api/voice-users/index.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/handlers/modifyWhiteboardAccess.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/methods/changeWhiteboardAccess.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/modifiers/modifyWhiteboardAccess.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/eventHandlers.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/index.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/methods.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/server/publishers.js","meteor://ğŸ’»app/imports/api/whiteboard-multi-user/index.js","meteor://ğŸ’»app/imports/api/common/server/helpers.js","meteor://ğŸ’»app/imports/startup/server/index.js","meteor://ğŸ’»app/imports/startup/server/logger.js","meteor://ğŸ’»app/imports/startup/server/minBrowserVersion.js","meteor://ğŸ’»app/imports/startup/server/redis.js","meteor://ğŸ’»app/imports/startup/server/settings.js","meteor://ğŸ’»app/imports/utils/lineEndings.js","meteor://ğŸ’»app/imports/utils/mimeTypes.js","meteor://ğŸ’»app/imports/utils/regex-weburl.js","meteor://ğŸ’»app/server/main.js"],"names":["body","check","header","multiUser","clearAnnotations","annotationsAdded","_","annotation","userId","addAnnotation","modifyWhiteboardAccess","whiteboardId","fullClear","Boolean","AnnotationsStreamer","ANNOTATION_PROCCESS_INTERVAL","annotationsQueue","annotationsRecieverIsRunning","proccess","Object","meetingId","annotations","Meteor","shapeId","removeAnnotation","RedisPubSub","REDIS_CONFIG","CHANNEL","EVENT_NAME","requesterUserId","extractCredentials","payload","sendAnnotationHelper","id","status","annotationType","annotationInfo","x","y","fontColor","calcedFontSize","textBoxWidth","text","textBoxHeight","fontSize","dataPoints","type","String","wbId","position","Number","color","thickness","points","dimensions","Match","query","addAnnotationQuery","cb","Logger","err","insertedId","Annotations","selector","processForHTML5ServerOnly","sendBulkAnnotations","boundAnnotations","streamer","retransmit","ANNOTATION_TYPE_TEXT","ANNOTATION_TYPE_PENCIL","DEFAULT_TEXT_WIDTH","DEFAULT_TEXT_HEIGHT","modifier","$set","$setOnInsert","$inc","version","useDefaultSize","DRAW_START","DRAW_UPDATE","DRAW_END","baseSelector","baseModifier","$push","$each","handleTextUpdate","handlePencilUpdate","handleCommonAnnotation","Mongo","breakoutId","clearBreakouts","users","insertedTime","cbErr","Breakouts","DEFAULT_TIME_REMAINING","breakout","joinedUsers","timeRemaining","parentMeetingId","flat","usersMapped","user","name","options","multi","record","BREAKOUT_LIM","MIN_BREAKOUT_ROOMS","MAX_BREAKOUT_ROOMS","eventName","rooms","userIdToInvite","endAllBreakouts","ROLE_MODERATOR","User","fields","role","presenterSelector","$or","freeJoin","boundBreakouts","breakouts","pad","fetchReadOnlyPadId","changeset","data","getDataFromChangeset","updatePad","padId","generatePadId","axios","method","url","appendTextURL","responseType","response","error","isEnabled","getLocalesURL","locales","locale","addCaption","getIndex","length","index","startIndex","localeCode","endIndex","readOnlyURL","getReadOnlyIdURL","readOnlyPadId","getDataFromResponse","updateReadOnlyPadId","$regex","updateOwnerId","ownerId","revs","Captions","updateOwner","editCaptions","processForCaptionsPadOnly","CAPTIONS_CONFIG","BASENAME","APP","LOCALES_URL","host","port","localesUrl","CAPTIONS","TOKEN","hashFNV32a","isCaptionsPad","splitPadId","splitChangeset","fn","appendText","boundCaptions","captions","streamerLog","CURSOR_PROCCESS_INTERVAL","cursorQueue","cursors","CursorStreamer","publishCursorUpdate","message","streamName","streamerName","allowRecentMessages","state","time","rate","externalVideoUrl","presenter","Meetings","meeting","emitExternalVideoEvent","addGroupChat","chats","chatsAdded","chat","correlationId","Date","msg","receiver","access","chatId","createdBy","chatDocument","u","safe","GroupChat","clearGroupChatMsg","destroyGroupChat","CHAT_CONFIG","PUBLIC_CHAT_TYPE","$all","boundGroupChat","groupChat","CHAT_ACCESS","PUBLIC","PRIVATE","CHAT_ACCESS_PUBLIC","CHAT_ACCESS_PRIVATE","addGroupChatMsg","msgsAdded","msgs","m","startTyping","PUBLIC_GROUP_CHAT_ID","HTML_SAFE_MAP","parseMessage","parsedMessage","c","UsersTyping","userTyping","stopTyping","BREAK_LINE","timestamp","sender","msgDocument","GroupChatMsg","PUBLIC_CHAT_SYSTEM_ID","CHAT_CLEAR_MESSAGE","clearMsg","$eq","TYPING_TIMEOUT","Users","mod","isTypingTo","typingUser","sendMsgInitiated","stillTyping","stopUserTyping","$in","chatsIds","groupChatMsg","boundUsersTyping","usersTyping","guests","guest","setGuestStatus","stringHash","COLOR_LIST","intId","approved","denied","loginTime","mappedGuests","approvedBy","JSON","setBy","policy","policyRule","GUEST_STATUS_ALLOW","GUEST_STATUS_DENY","GuestUsers","changeGuestPolicy","boundSlides","guestUsers","userLocalSettings","settings","setChangedLocalSettings","LocalSettings","userChangedLocalSettings","boundLocalSettings","localSettings","logClient","logCode","extraInfo","userInfo","connectionId","logContents","level","handleMeetingCreation","durationInSecods","addMeeting","destroyExternalVideo","removeAnnotationsStreamer","removeCursorStreamer","meetingType","connectionStatus","meetingHasEnded","meetingEnded","changeLockSettings","recording","RecordMeetings","timeLeftInSec","MeetingTimeRemaining","changeUserLock","changeWebcamOnlyModerator","disableCam","disableMic","disablePrivateChat","disablePublicChat","disableNote","hideUserList","lockedLayout","lockOnJoin","lockOnJoinConfigurable","recordObject","meetingRecorded","allowedToRecord","fromMeetingId","toMeetingId","breakoutProps","sequence","breakoutRooms","parentId","enabled","privateChatEnabled","meetingProp","extId","isBreakout","usersProp","webcamsOnlyForModerator","guestPolicy","maxUsers","allowModsToUnmuteUsers","durationProps","createdTime","duration","createdDate","maxInactivityTimeoutMinutes","warnMinutesBeforeMax","meetingExpireIfNoUserJoinedInMinutes","meetingExpireWhenLastUserLeftInMinutes","userInactivityInspectTimerInMinutes","userInactivityThresholdInMinutes","userActivitySignResponseDelayInMinutes","welcomeProp","welcomeMsg","modOnlyMessage","welcomeMsgTemplate","recordProp","allowStartStopRecording","autoStartRecording","password","viewerPass","moderatorPass","voiceProp","voiceConf","dialNumber","telVoice","muteOnStart","screenshareProps","red5ScreenshareIp","red5ScreenshareApp","screenshareConf","metadataProp","lockSettingsProps","restProps","newMeeting","sanitizeTextInChat","original","SanitizeHTML","allowedTags","allowedAttributes","a","img","allowedSchemes","sanitizedWelcomeText","insertBlankTarget","s","linkWithoutTarget","publishedPoll","createNote","createCaptions","BannedUsers","cbRecord","addAnnotationsStreamer","addCursorStreamer","disablePrivChat","disablePubChat","locked","lockedBy","clearCaptions","clearGroupChat","clearPresentationPods","clearPolls","clearSlides","clearUsers","clearUsersSettings","clearVoiceUsers","clearUserInfo","clearNote","clearNetworkInformation","clearLocalSettings","clearRecordMeeting","clearVoiceCallStates","clearVideoStreams","isPublished","toggleWebcamsOnlyForModerator","boundMeetings","meetings","boundRecordMeetings","recordMeetings","boundtimeRemaining","meetingTimeRemaining","NetworkInformation","userInstabilityDetected","boundNetworkInformation","networkInformation","updateNote","noteId","generateNoteId","createURL","createPadURL","responseOuter","readOnlyNoteId","addNote","Note","processForNotePadOnly","ETHERPAD","NOTE_CONFIG","BASE_URL","apikey","encodeURIComponent","innerData","isNotePad","boundNote","note","lastPing","ping","COLLECTION_NAME","INTERVAL_IN_SETTINGS","INTERVAL_TIME","PONG_INTERVAL_IN_SETTINGS","PONG_INTERVAL","pongSender","interval","pong","pollId","setPublishedPoll","removePoll","poll","addPoll","answerId","$pull","responses","Polls","answers","key","numVotes","numRespondents","numResponders","updateVotes","requesterId","currentPoll","questionId","pollAnswerId","pollType","userSelector","$ne","clientType","userIds","requester","stopPoll","boundPolls","polls","currentPresenterId","podId","pod","addPresentationPod","removePresentationPod","nextPresenterId","setPresenterInPod","pods","presentationPodIds","presentationPodsToRemove","$nin","p","currentPresenter","presentations","presentation","addPresentation","PresentationPods","clearPresentations","clearPresentationUploadToken","boundPresentationPods","presentationPods","filename","failed","authzToken","doc","used","PresentationUploadToken","setUsedToken","boundPresentationUploadToken","presentationUploadToken","OFFICE_DOC_CONVERSION_FAILED_KEY","OFFICE_DOC_CONVERSION_INVALID_KEY","SUPPORTED_DOCUMENT_KEY","UNSUPPORTED_DOCUMENT_KEY","PAGE_COUNT_FAILED_KEY","PAGE_COUNT_EXCEEDED_KEY","PDF_HAS_BIG_PAGE_KEY","GENERATED_SLIDE_KEY","messageKey","presName","presentationName","statusModifier","presentationId","Presentations","setCurrentPresentation","downloadable","setPresentationDownloadable","removePresentation","getSlideText","content","HTTP","addSlides","slides","slide","addSlide","current","pages","num","thumbUri","swfUri","txtUri","svgUri","xOffset","yOffset","widthRatio","heightRatio","clearSlidesPresentation","oldCurrent","callback","newCurrent","oldPresentation","newPresentation","boundPresentations","presenterId","stopWatchingExternalVideo","addScreenshare","clearScreenshare","screenshare","Screenshare","boundScreenshare","changeCurrentSlide","resizeSlide","Presentation","Slide","slideNumber","pageId","loadSlidesFromHttpAlways","requestWhiteboardHistory","USER_ID","slideId","SUPPORTED_TYPES","fetchImageSizes","imageUri","result","mime","width","height","reason","restSlide","imageSizeUri","slideData","slidePosition","calculateSlideData","addSlidePositions","Slides","SlidePositions","viewBoxWidth","viewBoxHeight","oldSlide","newSlide","whiteboardIds","row","SlidePosition","calculatedData","zoomSlide","boundSlidePositions","slidePositions","changedBy","changeRole","emoji","emojiTime","usersIds","usersToRemove","removeUser","usersAdded","addUser","assignedBy","changePresenter","prevPresenter","setPresenterPayload","defaultPodSelector","currentDefaultPodPresenter","setPresenterInPodReqMsg","oldPresenter","userEjected","reasonCode","responseDelay","userInactivityInspect","authToken","clearOtherSessions","serverSessions","i","waitForApproval","pendingAuths","pendingAuthenticationsStore","pendingAuth","methodInvocationObject","sessionId","createDummyUser","setConnectionIdAndAuthToken","valid","userJoin","validated","inactivityCheck","sessionUserId","currentConnectionId","newPresenterId","newPresenterName","ejectedBy","banUser","removedUser","effectiveConnectionType","setEffectiveConnectionType","lock","loggedOut","externalId","invalid","isUserEjected","ejected","requesterToken","USER_CONFIG","ROLE_VIEWER","callerName","voiceOnlyUser","authed","waitingForAcceptance","guestStatus","avatar","sanitizedName","userData","Meeting","sortName","isBreakoutUser","addVoiceUser","voiceUserId","callerNum","muted","talking","callingWith","listenOnly","joined","clearAllSessions","userToRemove","clearUserInfoForRequester","VideoStreams","ejectedReason","constructor","init","add","delete","has","generateKey","take","matches","e","userLeftMeeting","onCloseConnection","userLeaving","boundUsers","currentUser","addUserInfo","UserInfos","externalUserId","info","removeUserInformation","boundUserInfos","userInfos","oldParameters","askForFeedbackOnLogout","autoJoin","autoShareWebcam","autoSwapLayout","clientTitle","customStyle","customStyleUrl","displayBrandingArea","enableScreensharing","enableVideo","forceListenOnly","hidePresentation","listenOnlyMode","multiUserPenOnly","multiUserTools","outsideToggleRecording","outsideToggleSelfVoice","presenterTools","shortcuts","skipCheck","oldParametersKeys","currentParameters","parsedValue","val","logger","parameters","el","settingKey","normalizedKey","valueParser","matchingNewKey","settingsAdded","setting","value","addUserSetting","UserSettings","addUserSettings","mainRoomUserSettings","boundUserSettings","userSettings","stream","isValidStream","sharedWebcam","unsharedWebcam","deviceId","getDeviceId","getUserName","FLASH_STREAM_REGEX","splitStream","userUnshareWebcam","boundVideoStreams","videoStreams","callState","clientSession","VoiceCallState","boundVoiceCallStates","voiceCallStates","VoiceCallStates","voiceUsersIdsToUpdate","voiceUsersUpdated","updateVoiceUser","voiceUsersToRemove","removeVoiceUser","voiceUser","addDialInUser","isDialInUser","changeMuteMeeting","VoiceUsers","voiceUsers","voice","toggleMeetingMuted","mutedBy","mute","userToMute","uId","spoke","clearSpokeTimeout","TALKING_TIMEOUT","startTime","timeoutHandle","endTime","spokeDelay","spokeTimeoutHandles","toggleVoice","muteAllUsers","muteAllExceptPresenter","ejectUserFromVoice","boundVoiceUser","WhiteboardMultiUser","changeWhiteboardAccess","boundMultiUser","whiteboardMultiUser","MSG_DIRECT_TYPE","NODE_USER","indexOf","l","envelope","routing","shouldSkip","msgType","hval","seed","str","credentials","credentialsArray","AVAILABLE_LOCALES","fs","APP_CONFIG","env","CDN_URL","heapDumpMbThreshold","memoryMonitoringSettings","memwatch","stats","heapDumpTriggered","heapDumpEnabled","heapdump","BrowserPolicy","WebAppInternals","fontRegExp","WebApp","req","res","next","setMinBrowserVersions","currentTime","$lt","process","html5clientStatus","fallback","override","browserLocale","localeList","usableLocales","file","regionDefault","messages","normalizedLocale","Assets","Langmap","nativeName","userName","rating","reqUserName","feedback","userAgent","lookupUserAgent","eventEmitter","Redis","redisPubSub","LOG_CONFIG","createLogger","format","transports","prettyPrint","humanReadableUnhandledException","colorize","handleExceptions","minBrowserVersions","versions","elem","setMinimumBrowserVersions","NO_MEETING_ID","makeEnvelope","core","makeDebugger","asyncMessages","debug","handleTask","channel","isAsync","called","callNext","queueLength","onError","config","redisConf","channelsToSubscribe","updateConfig","handleSubscribe","handleMessage","ignored","async","ignoredMessages","queueId","destroyMeetingQueue","on","publishVoiceMessage","publishSystemMessage","publishMeetingMessage","publishUserMessage","RedisPubSubSingleton","YAML_FILE_PATH","SETTINGS","YAML","__meteor_runtime_config__","console","CARRIAGE_RETURN","NEW_LINE","XLS","XLSX","DOC","DOCX","PPT","PPTX","ODT","RTF","TXT","ODS","ODP","PDF","JPEG","PNG","SVG","UPLOAD_SUPORTED","global"],"mappings":"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","file":"/app.js","sourcesContent":["import _ from 'lodash';\nimport { check } from 'meteor/check';\nimport modifyWhiteboardAccess from '/imports/api/whiteboard-multi-user/server/modifiers/modifyWhiteboardAccess';\nimport clearAnnotations from '../modifiers/clearAnnotations';\nimport addAnnotation from '../modifiers/addAnnotation';\n\nexport default function handleWhiteboardAnnotations({ header, body }, meetingId) {\n  check(header, Object);\n  if (header.userId !== 'nodeJSapp') { return false; }\n\n  check(meetingId, String);\n  check(body, Object);\n\n  const { annotations, whiteboardId, multiUser } = body;\n\n  check(annotations, Array);\n  check(whiteboardId, String);\n  check(multiUser, Boolean);\n\n  clearAnnotations(meetingId, whiteboardId);\n\n  const annotationsAdded = [];\n  _.each(annotations, (annotation) => {\n    const { wbId, userId } = annotation;\n    annotationsAdded.push(addAnnotation(meetingId, wbId, userId, annotation));\n  });\n\n  modifyWhiteboardAccess(meetingId, whiteboardId, multiUser);\n\n  return annotationsAdded;\n}\n","import { check } from 'meteor/check';\nimport AnnotationsStreamer from '/imports/api/annotations/server/streamer';\n\nimport clearAnnotations from '../modifiers/clearAnnotations';\n\nexport default function handleWhiteboardCleared({ body }, meetingId) {\n  check(body, {\n    userId: String,\n    whiteboardId: String,\n    fullClear: Boolean,\n  });\n\n  const { whiteboardId, fullClear, userId } = body;\n\n  if (fullClear) {\n    AnnotationsStreamer(meetingId).emit('removed', { meetingId, whiteboardId });\n    return clearAnnotations(meetingId, whiteboardId);\n  }\n\n  AnnotationsStreamer(meetingId).emit('removed', { meetingId, whiteboardId, userId });\n  return clearAnnotations(meetingId, whiteboardId, userId);\n}\n","import { check } from 'meteor/check';\nimport AnnotationsStreamer from '/imports/api/annotations/server/streamer';\nimport addAnnotation from '../modifiers/addAnnotation';\n\nconst ANNOTATION_PROCCESS_INTERVAL = 60;\n\nlet annotationsQueue = {};\nlet annotationsRecieverIsRunning = false;\n\nconst proccess = () => {\n  if (!Object.keys(annotationsQueue).length) {\n    annotationsRecieverIsRunning = false;\n    return;\n  }\n  annotationsRecieverIsRunning = true;\n  Object.keys(annotationsQueue).forEach((meetingId) => {\n    AnnotationsStreamer(meetingId).emit('added', { meetingId, annotations: annotationsQueue[meetingId] });\n  });\n  annotationsQueue = {};\n\n  Meteor.setTimeout(proccess, ANNOTATION_PROCCESS_INTERVAL);\n};\n\nexport default function handleWhiteboardSend({ header, body }, meetingId) {\n  const userId = header.userId;\n  const annotation = body.annotation;\n\n  check(userId, String);\n  check(annotation, Object);\n\n  const whiteboardId = annotation.wbId;\n  check(whiteboardId, String);\n\n  if(!annotationsQueue.hasOwnProperty(meetingId)) {\n    annotationsQueue[meetingId] = [];\n  }\n\n  annotationsQueue[meetingId].push({ meetingId, whiteboardId, userId, annotation });\n  if (!annotationsRecieverIsRunning) proccess();\n\n  return addAnnotation(meetingId, whiteboardId, userId, annotation);\n}\n","import { check } from 'meteor/check';\n\nimport AnnotationsStreamer from '/imports/api/annotations/server/streamer';\nimport removeAnnotation from '../modifiers/removeAnnotation';\n\nexport default function handleWhiteboardUndo({ body }, meetingId) {\n  const whiteboardId = body.whiteboardId;\n  const shapeId = body.annotationId;\n\n  check(whiteboardId, String);\n  check(shapeId, String);\n\n  AnnotationsStreamer(meetingId).emit('removed', { meetingId, whiteboardId, shapeId });\n  return removeAnnotation(meetingId, whiteboardId, shapeId);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function clearWhiteboard(whiteboardId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ClearWhiteboardPubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(whiteboardId, String);\n\n  const payload = {\n    whiteboardId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import sendAnnotationHelper from './sendAnnotationHelper';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function sendAnnotation(annotation) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  sendAnnotationHelper(annotation, meetingId, requesterUserId);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nexport default function sendAnnotationHelper(annotation, meetingId, requesterUserId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SendWhiteboardAnnotationPubMsg';\n\n  const whiteboardId = annotation.wbId;\n\n  check(annotation, Object);\n  check(whiteboardId, String);\n\n  if (annotation.annotationType === 'text') {\n    check(annotation, {\n      id: String,\n      status: String,\n      annotationType: String,\n      annotationInfo: {\n        x: Number,\n        y: Number,\n        fontColor: Number,\n        calcedFontSize: Number,\n        textBoxWidth: Number,\n        text: String,\n        textBoxHeight: Number,\n        id: String,\n        whiteboardId: String,\n        status: String,\n        fontSize: Number,\n        dataPoints: String,\n        type: String,\n      },\n      wbId: String,\n      userId: String,\n      position: Number,\n    });\n  } else {\n    check(annotation, {\n      id: String,\n      status: String,\n      annotationType: String,\n      annotationInfo: {\n        color: Number,\n        thickness: Number,\n        points: Array,\n        id: String,\n        whiteboardId: String,\n        status: String,\n        type: String,\n        dimensions: Match.Maybe([Number]),\n      },\n      wbId: String,\n      userId: String,\n      position: Number,\n    });\n  }\n\n  const payload = {\n    annotation,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { extractCredentials } from '/imports/api/common/server/helpers';\nimport sendAnnotationHelper from './sendAnnotationHelper';\n\nexport default function sendBulkAnnotations(payload) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  payload.forEach(annotation => sendAnnotationHelper(annotation, meetingId, requesterUserId));\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function undoAnnotation(whiteboardId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UndoWhiteboardPubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(whiteboardId, String);\n\n  const payload = {\n    whiteboardId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Annotations from '/imports/api/annotations';\nimport addAnnotationQuery from '/imports/api/annotations/addAnnotation';\n\nexport default function addAnnotation(meetingId, whiteboardId, userId, annotation) {\n  check(meetingId, String);\n  check(whiteboardId, String);\n  check(annotation, Object);\n\n  const query = addAnnotationQuery(meetingId, whiteboardId, userId, annotation);\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding annotation to collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n    if (insertedId) {\n      return Logger.info(`Added annotation id=${annotation.id} whiteboard=${whiteboardId}`);\n    }\n    return true;\n  };\n\n  return Annotations.upsert(query.selector, query.modifier, cb);\n}\n","import Annotations from '/imports/api/annotations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearAnnotations(meetingId, whiteboardId, userId) {\n  const selector = {};\n\n  if (meetingId) {\n    selector.meetingId = meetingId;\n  }\n\n  if (whiteboardId) {\n    selector.whiteboardId = whiteboardId;\n  }\n\n  if (userId) {\n    selector.userId = userId;\n  }\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Removing Annotations from collection: ${err}`);\n    }\n\n    if (userId) {\n      return Logger.info(`Cleared Annotations for userId=${userId} where whiteboard=${whiteboardId}`);\n    }\n\n    if (whiteboardId) {\n      return Logger.info(`Cleared Annotations for whiteboard=${whiteboardId}`);\n    }\n\n    if (meetingId) {\n      return Logger.info(`Cleared Annotations (${meetingId})`);\n    }\n\n    return Logger.info('Cleared Annotations (all)');\n  };\n\n  return Annotations.remove(selector, cb);\n}\n","import { check } from 'meteor/check';\nimport Annotations from '/imports/api/annotations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function removeAnnotation(meetingId, whiteboardId, shapeId) {\n  check(meetingId, String);\n  check(whiteboardId, String);\n  check(shapeId, String);\n\n  const selector = {\n    meetingId,\n    whiteboardId,\n    id: shapeId,\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Removing annotation from collection: ${err}`);\n    }\n\n    return Logger.info(`Removed annotation id=${shapeId} whiteboard=${whiteboardId}`);\n  };\n\n  return Annotations.remove(selector, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\nimport handleWhiteboardCleared from './handlers/whiteboardCleared';\nimport handleWhiteboardUndo from './handlers/whiteboardUndo';\nimport handleWhiteboardSend from './handlers/whiteboardSend';\nimport handleWhiteboardAnnotations from './handlers/whiteboardAnnotations';\n\nRedisPubSub.on('ClearWhiteboardEvtMsg', handleWhiteboardCleared);\nRedisPubSub.on('UndoWhiteboardEvtMsg', handleWhiteboardUndo);\nRedisPubSub.on('SendWhiteboardAnnotationEvtMsg', handleWhiteboardSend);\nRedisPubSub.on('GetWhiteboardAnnotationsRespMsg', processForHTML5ServerOnly(handleWhiteboardAnnotations));\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport undoAnnotation from './methods/undoAnnotation';\nimport clearWhiteboard from './methods/clearWhiteboard';\nimport sendAnnotation from './methods/sendAnnotation';\nimport sendBulkAnnotations from './methods/sendBulkAnnotations';\n\nMeteor.methods({\n  undoAnnotation,\n  clearWhiteboard,\n  sendAnnotation,\n  sendBulkAnnotations,\n});\n","import Annotations from '/imports/api/annotations';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction annotations() {\n  if (!this.userId) {\n    return Annotations.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing Annotations for ${meetingId} ${requesterUserId}`);\n\n  return Annotations.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundAnnotations = annotations.bind(this);\n  return boundAnnotations(...args);\n}\n\nMeteor.publish('annotations', publish);\n","import Logger from '/imports/startup/server/logger';\n\nexport function removeAnnotationsStreamer(meetingId) {\n  Logger.info(`Removing Annotations streamer object for meeting ${meetingId}`);\n  delete Meteor.StreamerCentral.instances[`annotations-${meetingId}`];\n}\n\nexport function addAnnotationsStreamer(meetingId) {\n  const streamer = new Meteor.Streamer(`annotations-${meetingId}`, { retransmit: false });\n\n  streamer.allowRead(function allowRead() {\n    if (!this.userId) return false;\n\n    return this.userId && this.userId.includes(meetingId);\n  });\n\n  streamer.allowWrite(function allowWrite() {\n    return false;\n  });\n}\n\nexport default function get(meetingId) {\n  return Meteor.StreamerCentral.instances[`annotations-${meetingId}`];\n}\n","import { check } from 'meteor/check';\n\nconst ANNOTATION_TYPE_TEXT = 'text';\nconst ANNOTATION_TYPE_PENCIL = 'pencil';\n\nconst DEFAULT_TEXT_WIDTH = 30;\nconst DEFAULT_TEXT_HEIGHT = 20;\n\n// line, triangle, ellipse, rectangle\nfunction handleCommonAnnotation(meetingId, whiteboardId, userId, annotation) {\n  const {\n    id, status, annotationType, annotationInfo, wbId, position,\n  } = annotation;\n\n  const selector = {\n    meetingId,\n    id,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      whiteboardId,\n      meetingId,\n      id,\n      status,\n      annotationType,\n      annotationInfo,\n      wbId,\n    },\n    $setOnInsert: {\n      position,\n    },\n    $inc: { version: 1 },\n  };\n\n  return { selector, modifier };\n}\n\nfunction handleTextUpdate(meetingId, whiteboardId, userId, annotation) {\n  const {\n    id, status, annotationType, annotationInfo, wbId, position,\n  } = annotation;\n\n  const { textBoxWidth, textBoxHeight, calcedFontSize } = annotationInfo;\n  const useDefaultSize = (textBoxWidth === 0 && textBoxHeight === 0)\n    || textBoxWidth < calcedFontSize\n    || textBoxHeight < calcedFontSize;\n\n  if (useDefaultSize) {\n    annotationInfo.textBoxWidth = DEFAULT_TEXT_WIDTH;\n    annotationInfo.textBoxHeight = DEFAULT_TEXT_HEIGHT;\n\n    if (100 - annotationInfo.x < DEFAULT_TEXT_WIDTH) {\n      annotationInfo.textBoxWidth = 100 - annotationInfo.x;\n    }\n    if (100 - annotationInfo.y < DEFAULT_TEXT_HEIGHT) {\n      annotationInfo.textBoxHeight = 100 - annotationInfo.y;\n    }\n  }\n\n  const selector = {\n    meetingId,\n    id,\n    userId,\n  };\n\n  annotationInfo.text = annotationInfo.text.replace(/[\\r]/g, '\\n');\n\n  const modifier = {\n    $set: {\n      whiteboardId,\n      meetingId,\n      id,\n      status,\n      annotationType,\n      annotationInfo,\n      wbId,\n    },\n    $setOnInsert: {\n      position,\n    },\n    $inc: { version: 1 },\n  };\n\n  return { selector, modifier };\n}\n\nfunction handlePencilUpdate(meetingId, whiteboardId, userId, annotation) {\n  const DRAW_START = 'DRAW_START';\n  const DRAW_UPDATE = 'DRAW_UPDATE';\n  const DRAW_END = 'DRAW_END';\n\n  const {\n    id, status, annotationType, annotationInfo, wbId, position,\n  } = annotation;\n\n  const baseSelector = {\n    meetingId,\n    id,\n    userId,\n    whiteboardId,\n  };\n\n  let baseModifier;\n  switch (status) {\n    case DRAW_START:\n      // on start we split the points\n\n      // create the 'pencil_base'\n      // TODO: find and removed unused props (chunks, version, etc)\n      baseModifier = {\n        $set: {\n          id,\n          userId,\n          meetingId,\n          whiteboardId,\n          position,\n          status,\n          annotationType,\n          annotationInfo,\n          wbId,\n          version: 1,\n        },\n      };\n      break;\n    case DRAW_UPDATE:\n      baseModifier = {\n        $push: {\n          'annotationInfo.points': { $each: annotationInfo.points },\n        },\n        $set: {\n          status,\n        },\n        $inc: { version: 1 },\n      };\n      break;\n    case DRAW_END:\n      // Updating the main pencil object with the final info\n      baseModifier = {\n        $set: {\n          whiteboardId,\n          meetingId,\n          id,\n          status,\n          annotationType,\n          annotationInfo,\n          wbId,\n          position,\n        },\n        $inc: { version: 1 },\n      };\n      break;\n    default:\n      break;\n  }\n\n  return { selector: baseSelector, modifier: baseModifier };\n}\n\nexport default function addAnnotation(meetingId, whiteboardId, userId, annotation) {\n  check(meetingId, String);\n  check(whiteboardId, String);\n  check(annotation, Object);\n\n  switch (annotation.annotationType) {\n    case ANNOTATION_TYPE_TEXT:\n      return handleTextUpdate(meetingId, whiteboardId, userId, annotation);\n    case ANNOTATION_TYPE_PENCIL:\n      return handlePencilUpdate(meetingId, whiteboardId, userId, annotation);\n    default:\n      return handleCommonAnnotation(meetingId, whiteboardId, userId, annotation);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\n\nconst Annotations = new Mongo.Collection('annotations');\n\nif (Meteor.isServer) {\n  // types of queries for the annotations  (Total):\n  // 1. meetingId, id, userId               ( 8 )\n  // 2. meetingId, id, userId, whiteboardId ( 1 )\n  // 3. meetingId                           ( 1 )\n  // 4. meetingId, whiteboardId             ( 1 )\n  // 5. meetingId, whiteboardId, id         ( 1 )\n  // 6. meetingId, whiteboardId, userId     ( 1 )\n  // These 2 indexes seem to cover all of the cases\n\n  Annotations._ensureIndex({ id: 1 });\n  Annotations._ensureIndex({ meetingId: 1, whiteboardId: 1, userId: 1 });\n}\n\nexport default Annotations;\n","import { check } from 'meteor/check';\nimport clearBreakouts from '../modifiers/clearBreakouts';\n\nexport default function handleBreakoutClosed({ body }) {\n  const { breakoutId } = body;\n  check(breakoutId, String);\n\n  return clearBreakouts(breakoutId);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Breakouts from '/imports/api/breakouts';\n\nexport default function handleBreakoutJoinURL({ body }) {\n  const {\n    redirectToHtml5JoinURL,\n    userId,\n    breakoutId,\n  } = body;\n\n  check(redirectToHtml5JoinURL, String);\n\n  const selector = {\n    breakoutId,\n  };\n\n  const modifier = {\n    $push: {\n      users: {\n        userId,\n        redirectToHtml5JoinURL,\n        insertedTime: new Date().getTime(),\n      },\n    },\n  };\n\n  const cb = (cbErr, numChanged) => {\n    if (cbErr) {\n      return Logger.error(`Adding breakout to collection: ${cbErr}`);\n    }\n\n    const {\n      insertedId,\n    } = numChanged;\n    if (insertedId) {\n      return Logger.info(`Added breakout id=${breakoutId}`);\n    }\n\n    return Logger.info(`Upserted breakout id=${breakoutId}`);\n  };\n\n  return Breakouts.upsert(selector, modifier, cb);\n}\n","import Breakouts from '/imports/api/breakouts';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\nimport flat from 'flat';\n\nexport default function handleBreakoutRoomStarted({ body }, meetingId) {\n  // 0 seconds default breakout time, forces use of real expiration time\n  const DEFAULT_TIME_REMAINING = 0;\n\n  const {\n    parentMeetingId,\n    breakout,\n  } = body;\n\n  const { breakoutId } = breakout;\n\n  check(meetingId, String);\n\n  const selector = {\n    breakoutId,\n  };\n\n  const modifier = {\n    $set: Object.assign(\n      {\n        users: [],\n        joinedUsers: [],\n      },\n      { timeRemaining: DEFAULT_TIME_REMAINING },\n      { parentMeetingId },\n      flat(breakout),\n    ),\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`updating breakout: ${err}`);\n    }\n\n    return Logger.info('Updated timeRemaining and externalMeetingId '\n      + `for breakout id=${breakoutId}`);\n  };\n\n  return Breakouts.upsert(selector, modifier, cb);\n}\n","import Breakouts from '/imports/api/breakouts';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\n\nexport default function joinedUsersChanged({ body }) {\n  check(body, Object);\n\n  const {\n    parentId,\n    breakoutId,\n    users,\n  } = body;\n\n  check(parentId, String);\n  check(breakoutId, String);\n  check(users, Array);\n\n  const selector = {\n    parentMeetingId: parentId,\n    breakoutId,\n  };\n\n  const usersMapped = users.map(user => ({ userId: user.id, name: user.name }));\n  const modifier = {\n    $set: {\n      joinedUsers: usersMapped,\n    },\n  };\n\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`updating joined users in breakout: ${err}`);\n    }\n\n    return Logger.info('Updated joined users '\n      + `in breakout id=${breakoutId}`);\n  };\n  Breakouts.find(selector);\n  Breakouts.update(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Breakouts from '/imports/api/breakouts';\n\nexport default function handleUpdateTimeRemaining({ body }, meetingId) {\n  const {\n    timeRemaining,\n  } = body;\n\n  check(meetingId, String);\n  check(timeRemaining, Number);\n\n  const selector = {\n    parentMeetingId: meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      timeRemaining,\n    },\n  };\n\n  const options = {\n    multi: true,\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Updating breakouts: ${err}`);\n    }\n\n    return Logger.info('Updated breakout time remaining for breakouts ' +\n      `where parentMeetingId=${meetingId}`);\n  };\n\n  return Breakouts.update(selector, modifier, options, cb);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function createBreakoutRoom(rooms, durationInMinutes, record = false) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const BREAKOUT_LIM = Meteor.settings.public.app.breakoutRoomLimit;\n  const MIN_BREAKOUT_ROOMS = 2;\n  const MAX_BREAKOUT_ROOMS = BREAKOUT_LIM > MIN_BREAKOUT_ROOMS ? BREAKOUT_LIM : MIN_BREAKOUT_ROOMS;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const eventName = 'CreateBreakoutRoomsCmdMsg';\n  if (rooms.length > MAX_BREAKOUT_ROOMS) return Logger.info(`Attempt to create breakout rooms with invalid number of rooms in meeting id=${meetingId}`);\n  const payload = {\n    record,\n    durationInMinutes,\n    rooms,\n    meetingId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, eventName, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function endAllBreakouts() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(meetingId, String);\n  check(requesterUserId, String);\n\n  const eventName = 'EndAllBreakoutRoomsMsg';\n  return RedisPubSub.publishUserMessage(CHANNEL, eventName, meetingId, requesterUserId, null);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function requestJoinURL({ breakoutId, userId: userIdToInvite }) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const userId = userIdToInvite || requesterUserId;\n  const eventName = 'RequestBreakoutJoinURLReqMsg';\n\n  return RedisPubSub.publishUserMessage(\n    CHANNEL, eventName, meetingId, requesterUserId,\n    {\n      meetingId,\n      breakoutId,\n      userId,\n    },\n  );\n}\n","import Logger from '/imports/startup/server/logger';\nimport Breakouts from '/imports/api/breakouts';\n\nexport default function clearBreakouts(breakoutId) {\n  if (breakoutId) {\n    const selector = {\n      breakoutId,\n    };\n\n    return Breakouts.remove(selector, () => {\n      Logger.info(`Cleared Breakouts (${breakoutId})`);\n    });\n  }\n\n  return Breakouts.remove({}, () => {\n    Logger.info('Cleared Breakouts (all)');\n  });\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleBreakoutJoinURL from './handlers/breakoutJoinURL';\nimport handleBreakoutStarted from './handlers/breakoutStarted';\nimport handleUpdateTimeRemaining from './handlers/updateTimeRemaining';\nimport handleBreakoutClosed from './handlers/breakoutClosed';\nimport joinedUsersChanged from './handlers/joinedUsersChanged';\n\nRedisPubSub.on('BreakoutRoomStartedEvtMsg', handleBreakoutStarted);\nRedisPubSub.on('BreakoutRoomJoinURLEvtMsg', handleBreakoutJoinURL);\nRedisPubSub.on('RequestBreakoutJoinURLRespMsg', handleBreakoutJoinURL);\nRedisPubSub.on('BreakoutRoomsTimeRemainingUpdateEvtMsg', handleUpdateTimeRemaining);\nRedisPubSub.on('BreakoutRoomEndedEvtMsg', handleBreakoutClosed);\nRedisPubSub.on('UpdateBreakoutUsersEvtMsg', joinedUsersChanged);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport createBreakoutRoom from '/imports/api/breakouts/server/methods/createBreakout';\nimport requestJoinURL from './methods/requestJoinURL';\nimport endAllBreakouts from './methods/endAllBreakouts';\n\nMeteor.methods({\n  requestJoinURL,\n  createBreakoutRoom,\n  endAllBreakouts,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Breakouts from '/imports/api/breakouts';\nimport Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst ROLE_MODERATOR = Meteor.settings.public.user.role_moderator;\n\nfunction breakouts(role) {\n  if (!this.userId) {\n    return Breakouts.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  Logger.debug(`Publishing Breakouts for ${meetingId} ${requesterUserId}`);\n\n  const User = Users.findOne({ userId: requesterUserId, meetingId }, { fields: { role: 1 } });\n  if (!!User && User.role === ROLE_MODERATOR) {\n    const presenterSelector = {\n      $or: [\n        { parentMeetingId: meetingId },\n        { breakoutId: meetingId },\n      ],\n    };\n\n    return Breakouts.find(presenterSelector);\n  }\n\n  const selector = {\n    $or: [\n      {\n        parentMeetingId: meetingId,\n        freeJoin: true,\n      },\n      {\n        parentMeetingId: meetingId,\n        'users.userId': requesterUserId,\n      },\n      {\n        breakoutId: meetingId,\n      },\n    ],\n  };\n\n  return Breakouts.find(selector);\n}\n\nfunction publish(...args) {\n  const boundBreakouts = breakouts.bind(this);\n  return boundBreakouts(...args);\n}\n\nMeteor.publish('breakouts', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Breakouts = new Mongo.Collection('breakouts');\n\nif (Meteor.isServer) {\n  // types of queries for the breakouts:\n  // 1. breakoutId ( handleJoinUrl, roomStarted, clearBreakouts )\n  // 2. parentMeetingId ( updateTimeRemaining )\n\n  Breakouts._ensureIndex({ breakoutId: 1 });\n  Breakouts._ensureIndex({ parentMeetingId: 1 });\n}\n\nexport default Breakouts;\n","import { check } from 'meteor/check';\nimport fetchReadOnlyPadId from '/imports/api/captions/server/methods/fetchReadOnlyPadId';\n\nexport default function handlePadCreate({ body }) {\n  const { pad } = body;\n  const { id } = pad;\n\n  check(id, String);\n\n  fetchReadOnlyPadId(id);\n}\n","import { check } from 'meteor/check';\nimport { getDataFromChangeset } from '/imports/api/captions/server/helpers';\nimport updatePad from '/imports/api/captions/server/modifiers/updatePad';\n\nexport default function handlePadUpdate({ body }) {\n  const { pad, revs, changeset } = body;\n  const { id } = pad;\n\n  check(id, String);\n  check(changeset, String);\n  check(revs, Number);\n\n  const data = getDataFromChangeset(changeset);\n\n  if (data !== '') {\n    updatePad(id, data, revs);\n  }\n}\n","import axios from 'axios';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport {\n  generatePadId,\n} from '/imports/api/captions/server/helpers';\nimport {\n  appendTextURL,\n} from '/imports/api/note/server/helpers';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function appendText(text, locale) {\n  const { meetingId } = extractCredentials(this.userId);\n  check(meetingId, String);\n  check(text, String);\n  check(locale, String);\n\n  const padId = generatePadId(meetingId, locale);\n\n  axios({\n    method: 'get',\n    url: appendTextURL(padId, text),\n    responseType: 'json',\n  }).then((response) => {\n    const { status } = response;\n    if (status === 200) {\n      Logger.verbose(`Appended text for padId:${padId}`);\n    }\n  }).catch(error => Logger.error(`Could not append captions for padId=${padId}: ${error}`));\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport {\n  generatePadId,\n  isEnabled,\n  getLocalesURL,\n} from '/imports/api/captions/server/helpers';\nimport addCaption from '/imports/api/captions/server/modifiers/addCaption';\nimport axios from 'axios';\n\nexport default function createCaptions(meetingId) {\n  // Avoid captions creation if this feature is disabled\n  if (!isEnabled()) {\n    Logger.warn(`Captions are disabled for ${meetingId}`);\n    return;\n  }\n\n  check(meetingId, String);\n\n  axios({\n    method: 'get',\n    url: getLocalesURL(),\n    responseType: 'json',\n  }).then((response) => {\n    const { status } = response;\n    if (status !== 200) {\n      Logger.error(`Could not get locales info for ${meetingId} ${status}`);\n    }\n    const locales = response.data;\n    locales.forEach((locale) => {\n      const padId = generatePadId(meetingId, locale.locale);\n      addCaption(meetingId, padId, locale);\n    });\n  }).catch(error => Logger.error(`Could not create captions for ${meetingId}: ${error}`));\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nconst getIndex = (data, length) => length - data.length;\n\nexport default function editCaptions(padId, data) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'EditCaptionHistoryPubMsg';\n\n  check(padId, String);\n  check(data, String);\n\n  const pad = Captions.findOne({ padId });\n\n  if (!pad) return Logger.error(`Editing captions history: ${padId}`);\n\n  const {\n    meetingId,\n    ownerId,\n    locale,\n    length,\n  } = pad;\n\n  check(meetingId, String);\n  check(ownerId, String);\n  check(locale, { locale: String, name: String });\n  check(length, Number);\n\n  const index = getIndex(data, length);\n\n  const payload = {\n    startIndex: index,\n    localeCode: locale.locale,\n    locale: locale.name,\n    endIndex: index,\n    text: data,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, ownerId, payload);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport {\n  getReadOnlyIdURL,\n  getDataFromResponse,\n} from '/imports/api/note/server/helpers';\nimport updateReadOnlyPadId from '/imports/api/captions/server/modifiers/updateReadOnlyPadId';\nimport axios from 'axios';\n\nexport default function fetchReadOnlyPadId(padId) {\n  check(padId, String);\n\n  const readOnlyURL = getReadOnlyIdURL(padId);\n  axios({\n    method: 'get',\n    url: readOnlyURL,\n    responseType: 'json',\n  }).then((response) => {\n    const readOnlyPadId = getDataFromResponse(response.data, 'readOnlyID');\n    if (readOnlyPadId) {\n      updateReadOnlyPadId(padId, readOnlyPadId);\n    } else {\n      Logger.error(`Could not get pad readOnlyID for ${padId}`);\n    }\n  }).catch(error => Logger.error(`Could not get pad readOnlyID for ${padId}: ${error}`));\n}\n","import { check } from 'meteor/check';\nimport Captions from '/imports/api/captions';\nimport updateOwnerId from '/imports/api/captions/server/modifiers/updateOwnerId';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function takeOwnership(locale) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(locale, String);\n\n  const pad = Captions.findOne({ meetingId, padId: { $regex: `_captions_${locale}$` } });\n\n  if (pad) {\n    updateOwnerId(meetingId, requesterUserId, pad.padId);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nexport default function editCaptions(meetingId, userId, padId) { // TODO\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UpdateCaptionOwnerPubMsg';\n\n  check(meetingId, String);\n  check(userId, String);\n  check(padId, String);\n\n  const pad = Captions.findOne({ meetingId, padId });\n\n  if (!pad) return Logger.error(`Editing captions owner: ${padId}`);\n\n  const { locale } = pad;\n\n  check(locale, { locale: String, name: String });\n\n  const payload = {\n    ownerId: userId,\n    locale: locale.name,\n    localeCode: locale.locale,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n}\n","import { check } from 'meteor/check';\nimport Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function addCaption(meetingId, padId, locale) {\n  check(meetingId, String);\n  check(padId, String);\n  check(locale, {\n    locale: String,\n    name: String,\n  });\n\n  const selector = {\n    meetingId,\n    padId,\n  };\n\n  const modifier = {\n    meetingId,\n    padId,\n    locale,\n    ownerId: '',\n    readOnlyPadId: '',\n    data: '',\n    revs: 0,\n    length: 0,\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding caption to collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n    if (insertedId) {\n      return Logger.verbose(`Added caption locale=${locale.locale} meeting=${meetingId}`);\n    }\n\n    return Logger.verbose(`Upserted caption locale=${locale.locale} meeting=${meetingId}`);\n  };\n\n  return Captions.upsert(selector, modifier, cb);\n}\n","import Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearCaptions(meetingId) {\n  if (meetingId) {\n    return Captions.remove({ meetingId }, () => {\n      Logger.info(`Cleared Captions (${meetingId})`);\n    });\n  }\n\n  return Captions.remove({}, () => {\n    Logger.info('Cleared Captions (all)');\n  });\n}\n","import Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport updateOwner from '/imports/api/captions/server/methods/updateOwner';\nimport { check } from 'meteor/check';\n\nexport default function updateOwnerId(meetingId, userId, padId) {\n  check(meetingId, String);\n  check(userId, String);\n  check(padId, String);\n\n  const selector = {\n    meetingId,\n    padId,\n  };\n\n  const modifier = {\n    $set: {\n      ownerId: userId,\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Updating captions pad: ${err}`);\n    }\n    updateOwner(meetingId, userId, padId);\n    return Logger.verbose(`Update captions pad=${padId} ownerId=${userId}`);\n  };\n\n  return Captions.update(selector, modifier, { multi: true }, cb);\n}\n","import Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport editCaptions from '/imports/api/captions/server/methods/editCaptions';\nimport { check } from 'meteor/check';\n\nexport default function updatePad(padId, data, revs) {\n  check(padId, String);\n  check(data, String);\n  check(revs, Number);\n\n  const selector = {\n    padId,\n  };\n\n  const modifier = {\n    $set: {\n      data,\n      revs,\n    },\n    $inc: {\n      length: data.length,\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Updating captions pad: ${err}`);\n    }\n    editCaptions(padId, data, revs);\n    return Logger.verbose(`Update captions pad=${padId} revs=${revs}`);\n  };\n\n  return Captions.update(selector, modifier, { multi: true }, cb);\n}\n","import Captions from '/imports/api/captions';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\n\nexport default function updateReadOnlyPadId(padId, readOnlyPadId) {\n  check(padId, String);\n  check(readOnlyPadId, String);\n\n  const selector = {\n    padId,\n  };\n\n  const modifier = {\n    $set: {\n      readOnlyPadId,\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Adding readOnlyPadId captions pad: ${err}`);\n    }\n\n    return Logger.verbose(`Added readOnlyPadId captions pad=${padId} readOnlyPadId=${readOnlyPadId}`);\n  };\n\n  return Captions.update(selector, modifier, { multi: true }, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForCaptionsPadOnly } from '/imports/api/captions/server/helpers';\nimport handlePadCreate from './handlers/padCreate';\nimport handlePadUpdate from './handlers/padUpdate';\n\nRedisPubSub.on('PadCreateSysMsg', processForCaptionsPadOnly(handlePadCreate));\nRedisPubSub.on('PadUpdateSysMsg', processForCaptionsPadOnly(handlePadUpdate));\n","import { Meteor } from 'meteor/meteor';\nimport { hashFNV32a } from '/imports/api/common/server/helpers';\nimport { check } from 'meteor/check';\n\nconst CAPTIONS_CONFIG = Meteor.settings.public.captions;\nconst BASENAME = Meteor.settings.public.app.basename;\nconst APP = Meteor.settings.private.app;\nconst LOCALES_URL = `http://${APP.host}:${APP.port}${BASENAME}${APP.localesUrl}`;\nconst CAPTIONS = '_captions_';\nconst TOKEN = '$';\n\n// Captions padId should look like: {padId}_captions_{locale}\nconst generatePadId = (meetingId, locale) => {\n  const padId = `${hashFNV32a(meetingId, true)}${CAPTIONS}${locale}`;\n  return padId;\n};\n\nconst isCaptionsPad = (padId) => {\n  const splitPadId = padId.split(CAPTIONS);\n  return splitPadId.length === 2;\n};\n\nconst getDataFromChangeset = (changeset) => {\n  const splitChangeset = changeset.split(TOKEN);\n  if (splitChangeset.length > 1) {\n    splitChangeset.shift();\n    return splitChangeset.join(TOKEN);\n  }\n  return '';\n};\n\nconst isEnabled = () => CAPTIONS_CONFIG.enabled;\n\nconst getLocalesURL = () => LOCALES_URL;\n\nconst processForCaptionsPadOnly = fn => (message, ...args) => {\n  const { body } = message;\n  const { pad } = body;\n  const { id } = pad;\n\n  check(id, String);\n\n  if (isCaptionsPad(id)) return fn(message, ...args);\n  return () => {};\n};\n\nexport {\n  generatePadId,\n  processForCaptionsPadOnly,\n  isEnabled,\n  getLocalesURL,\n  getDataFromChangeset,\n};\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport takeOwnership from '/imports/api/captions/server/methods/takeOwnership';\nimport appendText from '/imports/api/captions/server/methods/appendText';\n\nMeteor.methods({\n  takeOwnership,\n  appendText,\n});\n","import Captions from '/imports/api/captions';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction captions() {\n  if (!this.userId) {\n    return Captions.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n  Logger.debug(`Publishing Captions for ${meetingId}`);\n\n  return Captions.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundCaptions = captions.bind(this);\n  return boundCaptions(...args);\n}\n\nMeteor.publish('captions', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Captions = new Mongo.Collection('captions');\n\nif (Meteor.isServer) {\n  Captions._ensureIndex({ meetingId: 1, padId: 1 });\n}\n\nexport default Captions;\n","import { check } from 'meteor/check';\nimport CursorStreamer from '/imports/api/cursor/server/streamer';\nimport Logger from '/imports/startup/server/logger';\nimport _ from 'lodash';\n\nconst { streamerLog } = Meteor.settings.private.serverLog;\n\nconst CURSOR_PROCCESS_INTERVAL = 30;\n\nconst cursorQueue = {};\n\nconst proccess = _.throttle(() => {\n  try {\n    Object.keys(cursorQueue).forEach((meetingId) => {\n      try {\n        const cursors = cursorQueue[meetingId];\n        delete cursorQueue[meetingId];\n        CursorStreamer(meetingId).emit('message', { meetingId, cursors });\n\n        if (streamerLog) {\n          Logger.debug(`CursorUpdate process for meeting ${meetingId} has finished`);\n        }\n      } catch (error) {\n        Logger.error(`Error while trying to send cursor streamer data for meeting ${meetingId}. ${error}`);\n      }\n    });\n  } catch (error) {\n    Logger.error(`Error while processing cursor queue. ${error}`);\n  }\n}, CURSOR_PROCCESS_INTERVAL);\n\nexport default function handleCursorUpdate({ header, body }, meetingId) {\n  const { userId } = header;\n  check(body, Object);\n\n  check(meetingId, String);\n  check(userId, String);\n\n  if (!cursorQueue[meetingId]) {\n    cursorQueue[meetingId] = {};\n  }\n\n  // overwrite since we dont care about the other positions\n  cursorQueue[meetingId][userId] = body;\n\n  proccess();\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\n\nexport default function publishCursorUpdate(meetingId, requesterUserId, payload) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SendCursorPositionPubMsg';\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleCursorUpdate from './handlers/cursorUpdate';\n\nRedisPubSub.on('SendCursorPositionEvtMsg', handleCursorUpdate);\n","import './eventHandlers';\nimport './methods';\n","import { Meteor } from 'meteor/meteor';\nimport publishCursorUpdate from './methods/publishCursorUpdate';\n\nMeteor.methods({\n  publishCursorUpdate,\n});\n","import Logger from '/imports/startup/server/logger';\nimport publishCursorUpdate from './methods/publishCursorUpdate';\n\nconst { streamerLog } = Meteor.settings.private.serverLog;\n\nexport function removeCursorStreamer(meetingId) {\n  Logger.info(`Removing Cursor streamer object for meeting ${meetingId}`);\n  delete Meteor.StreamerCentral.instances[`cursor-${meetingId}`];\n}\n\nexport function addCursorStreamer(meetingId) {\n  const streamer = new Meteor.Streamer(`cursor-${meetingId}`, { retransmit: false });\n  if (streamerLog) {\n    Logger.debug(`Cursor streamer created for meeting ${meetingId}`);\n  }\n\n  streamer.allowRead(function allowRead() {\n    if (streamerLog) {\n      Logger.debug(`Cursor streamer called allowRead for user ${this.userId} in meeting ${meetingId}`);\n    }\n    return this.userId && this.userId.includes(meetingId);\n  });\n\n  streamer.allowWrite(function allowWrite() {\n    return this.userId && this.userId.includes(meetingId);\n  });\n\n  streamer.on('publish', (message) => {\n    publishCursorUpdate(meetingId, message.userId, message.payload);\n  });\n}\n\nexport default function get(meetingId) {\n  return Meteor.StreamerCentral.instances[`cursor-${meetingId}`];\n}\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function destroyExternalVideo(meetingId) {\n  const streamName = `external-videos-${meetingId}`;\n\n  if (Meteor.StreamerCentral.instances[streamName]) {\n    Logger.info(`Destroying External Video streamer object for ${streamName}`);\n    delete Meteor.StreamerCentral.instances[streamName];\n  }\n}\n","import Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function emitExternalVideoEvent(messageName, ...rest) {\n  const { meetingId, requesterUserId: userId } = extractCredentials(this.userId);\n\n  const user = Users.findOne({ userId, meetingId });\n\n  if (user && user.presenter) {\n    const streamerName = `external-videos-${meetingId}`;\n    const streamer = Meteor.StreamerCentral.instances[streamerName];\n\n    if (streamer) {\n      streamer.emit(messageName, ...rest);\n    } else {\n      Logger.error(`External Video Streamer not found for meetingId: ${meetingId} userId: ${userId}`);\n    }\n  }\n}\n","import { extractCredentials } from '/imports/api/common/server/helpers';\nimport Logger from '/imports/startup/server/logger';\n\nconst allowRecentMessages = (eventName, message) => {\n\n  const {\n    userId,\n    meetingId,\n    time,\n    rate,\n    state,\n  } = message;\n\n  Logger.debug(`ExternalVideo Streamer auth allowed userId: ${userId}, meetingId: ${meetingId}, event: ${eventName}, time: ${time} rate: ${rate}, state: ${state}`);\n  return true;\n};\n\nexport default function initializeExternalVideo() {\n  const { meetingId } = extractCredentials(this.userId);\n\n  const streamName = `external-videos-${meetingId}`;\n  if (!Meteor.StreamerCentral.instances[streamName]) {\n    const streamer = new Meteor.Streamer(streamName);\n    streamer.allowRead('all');\n    streamer.allowWrite('none');\n    streamer.allowEmit(allowRecentMessages);\n    Logger.info(`Created External Video streamer for ${streamName}`);\n  } else {\n    Logger.debug(`External Video streamer is already created for ${streamName}`);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Meetings from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function startWatchingExternalVideo(options) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'StartExternalVideoMsg';\n\n  const { meetingId, requesterUserId: userId } = extractCredentials(this.userId);\n  const { externalVideoUrl } = options;\n\n  try {\n    check(meetingId, String);\n    check(userId, String);\n    check(externalVideoUrl, String);\n\n    const user = Users.findOne({ meetingId, userId, presenter: true }, { presenter: 1 });\n\n    if (!user) {\n      Logger.error(`Only presenters are allowed to start external video for a meeting. meeting=${meetingId} userId=${userId}`);\n      return;\n    }\n\n    Meetings.update({ meetingId }, { $set: { externalVideoUrl } });\n\n    const payload = { externalVideoUrl };\n\n    Logger.info(`User id=${userId} sharing an external video: ${externalVideoUrl} for meeting ${meetingId}`);\n\n    return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n  } catch (error) {\n    Logger.error(`Error on sharing an external video: ${externalVideoUrl} ${error}`);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport Meetings from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function stopWatchingExternalVideo(options) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'StopExternalVideoMsg';\n\n  const { meetingId, requesterUserId } = this.userId ? extractCredentials(this.userId) : options;\n\n  try {\n    check(meetingId, String);\n    check(requesterUserId, String);\n\n    const user = Users.findOne({\n      meetingId,\n      userId: requesterUserId,\n      presenter: true,\n    }, { presenter: 1 });\n\n    if (this.userId && !user) {\n      Logger.error(`Only presenters are allowed to stop external video for a meeting. meeting=${meetingId} userId=${requesterUserId}`);\n      return;\n    }\n\n    const meeting = Meetings.findOne({ meetingId });\n    if (!meeting || meeting.externalVideoUrl === null) return;\n\n    Meetings.update({ meetingId }, { $set: { externalVideoUrl: null } });\n    const payload = {};\n\n    Logger.info(`User id=${requesterUserId} stopped sharing an external video for meeting=${meetingId}`);\n\n    RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n  } catch (error) {\n    Logger.error(`Error on stop sharing an external video for meeting=${meetingId} ${error}`);\n  }\n}\n","import './methods';\n\n","import { Meteor } from 'meteor/meteor';\nimport startWatchingExternalVideo from './methods/startWatchingExternalVideo';\nimport stopWatchingExternalVideo from './methods/stopWatchingExternalVideo';\nimport initializeExternalVideo from './methods/initializeExternalVideo';\nimport emitExternalVideoEvent from './methods/emitExternalVideoEvent';\n\nMeteor.methods({\n  initializeExternalVideo,\n  startWatchingExternalVideo,\n  stopWatchingExternalVideo,\n  emitExternalVideoEvent,\n});\n","import { check } from 'meteor/check';\nimport addGroupChat from '../modifiers/addGroupChat';\n\nexport default function handleGroupChatCreated({ body }, meetingId) {\n  check(meetingId, String);\n  check(body, Object);\n\n  return addGroupChat(meetingId, body);\n}\n","import { check } from 'meteor/check';\nimport addGroupChat from '../modifiers/addGroupChat';\n\nexport default function handleGroupChatDestroyed({ body }, meetingId) {\n  check(meetingId, String);\n  check(body, Object);\n\n  return addGroupChat(meetingId, body);\n}\n","import { check } from 'meteor/check';\nimport addGroupChat from '../modifiers/addGroupChat';\n\nexport default function handleGroupChats({ body }, meetingId) {\n  const { chats } = body;\n\n  check(meetingId, String);\n  check(chats, Array);\n\n  const chatsAdded = [];\n\n  chats.forEach((chat) => {\n    chatsAdded.push(addGroupChat(meetingId, chat));\n  });\n\n  return chatsAdded;\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { CHAT_ACCESS_PRIVATE } from '/imports/api/group-chat';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function createGroupChat(receiver) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'CreateGroupChatReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(receiver, Object);\n\n  const payload = {\n    correlationId: `${requesterUserId}-${Date.now()}`,\n    msg: [],\n    users: [receiver.userId],\n    access: CHAT_ACCESS_PRIVATE,\n    name: receiver.name,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function createGroupChat() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const eventName = 'DestroyGroupChatReqMsg';\n\n  const payload = {\n    // TODO: Implement this together with #4988\n    // chats: Array[String],\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, eventName, meetingId, requesterUserId, payload);\n}\n","import flat from 'flat';\nimport { Match, check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport GroupChat from '/imports/api/group-chat';\n\nexport default function addGroupChat(meetingId, chat) {\n  check(meetingId, String);\n  check(chat, {\n    id: Match.Maybe(String),\n    chatId: Match.Maybe(String),\n    correlationId: Match.Maybe(String),\n    name: String,\n    access: String,\n    createdBy: Object,\n    users: Array,\n    msg: Match.Maybe(Array),\n  });\n\n  const chatDocument = {\n    meetingId,\n    chatId: chat.chatId || chat.id,\n    name: chat.name,\n    access: chat.access,\n    users: chat.users.map(u => u.id),\n    createdBy: chat.createdBy.id,\n  };\n\n  const selector = {\n    chatId: chatDocument.chatId,\n    meetingId,\n  };\n\n  const modifier = {\n    $set: flat(chatDocument, { safe: true }),\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding group-chat to collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n\n    if (insertedId) {\n      return Logger.info(`Added group-chat name=${chat.name} meetingId=${meetingId}`);\n    }\n\n    return Logger.info(`Upserted group-chat name=${chat.name} meetingId=${meetingId}`);\n  };\n\n  return GroupChat.upsert(selector, modifier, cb);\n}\n","import GroupChat from '/imports/api/group-chat';\nimport Logger from '/imports/startup/server/logger';\nimport clearGroupChatMsg from '/imports/api/group-chat-msg/server/modifiers/clearGroupChatMsg';\n\nexport default function clearGroupChat(meetingId) {\n  clearGroupChatMsg(meetingId);\n  return GroupChat.remove({ meetingId }, () => {\n    Logger.info(`Cleared GroupChat (${meetingId})`);\n  });\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleGroupChats from './handlers/groupChats';\nimport handleGroupChatCreated from './handlers/groupChatCreated';\nimport handleGroupChatDestroyed from './handlers/groupChatDestroyed';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\n\nRedisPubSub.on('GetGroupChatsRespMsg', processForHTML5ServerOnly(handleGroupChats));\nRedisPubSub.on('GroupChatCreatedEvtMsg', handleGroupChatCreated);\nRedisPubSub.on('GroupChatDestroyedEvtMsg', handleGroupChatDestroyed);\nRedisPubSub.on('SyncGetGroupChatsRespMsg', handleGroupChats);\n","import '/imports/api/group-chat-msg/server';\nimport './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport createGroupChat from './methods/createGroupChat';\nimport destroyGroupChat from './methods/destroyGroupChat';\n\nMeteor.methods({\n  createGroupChat,\n  destroyGroupChat,\n});\n","import GroupChat from '/imports/api/group-chat';\nimport { Meteor } from 'meteor/meteor';\n\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction groupChat() {\n  if (!this.userId) {\n    return GroupChat.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_CHAT_TYPE = CHAT_CONFIG.type_public;\n\n  Logger.debug(`Publishing group-chat for ${meetingId} ${requesterUserId}`);\n\n  return GroupChat.find({\n    $or: [\n      { meetingId, access: PUBLIC_CHAT_TYPE },\n      { meetingId, users: { $all: [requesterUserId] } },\n    ],\n\n  });\n}\n\nfunction publish(...args) {\n  const boundGroupChat = groupChat.bind(this);\n  return boundGroupChat(...args);\n}\n\nMeteor.publish('group-chat', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst GroupChat = new Mongo.Collection('group-chat');\n\nif (Meteor.isServer) {\n  GroupChat._ensureIndex({\n    meetingId: 1, chatId: 1, access: 1, users: 1,\n  });\n}\n\nexport default GroupChat;\n\nconst CHAT_ACCESS = {\n  PUBLIC: 'PUBLIC_ACCESS',\n  PRIVATE: 'PRIVATE_ACCESS',\n};\n\nexport const CHAT_ACCESS_PUBLIC = CHAT_ACCESS.PUBLIC;\nexport const CHAT_ACCESS_PRIVATE = CHAT_ACCESS.PRIVATE;\n","import { check } from 'meteor/check';\nimport clearGroupChatMsg from '../modifiers/clearGroupChatMsg';\n\nexport default function clearPublicChatHistory({ header, body }) {\n  const { meetingId } = header;\n  const { chatId } = body;\n\n  check(meetingId, String);\n  check(chatId, String);\n\n  return clearGroupChatMsg(meetingId, chatId);\n}\n","import { check } from 'meteor/check';\nimport addGroupChatMsg from '../modifiers/addGroupChatMsg';\n\nexport default function handleGroupChatMsgBroadcast({ body }, meetingId) {\n  const { chatId, msg } = body;\n\n  check(meetingId, String);\n  check(chatId, String);\n  check(msg, Object);\n\n  return addGroupChatMsg(meetingId, chatId, msg);\n}\n","import { Match, check } from 'meteor/check';\nimport addGroupChatMsg from '../modifiers/addGroupChatMsg';\n\nexport default function handleGroupChatsMsgs({ body }, meetingId) {\n  const { chatId, msgs, msg } = body;\n\n  check(meetingId, String);\n  check(chatId, String);\n  check(msgs, Match.Maybe(Array));\n  check(msg, Match.Maybe(Array));\n\n  const msgsAdded = [];\n\n  (msgs || msg).forEach((m) => {\n    msgsAdded.push(addGroupChatMsg(meetingId, chatId, m));\n  });\n\n  return msgsAdded;\n}\n","import { check } from 'meteor/check';\nimport startTyping from '../modifiers/startTyping';\n\nexport default function handleUserTyping({ body }, meetingId) {\n  const { chatId, userId } = body;\n\n  check(meetingId, String);\n  check(userId, String);\n  check(chatId, String);\n\n  startTyping(meetingId, userId, chatId);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function clearPublicChatHistory() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ClearPublicChatHistoryPubMsg';\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_GROUP_CHAT_ID = CHAT_CONFIG.public_group_id;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const payload = {\n    chatId: PUBLIC_GROUP_CHAT_ID,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport RegexWebUrl from '/imports/utils/regex-weburl';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst HTML_SAFE_MAP = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\n\nconst parseMessage = (message) => {\n  let parsedMessage = message || '';\n  parsedMessage = parsedMessage.trim();\n\n  // Replace <br/> with \\n\\r\n  parsedMessage = parsedMessage.replace(/<br\\s*[\\\\/]?>/gi, '\\n\\r');\n\n  // Sanitize. See: http://shebang.brandonmintern.com/foolproof-html-escaping-in-javascript/\n  parsedMessage = parsedMessage.replace(/[<>'\"]/g, c => HTML_SAFE_MAP[c]);\n\n  // Replace flash links to flash valid ones\n  parsedMessage = parsedMessage.replace(RegexWebUrl, \"<a href='event:$&'><u>$&</u></a>\");\n\n  return parsedMessage;\n};\n\nexport default function sendGroupChatMsg(chatId, message) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SendGroupChatMessageMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(message, Object);\n\n  const parsedMessage = parseMessage(message.message);\n\n  message.message = parsedMessage;\n\n  const payload = {\n    msg: message,\n    chatId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function startUserTyping(chatId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserTypingPubMsg';\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_GROUP_CHAT_ID = CHAT_CONFIG.public_group_id;\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(chatId, String);\n\n  const payload = {\n    chatId: chatId || PUBLIC_GROUP_CHAT_ID,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { UsersTyping } from '/imports/api/group-chat-msg';\nimport stopTyping from '../modifiers/stopTyping';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function stopUserTyping() {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const userTyping = UsersTyping.findOne({\n    meetingId,\n    userId: requesterUserId,\n  });\n\n  if (userTyping) {\n    stopTyping(meetingId, requesterUserId, true);\n  }\n}\n","import flat from 'flat';\nimport { Match, check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport { GroupChatMsg } from '/imports/api/group-chat-msg';\nimport { BREAK_LINE } from '/imports/utils/lineEndings';\n\nconst parseMessage = (message) => {\n  let parsedMessage = message || '';\n\n  // Replace \\r and \\n to <br/>\n  parsedMessage = parsedMessage.replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, `$1${BREAK_LINE}$2`);\n\n  // Replace flash links to html valid ones\n  parsedMessage = parsedMessage.split('<a href=\\'event:').join('<a target=\"_blank\" href=\\'');\n  parsedMessage = parsedMessage.split('<a href=\"event:').join('<a target=\"_blank\" href=\"');\n\n  return parsedMessage;\n};\n\nexport default function addGroupChatMsg(meetingId, chatId, msg) {\n  check(meetingId, String);\n  check(chatId, String);\n  check(msg, {\n    id: Match.Maybe(String),\n    timestamp: Number,\n    sender: Object,\n    color: String,\n    message: String,\n    correlationId: Match.Maybe(String),\n  });\n\n  const msgDocument = {\n    ...msg,\n    meetingId,\n    chatId,\n    message: parseMessage(msg.message),\n    sender: msg.sender.id,\n  };\n\n  const selector = {\n    meetingId,\n    chatId,\n    id: msg.id,\n  };\n\n  const modifier = {\n    $set: flat(msgDocument, { safe: true }),\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding group-chat-msg to collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n\n    if (insertedId) {\n      return Logger.info(`Added group-chat-msg msgId=${msg.id} chatId=${chatId} meetingId=${meetingId}`);\n    }\n\n    return Logger.info(`Upserted group-chat-msg msgId=${msg.id} chatId=${chatId} meetingId=${meetingId}`);\n  };\n\n  return GroupChatMsg.upsert(selector, modifier, cb);\n}\n","import { GroupChatMsg } from '/imports/api/group-chat-msg';\nimport Logger from '/imports/startup/server/logger';\nimport addGroupChatMsg from '/imports/api/group-chat-msg/server/modifiers/addGroupChatMsg';\n\nexport default function clearGroupChatMsg(meetingId, chatId) {\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_CHAT_SYSTEM_ID = CHAT_CONFIG.system_userid;\n  const PUBLIC_GROUP_CHAT_ID = CHAT_CONFIG.public_group_id;\n  const CHAT_CLEAR_MESSAGE = CHAT_CONFIG.system_messages_keys.chat_clear;\n\n  if (chatId) {\n    GroupChatMsg.remove({ meetingId, chatId }, () => {\n      Logger.info(`Cleared GroupChatMsg (${meetingId}, ${chatId})`);\n      const clearMsg = {\n        color: '0',\n        timestamp: Date.now(),\n        correlationId: `${PUBLIC_CHAT_SYSTEM_ID}-${Date.now()}`,\n        sender: {\n          id: PUBLIC_CHAT_SYSTEM_ID,\n          name: '',\n        },\n        message: CHAT_CLEAR_MESSAGE,\n      };\n      addGroupChatMsg(meetingId, PUBLIC_GROUP_CHAT_ID, clearMsg);\n    });\n    return true;\n  }\n\n  if (meetingId) {\n    return GroupChatMsg.remove({ meetingId }, () => {\n      Logger.info(`Cleared GroupChatMsg (${meetingId})`);\n    });\n  }\n\n  return GroupChatMsg.remove({ chatId: { $eq: PUBLIC_GROUP_CHAT_ID } }, () => {\n    Logger.info('Cleared GroupChatMsg (all)');\n  });\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport { UsersTyping } from '/imports/api/group-chat-msg';\nimport stopTyping from './stopTyping';\n\nconst TYPING_TIMEOUT = 5000;\n\nexport default function startTyping(meetingId, userId, chatId) {\n  check(meetingId, String);\n  check(userId, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const user = Users.findOne(selector);\n\n  const mod = {\n    meetingId,\n    userId,\n    name: user.name,\n    isTypingTo: chatId,\n    role: user.role,\n    time: (new Date()),\n  };\n\n  const typingUser = UsersTyping.findOne(selector, {\n    fields: {\n      time: 1,\n    },\n  });\n\n  if (typingUser) {\n    if (mod.time - typingUser.time <= TYPING_TIMEOUT - 100) return;\n  }\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Typing indicator update error: ${err}`);\n    }\n\n    Meteor.setTimeout(() => {\n      stopTyping(meetingId, userId);\n    }, TYPING_TIMEOUT);\n    return Logger.debug(`Typing indicator update for userId={${userId}} chatId={${chatId}}`);\n  };\n\n  return UsersTyping.upsert(selector, mod, cb);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport { UsersTyping } from '/imports/api/group-chat-msg';\n\nexport default function stopTyping(meetingId, userId, sendMsgInitiated = false) {\n  check(meetingId, String);\n  check(userId, String);\n  check(sendMsgInitiated, Boolean);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const user = UsersTyping.findOne(selector);\n  const stillTyping = !sendMsgInitiated && user && (new Date()) - user.time < 3000;\n  if (stillTyping) return;\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Stop user=${userId} typing indicator error: ${err}`);\n    }\n    return Logger.debug(`Stopped typing indicator for user=${userId}`);\n  };\n\n  UsersTyping.remove(selector, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleGroupChatsMsgs from './handlers/groupChatsMsgs';\nimport handleGroupChatMsgBroadcast from './handlers/groupChatMsgBroadcast';\nimport handleClearPublicGroupChat from './handlers/clearPublicGroupChat';\nimport handleUserTyping from './handlers/userTyping';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\n\nRedisPubSub.on('GetGroupChatMsgsRespMsg', processForHTML5ServerOnly(handleGroupChatsMsgs));\nRedisPubSub.on('GroupChatMessageBroadcastEvtMsg', handleGroupChatMsgBroadcast);\nRedisPubSub.on('ClearPublicChatHistoryEvtMsg', handleClearPublicGroupChat);\nRedisPubSub.on('SyncGetGroupChatMsgsRespMsg', handleGroupChatsMsgs);\nRedisPubSub.on('UserTypingEvtMsg', handleUserTyping);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport sendGroupChatMsg from './methods/sendGroupChatMsg';\nimport clearPublicChatHistory from './methods/clearPublicChatHistory';\nimport startUserTyping from './methods/startUserTyping';\nimport stopUserTyping from './methods/stopUserTyping';\n\nMeteor.methods({\n  sendGroupChatMsg,\n  clearPublicChatHistory,\n  startUserTyping,\n  stopUserTyping,\n});\n","import { GroupChatMsg, UsersTyping } from '/imports/api/group-chat-msg';\nimport { Meteor } from 'meteor/meteor';\n\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction groupChatMsg(chatsIds) {\n  if (!this.userId) {\n    return GroupChatMsg.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const CHAT_CONFIG = Meteor.settings.public.chat;\n  const PUBLIC_GROUP_CHAT_ID = CHAT_CONFIG.public_group_id;\n\n  Logger.debug(`Publishing group-chat-msg for ${meetingId} ${requesterUserId}`);\n\n  return GroupChatMsg.find({\n    $or: [\n      { meetingId, chatId: { $eq: PUBLIC_GROUP_CHAT_ID } },\n      { chatId: { $in: chatsIds } },\n    ],\n  });\n}\n\nfunction publish(...args) {\n  const boundGroupChat = groupChatMsg.bind(this);\n  return boundGroupChat(...args);\n}\n\nMeteor.publish('group-chat-msg', publish);\n\nfunction usersTyping() {\n  if (!this.userId) {\n    return UsersTyping.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing users-typing for ${meetingId} ${requesterUserId}`);\n\n  return UsersTyping.find({ meetingId });\n}\n\nfunction pubishUsersTyping(...args) {\n  const boundUsersTyping = usersTyping.bind(this);\n  return boundUsersTyping(...args);\n}\n\nMeteor.publish('users-typing', pubishUsersTyping);\n","import { Meteor } from 'meteor/meteor';\n\nconst GroupChatMsg = new Mongo.Collection('group-chat-msg');\nconst UsersTyping = new Mongo.Collection('users-typing');\n\nif (Meteor.isServer) {\n  GroupChatMsg._ensureIndex({ meetingId: 1, chatId: 1 });\n  UsersTyping._ensureIndex({ meetingId: 1, isTypingTo: 1 });\n}\n\nexport { GroupChatMsg, UsersTyping };\n","import { check } from 'meteor/check';\nimport setGuestStatus from '../modifiers/setGuestStatus';\n\nexport default function handleGuestApproved({ body }, meetingId) {\n  const { approvedBy, guests } = body;\n  check(meetingId, String);\n  check(approvedBy, String);\n  check(guests, Array);\n\n  return guests.forEach(guest => setGuestStatus(meetingId, guest.guest, guest.status, approvedBy));\n}\n","import stringHash from 'string-hash';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport GuestUsers from '/imports/api/guest-users/';\n\nconst COLOR_LIST = [\n  '#7b1fa2', '#6a1b9a', '#4a148c', '#5e35b1', '#512da8', '#4527a0',\n  '#311b92', '#3949ab', '#303f9f', '#283593', '#1a237e', '#1976d2', '#1565c0',\n  '#0d47a1', '#0277bd', '#01579b',\n];\n\nexport default function handleGuestsWaitingForApproval({ body }, meetingId) {\n  const { guests } = body;\n  check(guests, Array);\n  check(meetingId, String);\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding guest user to collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n    if (insertedId) {\n      return Logger.info(`Added guest user meeting=${meetingId}`);\n    }\n\n    return Logger.info(`Upserted guest user meeting=${meetingId}`);\n  };\n\n  return guests.map(guest => GuestUsers.upsert({\n    meetingId,\n    intId: guest.intId,\n  }, {\n    approved: false,\n    denied: false,\n    ...guest,\n    meetingId,\n    loginTime: new Date().getTime(),\n    color: COLOR_LIST[stringHash(guest.intId) % COLOR_LIST.length],\n  }, cb));\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst REDIS_CONFIG = Meteor.settings.private.redis;\nconst CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\nconst EVENT_NAME = 'GuestsWaitingApprovedMsg';\n\nexport default function allowPendingUsers(guests, status) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(guests, Array);\n  const mappedGuests = guests.map(guest => ({ status, guest: guest.intId }));\n\n  const payload = {\n    approvedBy: requesterUserId,\n    guests: mappedGuests,\n  };\n\n  Logger.info(`User=${requesterUserId} ${status} guests ${JSON.stringify(mappedGuests)}`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst REDIS_CONFIG = Meteor.settings.private.redis;\nconst CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\nconst EVENT_NAME = 'SetGuestPolicyCmdMsg';\n\nexport default function changeGuestPolicy(policyRule) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(policyRule, String);\n\n  const payload = {\n    setBy: requesterUserId,\n    policy: policyRule,\n  };\n\n  Logger.info(`User=${requesterUserId} change guest policy to ${policyRule}`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport GuestUsers from '/imports/api/guest-users';\nimport Logger from '/imports/startup/server/logger';\n\nconst GUEST_STATUS_ALLOW = 'ALLOW';\nconst GUEST_STATUS_DENY = 'DENY';\nexport default function setGuestStatus(meetingId, intId, status, approvedBy = null) {\n  check(meetingId, String);\n  check(intId, String);\n  check(status, String);\n\n  const selector = {\n    meetingId,\n    intId,\n  };\n\n  const modifier = {\n    $set: {\n      approved: status === GUEST_STATUS_ALLOW,\n      denied: status === GUEST_STATUS_DENY,\n      approvedBy,\n    },\n  };\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Updating status=${status} user=${intId}: ${err}`);\n    }\n\n    return Logger.info(`Updated status=${status} user=${intId} meeting=${meetingId}`);\n  };\n\n  return GuestUsers.update(selector, modifier, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\nimport handleGuestApproved from './handlers/guestApproved';\nimport handleGuestsWaitingForApproval from './handlers/guestsWaitingForApproval';\n\nRedisPubSub.on('GuestsWaitingForApprovalEvtMsg', processForHTML5ServerOnly(handleGuestsWaitingForApproval));\nRedisPubSub.on('GuestsWaitingApprovedEvtMsg', processForHTML5ServerOnly(handleGuestApproved));\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport allowPendingUsers from '/imports/api/guest-users/server/methods/allowPendingUsers';\nimport changeGuestPolicy from '/imports/api/guest-users/server/methods/changeGuestPolicy';\n\nMeteor.methods({\n  allowPendingUsers,\n  changeGuestPolicy,\n});\n","import GuestUsers from '/imports/api/guest-users/';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction guestUsers() {\n  if (!this.userId) {\n    return GuestUsers.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.info(`Publishing Slides for ${meetingId} ${requesterUserId}`);\n\n  return GuestUsers.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundSlides = guestUsers.bind(this);\n  return boundSlides(...args);\n}\n\nMeteor.publish('guestUser', publish);\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nconst GuestUsers = new Mongo.Collection('guestUsers');\n\nexport default GuestUsers;\n","import _ from 'lodash';\nimport { check } from 'meteor/check';\nimport LocalSettings from '/imports/api/local-settings';\nimport setChangedLocalSettings from '../modifiers/setChangedLocalSettings';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userChangedLocalSettings(settings) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  if (!meetingId || !requesterUserId) return;\n\n  check(settings, Object);\n\n  const userLocalSettings = LocalSettings\n    .findOne({ meetingId, userId: requesterUserId },\n      {\n        fields: { settings: 1 },\n      });\n\n  if (!userLocalSettings || !_.isEqual(userLocalSettings.settings, settings)) {\n    setChangedLocalSettings(meetingId, requesterUserId, settings);\n  }\n}\n","import LocalSettings from '/imports/api/local-settings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearLocalSettings(meetingId) {\n  return LocalSettings.remove({ meetingId }, () => {\n    Logger.info(`Cleared Local Settings (${meetingId})`);\n  });\n}\n","import { check } from 'meteor/check';\nimport LocalSettings from '/imports/api/local-settings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setChangedLocalSettings(meetingId, userId, settings) {\n  check(meetingId, String);\n  check(userId, String);\n  check(settings, Object);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      settings,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`${err}`);\n    }\n\n    if (numChanged) {\n      Logger.info(`Updated settings for user ${userId} on meeting ${meetingId}`);\n    }\n  };\n\n  return LocalSettings.upsert(selector, modifier, cb);\n}\n","import './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport userChangedLocalSettings from './methods/userChangedLocalSettings';\n\nMeteor.methods({\n  userChangedLocalSettings,\n});\n","import { Meteor } from 'meteor/meteor';\nimport LocalSettings from '/imports/api/local-settings';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction localSettings() {\n  if (!this.userId) {\n    return LocalSettings.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing local settings for user=${requesterUserId}`);\n\n  return LocalSettings.find({ meetingId, userId: requesterUserId });\n}\n\nfunction publish(...args) {\n  const boundLocalSettings = localSettings.bind(this);\n  return boundLocalSettings(...args);\n}\n\nMeteor.publish('local-settings', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst LocalSettings = new Mongo.Collection('local-settings');\n\nif (Meteor.isServer) {\n  LocalSettings._ensureIndex({\n    meetingId: 1, userId: 1,\n  });\n}\n\nexport default LocalSettings;\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nconst logClient = function (type, logDescription, logCode = 'was_not_provided', extraInfo = {}, userInfo = {}) {\n  const connectionId = this.connection.id;\n  const User = Users.findOne({ connectionId });\n  const logContents = {\n    logCode,\n    logDescription,\n    connectionId,\n    extraInfo,\n    userInfo,\n  };\n\n  if (User) { // TODO--\n    if ((userInfo.credentials && User.meetingId === userInfo.credentials.meetingId)\n      || ((userInfo.meetingId && User.meetingId === userInfo.meetingId))) {\n      logContents.extraInfo.validUser = 'valid';\n    } else {\n      logContents.extraInfo.validUser = 'invalid';\n    }\n  } else {\n    logContents.extraInfo.validUser = 'notFound';\n  }\n\n  // If I don't pass message, logs will start with `undefined`\n  Logger.log({ message: JSON.stringify(logContents), level: type });\n  // Logger.log({ message: 'client->server', level: type, logContents });\n};\n\nexport default logClient;\n","import './methods';\n","import { Meteor } from 'meteor/meteor';\nimport logClient from './methods/logClient';\n\nMeteor.methods({ logClient });\n","import handleMeetingCreation from './meetingCreation';\n\nexport default function handleGetAllMeetings({ body }) {\n  return handleMeetingCreation({ body });\n}\n","import { check } from 'meteor/check';\nimport addMeeting from '../modifiers/addMeeting';\n\nexport default function handleMeetingCreation({ body }) {\n  const meeting = body.props;\n  const durationInSecods = (meeting.durationProps.duration * 60);\n  meeting.durationProps.timeRemaining = durationInSecods;\n  check(meeting, Object);\n\n  return addMeeting(meeting);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\n\nimport destroyExternalVideo from '/imports/api/external-videos/server/methods/destroyExternalVideo';\nimport { removeAnnotationsStreamer } from '/imports/api/annotations/server/streamer';\nimport { removeCursorStreamer } from '/imports/api/cursor/server/streamer';\n\nexport default function handleMeetingDestruction({ body }) {\n  check(body, Object);\n  const { meetingId } = body;\n  check(meetingId, String);\n\n  destroyExternalVideo(meetingId);\n  removeAnnotationsStreamer(meetingId);\n  removeCursorStreamer(meetingId);\n\n  return RedisPubSub.destroyMeetingQueue(meetingId);\n}\n","import { check } from 'meteor/check';\nimport meetingHasEnded from '../modifiers/meetingHasEnded';\nimport Meetings from '/imports/api/meetings';\nimport Breakouts from '/imports/api/breakouts';\nimport Users from '/imports/api/users/';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function handleMeetingEnd({ body }) {\n  check(body, Object);\n  const { meetingId } = body;\n  check(meetingId, String);\n\n  const cb = (err, num, meetingType) => {\n    if (err) {\n      Logger.error(`${meetingType} ending error: ${err}`);\n      return;\n    }\n    if (num) {\n      Users.update({ meetingId },\n        { $set: { connectionStatus: 'offline' } },\n        (error, numAffected) => {\n          if (error) {\n            Logger.error(`Error marking ending ${meetingType} users as offline: ${meetingId} ${err}`);\n            return;\n          }\n\n          if (numAffected) {\n            Logger.info(`Success marking ending ${meetingType} users as offline: ${meetingId}`);\n          }\n        });\n      Meteor.setTimeout(() => { meetingHasEnded(meetingId); }, 10000);\n    }\n  };\n\n  Meetings.update({ meetingId },\n    { $set: { meetingEnded: true } },\n    (err, num) => { cb(err, num, 'Meeting'); });\n\n  Breakouts.update({ parentMeetingId: meetingId },\n    { $set: { meetingEnded: true } },\n    (err, num) => { cb(err, num, 'Breakout'); });\n}\n","import changeLockSettings from '../modifiers/changeLockSettings';\n\nexport default function handleLockSettingsInMeeting({ body }, meetingId) {\n  return changeLockSettings(meetingId, body);\n}\n","import { check } from 'meteor/check';\nimport { RecordMeetings } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function handleRecordingStatusChange({ body }, meetingId) {\n  const { recording } = body;\n  check(recording, Boolean);\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: { recording },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Changing record status: ${err}`);\n      return;\n    }\n\n    if (numChanged) {\n      Logger.info(`Changed meeting record status id=${meetingId} recording=${recording}`);\n    }\n  };\n\n  return RecordMeetings.upsert(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport { RecordMeetings } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function handleRecordingStatusChange({ body }, meetingId) {\n  const { time } = body;\n\n  check(meetingId, String);\n\n  check(body, {\n    time: Number,\n  });\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: { time },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      Logger.error(`Changing recording time: ${err}`);\n    }\n  };\n\n  return RecordMeetings.upsert(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport { MeetingTimeRemaining } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function handleTimeRemainingUpdate({ body }, meetingId) {\n  check(meetingId, String);\n\n  check(body, {\n    timeLeftInSec: Number,\n  });\n  const { timeLeftInSec } = body;\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      timeRemaining: timeLeftInSec,\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      Logger.error(`Changing recording time: ${err}`);\n    }\n  };\n\n  return MeetingTimeRemaining.upsert(selector, modifier, cb);\n}\n","import changeUserLock from '../modifiers/changeUserLock';\n\nexport default function handleLockSettingsInMeeting({ body }, meetingId) {\n  return changeUserLock(meetingId, body);\n}\n","import changeWebcamOnlyModerator from '../modifiers/webcamOnlyModerator';\n\nexport default function handleChangeWebcamOnlyModerator({ body }, meetingId) {\n  return changeWebcamOnlyModerator(meetingId, body);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function endMeeting() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'LogoutAndEndMeetingCmdMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const payload = {\n    userId: requesterUserId,\n  };\n  Logger.verbose(`Meeting '${meetingId}' is destroyed by '${requesterUserId}'`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function toggleLockSettings(lockSettingsProps) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ChangeLockSettingsInMeetingCmdMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(lockSettingsProps, {\n    disableCam: Boolean,\n    disableMic: Boolean,\n    disablePrivateChat: Boolean,\n    disablePublicChat: Boolean,\n    disableNote: Boolean,\n    hideUserList: Boolean,\n    lockedLayout: Boolean,\n    lockOnJoin: Boolean,\n    lockOnJoinConfigurable: Boolean,\n    setBy: Match.Maybe(String),\n  });\n\n  const {\n    disableCam,\n    disableMic,\n    disablePrivateChat: disablePrivChat,\n    disablePublicChat: disablePubChat,\n    disableNote,\n    hideUserList,\n    lockedLayout,\n    lockOnJoin,\n    lockOnJoinConfigurable,\n  } = lockSettingsProps;\n\n  const payload = {\n    disableCam,\n    disableMic,\n    disablePrivChat,\n    disablePubChat,\n    disableNote,\n    hideUserList,\n    lockedLayout,\n    lockOnJoin,\n    lockOnJoinConfigurable,\n    setBy: requesterUserId,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import Logger from '/imports/startup/server/logger';\nimport { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { RecordMeetings } from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function toggleRecording() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const ROLE_MODERATOR = Meteor.settings.public.user.role_moderator;\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const EVENT_NAME = 'SetRecordingStatusCmdMsg';\n\n  let meetingRecorded;\n  let allowedToRecord;\n\n  const recordObject = RecordMeetings.findOne({ meetingId });\n\n  if (recordObject != null) {\n    const {\n      allowStartStopRecording,\n      recording,\n      record,\n    } = recordObject;\n\n    meetingRecorded = recording;\n    allowedToRecord = record && allowStartStopRecording; // TODO-- remove some day\n  }\n\n  const payload = {\n    recording: !meetingRecorded,\n    setBy: requesterUserId,\n  };\n\n  const selector = {\n    meetingId,\n    userId: requesterUserId,\n  };\n  const user = Users.findOne(selector);\n\n  if (allowedToRecord && !!user && user.role === ROLE_MODERATOR) {\n    Logger.info(`Setting the record parameter to ${!meetingRecorded} for ${meetingId} by ${requesterUserId}`);\n    return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n  }\n  return null;\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '../../../common/server/helpers';\n\nexport default function toggleWebcamsOnlyForModerator(webcamsOnlyForModerator) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UpdateWebcamsOnlyForModeratorCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(webcamsOnlyForModerator, Boolean);\n\n  const payload = {\n    webcamsOnlyForModerator,\n    setBy: requesterUserId,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\n\nexport default function transferUser(fromMeetingId, toMeetingId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'TransferUserToMeetingRequestMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const payload = {\n    fromMeetingId,\n    toMeetingId,\n    userId: requesterUserId,\n  };\n\n  Logger.verbose(`userId ${requesterUserId} was transferred from \n  meeting ${fromMeetingId}' to meeting '${toMeetingId}`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import flat from 'flat';\nimport {\n  check,\n  Match,\n} from 'meteor/check';\nimport SanitizeHTML from 'sanitize-html';\nimport Meetings, { RecordMeetings } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\nimport createNote from '/imports/api/note/server/methods/createNote';\nimport createCaptions from '/imports/api/captions/server/methods/createCaptions';\nimport { addAnnotationsStreamer } from '/imports/api/annotations/server/streamer';\nimport { addCursorStreamer } from '/imports/api/cursor/server/streamer';\nimport BannedUsers from '/imports/api/users/server/store/bannedUsers';\n\nexport default function addMeeting(meeting) {\n  const meetingId = meeting.meetingProp.intId;\n\n  check(meetingId, String);\n  check(meeting, {\n    breakoutProps: {\n      sequence: Number,\n      freeJoin: Boolean,\n      breakoutRooms: Array,\n      parentId: String,\n      enabled: Boolean,\n      record: Boolean,\n      privateChatEnabled: Boolean,\n    },\n    meetingProp: {\n      intId: String,\n      extId: String,\n      isBreakout: Boolean,\n      name: String,\n    },\n    usersProp: {\n      webcamsOnlyForModerator: Boolean,\n      guestPolicy: String,\n      maxUsers: Number,\n      allowModsToUnmuteUsers: Boolean,\n    },\n    durationProps: {\n      createdTime: Number,\n      duration: Number,\n      createdDate: String,\n      maxInactivityTimeoutMinutes: Number,\n      warnMinutesBeforeMax: Number,\n      meetingExpireIfNoUserJoinedInMinutes: Number,\n      meetingExpireWhenLastUserLeftInMinutes: Number,\n      userInactivityInspectTimerInMinutes: Number,\n      userInactivityThresholdInMinutes: Number,\n      userActivitySignResponseDelayInMinutes: Number,\n      timeRemaining: Number,\n    },\n    welcomeProp: {\n      welcomeMsg: String,\n      modOnlyMessage: String,\n      welcomeMsgTemplate: String,\n    },\n    recordProp: Match.ObjectIncluding({\n      allowStartStopRecording: Boolean,\n      autoStartRecording: Boolean,\n      record: Boolean,\n    }),\n    password: {\n      viewerPass: String,\n      moderatorPass: String,\n    },\n    voiceProp: {\n      voiceConf: String,\n      dialNumber: String,\n      telVoice: String,\n      muteOnStart: Boolean,\n    },\n    screenshareProps: {\n      red5ScreenshareIp: String,\n      red5ScreenshareApp: String,\n      screenshareConf: String,\n    },\n    metadataProp: Object,\n    lockSettingsProps: {\n      disableCam: Boolean,\n      disableMic: Boolean,\n      disablePrivateChat: Boolean,\n      disablePublicChat: Boolean,\n      disableNote: Boolean,\n      hideUserList: Boolean,\n      lockOnJoin: Boolean,\n      lockOnJoinConfigurable: Boolean,\n      lockedLayout: Boolean,\n    },\n  });\n\n  const {\n    recordProp,\n    ...restProps\n  } = meeting;\n\n  const newMeeting = restProps;\n\n  const selector = {\n    meetingId,\n  };\n\n  newMeeting.lockSettingsProps = Object.assign(meeting.lockSettingsProps, { setBy: 'temp' });\n\n  const meetingEnded = false;\n\n  let { welcomeMsg } = newMeeting.welcomeProp;\n\n  const sanitizeTextInChat = original => SanitizeHTML(original, {\n    allowedTags: ['a', 'b', 'br', 'i', 'img', 'li', 'small', 'span', 'strong', 'u', 'ul'],\n    allowedAttributes: {\n      a: ['href', 'name', 'target'],\n      img: ['src', 'width', 'height'],\n    },\n    allowedSchemes: ['https'],\n  });\n\n  const sanitizedWelcomeText = sanitizeTextInChat(welcomeMsg);\n  welcomeMsg = sanitizedWelcomeText.replace(\n    'href=\"event:',\n    'href=\"',\n  );\n\n  const insertBlankTarget = (s, i) => `${s.substr(0, i)} target=\"_blank\"${s.substr(i)}`;\n  const linkWithoutTarget = new RegExp('<a href=\"(.*?)\">', 'g');\n  linkWithoutTarget.test(welcomeMsg);\n\n  if (linkWithoutTarget.lastIndex > 0) {\n    welcomeMsg = insertBlankTarget(\n      welcomeMsg,\n      linkWithoutTarget.lastIndex - 1,\n    );\n  }\n\n  newMeeting.welcomeProp.welcomeMsg = welcomeMsg;\n\n  // note: as of July 2020 `modOnlyMessage` is not published to the client side.\n  // We are sanitizing this data simply to prevent future potential usage\n  // At the moment `modOnlyMessage` is obtained from client side as a response to Enter API\n  newMeeting.welcomeProp.modOnlyMessage = sanitizeTextInChat(newMeeting.welcomeProp.modOnlyMessage);\n\n  const modifier = {\n    $set: Object.assign({\n      meetingId,\n      meetingEnded,\n      publishedPoll: false,\n    }, flat(newMeeting, {\n      safe: true,\n    })),\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Adding meeting to collection: ${err}`);\n      return;\n    }\n\n    const {\n      insertedId,\n    } = numChanged;\n\n    if (insertedId) {\n      Logger.info(`Added meeting id=${meetingId}`);\n      // TODO: Here we call Etherpad API to create this meeting notes. Is there a\n      // better place we can run this post-creation routine?\n      createNote(meetingId);\n      createCaptions(meetingId);\n      BannedUsers.init(meetingId);\n    }\n\n    if (numChanged) {\n      Logger.info(`Upserted meeting id=${meetingId}`);\n    }\n  };\n\n  const cbRecord = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Adding record prop to collection: ${err}`);\n      return;\n    }\n\n    const {\n      insertedId,\n    } = numChanged;\n\n    if (insertedId) {\n      Logger.info(`Added record prop id=${meetingId}`);\n    }\n\n    if (numChanged) {\n      Logger.info(`Upserted record prop id=${meetingId}`);\n    }\n  };\n\n  RecordMeetings.upsert(selector, {\n    meetingId,\n    ...recordProp,\n  }, cbRecord);\n\n  addAnnotationsStreamer(meetingId);\n  addCursorStreamer(meetingId);\n\n  return Meetings.upsert(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport Meetings from '/imports/api/meetings';\nimport { check } from 'meteor/check';\n\nexport default function changeLockSettings(meetingId, payload) {\n  check(meetingId, String);\n  check(payload, {\n    disableCam: Boolean,\n    disableMic: Boolean,\n    disablePrivChat: Boolean,\n    disablePubChat: Boolean,\n    disableNote: Boolean,\n    hideUserList: Boolean,\n    lockedLayout: Boolean,\n    lockOnJoin: Boolean,\n    lockOnJoinConfigurable: Boolean,\n    setBy: Match.Maybe(String),\n  });\n\n  const {\n    disableCam,\n    disableMic,\n    disablePrivChat,\n    disablePubChat,\n    disableNote,\n    hideUserList,\n    lockedLayout,\n    lockOnJoin,\n    lockOnJoinConfigurable,\n    setBy,\n  } = payload;\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      lockSettingsProps: {\n        disableCam,\n        disableMic,\n        disablePrivateChat: disablePrivChat,\n        disablePublicChat: disablePubChat,\n        disableNote,\n        hideUserList,\n        lockedLayout,\n        lockOnJoin,\n        lockOnJoinConfigurable,\n        setBy,\n      },\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Changing meeting={${meetingId}} lock settings: ${err}`);\n    }\n\n    if (!numChanged) {\n      return Logger.info(`meeting={${meetingId}} lock settings were not updated`);\n    }\n\n    return Logger.info(`Changed meeting={${meetingId}} updated lock settings`);\n  };\n\n  return Meetings.upsert(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport { check } from 'meteor/check';\n\nexport default function changeUserLock(meetingId, payload) {\n  check(meetingId, String);\n  check(payload, {\n    userId: String,\n    locked: Boolean,\n    lockedBy: String,\n  });\n\n  const { userId, locked, lockedBy } = payload;\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      locked,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Changing user lock setting: ${err}`);\n    }\n\n    if (!numChanged) {\n      return Logger.info(`User's userId=${userId} lock status wasn't updated`);\n    }\n\n    return Logger.info(`User's userId=${userId} lock status was changed to: ${locked} by user userId=${lockedBy}`);\n  };\n\n  return Users.update(selector, modifier, cb);\n}\n","import { RecordMeetings } from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function meetingHasEnded(meetingId) {\n  return RecordMeetings.remove({ meetingId }, () => Logger.info(`Cleared record prop from meeting with id ${meetingId}`));\n}\n","import Meetings from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nimport { removeAnnotationsStreamer } from '/imports/api/annotations/server/streamer';\nimport { removeCursorStreamer } from '/imports/api/cursor/server/streamer';\n\nimport clearUsers from '/imports/api/users/server/modifiers/clearUsers';\nimport clearUsersSettings from '/imports/api/users-settings/server/modifiers/clearUsersSettings';\nimport clearGroupChat from '/imports/api/group-chat/server/modifiers/clearGroupChat';\nimport clearBreakouts from '/imports/api/breakouts/server/modifiers/clearBreakouts';\nimport clearAnnotations from '/imports/api/annotations/server/modifiers/clearAnnotations';\nimport clearSlides from '/imports/api/slides/server/modifiers/clearSlides';\nimport clearPolls from '/imports/api/polls/server/modifiers/clearPolls';\nimport clearCaptions from '/imports/api/captions/server/modifiers/clearCaptions';\nimport clearPresentationPods from '/imports/api/presentation-pods/server/modifiers/clearPresentationPods';\nimport clearVoiceUsers from '/imports/api/voice-users/server/modifiers/clearVoiceUsers';\nimport clearUserInfo from '/imports/api/users-infos/server/modifiers/clearUserInfo';\nimport clearNote from '/imports/api/note/server/modifiers/clearNote';\nimport clearNetworkInformation from '/imports/api/network-information/server/modifiers/clearNetworkInformation';\nimport clearLocalSettings from '/imports/api/local-settings/server/modifiers/clearLocalSettings';\nimport clearRecordMeeting from './clearRecordMeeting';\nimport clearVoiceCallStates from '/imports/api/voice-call-states/server/modifiers/clearVoiceCallStates';\nimport clearVideoStreams from '/imports/api/video-streams/server/modifiers/clearVideoStreams';\nimport BannedUsers from '/imports/api/users/server/store/bannedUsers';\n\nexport default function meetingHasEnded(meetingId) {\n  removeAnnotationsStreamer(meetingId);\n  removeCursorStreamer(meetingId);\n\n  return Meetings.remove({ meetingId }, () => {\n    clearCaptions(meetingId);\n    clearGroupChat(meetingId);\n    clearPresentationPods(meetingId);\n    clearBreakouts(meetingId);\n    clearPolls(meetingId);\n    clearAnnotations(meetingId);\n    clearSlides(meetingId);\n    clearUsers(meetingId);\n    clearUsersSettings(meetingId);\n    clearVoiceUsers(meetingId);\n    clearUserInfo(meetingId);\n    clearNote(meetingId);\n    clearNetworkInformation(meetingId);\n    clearLocalSettings(meetingId);\n    clearRecordMeeting(meetingId);\n    clearVoiceCallStates(meetingId);\n    clearVideoStreams(meetingId);\n    BannedUsers.delete(meetingId);\n\n    return Logger.info(`Cleared Meetings with id ${meetingId}`);\n  });\n}\n","import Meetings from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\n\nexport default function setPublishedPoll(meetingId, isPublished) {\n  check(meetingId, String);\n  check(isPublished, Boolean);\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      publishedPoll: isPublished,\n    },\n  };\n\n  const cb = (err) => {\n    if (err != null) {\n      return Logger.error(`Setting publishedPoll=${isPublished} for meetingId=${meetingId}`);\n    }\n\n    return Logger.info(`Set publishedPoll=${isPublished} in meeitingId=${meetingId}`);\n  };\n\n  return Meetings.upsert(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport Meetings from '/imports/api/meetings';\nimport { check } from 'meteor/check';\n\nexport default function changeWebcamOnlyModerator(meetingId, payload) {\n  check(meetingId, String);\n  check(payload, {\n    webcamsOnlyForModerator: Boolean,\n    setBy: String,\n  });\n  const { webcamsOnlyForModerator } = payload;\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      'usersProp.webcamsOnlyForModerator': webcamsOnlyForModerator,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Changwing meeting={${meetingId}} webcam Only for Moderator: ${err}`);\n    }\n\n    if (!numChanged) {\n      return Logger.info(`meeting={${meetingId}} webcam Only for Moderator were not updated`);\n    }\n\n    return Logger.info(`Changed meeting={${meetingId}} updated webcam Only for Moderator`);\n  };\n\n  return Meetings.upsert(selector, modifier, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleMeetingCreation from './handlers/meetingCreation';\nimport handleGetAllMeetings from './handlers/getAllMeetings';\nimport handleMeetingEnd from './handlers/meetingEnd';\nimport handleMeetingDestruction from './handlers/meetingDestruction';\nimport handleMeetingLocksChange from './handlers/meetingLockChange';\nimport handleUserLockChange from './handlers/userLockChange';\nimport handleRecordingStatusChange from './handlers/recordingStatusChange';\nimport handleRecordingTimerChange from './handlers/recordingTimerChange';\nimport handleTimeRemainingUpdate from './handlers/timeRemainingUpdate';\nimport handleChangeWebcamOnlyModerator from './handlers/webcamOnlyModerator';\n\nRedisPubSub.on('MeetingCreatedEvtMsg', handleMeetingCreation);\nRedisPubSub.on('SyncGetMeetingInfoRespMsg', handleGetAllMeetings);\nRedisPubSub.on('MeetingEndingEvtMsg', handleMeetingEnd);\nRedisPubSub.on('MeetingDestroyedEvtMsg', handleMeetingDestruction);\nRedisPubSub.on('LockSettingsInMeetingChangedEvtMsg', handleMeetingLocksChange);\nRedisPubSub.on('UserLockedInMeetingEvtMsg', handleUserLockChange);\nRedisPubSub.on('RecordingStatusChangedEvtMsg', handleRecordingStatusChange);\nRedisPubSub.on('UpdateRecordingTimerEvtMsg', handleRecordingTimerChange);\nRedisPubSub.on('WebcamsOnlyForModeratorChangedEvtMsg', handleChangeWebcamOnlyModerator);\nRedisPubSub.on('GetLockSettingsRespMsg', handleMeetingLocksChange);\nRedisPubSub.on('MeetingTimeRemainingUpdateEvtMsg', handleTimeRemainingUpdate);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport endMeeting from './methods/endMeeting';\nimport toggleRecording from './methods/toggleRecording';\nimport transferUser from './methods/transferUser';\nimport toggleLockSettings from './methods/toggleLockSettings';\nimport toggleWebcamsOnlyForModerator from './methods/toggleWebcamsOnlyForModerator';\n\nMeteor.methods({\n  endMeeting,\n  toggleRecording,\n  toggleLockSettings,\n  transferUser,\n  toggleWebcamsOnlyForModerator,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Meetings, { RecordMeetings, MeetingTimeRemaining } from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst ROLE_MODERATOR = Meteor.settings.public.user.role_moderator;\n\nfunction meetings(role) {\n  if (!this.userId) {\n    return Meetings.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing meeting =${meetingId} ${requesterUserId}`);\n\n  const selector = {\n    $or: [\n      { meetingId },\n    ],\n  };\n\n  const User = Users.findOne({ userId: requesterUserId, meetingId }, { fields: { role: 1 } });\n  if (!!User && User.role === ROLE_MODERATOR) {\n    selector.$or.push({\n      'meetingProp.isBreakout': true,\n      'breakoutProps.parentId': meetingId,\n    });\n  }\n\n  const options = {\n    fields: {\n      password: false,\n      'welcomeProp.modOnlyMessage': false,\n    },\n  };\n\n  return Meetings.find(selector, options);\n}\n\nfunction publish(...args) {\n  const boundMeetings = meetings.bind(this);\n  return boundMeetings(...args);\n}\n\nMeteor.publish('meetings', publish);\n\nfunction recordMeetings() {\n  if (!this.userId) {\n    return RecordMeetings.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  return RecordMeetings.find({ meetingId });\n}\nfunction recordPublish(...args) {\n  const boundRecordMeetings = recordMeetings.bind(this);\n  return boundRecordMeetings(...args);\n}\n\nMeteor.publish('record-meetings', recordPublish);\n\nfunction meetingTimeRemaining() {\n  if (!this.userId) {\n    return MeetingTimeRemaining.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  return MeetingTimeRemaining.find({ meetingId });\n}\nfunction timeRemainingPublish(...args) {\n  const boundtimeRemaining = meetingTimeRemaining.bind(this);\n  return boundtimeRemaining(...args);\n}\n\nMeteor.publish('meeting-time-remaining', timeRemainingPublish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Meetings = new Mongo.Collection('meetings');\nconst RecordMeetings = new Mongo.Collection('record-meetings');\nconst MeetingTimeRemaining = new Mongo.Collection('meeting-time-remaining');\n\nif (Meteor.isServer) {\n  // types of queries for the meetings:\n  // 1. meetingId\n\n  Meetings._ensureIndex({ meetingId: 1 });\n  RecordMeetings._ensureIndex({ meetingId: 1 });\n  MeetingTimeRemaining._ensureIndex({ meetingId: 1 });\n}\n\nexport {\n  RecordMeetings,\n  MeetingTimeRemaining,\n};\nexport default Meetings;\n","import { check } from 'meteor/check';\nimport NetworkInformation from '/imports/api/network-information';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userInstabilityDetected(sender) {\n  const { meetingId, requesterUserId: receiver } = extractCredentials(this.userId);\n  check(sender, String);\n\n  const payload = {\n    time: new Date().getTime(),\n    meetingId,\n    receiver,\n    sender,\n  };\n\n  Logger.debug(`Receiver ${receiver} reported a network instability in meeting ${meetingId}`);\n\n  return NetworkInformation.insert(payload);\n}\n","import NetworkInformation from '/imports/api/network-information';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearNetworkInformation(meetingId) {\n  if (meetingId) {\n    return NetworkInformation.remove({ meetingId }, () => {\n      Logger.info(`Cleared Network Information (${meetingId})`);\n    });\n  }\n\n  return NetworkInformation.remove({}, () => {\n    Logger.info('Cleared Network Information (all)');\n  });\n}\n","import './methods';\nimport './publisher';\n","import { Meteor } from 'meteor/meteor';\nimport userInstabilityDetected from './methods/userInstabilityDetected';\n\nMeteor.methods({\n  userInstabilityDetected,\n});\n","import { Meteor } from 'meteor/meteor';\nimport NetworkInformation from '/imports/api/network-information';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction networkInformation() {\n  if (!this.userId) {\n    return NetworkInformation.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  return NetworkInformation.find({\n    meetingId,\n  });\n}\n\nfunction publish(...args) {\n  const boundNetworkInformation = networkInformation.bind(this);\n\n  return boundNetworkInformation(...args);\n}\n\nMeteor.publish('network-information', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst NetworkInformation = new Mongo.Collection('network-information');\n\nif (Meteor.isServer) {\n  NetworkInformation._ensureIndex({ meetingId: 1 });\n}\n\nexport default NetworkInformation;\n","import { check } from 'meteor/check';\nimport updateNote from '/imports/api/note/server/modifiers/updateNote';\n\nexport default function handlePadUpdate({ body }) {\n  const { pad, revs } = body;\n  const { id } = pad;\n\n  check(id, String);\n  check(revs, Number);\n\n  updateNote(id, revs);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport {\n  generateNoteId,\n  createPadURL,\n  getReadOnlyIdURL,\n  isEnabled,\n  getDataFromResponse,\n} from '/imports/api/note/server/helpers';\nimport addNote from '/imports/api/note/server/modifiers/addNote';\nimport axios from 'axios';\n\nexport default function createNote(meetingId) {\n  // Avoid note creation if this feature is disabled\n  if (!isEnabled()) {\n    Logger.warn(`Notes are disabled for ${meetingId}`);\n    return;\n  }\n\n  check(meetingId, String);\n\n  const noteId = generateNoteId(meetingId);\n\n  const createURL = createPadURL(noteId);\n  axios({\n    method: 'get',\n    url: createURL,\n    responseType: 'json',\n  }).then((responseOuter) => {\n    const { status } = responseOuter;\n    if (status !== 200) {\n      Logger.error(`Could not get note info for ${meetingId} ${status}`);\n    }\n    const readOnlyURL = getReadOnlyIdURL(noteId);\n    axios({\n      method: 'get',\n      url: readOnlyURL,\n      responseType: 'json',\n    }).then((response) => {\n      const readOnlyNoteId = getDataFromResponse(response.data, 'readOnlyID');\n      if (readOnlyNoteId) {\n        addNote(meetingId, noteId, readOnlyNoteId);\n      } else {\n        Logger.error(`Could not get note readOnlyID for ${meetingId}`);\n      }\n    }).catch(error => Logger.error(`Could not get note readOnlyID for ${meetingId}: ${error}`));\n  }).catch(error => Logger.error(`Could not create note for ${meetingId}: ${error}`));\n}\n","import { check } from 'meteor/check';\nimport Note from '/imports/api/note';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function addNote(meetingId, noteId, readOnlyNoteId) {\n  check(meetingId, String);\n  check(noteId, String);\n  check(readOnlyNoteId, String);\n\n  const selector = {\n    meetingId,\n    noteId,\n  };\n\n  const modifier = {\n    meetingId,\n    noteId,\n    readOnlyNoteId,\n    revs: 0,\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding note to the collection: ${err}`);\n    }\n\n    if (numChanged) {\n      return Logger.info(`Added note id=${noteId} readOnlyId=${readOnlyNoteId} meeting=${meetingId}`);\n    }\n\n    return Logger.info(`Upserted note id=${noteId} readOnlyId=${readOnlyNoteId} meeting=${meetingId}`);\n  };\n\n  return Note.upsert(selector, modifier, cb);\n}\n","import Note from '/imports/api/note';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearNote(meetingId) {\n  if (meetingId) {\n    return Note.remove({ meetingId }, () => {\n      Logger.info(`Cleared Note (${meetingId})`);\n    });\n  }\n\n  return Note.remove({}, () => {\n    Logger.info('Cleared Note (all)');\n  });\n}\n","import Note from '/imports/api/note';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\n\nexport default function updateNote(noteId, revs) {\n  check(noteId, String);\n  check(revs, Number);\n\n  const selector = {\n    noteId,\n  };\n\n  const modifier = {\n    $set: {\n      revs,\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Updating note pad: ${err}`);\n    }\n\n    return Logger.verbose(`Update note pad=${noteId} revs=${revs}`);\n  };\n\n  return Note.update(selector, modifier, { multi: true }, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForNotePadOnly } from '/imports/api/note/server/helpers';\nimport handlePadUpdate from './handlers/padUpdate';\n\nRedisPubSub.on('PadUpdateSysMsg', processForNotePadOnly(handlePadUpdate));\n","import { Meteor } from 'meteor/meteor';\nimport { hashFNV32a } from '/imports/api/common/server/helpers';\n\nconst ETHERPAD = Meteor.settings.private.etherpad;\nconst NOTE_CONFIG = Meteor.settings.public.note;\nconst BASE_URL = `http://${ETHERPAD.host}:${ETHERPAD.port}/api/${ETHERPAD.version}`;\nconst TOKEN = '_';\n\nconst createPadURL = padId => `${BASE_URL}/createPad?apikey=${ETHERPAD.apikey}&padID=${padId}`;\n\nconst getReadOnlyIdURL = padId => `${BASE_URL}/getReadOnlyID?apikey=${ETHERPAD.apikey}&padID=${padId}`;\n\nconst appendTextURL = (padId, text) => `${BASE_URL}/appendText?apikey=${ETHERPAD.apikey}&padID=${padId}&text=${encodeURIComponent(text)}`;\n\nconst generateNoteId = (meetingId) => {\n  const noteId = hashFNV32a(meetingId, true);\n  return noteId;\n};\n\nconst isEnabled = () => NOTE_CONFIG.enabled;\n\nconst getDataFromResponse = (data, key) => {\n  if (data) {\n    const innerData = data.data;\n    if (innerData && innerData[key]) {\n      return innerData[key];\n    }\n  }\n  return null;\n};\n\nconst isNotePad = padId => padId.search(TOKEN);\n\nconst processForNotePadOnly = fn => (message, ...args) => {\n  const { body } = message;\n  const { pad } = body;\n  const { id } = pad;\n\n  check(id, String);\n\n  if (isNotePad(id)) return fn(message, ...args);\n  return () => {};\n};\n\nexport {\n  generateNoteId,\n  createPadURL,\n  getReadOnlyIdURL,\n  isEnabled,\n  getDataFromResponse,\n  appendTextURL,\n  processForNotePadOnly,\n};\n","import './publishers';\nimport './eventHandlers';\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport Note from '/imports/api/note';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction note() {\n  if (!this.userId) {\n    return Note.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.info(`Publishing note for ${meetingId} ${requesterUserId}`);\n\n  return Note.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundNote = note.bind(this);\n  return boundNote(...args);\n}\n\nMeteor.publish('note', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Note = new Mongo.Collection('note');\n\nif (Meteor.isServer) {\n  Note._ensureIndex({ meetingId: 1, noteId: 1 });\n}\n\nexport default Note;\n","import Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function ping() {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const selector = {\n    meetingId,\n    userId: requesterUserId,\n  };\n\n  const modifier = {\n    $set: {\n      lastPing: Date.now(),\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Error updating lastPing for ${requesterUserId}: ${err}`);\n    }\n  };\n\n  return Users.update(selector, modifier, cb);\n}\n","import './publishers';\nimport './methods';\n","import { Meteor } from 'meteor/meteor';\nimport ping from './methods/ping';\n\nMeteor.methods({\n  ping,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport _ from 'lodash';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst COLLECTION_NAME = 'ping-pong';\nconst INTERVAL_IN_SETTINGS = (Meteor.settings.public.pingPong.clearUsersInSeconds) * 1000;\nconst INTERVAL_TIME = INTERVAL_IN_SETTINGS < 10000 ? 10000 : INTERVAL_IN_SETTINGS;\nconst PONG_INTERVAL_IN_SETTINGS = (Meteor.settings.public.pingPong.pongTimeInSeconds) * 1000;\nconst PONG_INTERVAL = PONG_INTERVAL_IN_SETTINGS >= (INTERVAL_TIME / 2)\n  ? (INTERVAL_TIME / 2) : PONG_INTERVAL_IN_SETTINGS;\n\nfunction pingPong() {\n  if (!this.userId) {\n    return; // TODO-- is there a more appropriate set to return?\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const id = _.uniqueId('pong-');\n  Logger.info(`Starting ping-pong publish for userId: ${requesterUserId}`);\n  const pongSender = (interval) => {\n    const payload = {\n      pong: {\n        message: 'pong',\n        time: Date.now(),\n        meetingId,\n      },\n    };\n    let fn = this.added.bind(this);\n    if (interval) fn = this.changed.bind(this);\n    fn(COLLECTION_NAME, id, payload);\n  };\n  pongSender();\n  this.ready();\n  const interval = Meteor.setInterval(() => pongSender(true), PONG_INTERVAL);\n\n  this.onStop(() => {\n    Meteor.clearInterval(interval);\n  });\n}\n\nMeteor.publish('ping-pong', pingPong);\n","import { check } from 'meteor/check';\nimport removePoll from '../modifiers/removePoll';\nimport setPublishedPoll from '../../../meetings/server/modifiers/setPublishedPoll';\n\nexport default function pollPublished({ body }, meetingId) {\n  const { pollId } = body;\n\n  check(meetingId, String);\n  check(pollId, String);\n\n  setPublishedPoll(meetingId, true);\n\n  return removePoll(meetingId, pollId);\n}\n","import { check } from 'meteor/check';\nimport addPoll from '../modifiers/addPoll';\nimport setPublishedPoll from '../../../meetings/server/modifiers/setPublishedPoll';\n\nexport default function pollStarted({ body }, meetingId) {\n  const { userId } = body;\n  const { poll } = body;\n\n  check(meetingId, String);\n  check(userId, String);\n  check(poll, Object);\n\n  setPublishedPoll(meetingId, false);\n\n  return addPoll(meetingId, userId, poll);\n}\n","import { check } from 'meteor/check';\nimport removePoll from '../modifiers/removePoll';\nimport clearPolls from '../modifiers/clearPolls';\n\nexport default function pollStopped({ body }, meetingId) {\n  const { poll } = body;\n\n  check(meetingId, String);\n\n  if (poll) {\n    const { pollId } = poll;\n\n    check(pollId, String);\n\n    return removePoll(meetingId, pollId);\n  }\n\n  return clearPolls(meetingId);\n}\n","import { check } from 'meteor/check';\nimport Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function userResponded({ body }) {\n  const { pollId, userId, answerId } = body;\n\n  check(pollId, String);\n  check(userId, String);\n  check(answerId, Number);\n\n  const selector = {\n    id: pollId,\n  };\n\n  const modifier = {\n    $pull: {\n      users: userId,\n    },\n    $push: {\n      responses: { userId, answerId },\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Updating Poll responses: ${err}`);\n    }\n\n    return Logger.info(`Updating Poll response (userId: ${userId},`\n      + `response: ${answerId}, pollId: ${pollId})`);\n  };\n\n  return Polls.update(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport updateVotes from '../modifiers/updateVotes';\n\nexport default function userVoted({ body }, meetingId) {\n  const { poll } = body;\n\n  check(meetingId, String);\n  check(poll, {\n    id: String,\n    answers: [\n      {\n        id: Number,\n        key: String,\n        numVotes: Number,\n      },\n    ],\n    numRespondents: Number,\n    numResponders: Number,\n  });\n\n  return updateVotes(poll, meetingId);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function publishPoll() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ShowPollResultReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const poll = Polls.findOne({ meetingId }); // TODO--send pollid from client\n  if (!poll) {\n    Logger.error(`Attempted to publish inexisting poll for meetingId: ${meetingId}`);\n    return false;\n  }\n\n  return RedisPubSub.publishUserMessage(\n    CHANNEL,\n    EVENT_NAME,\n    meetingId,\n    requesterUserId,\n    ({ requesterId: requesterUserId, pollId: poll.id }),\n  );\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function publishVote(id, pollAnswerId) { // TODO discuss location\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'RespondToPollReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  /*\n   We keep an array of people who were in the meeting at the time the poll\n   was started. The poll is published to them only.\n   Once they vote - their ID is removed and they cannot see the poll anymore\n   */\n  const currentPoll = Polls.findOne({\n    users: requesterUserId,\n    meetingId,\n    'answers.id': pollAnswerId,\n    id,\n  });\n\n  check(pollAnswerId, Number);\n  check(currentPoll, Object);\n  check(currentPoll.meetingId, String);\n\n  const payload = {\n    requesterId: requesterUserId,\n    pollId: currentPoll.id,\n    questionId: 0,\n    answerId: pollAnswerId,\n  };\n\n  const selector = {\n    users: requesterUserId,\n    meetingId,\n    'answers.id': pollAnswerId,\n  };\n\n  const modifier = {\n    $pull: {\n      users: requesterUserId,\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Updating Polls collection: ${err}`);\n    }\n\n    return Logger.info(`Updating Polls collection (meetingId: ${meetingId}, `\n      + `pollId: ${currentPoll.id}!)`);\n  };\n\n  Polls.update(selector, modifier, cb);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function startPoll(pollType, pollId, answers) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n\n  let EVENT_NAME = 'StartPollReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(pollId, String);\n  check(pollType, String);\n\n  const payload = {\n    requesterId: requesterUserId,\n    pollId: `${pollId}/${new Date().getTime()}`,\n    pollType,\n  };\n\n  if (pollType === 'custom') {\n    EVENT_NAME = 'StartCustomPollReqMsg';\n    check(answers, Array);\n    payload.answers = answers;\n  }\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function stopPoll() {\n  const { meetingId, requesterUserId: requesterId } = extractCredentials(this.userId);\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'StopPollReqMsg';\n\n  return RedisPubSub.publishUserMessage(\n    CHANNEL,\n    EVENT_NAME,\n    meetingId,\n    requesterId,\n    ({ requesterId }),\n  );\n}\n","import Users from '/imports/api/users';\nimport Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\nimport flat from 'flat';\nimport { check } from 'meteor/check';\n\nexport default function addPoll(meetingId, requesterId, poll) {\n  check(requesterId, String);\n  check(meetingId, String);\n  check(poll, {\n    id: String,\n    answers: [\n      {\n        id: Number,\n        key: String,\n      },\n    ],\n  });\n\n  const userSelector = {\n    meetingId,\n    userId: { $ne: requesterId },\n    clientType: { $ne: 'dial-in-user' },\n  };\n\n  const userIds = Users.find(userSelector, { fields: { userId: 1 } })\n    .fetch()\n    .map(user => user.userId);\n\n  const selector = {\n    meetingId,\n    requester: requesterId,\n    id: poll.id,\n  };\n\n  const modifier = Object.assign(\n    { meetingId },\n    { requester: requesterId },\n    { users: userIds },\n    flat(poll, { safe: true }),\n  );\n\n  const cb = (err, numChanged) => {\n    if (err != null) {\n      return Logger.error(`Adding Poll to collection: ${poll.id}`);\n    }\n\n    const { insertedId } = numChanged;\n    if (insertedId) {\n      return Logger.info(`Added Poll id=${poll.id}`);\n    }\n\n    return Logger.info(`Upserted Poll id=${poll.id}`);\n  };\n\n  return Polls.upsert(selector, modifier, cb);\n}\n","import Polls from '/imports/api/polls';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearPolls(meetingId) {\n  if (meetingId) {\n    return Polls.remove({ meetingId }, () => {\n      Logger.info(`Cleared Polls (${meetingId})`);\n    });\n  }\n\n  return Polls.remove({}, () => {\n    Logger.info('Cleared Polls (all)');\n  });\n}\n","import Polls from '/imports/api/polls';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function removePoll(meetingId, id) {\n  check(meetingId, String);\n  check(id, String);\n\n  const selector = {\n    meetingId,\n    id,\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Removing Poll from collection: ${err}`);\n    }\n\n    return Logger.info(`Removed Poll id=${id}`);\n  };\n\n  return Polls.remove(selector, cb);\n}\n","import Polls from '/imports/api/polls';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport flat from 'flat';\n\nexport default function updateVotes(poll, meetingId) {\n  check(meetingId, String);\n  check(poll, Object);\n\n  const {\n    id,\n    answers,\n    numResponders,\n    numRespondents,\n  } = poll;\n\n  check(id, String);\n  check(answers, Array);\n\n  check(numResponders, Number);\n  check(numRespondents, Number);\n\n  const selector = {\n    meetingId,\n    id,\n  };\n\n  const modifier = {\n    $set: flat(poll, { safe: true }),\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Updating Polls collection: ${err}`);\n    }\n\n    return Logger.info(`Updating Polls collection (meetingId: ${meetingId}, pollId: ${id}!)`);\n  };\n\n  return Polls.update(selector, modifier, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handlePollStarted from './handlers/pollStarted';\nimport handlePollStopped from './handlers/pollStopped';\nimport handlePollPublished from './handlers/pollPublished';\nimport handleUserVoted from './handlers/userVoted';\nimport handleUserResponded from './handlers/userResponded';\n\nRedisPubSub.on('PollShowResultEvtMsg', handlePollPublished);\nRedisPubSub.on('PollStartedEvtMsg', handlePollStarted);\nRedisPubSub.on('PollStoppedEvtMsg', handlePollStopped);\nRedisPubSub.on('PollUpdatedEvtMsg', handleUserVoted);\nRedisPubSub.on('UserRespondedToPollRespMsg', handleUserResponded);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport publishVote from './methods/publishVote';\nimport publishPoll from './methods/publishPoll';\nimport startPoll from './methods/startPoll';\nimport stopPoll from './methods/stopPoll';\n\nMeteor.methods({\n  publishVote,\n  publishPoll,\n  startPoll,\n  stopPoll,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport Polls from '/imports/api/polls';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction currentPoll() {\n  if (!this.userId) {\n    return Polls.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  const selector = {\n    meetingId,\n  };\n\n  Logger.debug(`Publishing poll for meeting=${meetingId}`);\n\n  return Polls.find(selector);\n}\n\nfunction publishCurrentPoll(...args) {\n  const boundPolls = currentPoll.bind(this);\n  return boundPolls(...args);\n}\n\nMeteor.publish('current-poll', publishCurrentPoll);\n\n\nfunction polls() {\n  if (!this.userId) {\n    return Polls.find({ meetingId: '' });\n  }\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing polls =${meetingId} ${requesterUserId}`);\n\n  const selector = {\n    meetingId,\n    users: requesterUserId,\n  };\n\n  return Polls.find(selector);\n}\n\nfunction publish(...args) {\n  const boundPolls = polls.bind(this);\n  return boundPolls(...args);\n}\n\nMeteor.publish('polls', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Polls = new Mongo.Collection('polls');\n\nif (Meteor.isServer) {\n  // We can have just one active poll per meeting\n  // makes no sense to index it by anything other than meetingId\n\n  Polls._ensureIndex({ meetingId: 1 });\n}\n\nexport default Polls;\n","import { check } from 'meteor/check';\nimport addPresentationPod from '../modifiers/addPresentationPod';\n\nexport default function handleCreateNewPresentationPod({ body }, meetingId) {\n  check(body, {\n    currentPresenterId: String,\n    podId: String,\n  });\n  check(meetingId, String);\n\n  const { currentPresenterId, podId } = body;\n\n  const pod = {\n    currentPresenterId,\n    podId,\n  };\n\n  addPresentationPod(meetingId, pod);\n}\n","import { check } from 'meteor/check';\nimport removePresentationPod from '../modifiers/removePresentationPod';\n\nexport default function handleRemovePresentationPod({ body }, meetingId) {\n  check(body, Object);\n  check(meetingId, String);\n\n  const { podId } = body;\n\n  check(podId, String);\n\n  removePresentationPod(meetingId, podId);\n}\n","import { check } from 'meteor/check';\nimport setPresenterInPod from '../modifiers/setPresenterInPod';\n\nexport default function handleSetPresenterInPod({ body }, meetingId) {\n  check(body, Object);\n\n  const { podId, nextPresenterId } = body;\n\n  check(podId, String);\n  check(nextPresenterId, String);\n\n  setPresenterInPod(meetingId, podId, nextPresenterId);\n}\n","import { check } from 'meteor/check';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport removePresentationPod from '../modifiers/removePresentationPod';\nimport addPresentationPod from '../modifiers/addPresentationPod';\n\nexport default function handleSyncGetPresentationPods({ body }, meetingId) {\n  check(body, Object);\n  check(meetingId, String);\n\n  const { pods } = body;\n  check(pods, Array);\n\n  const presentationPodIds = pods.map(pod => pod.id);\n\n  const presentationPodsToRemove = PresentationPods.find({\n    meetingId,\n    podId: { $nin: presentationPodIds },\n  }, { fields: { podId: 1 } }).fetch();\n\n  presentationPodsToRemove.forEach(p => removePresentationPod(meetingId, p.podId));\n\n  pods.forEach((pod) => {\n    // 'podId' and 'currentPresenterId' for some reason called 'id' and 'currentPresenter'\n    // in this message\n    const {\n      id: podId,\n      currentPresenter: currentPresenterId,\n      presentations,\n    } = pod;\n    addPresentationPod(meetingId, { podId, currentPresenterId }, presentations);\n  });\n}\n","import { Match, check } from 'meteor/check';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\nimport addPresentation from '/imports/api/presentations/server/modifiers/addPresentation';\n\n// 'presentations' is passed down here when we receive a Sync message\n// and it's not used when we just create a new presentation pod\nexport default function addPresentationPod(meetingId, pod, presentations = undefined) {\n  check(meetingId, String);\n  check(presentations, Match.Maybe(Array));\n  check(pod, {\n    currentPresenterId: String,\n    podId: String,\n  });\n\n  const { currentPresenterId, podId } = pod;\n\n  const selector = {\n    meetingId,\n    podId,\n  };\n\n  const modifier = {\n    meetingId,\n    podId,\n    currentPresenterId,\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding presentation pod to the collection: ${err}`);\n    }\n\n    // if it's a Sync message - continue adding the attached presentations\n    if (presentations) {\n      presentations.forEach(presentation => addPresentation(meetingId, podId, presentation));\n    }\n\n    if (numChanged) {\n      return Logger.info(`Added presentation pod id=${podId} meeting=${meetingId}`);\n    }\n\n    return Logger.info(`Upserted presentation pod id=${podId} meeting=${meetingId}`);\n  };\n\n  return PresentationPods.upsert(selector, modifier, cb);\n}\n","import PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\nimport clearPresentations from '/imports/api/presentations/server/modifiers/clearPresentations';\nimport clearPresentationUploadToken from '/imports/api/presentation-upload-token/server/modifiers/clearPresentationUploadToken';\n\nexport default function clearPresentationPods(meetingId) {\n  if (meetingId) {\n    return PresentationPods.remove(\n      { meetingId },\n      () => {\n        clearPresentations(meetingId);\n        clearPresentationUploadToken(meetingId);\n        Logger.info(`Cleared Presentations Pods (${meetingId})`);\n      },\n    );\n  }\n\n  return PresentationPods.remove({}, () => {\n    clearPresentations();\n    clearPresentationUploadToken();\n    Logger.info('Cleared Presentations Pods (all)');\n  });\n}\n","import { check } from 'meteor/check';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\nimport clearPresentations from '/imports/api/presentations/server/modifiers/clearPresentations';\nimport clearPresentationUploadToken from '/imports/api/presentation-upload-token/server/modifiers/clearPresentationUploadToken';\n\nexport default function removePresentationPod(meetingId, podId) {\n  check(meetingId, String);\n  check(podId, String);\n\n  const selector = {\n    meetingId,\n    podId,\n  };\n\n  const cb = (err) => {\n    if (err) {\n      Logger.error(`Removing presentation pod from collection: ${err}`);\n      return;\n    }\n\n    if (podId) {\n      Logger.info(`Removed presentation pod id=${podId} meeting=${meetingId}`);\n      clearPresentations(meetingId, podId);\n      clearPresentationUploadToken(meetingId, podId);\n    }\n  };\n\n  return PresentationPods.remove(selector, cb);\n}\n","import { check } from 'meteor/check';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setPresenterInPod(meetingId, podId, nextPresenterId) {\n  check(meetingId, String);\n  check(podId, String);\n  check(nextPresenterId, String);\n\n  const selector = {\n    meetingId,\n    podId,\n  };\n\n  const modifier = {\n    $set: {\n      currentPresenterId: nextPresenterId,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Setting a presenter in pod: ${err}`);\n      return;\n    }\n\n    if (numChanged) {\n      Logger.info(`Set a new presenter in pod id=${podId} meeting=${meetingId}`);\n    }\n  };\n\n  return PresentationPods.upsert(selector, modifier, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleCreateNewPresentationPod from './handlers/createNewPresentationPod';\nimport handleRemovePresentationPod from './handlers/removePresentationPod';\nimport handleSyncGetPresentationPods from './handlers/syncGetPresentationPods';\nimport handleSetPresenterInPod from './handlers/setPresenterInPod';\n\nRedisPubSub.on('CreateNewPresentationPodEvtMsg', handleCreateNewPresentationPod);\nRedisPubSub.on('RemovePresentationPodEvtMsg', handleRemovePresentationPod);\nRedisPubSub.on('SetPresenterInPodRespMsg', handleSetPresenterInPod);\nRedisPubSub.on('SyncGetPresentationPodsRespMsg', handleSyncGetPresentationPods);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction presentationPods() {\n  if (!this.userId) {\n    return PresentationPods.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  Logger.debug(`Publishing presentation-pods for ${meetingId} ${requesterUserId}`);\n\n  return PresentationPods.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundPresentationPods = presentationPods.bind(this);\n  return boundPresentationPods(...args);\n}\n\nMeteor.publish('presentation-pods', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst PresentationPods = new Mongo.Collection('presentation-pods');\n\nif (Meteor.isServer) {\n  // types of queries for the presentation pods:\n  // 1. meetingId, podId  ( 4 )\n\n  PresentationPods._ensureIndex({ meetingId: 1, podId: 1 });\n}\n\nexport default PresentationPods;\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport PresentationUploadToken from '/imports/api/presentation-upload-token';\n\nexport default function handlePresentationUploadTokenFail({ body, header }, meetingId) {\n  check(body, Object);\n\n  const { userId } = header;\n  const { podId, filename } = body;\n\n  check(userId, String);\n  check(podId, String);\n  check(filename, String);\n\n  const selector = {\n    meetingId,\n    userId,\n    podId,\n    filename,\n  };\n\n  const cb = (err) => {\n    if (err) {\n      Logger.error(`Removing presentationToken from collection: ${err}`);\n      return;\n    }\n\n    Logger.info(`Removing presentationToken filename=${filename} podId=${podId} meeting=${meetingId}`);\n  };\n\n  return PresentationUploadToken.upsert(selector, { failed: true, authzToken: null }, cb);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport PresentationUploadToken from '/imports/api/presentation-upload-token';\n\nexport default function handlePresentationUploadTokenPass({ body, header }, meetingId) {\n  check(body, Object);\n\n  const { userId } = header;\n  const { podId, authzToken, filename } = body;\n\n  check(userId, String);\n  check(podId, String);\n  check(authzToken, String);\n  check(filename, String);\n\n  const selector = {\n    meetingId,\n    podId,\n    userId,\n    filename,\n  };\n\n  const doc = {\n    meetingId,\n    podId,\n    userId,\n    filename,\n    authzToken,\n    failed: false,\n    used: false,\n  };\n\n  const cb = (err) => {\n    if (err) {\n      Logger.error(`Inserting presentationToken from collection: ${err}`);\n      return;\n    }\n\n    Logger.info(`Inserting presentationToken filename=${filename} podId=${podId} meeting=${meetingId}`);\n  };\n\n  return PresentationUploadToken.upsert(selector, doc, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function requestPresentationUploadToken(podId, filename) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'PresentationUploadTokenReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(podId, String);\n  check(filename, String);\n\n  const payload = {\n    podId,\n    filename,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import PresentationUploadToken from '/imports/api/presentation-upload-token';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function setUsedToken(authzToken) {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const payload = {\n    $set: {\n      used: true,\n    },\n  };\n  const cb = (err) => {\n    if (err) {\n      Logger.error(`Unable to set token as used : ${err}`);\n      return;\n    }\n\n    Logger.info(`Token: ${authzToken} has been set as used in meeting=${meetingId}`);\n  };\n\n  return PresentationUploadToken.update({\n    meetingId,\n    userId: requesterUserId,\n    authzToken,\n  }, payload, cb);\n}\n","import PresentationUploadToken from '/imports/api/presentation-upload-token';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearPresentationUploadToken(meetingId, podId) {\n  if (meetingId && podId) {\n    return PresentationUploadToken.remove({ meetingId, podId }, () => {\n      Logger.info(`Cleared Presentations Upload Token (${meetingId}, ${podId})`);\n    });\n  }\n\n  if (meetingId) {\n    return PresentationUploadToken.remove({ meetingId }, () => {\n      Logger.info(`Cleared Presentations Upload Token (${meetingId})`);\n    });\n  }\n\n  // clearing presentations for the whole server\n  return PresentationUploadToken.remove({}, () => {\n    Logger.info('Cleared Presentations Upload Token (all)');\n  });\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\n\nimport handlePresentationUploadTokenPass from './handlers/presentationUploadTokenPass';\nimport handlePresentationUploadTokenFail from './handlers/presentationUploadTokenFail';\n\nRedisPubSub.on('PresentationUploadTokenPassRespMsg', processForHTML5ServerOnly(handlePresentationUploadTokenPass));\nRedisPubSub.on('PresentationUploadTokenFailRespMsg', processForHTML5ServerOnly(handlePresentationUploadTokenFail));\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport requestPresentationUploadToken from './methods/requestPresentationUploadToken';\nimport setUsedToken from './methods/setUsedToken';\n\nMeteor.methods({\n  requestPresentationUploadToken,\n  setUsedToken,\n});\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport PresentationUploadToken from '/imports/api/presentation-upload-token';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction presentationUploadToken(podId, filename) {\n  if (!this.userId) {\n    return PresentationUploadToken.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(podId, String);\n  check(filename, String);\n\n  const selector = {\n    meetingId,\n    podId,\n    userId: requesterUserId,\n    filename,\n  };\n\n  Logger.debug(`Publishing PresentationUploadToken for ${meetingId} ${requesterUserId}`);\n\n  return PresentationUploadToken.find(selector);\n}\n\nfunction publish(...args) {\n  const boundPresentationUploadToken = presentationUploadToken.bind(this);\n  return boundPresentationUploadToken(...args);\n}\n\nMeteor.publish('presentation-upload-token', publish);\n","const PresentationUploadToken = new Mongo.Collection('presentation-upload-token');\n\nexport default PresentationUploadToken;\n","import { check } from 'meteor/check';\nimport addPresentation from '../modifiers/addPresentation';\n\nexport default function handlePresentationAdded({ body }, meetingId) {\n  check(body, Object);\n\n  const { presentation, podId } = body;\n\n  check(meetingId, String);\n  check(podId, String);\n  check(presentation, Object);\n\n  return addPresentation(meetingId, podId, presentation);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Presentations from '/imports/api/presentations';\n\n// const OFFICE_DOC_CONVERSION_SUCCESS_KEY = 'OFFICE_DOC_CONVERSION_SUCCESS';\nconst OFFICE_DOC_CONVERSION_FAILED_KEY = 'OFFICE_DOC_CONVERSION_FAILED';\nconst OFFICE_DOC_CONVERSION_INVALID_KEY = 'OFFICE_DOC_CONVERSION_INVALID';\nconst SUPPORTED_DOCUMENT_KEY = 'SUPPORTED_DOCUMENT';\nconst UNSUPPORTED_DOCUMENT_KEY = 'UNSUPPORTED_DOCUMENT';\nconst PAGE_COUNT_FAILED_KEY = 'PAGE_COUNT_FAILED';\nconst PAGE_COUNT_EXCEEDED_KEY = 'PAGE_COUNT_EXCEEDED';\nconst PDF_HAS_BIG_PAGE_KEY = 'PDF_HAS_BIG_PAGE';\nconst GENERATED_SLIDE_KEY = 'GENERATED_SLIDE';\n// const GENERATING_THUMBNAIL_KEY = 'GENERATING_THUMBNAIL';\n// const GENERATED_THUMBNAIL_KEY = 'GENERATED_THUMBNAIL';\n// const GENERATING_TEXTFILES_KEY = 'GENERATING_TEXTFILES';\n// const GENERATED_TEXTFILES_KEY = 'GENERATED_TEXTFILES';\n// const GENERATING_SVGIMAGES_KEY = 'GENERATING_SVGIMAGES';\n// const GENERATED_SVGIMAGES_KEY = 'GENERATED_SVGIMAGES';\n// const CONVERSION_COMPLETED_KEY = 'CONVERSION_COMPLETED';\n\nexport default function handlePresentationConversionUpdate({ body }, meetingId) {\n  check(body, Object);\n\n  const {\n    presentationId, podId, messageKey: status, presName: presentationName,\n  } = body;\n\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n  check(status, String);\n\n  const statusModifier = {\n    'conversion.status': status,\n    'conversion.error': false,\n    'conversion.done': false,\n  };\n\n  switch (status) {\n    case SUPPORTED_DOCUMENT_KEY:\n      statusModifier.id = presentationId;\n      statusModifier.name = presentationName;\n      break;\n\n    case UNSUPPORTED_DOCUMENT_KEY:\n    case OFFICE_DOC_CONVERSION_FAILED_KEY:\n    case OFFICE_DOC_CONVERSION_INVALID_KEY:\n    case PAGE_COUNT_FAILED_KEY:\n    case PAGE_COUNT_EXCEEDED_KEY:\n    case PDF_HAS_BIG_PAGE_KEY:\n      statusModifier.id = presentationId;\n      statusModifier.name = presentationName;\n      statusModifier['conversion.error'] = true;\n      break;\n\n    case GENERATED_SLIDE_KEY:\n      statusModifier['conversion.pagesCompleted'] = body.pagesCompleted;\n      statusModifier['conversion.numPages'] = body.numberOfPages;\n      break;\n\n    default:\n      break;\n  }\n\n  const selector = {\n    meetingId,\n    podId,\n    id: presentationId,\n  };\n\n  const modifier = {\n    $set: Object.assign({ meetingId, podId }, statusModifier),\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Updating conversion status presentation to collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n    if (insertedId) {\n      return Logger.info(`Updated presentation conversion status=${status} id=${presentationId} meeting=${meetingId}`);\n    }\n\n    return Logger.debug(`Upserted presentation conversion status=${status} id=${presentationId} meeting=${meetingId}`);\n  };\n\n  return Presentations.upsert(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport setCurrentPresentation from '../modifiers/setCurrentPresentation';\n\nexport default function handlePresentationCurrentSet({ body }, meetingId) {\n  check(body, Object);\n\n  const { presentationId, podId } = body;\n\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n\n  return setCurrentPresentation(meetingId, podId, presentationId);\n}\n","import { check } from 'meteor/check';\nimport setPresentationDownloadable from '../modifiers/setPresentationDownloadable';\n\nexport default function handlePresentationDownloadableSet({ body }, meetingId) {\n  check(body, Object);\n\n  const { presentationId, podId, downloadable } = body;\n\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n  check(downloadable, Boolean);\n\n  return setPresentationDownloadable(meetingId, podId, presentationId, downloadable);\n}\n","import { check } from 'meteor/check';\n\nimport removePresentation from '../modifiers/removePresentation';\n\nexport default function handlePresentationRemove({ body }, meetingId) {\n  const { podId, presentationId } = body;\n\n  check(meetingId, String);\n  check(podId, String);\n  check(presentationId, String);\n\n  return removePresentation(meetingId, podId, presentationId);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function removePresentation(presentationId, podId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'RemovePresentationPubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(presentationId, String);\n  check(podId, String);\n\n  const payload = {\n    presentationId,\n    podId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function setPresentation(presentationId, podId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SetCurrentPresentationPubMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(presentationId, String);\n  check(podId, String);\n\n  const payload = {\n    presentationId,\n    podId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function setPresentationDownloadable(presentationId, downloadable) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SetPresentationDownloadablePubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(downloadable, Boolean);\n  check(presentationId, String);\n\n  const payload = {\n    presentationId,\n    podId: 'DEFAULT_PRESENTATION_POD',\n    downloadable,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { HTTP } from 'meteor/http';\nimport { check } from 'meteor/check';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\nimport flat from 'flat';\nimport addSlide from '/imports/api/slides/server/modifiers/addSlide';\nimport setCurrentPresentation from './setCurrentPresentation';\n\nconst getSlideText = async (url) => {\n  let content = '';\n  try {\n    content = await HTTP.get(url).content;\n  } catch (error) {\n    Logger.error(`No file found. ${error}`);\n  }\n  return content;\n};\n\nconst addSlides = (meetingId, podId, presentationId, slides) => {\n  slides.forEach(async (slide) => {\n    const content = await getSlideText(slide.txtUri);\n\n    Object.assign(slide, { content });\n\n    addSlide(meetingId, podId, presentationId, slide);\n  });\n};\n\nexport default function addPresentation(meetingId, podId, presentation) {\n  check(meetingId, String);\n  check(podId, String);\n  check(presentation, {\n    id: String,\n    name: String,\n    current: Boolean,\n    pages: [\n      {\n        id: String,\n        num: Number,\n        thumbUri: String,\n        swfUri: String,\n        txtUri: String,\n        svgUri: String,\n        current: Boolean,\n        xOffset: Number,\n        yOffset: Number,\n        widthRatio: Number,\n        heightRatio: Number,\n      },\n    ],\n    downloadable: Boolean,\n  });\n\n  const selector = {\n    meetingId,\n    podId,\n    id: presentation.id,\n  };\n\n  const modifier = {\n    $set: Object.assign({\n      meetingId,\n      podId,\n      'conversion.done': true,\n      'conversion.error': false,\n    }, flat(presentation, { safe: true })),\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding presentation to collection: ${err}`);\n    }\n\n    addSlides(meetingId, podId, presentation.id, presentation.pages);\n\n    const { insertedId } = numChanged;\n    if (insertedId) {\n      if (presentation.current) {\n        setCurrentPresentation(meetingId, podId, presentation.id);\n      }\n\n      return Logger.info(`Added presentation id=${presentation.id} meeting=${meetingId}`);\n    }\n\n    return Logger.info(`Upserted presentation id=${presentation.id} meeting=${meetingId}`);\n  };\n\n  return Presentations.upsert(selector, modifier, cb);\n}\n","import Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearPresentations(meetingId, podId) {\n  // clearing presentations for 1 pod\n  if (meetingId && podId) {\n    return Presentations.remove({ meetingId, podId }, () => {\n      Logger.info(`Cleared Presentations (${meetingId}, ${podId})`);\n    });\n  }\n\n  // clearing presentations for the whole meeting\n  if (meetingId) {\n    return Presentations.remove({ meetingId }, () => {\n      Logger.info(`Cleared Presentations (${meetingId})`);\n    });\n  }\n\n  // clearing presentations for the whole server\n  return Presentations.remove({}, () => {\n    Logger.info('Cleared Presentations (all)');\n  });\n}\n","import { check } from 'meteor/check';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\n\nimport clearSlidesPresentation from '/imports/api/slides/server/modifiers/clearSlidesPresentation';\n\nexport default function removePresentation(meetingId, podId, presentationId) {\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n\n  const selector = {\n    meetingId,\n    podId,\n    id: presentationId,\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Removing presentation from collection: ${err}`);\n      return;\n    }\n\n    if (numChanged) {\n      clearSlidesPresentation(meetingId, presentationId);\n      Logger.info(`Removed presentation id=${presentationId} meeting=${meetingId}`);\n    }\n  };\n\n  return Presentations.remove(selector, cb);\n}\n","import { check } from 'meteor/check';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setCurrentPresentation(meetingId, podId, presentationId) {\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n\n  const oldCurrent = {\n    selector: {\n      meetingId,\n      podId,\n      current: true,\n    },\n    modifier: {\n      $set: { current: false },\n    },\n    callback: (err) => {\n      if (err) {\n        return Logger.error(`Unsetting the current presentation: ${err}`);\n      }\n\n      return Logger.info('Unsetted as current presentation');\n    },\n  };\n\n  const newCurrent = {\n    selector: {\n      meetingId,\n      podId,\n      id: presentationId,\n    },\n    modifier: {\n      $set: { current: true },\n    },\n    callback: (err) => {\n      if (err) {\n        return Logger.error(`Setting as current presentation id=${presentationId}: ${err}`);\n      }\n\n      return Logger.info(`Setted as current presentation id=${presentationId}`);\n    },\n  };\n\n  const oldPresentation = Presentations.findOne(oldCurrent.selector);\n  const newPresentation = Presentations.findOne(newCurrent.selector);\n\n  // Prevent bug with presentation being unset, same happens in the slide\n  // See: https://github.com/bigbluebutton/bigbluebutton/pull/4431\n  if (oldPresentation && newPresentation && (oldPresentation._id === newPresentation._id)) {\n    return;\n  }\n\n  if (newPresentation) {\n    Presentations.update(newPresentation._id, newCurrent.modifier, newCurrent.callback);\n  }\n\n  if (oldPresentation) {\n    Presentations.update(oldPresentation._id, oldCurrent.modifier, oldCurrent.callback);\n  }\n}\n","import { check } from 'meteor/check';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setPresentationDownloadable(meetingId, podId,\n  presentationId, downloadable) {\n  check(meetingId, String);\n  check(presentationId, String);\n  check(podId, String);\n  check(downloadable, Boolean);\n\n  const selector = {\n    meetingId,\n    podId,\n    id: presentationId,\n  };\n\n  const modifier = {\n    $set: {\n      downloadable,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Could not set downloadable on pres {${presentationId} in meeting {${meetingId}} ${err}`);\n      return;\n    }\n\n    if (numChanged) {\n      Logger.info(`Set downloadable status on presentation {${presentationId} in meeting {${meetingId}}`);\n    }\n  };\n\n  return Presentations.upsert(selector, modifier, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handlePresentationAdded from './handlers/presentationAdded';\nimport handlePresentationRemove from './handlers/presentationRemove';\nimport handlePresentationCurrentSet from './handlers/presentationCurrentSet';\nimport handlePresentationConversionUpdate from './handlers/presentationConversionUpdate';\nimport handlePresentationDownloadableSet from './handlers/presentationDownloadableSet';\n\nRedisPubSub.on('PdfConversionInvalidErrorEvtMsg', handlePresentationConversionUpdate);\nRedisPubSub.on('PresentationPageGeneratedEvtMsg', handlePresentationConversionUpdate);\nRedisPubSub.on('PresentationPageCountErrorEvtMsg', handlePresentationConversionUpdate);\nRedisPubSub.on('PresentationConversionUpdateEvtMsg', handlePresentationConversionUpdate);\nRedisPubSub.on('PresentationConversionCompletedEvtMsg', handlePresentationAdded);\nRedisPubSub.on('RemovePresentationEvtMsg', handlePresentationRemove);\nRedisPubSub.on('SetCurrentPresentationEvtMsg', handlePresentationCurrentSet);\nRedisPubSub.on('SetPresentationDownloadableEvtMsg', handlePresentationDownloadableSet);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport removePresentation from './methods/removePresentation';\nimport setPresentation from './methods/setPresentation';\nimport setPresentationDownloadable from './methods/setPresentationDownloadable';\n\nMeteor.methods({\n  removePresentation,\n  setPresentation,\n  setPresentationDownloadable,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Presentations from '/imports/api/presentations';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction presentations() {\n  if (!this.userId) {\n    return Presentations.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing Presentations for ${meetingId} ${requesterUserId}`);\n\n  return Presentations.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundPresentations = presentations.bind(this);\n  return boundPresentations(...args);\n}\n\nMeteor.publish('presentations', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Presentations = new Mongo.Collection('presentations');\n\nif (Meteor.isServer) {\n  // types of queries for the presentations:\n  // 1. meetingId, podId, id        ( 3 )\n  // 2. meetingId, id               ( 1 )\n  // 3. meetingId, id, current      ( 2 )\n  // 4. meetingId                   ( 1 )\n\n  Presentations._ensureIndex({ meetingId: 1, podId: 1, id: 1 });\n}\n\nexport default Presentations;\n","import { check } from 'meteor/check';\nimport Meetings from '/imports/api/meetings';\nimport Users from '/imports/api/users';\nimport addScreenshare from '../modifiers/addScreenshare';\nimport Logger from '/imports/startup/server/logger';\nimport stopWatchingExternalVideo from '/imports/api/external-videos/server/methods/stopWatchingExternalVideo';\n\nexport default function handleScreenshareStarted({ body }, meetingId) {\n  check(meetingId, String);\n  check(body, Object);\n\n  const meeting = Meetings.findOne({ meetingId });\n  const presenter = Users.findOne({ meetingId, presenter: true });\n  const presenterId = presenter && presenter.userId ? presenter.userId : 'system-screenshare-starting';\n  if (meeting && meeting.externalVideoUrl) {\n    Logger.info(`ScreenshareStarted: There is external video being shared. Stopping it due to presenter change, ${meeting.externalVideoUrl}`);\n    stopWatchingExternalVideo({ meetingId, requesterUserId: presenterId });\n  }\n  return addScreenshare(meetingId, body);\n}\n","import { check } from 'meteor/check';\nimport clearScreenshare from '../modifiers/clearScreenshare';\n\nexport default function handleScreenshareStopped({ body }, meetingId) {\n  const { screenshareConf } = body;\n\n  check(meetingId, String);\n  check(screenshareConf, String);\n\n  return clearScreenshare(meetingId, screenshareConf);\n}\n","import { check } from 'meteor/check';\nimport flat from 'flat';\nimport Logger from '/imports/startup/server/logger';\nimport Screenshare from '/imports/api/screenshare';\n\nexport default function addScreenshare(meetingId, body) {\n  check(meetingId, String);\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      meetingId,\n      screenshare: flat(body),\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Adding screenshare to collection: ${err}`);\n    }\n\n    return Logger.info(`Upserted screenshare id=${body.screenshareConf}`);\n  };\n\n  return Screenshare.upsert(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport Screenshare from '/imports/api/screenshare';\n\nexport default function clearScreenshare(meetingId, screenshareConf) {\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`removing screenshare to collection: ${err}`);\n    }\n\n    return Logger.info(`removed screenshare meetingId=${meetingId} id=${screenshareConf}`);\n  };\n\n  if (meetingId && screenshareConf) {\n    return Screenshare.remove({ meetingId, 'screenshare.screenshareConf': screenshareConf }, cb);\n  }\n  return Screenshare.remove({}, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleScreenshareStarted from './handlers/screenshareStarted';\nimport handleScreenshareStopped from './handlers/screenshareStopped';\n\nRedisPubSub.on('ScreenshareRtmpBroadcastStartedEvtMsg', handleScreenshareStarted);\nRedisPubSub.on('ScreenshareRtmpBroadcastStoppedEvtMsg', handleScreenshareStopped);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.methods({\n});\n","import Screenshare from '/imports/api/screenshare';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction screenshare() {\n  if (!this.userId) {\n    return Screenshare.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing Screenshare for ${meetingId} ${requesterUserId}`);\n\n  return Screenshare.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundScreenshare = screenshare.bind(this);\n  return boundScreenshare(...args);\n}\n\nMeteor.publish('screenshare', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Screenshare = new Mongo.Collection('screenshare');\n\nif (Meteor.isServer) {\n  // types of queries for the screenshare:\n  // 1. meetingId\n\n  Screenshare._ensureIndex({ meetingId: 1 });\n}\n\nexport default Screenshare;\n","import { check } from 'meteor/check';\nimport changeCurrentSlide from '../modifiers/changeCurrentSlide';\n\nexport default function handleSlideChange({ body }, meetingId) {\n  const { pageId, presentationId, podId } = body;\n\n  check(pageId, String);\n  check(presentationId, String);\n  check(podId, String);\n\n  return changeCurrentSlide(meetingId, podId, presentationId, pageId);\n}\n","import { check } from 'meteor/check';\nimport resizeSlide from '../modifiers/resizeSlide';\n\nexport default function handleSlideResize({ body }, meetingId) {\n  check(meetingId, String);\n  check(body, Object);\n\n  return resizeSlide(meetingId, body);\n}\n","import Presentations from '/imports/api/presentations';\nimport { Slides } from '/imports/api/slides';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function switchSlide(slideNumber, podId) { // TODO-- send presentationId and SlideId\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SetCurrentPagePubMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(slideNumber, Number);\n\n  const selector = {\n    meetingId,\n    podId,\n    current: true,\n  };\n\n  const Presentation = Presentations.findOne(selector);\n\n  if (!Presentation) {\n    throw new Meteor.Error('presentation-not-found', 'You need a presentation to be able to switch slides');\n  }\n\n  const Slide = Slides.findOne({\n    meetingId,\n    podId,\n    presentationId: Presentation.id,\n    num: slideNumber,\n  });\n\n  if (!Slide) {\n    throw new Meteor.Error('slide-not-found', `Slide number ${slideNumber} not found in the current presentation`);\n  }\n\n  const payload = {\n    podId,\n    presentationId: Presentation.id,\n    pageId: Slide.id,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import Presentations from '/imports/api/presentations';\nimport { Slides } from '/imports/api/slides';\nimport { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function zoomSlide(slideNumber, podId, widthRatio, heightRatio, x, y) { // TODO-- send presentationId and SlideId\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ResizeAndMovePagePubMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const selector = {\n    meetingId,\n    podId,\n    current: true,\n  };\n  const Presentation = Presentations.findOne(selector);\n\n  if (!Presentation) {\n    throw new Meteor.Error('presentation-not-found', 'You need a presentation to be able to switch slides');\n  }\n\n  const Slide = Slides.findOne({\n    meetingId,\n    podId,\n    presentationId: Presentation.id,\n    num: slideNumber,\n  });\n\n  if (!Slide) {\n    throw new Meteor.Error('slide-not-found', `Slide number ${slideNumber} not found in the current presentation`);\n  }\n\n  const payload = {\n    podId,\n    presentationId: Presentation.id,\n    pageId: Slide.id,\n    xOffset: x,\n    yOffset: y,\n    widthRatio,\n    heightRatio,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import probe from 'probe-image-size';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport flat from 'flat';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { Slides } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\nimport { SVG, PNG } from '/imports/utils/mimeTypes';\nimport calculateSlideData from '/imports/api/slides/server/helpers';\nimport addSlidePositions from './addSlidePositions';\n\nconst loadSlidesFromHttpAlways = Meteor.settings.private.app.loadSlidesFromHttpAlways || false;\n\nconst requestWhiteboardHistory = (meetingId, slideId) => {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'GetWhiteboardAnnotationsReqMsg';\n  const USER_ID = 'nodeJSapp';\n\n  const payload = {\n    whiteboardId: slideId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, USER_ID, payload);\n};\n\nconst SUPPORTED_TYPES = [SVG, PNG];\n\nconst fetchImageSizes = imageUri => probe(imageUri)\n  .then((result) => {\n    if (!SUPPORTED_TYPES.includes(result.mime)) {\n      throw new Meteor.Error('invalid-image-type', `received ${result.mime} expecting ${SUPPORTED_TYPES.join()}`);\n    }\n\n    return {\n      width: result.width,\n      height: result.height,\n    };\n  })\n  .catch((reason) => {\n    Logger.error(`Error parsing image size. ${reason}. uri=${imageUri}`);\n    return reason;\n  });\n\nexport default function addSlide(meetingId, podId, presentationId, slide) {\n  check(podId, String);\n  check(presentationId, String);\n\n  check(slide, {\n    id: String,\n    num: Number,\n    thumbUri: String,\n    swfUri: String,\n    txtUri: String,\n    svgUri: String,\n    current: Boolean,\n    xOffset: Number,\n    yOffset: Number,\n    widthRatio: Number,\n    heightRatio: Number,\n    content: String,\n  });\n\n  const {\n    id: slideId,\n    xOffset,\n    yOffset,\n    widthRatio,\n    heightRatio,\n    ...restSlide\n  } = slide;\n\n  const selector = {\n    meetingId,\n    podId,\n    presentationId,\n    id: slideId,\n  };\n\n  const imageUri = slide.svgUri || slide.pngUri;\n\n  const modifier = {\n    $set: Object.assign(\n      { meetingId },\n      { podId },\n      { presentationId },\n      { id: slideId },\n      { imageUri },\n      flat(restSlide),\n      { safe: true },\n    ),\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding slide to collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n\n    requestWhiteboardHistory(meetingId, slideId);\n\n    if (insertedId) {\n      return Logger.info(`Added slide id=${slideId} pod=${podId} presentation=${presentationId}`);\n    }\n\n    return Logger.info(`Upserted slide id=${slideId} pod=${podId} presentation=${presentationId}`);\n  };\n\n  const imageSizeUri = (loadSlidesFromHttpAlways ? imageUri.replace(/^https/i, 'http') : imageUri);\n\n  return fetchImageSizes(imageSizeUri)\n    .then(({ width, height }) => {\n      // there is a rare case when for a very long not-active meeting the presentation\n      // files just disappear and width/height can't be retrieved\n      if (width && height) {\n        // pre-calculating the width, height, and vieBox coordinates / dimensions\n        // to unload the client-side\n        const slideData = {\n          width,\n          height,\n          xOffset,\n          yOffset,\n          widthRatio,\n          heightRatio,\n        };\n        const slidePosition = calculateSlideData(slideData);\n\n        addSlidePositions(meetingId, podId, presentationId, slideId, slidePosition);\n      }\n\n      return Slides.upsert(selector, modifier, cb);\n    })\n    .catch(reason => Logger.error(`Error parsing image size. ${reason}. slide=${slideId} uri=${imageUri}`));\n}\n","import { SlidePositions } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\nimport flat from 'flat';\n\nexport default function addSlidePositions(\n  meetingId,\n  podId,\n  presentationId,\n  slideId,\n  slidePosition,\n) {\n  check(meetingId, String);\n  check(podId, String);\n  check(presentationId, String);\n  check(slideId, String);\n\n  check(slidePosition, {\n    width: Number,\n    height: Number,\n    x: Number,\n    y: Number,\n    viewBoxWidth: Number,\n    viewBoxHeight: Number,\n  });\n\n  const selector = {\n    meetingId,\n    podId,\n    presentationId,\n    id: slideId,\n  };\n\n  const modifier = {\n    $set: Object.assign(\n      { meetingId },\n      { podId },\n      { presentationId },\n      { id: slideId },\n      flat(slidePosition),\n      { safe: true },\n    ),\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding slide position to collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n\n    if (insertedId) {\n      return Logger.info(`Added slide position id=${slideId} pod=${podId} presentation=${presentationId}`);\n    }\n\n    return Logger.info(`Upserted slide position id=${slideId} pod=${podId} presentation=${presentationId}`);\n  };\n\n  return SlidePositions.upsert(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport { Slides } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function changeCurrentSlide(meetingId, podId, presentationId, slideId) {\n  check(meetingId, String);\n  check(presentationId, String);\n  check(slideId, String);\n  check(podId, String);\n\n  const oldCurrent = {\n    selector: {\n      meetingId,\n      podId,\n      presentationId,\n      current: true,\n    },\n    modifier: {\n      $set: { current: false },\n    },\n    callback: (err) => {\n      if (err) {\n        return Logger.error(`Unsetting the current slide: ${err}`);\n      }\n\n      return Logger.info('Unsetted the current slide');\n    },\n  };\n\n  const newCurrent = {\n    selector: {\n      meetingId,\n      podId,\n      presentationId,\n      id: slideId,\n    },\n    modifier: {\n      $set: { current: true },\n    },\n    callback: (err) => {\n      if (err) {\n        return Logger.error(`Setting as current slide id=${slideId}: ${err}`);\n      }\n\n      return Logger.info(`Setted as current slide id=${slideId}`);\n    },\n  };\n\n  const oldSlide = Slides.findOne(oldCurrent.selector);\n  const newSlide = Slides.findOne(newCurrent.selector);\n\n  // if the oldCurrent and newCurrent have the same ids\n  if (oldSlide && newSlide && (oldSlide._id === newSlide._id)) {\n    return;\n  }\n\n  if (newSlide) {\n    Slides.update(newSlide._id, newCurrent.modifier, newCurrent.callback);\n  }\n\n  if (oldSlide) {\n    Slides.update(oldSlide._id, oldCurrent.modifier, oldCurrent.callback);\n  }\n}\n","import { Slides, SlidePositions } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearSlides(meetingId) {\n  if (meetingId) {\n    SlidePositions.remove({ meetingId }, () => {\n      Logger.info(`Cleared SlidePositions (${meetingId})`);\n    });\n\n    return Slides.remove({ meetingId }, () => {\n      Logger.info(`Cleared Slides (${meetingId})`);\n    });\n  }\n\n  SlidePositions.remove({}, () => {\n    Logger.info('Cleared SlidePositions (all)');\n  });\n\n  return Slides.remove({}, () => {\n    Logger.info('Cleared Slides (all)');\n  });\n}\n","import { Slides, SlidePositions } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\nimport clearAnnotations from '/imports/api/annotations/server/modifiers/clearAnnotations';\n\nexport default function clearSlidesPresentation(meetingId, presentationId) {\n  check(meetingId, String);\n  check(presentationId, String);\n\n  const selector = {\n    meetingId,\n    presentationId,\n  };\n\n  const whiteboardIds = Slides.find(selector, { fields: { id: 1 } }).map(row => row.id);\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Removing Slides from collection: ${err}`);\n    }\n\n    whiteboardIds.forEach(whiteboardId => clearAnnotations(meetingId, whiteboardId));\n\n    return Logger.info(`Removed Slides where presentationId=${presentationId}`);\n  };\n\n  SlidePositions.remove(selector);\n\n  return Slides.remove(selector, cb);\n}\n","import { check } from 'meteor/check';\nimport { SlidePositions } from '/imports/api/slides';\nimport Logger from '/imports/startup/server/logger';\nimport calculateSlideData from '/imports/api/slides/server/helpers';\n\nexport default function resizeSlide(meetingId, slide) {\n  check(meetingId, String);\n\n  const {\n    podId,\n    presentationId,\n    pageId,\n    widthRatio,\n    heightRatio,\n    xOffset,\n    yOffset,\n  } = slide;\n\n  const selector = {\n    meetingId,\n    podId,\n    presentationId,\n    id: pageId,\n  };\n\n  // fetching the current slide data\n  // and pre-calculating the width, height, and vieBox coordinates / sizes\n  // to reduce the client-side load\n  const SlidePosition = SlidePositions.findOne(selector);\n\n  if (SlidePosition) {\n    const {\n      width,\n      height,\n    } = SlidePosition;\n\n    const slideData = {\n      width,\n      height,\n      xOffset,\n      yOffset,\n      widthRatio,\n      heightRatio,\n    };\n    const calculatedData = calculateSlideData(slideData);\n\n    const modifier = {\n      $set: calculatedData,\n    };\n\n    const cb = (err, numChanged) => {\n      if (err) {\n        return Logger.error(`Resizing slide positions id=${pageId}: ${err}`);\n      }\n\n      if (numChanged) {\n        return Logger.debug(`Resized slide positions id=${pageId}`);\n      }\n\n      return Logger.info(`No slide positions found with id=${pageId}`);\n    };\n\n    return SlidePositions.update(selector, modifier, cb);\n  }\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleSlideResize from './handlers/slideResize';\nimport handleSlideChange from './handlers/slideChange';\n\nRedisPubSub.on('ResizeAndMovePageEvtMsg', handleSlideResize);\nRedisPubSub.on('SetCurrentPageEvtMsg', handleSlideChange);\n","\nconst calculateSlideData = (slideData) => {\n  const {\n    width, height, xOffset, yOffset, widthRatio, heightRatio,\n  } = slideData;\n\n  // calculating viewBox and offsets for the current presentation\n  return {\n    width,\n    height,\n    x: ((-xOffset * 2) * width) / 100,\n    y: ((-yOffset * 2) * height) / 100,\n    viewBoxWidth: (width * widthRatio) / 100,\n    viewBoxHeight: (height * heightRatio) / 100,\n  };\n};\n\nexport default calculateSlideData;\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport switchSlide from './methods/switchSlide';\nimport zoomSlide from './methods/zoomSlide';\n\nMeteor.methods({\n  switchSlide,\n  zoomSlide,\n});\n","import { Slides, SlidePositions } from '/imports/api/slides';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction slides() {\n  if (!this.userId) {\n    return Slides.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  Logger.debug(`Publishing Slides for ${meetingId} ${requesterUserId}`);\n\n  return Slides.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundSlides = slides.bind(this);\n  return boundSlides(...args);\n}\n\nMeteor.publish('slides', publish);\n\nfunction slidePositions() {\n  if (!this.userId) {\n    return SlidePositions.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing SlidePositions for ${meetingId} ${requesterUserId}`);\n\n  return SlidePositions.find({ meetingId });\n}\n\nfunction publishPositions(...args) {\n  const boundSlidePositions = slidePositions.bind(this);\n  return boundSlidePositions(...args);\n}\n\nMeteor.publish('slide-positions', publishPositions);\n","import { Meteor } from 'meteor/meteor';\n\nconst Slides = new Mongo.Collection('slides');\nconst SlidePositions = new Mongo.Collection('slide-positions');\n\nif (Meteor.isServer) {\n  // types of queries for the slides:\n\n  // 1. meetingId                                  ( 1 )\n  // 2. meetingId, podId                           ( 1 )\n  // 3. meetingId, presentationId                  ( 1 )\n  // 3. meetingId, presentationId, num             ( 1 )\n  // 4. meetingId, podId, presentationId, id       ( 3 ) - incl. resizeSlide, which can be intense\n  // 5. meetingId, podId, presentationId, current  ( 1 )\n\n  Slides._ensureIndex({\n    meetingId: 1, podId: 1, presentationId: 1, id: 1,\n  });\n\n  SlidePositions._ensureIndex({\n    meetingId: 1, podId: 1, presentationId: 1, id: 1,\n  });\n}\n\nexport { Slides, SlidePositions };\n","import { check } from 'meteor/check';\nimport changeRole from '/imports/api/users/server/modifiers/changeRole';\n\nexport default function handleChangeRole(payload, meetingId) {\n  check(payload.body, Object);\n  check(meetingId, String);\n\n  const { userId, role, changedBy } = payload.body;\n\n  return changeRole(role, userId, meetingId, changedBy);\n}\n","import Logger from '/imports/startup/server/logger';\nimport { check } from 'meteor/check';\nimport Users from '/imports/api/users';\n\nexport default function handleEmojiStatus({ body }, meetingId) {\n  const { userId, emoji } = body;\n\n  check(userId, String);\n  check(emoji, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      emojiTime: (new Date()).getTime(),\n      emoji,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Assigning user emoji status: ${err}`);\n      return;\n    }\n\n    if (numChanged) {\n      Logger.info(`Assigned user emoji status ${emoji} id=${userId} meeting=${meetingId}`);\n    }\n  };\n\n  return Users.update(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users/';\nimport addUser from '../modifiers/addUser';\nimport removeUser from '../modifiers/removeUser';\n\nexport default function handleGetUsers({ body }, meetingId) {\n  const { users } = body;\n\n  check(meetingId, String);\n  check(users, Array);\n\n  const usersIds = users.map(m => m.intId);\n\n  const usersToRemove = Users.find({\n    meetingId,\n    userId: { $nin: usersIds },\n  }, { fields: { userId: 1 } }).fetch();\n\n  usersToRemove.forEach(user => removeUser(meetingId, user.userId));\n\n  const usersAdded = [];\n  users.forEach((user) => {\n    usersAdded.push(addUser(meetingId, user));\n  });\n\n  return usersAdded;\n}\n","import Users from '/imports/api/users';\nimport PresentationPods from '/imports/api/presentation-pods';\nimport changePresenter from '/imports/api/users/server/modifiers/changePresenter';\nimport RedisPubSub from '/imports/startup/server/redis';\n\nfunction setPresenterInPodReqMsg(credentials) { // TODO-- switch to meetingId, etc\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'SetPresenterInPodReqMsg';\n\n  const { meetingId, requesterUserId, presenterId } = credentials;\n\n  const payload = {\n    podId: 'DEFAULT_PRESENTATION_POD',\n    nextPresenterId: presenterId,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n\nexport default function handlePresenterAssigned({ body }, meetingId) {\n  const { presenterId, assignedBy } = body;\n\n  changePresenter(true, presenterId, meetingId, assignedBy);\n\n  const selector = {\n    meetingId,\n    userId: { $ne: presenterId },\n    presenter: true,\n  };\n\n  const prevPresenter = Users.findOne(selector);\n\n  // no previous presenters\n  // The below code is responsible for set Meeting presenter to be default pod presenter as well.\n  // It's been handled here because right now akka-apps don't handle all cases scenarios.\n  if (!prevPresenter) {\n    const setPresenterPayload = {\n      meetingId,\n      requesterUserId: assignedBy,\n      presenterId,\n    };\n\n    const defaultPodSelector = {\n      meetingId,\n      podId: 'DEFAULT_PRESENTATION_POD',\n    };\n    const currentDefaultPodPresenter = PresentationPods.findOne(defaultPodSelector);\n    const { currentPresenterId } = currentDefaultPodPresenter;\n\n    if (currentPresenterId === '') {\n      return setPresenterInPodReqMsg(setPresenterPayload);\n    }\n\n    const oldPresenter = Users.findOne({ meetingId, userId: currentPresenterId, connectionStatus: 'offline' });\n\n    if (oldPresenter) {\n      return setPresenterInPodReqMsg(setPresenterPayload);\n    }\n\n    return true;\n  }\n\n  return changePresenter(false, prevPresenter.userId, meetingId, assignedBy);\n}\n","import { check } from 'meteor/check';\n\nimport removeUser from '../modifiers/removeUser';\n\nexport default function handleRemoveUser({ body }, meetingId) {\n  const { intId } = body;\n\n  check(meetingId, String);\n  check(intId, String);\n\n  return removeUser(meetingId, intId);\n}\n","import userEjected from '../modifiers/userEjected';\n\nexport default function handleEjectedUser({ header, body }) {\n  const { meetingId, userId } = header;\n  const { reasonCode } = body;\n\n  return userEjected(meetingId, userId, reasonCode);\n}\n","import { check } from 'meteor/check';\nimport userInactivityInspect from '../modifiers/userInactivityInspect';\n\nexport default function handleUserInactivityInspect({ header, body }, meetingId) {\n  const { userId } = header;\n  const { responseDelay } = body;\n\n  check(userId, String);\n  check(responseDelay, Match.Integer);\n  check(meetingId, String);\n\n\n  return userInactivityInspect(userId, responseDelay);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function userJoin(meetingId, userId, authToken) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserJoinMeetingReqMsg';\n\n  check(authToken, String);\n\n  const payload = {\n    userId,\n    authToken,\n    clientType: 'HTML5',\n  };\n\n  Logger.info(`User='${userId}' is joining meeting='${meetingId}' authToken='${authToken}'`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n}\n","import { check } from 'meteor/check';\n\nimport addUser from '../modifiers/addUser';\n\nexport default function handleUserJoined({ body }, meetingId) {\n  const user = body;\n\n  check(user, Object);\n\n  return addUser(meetingId, user);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport userJoin from './userJoin';\nimport pendingAuthenticationsStore from '../store/pendingAuthentications';\nimport createDummyUser from '../modifiers/createDummyUser';\nimport setConnectionIdAndAuthToken from '../modifiers/setConnectionIdAndAuthToken';\n\nconst clearOtherSessions = (sessionUserId, current = false) => {\n  const serverSessions = Meteor.server.sessions;\n  Object.keys(serverSessions)\n    .filter(i => serverSessions[i].userId === sessionUserId)\n    .filter(i => i !== current)\n    .forEach(i => serverSessions[i].close());\n};\n\nexport default function handleValidateAuthToken({ body }, meetingId) {\n  const {\n    userId,\n    valid,\n    authToken,\n    waitForApproval,\n  } = body;\n\n  check(userId, String);\n  check(authToken, String);\n  check(valid, Boolean);\n  check(waitForApproval, Boolean);\n\n  const pendingAuths = pendingAuthenticationsStore.take(meetingId, userId, authToken);\n\n  if (!valid) {\n    pendingAuths.forEach(\n      (pendingAuth) => {\n        try {\n          const { methodInvocationObject } = pendingAuth;\n          const connectionId = methodInvocationObject.connection.id;\n\n          // Schedule socket disconnection for this user, giving some time for client receiving the reason of disconnection\n          Meteor.setTimeout(() => {\n            methodInvocationObject.connection.close();\n          }, 2000);\n\n          Logger.info(`Closed connection ${connectionId} due to invalid auth token.`);\n        } catch (e) {\n          Logger.error(`Error closing socket for meetingId '${meetingId}', userId '${userId}', authToken ${authToken}`);\n        }\n      },\n    );\n\n    return;\n  }\n\n  if (valid) {\n    // Define user ID on connections\n    pendingAuths.forEach(\n      (pendingAuth) => {\n        const { methodInvocationObject } = pendingAuth;\n\n        /* Logic migrated from validateAuthToken method ( postponed to only run in case of success response ) - Begin */\n        const sessionId = `${meetingId}--${userId}`;\n        methodInvocationObject.setUserId(sessionId);\n\n        const User = Users.findOne({\n          meetingId,\n          userId,\n        });\n\n        if (!User) {\n          createDummyUser(meetingId, userId, authToken);\n        }\n\n        setConnectionIdAndAuthToken(meetingId, userId, methodInvocationObject.connection.id, authToken);\n        /* End of logic migrated from validateAuthToken */\n      },\n    );\n  }\n\n  const selector = {\n    meetingId,\n    userId,\n    clientType: 'HTML5',\n  };\n\n  const User = Users.findOne(selector);\n\n  // If we dont find the user on our collection is a flash user and we can skip\n  if (!User) return;\n\n  // Publish user join message\n  if (valid && !waitForApproval) {\n    Logger.info('User=', User);\n    userJoin(meetingId, userId, User.authToken);\n  }\n\n  const modifier = {\n    $set: {\n      validated: valid,\n      approved: !waitForApproval,\n      loginTime: Date.now(),\n      inactivityCheck: false,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Validating auth token: ${err}`);\n    }\n\n    if (numChanged) {\n      if (valid) {\n        const sessionUserId = `${meetingId}-${userId}`;\n        const currentConnectionId = User.connectionId ? User.connectionId : false;\n        clearOtherSessions(sessionUserId, currentConnectionId);\n      }\n\n      return Logger.info(`Validated auth token as ${valid} user=${userId} meeting=${meetingId}`);\n    }\n\n    return Logger.info('No auth to validate');\n  };\n\n  Users.update(selector, modifier, cb);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function assignPresenter(userId) { // TODO-- send username from client side\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'AssignPresenterReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(userId, String);\n\n  const User = Users.findOne({\n    meetingId,\n    userId,\n  });\n\n  if (!User) {\n    throw new Meteor.Error('user-not-found', 'You need a valid user to be able to set presenter');\n  }\n\n  const payload = {\n    newPresenterId: userId,\n    newPresenterName: User.name,\n    assignedBy: requesterUserId,\n    requesterId: requesterUserId,\n  };\n\n  Logger.verbose(`User '${userId}' setted as presenter by '${\n    requesterUserId}' from meeting '${meetingId}'`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function changeRole(userId, role) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ChangeUserRoleCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(userId, String);\n  check(role, String);\n\n  const payload = {\n    userId,\n    role,\n    changedBy: requesterUserId,\n  };\n\n  Logger.verbose(`User '${userId}' set as '${role} role by '${requesterUserId}' from meeting '${meetingId}'`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport Users from '/imports/api/users';\nimport BannedUsers from '/imports/api/users/server/store/bannedUsers';\n\nexport default function removeUser(userId, banUser) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'EjectUserFromMeetingCmdMsg';\n\n  const { meetingId, requesterUserId: ejectedBy } = extractCredentials(this.userId);\n\n  check(userId, String);\n\n  const payload = {\n    userId,\n    ejectedBy,\n    banUser,\n  };\n\n  const removedUser = Users.findOne({ meetingId, userId }, { extId: 1 });\n\n  if (banUser && removedUser) BannedUsers.add(meetingId, removedUser.extId);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, ejectedBy, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function setEmojiStatus(userId, status) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ChangeUserEmojiCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(userId, String);\n\n  const payload = {\n    emoji: status,\n    userId,\n  };\n\n  Logger.verbose(`User '${userId}' emoji status updated to '${status}' by '${\n    requesterUserId}' from meeting '${meetingId}'`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport setEffectiveConnectionType from '../modifiers/setUserEffectiveConnectionType';\n\nexport default function setUserEffectiveConnectionType(effectiveConnectionType) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ChangeUserEffectiveConnectionMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(effectiveConnectionType, String);\n\n  const payload = {\n    meetingId,\n    userId: requesterUserId,\n    effectiveConnectionType,\n  };\n\n  setEffectiveConnectionType(meetingId, requesterUserId, effectiveConnectionType);\n\n  Logger.verbose(`User ${requesterUserId} effective connection updated to ${effectiveConnectionType}`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function toggleUserLock(userId, lock) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'LockUserInMeetingCmdMsg';\n\n  const { meetingId, requesterUserId: lockedBy } = extractCredentials(this.userId);\n\n  check(lockedBy, String);\n  check(userId, String);\n  check(lock, Boolean);\n\n  const payload = {\n    lockedBy,\n    userId,\n    lock,\n  };\n\n  Logger.verbose(`User ${lockedBy} updated lock status from ${userId} to ${lock}\n  in meeting ${meetingId}`);\n\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, lockedBy, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport Users from '/imports/api/users';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userActivitySign() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserActivitySignCmdMsg';\n  const { meetingId, requesterUserId: userId } = extractCredentials(this.userId);\n  const payload = {\n    userId,\n  };\n\n  const selector = {\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      inactivityCheck: false,\n    },\n  };\n\n  Users.update(selector, modifier); // TODO-- we should move this to a modifier\n\n  Logger.info(`User ${userId} sent a activity sign for meeting ${meetingId}`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nexport default function userLeaving(meetingId, userId, connectionId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserLeaveReqMsg';\n\n  check(userId, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const User = Users.findOne(selector);\n\n  if (!User) {\n    return Logger.info(`Skipping userLeaving. Could not find ${userId} in ${meetingId}`);\n  }\n\n  // If the current user connection is not the same that triggered the leave we skip\n  if (User.connectionId !== connectionId) {\n    return false;\n  }\n\n  const payload = {\n    userId,\n    sessionId: meetingId,\n  };\n\n  Logger.info(`User '${userId}' is leaving meeting '${meetingId}'`);\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, userId, payload);\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userLeftMeeting() { // TODO-- spread the code to method/modifier/handler\n  // so we don't update the db in a method\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const selector = {\n    meetingId,\n    userId: requesterUserId,\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`leaving dummy user to collection: ${err}`);\n      return;\n    }\n    if (numChanged) {\n      Logger.info(`user left id=${requesterUserId} meeting=${meetingId}`);\n    }\n  };\n\n  return Users.update(\n    selector,\n    {\n      $set: {\n        loggedOut: true,\n      },\n    },\n    cb,\n  );\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Logger from '/imports/startup/server/logger';\nimport pendingAuthenticationsStore from '../store/pendingAuthentications';\nimport BannedUsers from '../store/bannedUsers';\nimport Users from '/imports/api/users';\n\nexport default function validateAuthToken(meetingId, requesterUserId, requesterToken, externalId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ValidateAuthTokenReqMsg';\n\n  // Check if externalId is banned from the meeting\n  if (externalId) {\n    if (BannedUsers.has(meetingId, externalId)) {\n      Logger.warn(`A banned user with extId ${externalId} tried to enter in meeting ${meetingId}`);\n      return { invalid: true, reason: 'User has been banned.' };\n    }\n  }\n\n  // Check if a removed user is trying to access the meeting using the same sessionToken\n  const isUserEjected = Users.findOne({ meetingId, authToken: requesterToken, ejected: true });\n\n  if (isUserEjected) {\n    Logger.warn(`An invalid sessionToken tried to validateAuthToken meetingId=${meetingId} authToken=${requesterToken}`);\n    return { invalid: true, reason: 'User has been ejected.' };\n  }\n\n  // Store reference of methodInvocationObject ( to postpone the connection userId definition )\n  pendingAuthenticationsStore.add(meetingId, requesterUserId, requesterToken, this);\n\n  const payload = {\n    userId: requesterUserId,\n    authToken: requesterToken,\n  };\n\n  Logger.info(`User '${requesterUserId}' is trying to validate auth token for meeting '${meetingId}' from connection '${this.connection.id}'`);\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport addUser from '/imports/api/users/server/modifiers/addUser';\n\n\nexport default function addDialInUser(meetingId, voiceUser) {\n  check(meetingId, String);\n  check(voiceUser, Object);\n\n  const USER_CONFIG = Meteor.settings.public.user;\n  const ROLE_VIEWER = USER_CONFIG.role_viewer;\n\n  const { intId, callerName } = voiceUser;\n\n  const voiceOnlyUser = {\n    intId,\n    extId: intId, // TODO\n    name: callerName,\n    role: ROLE_VIEWER.toLowerCase(),\n    guest: false,\n    authed: true,\n    waitingForAcceptance: false,\n    guestStatus: 'ALLOW',\n    emoji: 'none',\n    presenter: false,\n    locked: false, // TODO\n    avatar: '',\n    clientType: 'dial-in-user',\n  };\n\n  return addUser(meetingId, voiceOnlyUser);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport Meetings from '/imports/api/meetings';\nimport VoiceUsers from '/imports/api/voice-users/';\nimport _ from 'lodash';\nimport SanitizeHTML from 'sanitize-html';\n\nimport stringHash from 'string-hash';\nimport flat from 'flat';\n\nimport addVoiceUser from '/imports/api/voice-users/server/modifiers/addVoiceUser';\n\nconst COLOR_LIST = [\n  '#7b1fa2', '#6a1b9a', '#4a148c', '#5e35b1', '#512da8', '#4527a0',\n  '#311b92', '#3949ab', '#303f9f', '#283593', '#1a237e', '#1976d2', '#1565c0',\n  '#0d47a1', '#0277bd', '#01579b',\n];\n\nexport default function addUser(meetingId, userData) {\n  const user = userData;\n  const sanitizedName = SanitizeHTML(userData.name, {\n    allowedTags: [],\n    allowedAttributes: {},\n  });\n  // if user typed only tags\n  user.name = sanitizedName.length === 0\n    ? _.escape(userData.name)\n    : sanitizedName;\n\n  check(meetingId, String);\n\n  check(user, {\n    intId: String,\n    extId: String,\n    name: String,\n    role: String,\n    guest: Boolean,\n    authed: Boolean,\n    waitingForAcceptance: Match.Maybe(Boolean),\n    guestStatus: String,\n    emoji: String,\n    presenter: Boolean,\n    locked: Boolean,\n    avatar: String,\n    clientType: String,\n  });\n\n  const userId = user.intId;\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n  const Meeting = Meetings.findOne({ meetingId });\n\n  /* While the akka-apps dont generate a color we just pick one\n    from a list based on the userId */\n  const color = COLOR_LIST[stringHash(user.intId) % COLOR_LIST.length];\n\n  const modifier = {\n    $set: Object.assign(\n      {\n        meetingId,\n        connectionStatus: 'online',\n        sortName: user.name.trim().toLowerCase(),\n        color,\n        breakoutProps: {\n          isBreakoutUser: Meeting.meetingProp.isBreakout,\n          parentId: Meeting.breakoutProps.parentId,\n        },\n        effectiveConnectionType: null,\n        inactivityCheck: false,\n        responseDelay: 0,\n        loggedOut: false,\n      },\n      flat(user),\n    ),\n  };\n\n  // Only add an empty VoiceUser if there isn't one already and if the user coming in isn't a\n  // dial-in user. We want to avoid overwriting good data\n  if (user.clientType !== 'dial-in-user' && !VoiceUsers.findOne({ meetingId, intId: userId })) {\n    addVoiceUser(meetingId, {\n      voiceUserId: '',\n      intId: userId,\n      callerName: user.name,\n      callerNum: '',\n      muted: false,\n      talking: false,\n      callingWith: '',\n      listenOnly: false,\n      voiceConf: '',\n      joined: false,\n    });\n  }\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Adding user to collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n    if (insertedId) {\n      return Logger.info(`Added user id=${userId} meeting=${meetingId}`);\n    }\n\n    return Logger.info(`Upserted user id=${userId} meeting=${meetingId}`);\n  };\n\n  return Users.upsert(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport Meetings from '/imports/api/meetings';\nimport stopWatchingExternalVideo from '/imports/api/external-videos/server/methods/stopWatchingExternalVideo';\n\nexport default function changePresenter(presenter, userId, meetingId, changedBy) {\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      presenter,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Changed user role: ${err}`);\n    }\n\n    if (numChanged) {\n      return Logger.info(`Changed presenter=${presenter} id=${userId} meeting=${meetingId}`\n      + `${changedBy ? ` changedBy=${changedBy}` : ''}`);\n    }\n\n    return null;\n  };\n\n  const meeting = Meetings.findOne({ meetingId });\n  if (meeting && meeting.externalVideoUrl) {\n    Logger.info(`ChangePresenter:There is external video being shared. Stopping it due to presenter change, ${meeting.externalVideoUrl}`);\n    stopWatchingExternalVideo({ meetingId, requesterUserId: userId });\n  }\n  return Users.update(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nexport default function changeRole(role, userId, meetingId, changedBy) {\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      role,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Changed user role: ${err}`);\n    }\n\n    if (numChanged) {\n      return Logger.info(`Changed user role=${role} id=${userId} meeting=${meetingId}`\n      + `${changedBy ? ` changedBy=${changedBy}` : ''}`);\n    }\n\n    return null;\n  };\n\n  return Users.update(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users/index';\n\nconst clearUsers = (meetingId) => {\n  if (meetingId) {\n    return Users.remove({ meetingId }, () => {\n      Logger.info(`Cleared Users (${meetingId})`);\n    });\n  }\n\n  return Users.remove({}, () => {\n    Logger.info('Cleared Users (all)');\n  });\n};\n\nexport default clearUsers;\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nexport default function createDummyUser(meetingId, userId, authToken) {\n  check(meetingId, String);\n  check(userId, String);\n  check(authToken, String);\n\n  const User = Users.findOne({ meetingId, userId });\n  if (User) {\n    throw new Meteor.Error('existing-user', 'Tried to create a dummy user for an existing user');\n  }\n\n  const doc = {\n    meetingId,\n    userId,\n    authToken,\n    clientType: 'HTML5',\n    validated: null,\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Creating dummy user to collection: ${err}`);\n      return;\n    }\n    if (numChanged) {\n      Logger.info(`Created dummy user id=${userId} token=${authToken} meeting=${meetingId}`);\n    }\n  };\n\n  return Users.insert(doc, cb);\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users';\nimport VideoStreams from '/imports/api/video-streams';\nimport Logger from '/imports/startup/server/logger';\nimport stopWatchingExternalVideo from '/imports/api/external-videos/server/methods/stopWatchingExternalVideo';\nimport clearUserInfoForRequester from '/imports/api/users-infos/server/modifiers/clearUserInfoForRequester';\n\nconst clearAllSessions = (sessionUserId) => {\n  const serverSessions = Meteor.server.sessions;\n  Object.keys(serverSessions)\n    .filter(i => serverSessions[i].userId === sessionUserId)\n    .forEach(i => serverSessions[i].close());\n};\n\nexport default function removeUser(meetingId, userId) {\n  check(meetingId, String);\n  check(userId, String);\n\n  const userToRemove = Users.findOne({ userId, meetingId });\n\n  if (userToRemove) {\n    const { presenter } = userToRemove;\n    if (presenter) {\n      stopWatchingExternalVideo({ meetingId, requesterUserId: userId });\n    }\n  }\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      connectionStatus: 'offline',\n      validated: false,\n      emoji: 'none',\n      presenter: false,\n      role: 'VIEWER',\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Removing user from collection: ${err}`);\n    }\n\n    const sessionUserId = `${meetingId}-${userId}`;\n    clearAllSessions(sessionUserId);\n\n    clearUserInfoForRequester(meetingId, userId);\n\n    return Logger.info(`Removed user id=${userId} meeting=${meetingId}`);\n  };\n  VideoStreams.remove({ meetingId, userId });\n  return Users.update(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setConnectionIdAndAuthToken(meetingId, userId, connectionId, authToken) {\n  check(meetingId, String);\n  check(userId, String);\n  check(authToken, String);\n  check(connectionId, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      connectionId,\n      authToken,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Updating connectionId user=${userId}: ${err}`);\n      return;\n    }\n\n    if (numChanged) {\n      Logger.info(`Updated connectionId and authToken user=${userId} connectionId=${connectionId} meeting=${meetingId} authToken=${authToken}`);\n    }\n  };\n\n  return Users.update(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function setUserEffectiveConnectionType(meetingId, userId, effectiveConnectionType) {\n  check(meetingId, String);\n  check(userId, String);\n  check(effectiveConnectionType, String);\n\n  const selector = {\n    meetingId,\n    userId,\n    effectiveConnectionType: { $ne: effectiveConnectionType },\n  };\n\n  const modifier = {\n    $set: {\n      effectiveConnectionType,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Updating user ${userId}: ${err}`);\n    }\n\n    if (numChanged) {\n      Logger.info(`Updated user ${userId} effective connection to ${effectiveConnectionType} in meeting ${meetingId}`);\n    }\n  };\n\n  return Users.update(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\nimport clearUserInfoForRequester from '/imports/api/users-infos/server/modifiers/clearUserInfoForRequester';\n\nexport default function userEjected(meetingId, userId, ejectedReason) {\n  check(meetingId, String);\n  check(userId, String);\n  check(ejectedReason, String);\n\n  const selector = {\n    meetingId,\n    userId,\n  };\n\n  const modifier = {\n    $set: {\n      ejected: true,\n      ejectedReason,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Ejecting user from collection: ${err}`);\n    }\n\n    if (numChanged) {\n      clearUserInfoForRequester(meetingId, userId);\n      return Logger.info(`Ejected user id=${userId} meeting=${meetingId} reason=${ejectedReason}`);\n    }\n\n    return null;\n  };\n\n  return Users.update(selector, modifier, cb);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nexport default function userInactivityInspect(userId, responseDelay) {\n  check(userId, String);\n  check(responseDelay, Match.Integer);\n\n  const selector = {\n    userId,\n    inactivityCheck: false,\n  };\n\n  const modifier = {\n    $set: {\n      inactivityCheck: true,\n      responseDelay,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Inactivity check for user ${userId}: ${err}`);\n    }\n\n    if (numChanged) {\n      return Logger.info(`Updated user ${userId} with inactivity inspect`);\n    }\n\n    return null;\n  };\n\n  return Users.update(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\n\nclass BannedUsers {\n  constructor() {\n    Logger.debug('BannedUsers :: Initializing');\n    this.store = {};\n  }\n\n  init(meetingId) {\n    Logger.debug('BannedUsers :: init', { meetingId });\n\n    if (!this.store[meetingId]) this.store[meetingId] = new Set();\n  }\n\n  add(meetingId, externalId) {\n    Logger.debug('BannedUsers :: add', { meetingId, externalId });\n    if (!this.store[meetingId]) this.store[meetingId] = new Set();\n\n    this.store[meetingId].add(externalId);\n  }\n\n  delete(meetingId) {\n    Logger.debug('BannedUsers :: delete', { meetingId });\n    delete this.store[meetingId];\n  }\n\n  has(meetingId, externalId) {\n    Logger.debug('BannedUsers :: has', { meetingId, externalId });\n    if (!this.store[meetingId]) this.store[meetingId] = new Set();\n\n    return this.store[meetingId].has(externalId);\n  }\n}\n\nexport default new BannedUsers();\n","import Logger from '/imports/startup/server/logger';\n\nclass PendingAuthentitcations {\n    constructor () {\n        Logger.debug(\"PendingAuthentitcations :: constructor\");\n        this.store = [];\n    }\n\n    generateKey (meetingId, userId, authToken) {\n        // Protect against separator injection\n        meetingId = meetingId.replace(/ /g, '');\n        userId    = userId.replace(/ /g, '');\n        authToken = authToken.replace(/ /g, '');\n\n        // Space separated key\n        return `${meetingId} ${userId} ${authToken}`;\n    }\n\n    add (meetingId, userId, authToken, methodInvocationObject) {\n        Logger.debug(\"PendingAuthentitcations :: add\", {meetingId, userId, authToken});\n        this.store.push({\n            key: this.generateKey(meetingId, userId, authToken),\n            meetingId, userId, authToken, methodInvocationObject\n        });\n    }\n\n    take (meetingId, userId, authToken) {\n        const key = this.generateKey(meetingId, userId, authToken);\n        Logger.debug(\"PendingAuthentitcations :: take\", {key, meetingId, userId, authToken});\n        \n        // find matches\n        const matches = this.store.filter( e => e.key === key );\n        \n        // remove matches (if any)\n        if(matches.length) { \n            this.store = this.store.filter( e => e.key !== key ) ;\n        }\n\n        // return matches\n        return matches;\n    }\n}\nexport default new PendingAuthentitcations();","import RedisPubSub from '/imports/startup/server/redis';\nimport handleRemoveUser from './handlers/removeUser';\nimport handleUserJoined from './handlers/userJoined';\nimport handleValidateAuthToken from './handlers/validateAuthToken';\nimport handlePresenterAssigned from './handlers/presenterAssigned';\nimport handleEmojiStatus from './handlers/emojiStatus';\nimport handleGetUsers from './handlers/getUsers';\nimport handleUserEjected from './handlers/userEjected';\nimport handleChangeRole from './handlers/changeRole';\nimport handleUserInactivityInspect from './handlers/userInactivityInspect';\n\nRedisPubSub.on('PresenterAssignedEvtMsg', handlePresenterAssigned);\nRedisPubSub.on('UserJoinedMeetingEvtMsg', handleUserJoined);\nRedisPubSub.on('UserLeftMeetingEvtMsg', handleRemoveUser);\nRedisPubSub.on('ValidateAuthTokenRespMsg', handleValidateAuthToken);\nRedisPubSub.on('UserEmojiChangedEvtMsg', handleEmojiStatus);\nRedisPubSub.on('SyncGetUsersMeetingRespMsg', handleGetUsers);\nRedisPubSub.on('UserEjectedFromMeetingEvtMsg', handleUserEjected);\nRedisPubSub.on('UserRoleChangedEvtMsg', handleChangeRole);\nRedisPubSub.on('UserInactivityInspectMsg', handleUserInactivityInspect);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport validateAuthToken from './methods/validateAuthToken';\nimport setEmojiStatus from './methods/setEmojiStatus';\nimport assignPresenter from './methods/assignPresenter';\nimport changeRole from './methods/changeRole';\nimport removeUser from './methods/removeUser';\nimport toggleUserLock from './methods/toggleUserLock';\nimport setUserEffectiveConnectionType from './methods/setUserEffectiveConnectionType';\nimport userActivitySign from './methods/userActivitySign';\nimport userLeftMeeting from './methods/userLeftMeeting';\n\nMeteor.methods({\n  setEmojiStatus,\n  assignPresenter,\n  changeRole,\n  removeUser,\n  validateAuthToken,\n  toggleUserLock,\n  setUserEffectiveConnectionType,\n  userActivitySign,\n  userLeftMeeting,\n});\n","import _ from 'lodash';\nimport Users from '/imports/api/users';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\n\nimport userLeaving from './methods/userLeaving';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst ROLE_MODERATOR = Meteor.settings.public.user.role_moderator;\n\nfunction currentUser() {\n  if (!this.userId) {\n    return Users.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(meetingId, String);\n  check(requesterUserId, String);\n\n  const connectionId = this.connection.id;\n  const onCloseConnection = Meteor.bindEnvironment(() => {\n    try {\n      userLeaving(meetingId, requesterUserId, connectionId);\n    } catch (e) {\n      Logger.error(`Exception while executing userLeaving: ${e}`);\n    }\n  });\n\n  this._session.socket.on('close', _.debounce(onCloseConnection, 100));\n\n  const selector = {\n    meetingId,\n    userId: requesterUserId,\n  };\n\n  const options = {\n    fields: {\n      user: false,\n      authToken: false, // Not asking for authToken from client side but also not exposing it\n    },\n  };\n\n  return Users.find(selector, options);\n}\n\nfunction publishCurrentUser(...args) {\n  const boundUsers = currentUser.bind(this);\n  return boundUsers(...args);\n}\n\nMeteor.publish('current-user', publishCurrentUser);\n\nfunction users(role) {\n  if (!this.userId) {\n    return Users.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const selector = {\n    $or: [\n      { meetingId },\n    ],\n  };\n\n  const User = Users.findOne({ userId: requesterUserId, meetingId }, { fields: { role: 1 } });\n  if (!!User && User.role === ROLE_MODERATOR) {\n    selector.$or.push({\n      'breakoutProps.isBreakoutUser': true,\n      'breakoutProps.parentId': meetingId,\n      connectionStatus: 'online',\n    });\n  }\n\n  const options = {\n    fields: {\n      authToken: false,\n      lastPing: false,\n    },\n  };\n\n  Logger.debug(`Publishing Users for ${meetingId} ${requesterUserId}`);\n\n  return Users.find(selector, options);\n}\n\nfunction publish(...args) {\n  const boundUsers = users.bind(this);\n  return boundUsers(...args);\n}\n\nMeteor.publish('users', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst Users = new Mongo.Collection('users');\n\nif (Meteor.isServer) {\n  // types of queries for the users:\n  // 1. meetingId\n  // 2. meetingId, userId\n\n  Users._ensureIndex({ meetingId: 1, userId: 1 });\n}\n\nexport default Users;\n","import { check } from 'meteor/check';\nimport addUserInfo from '../modifiers/addUserInfo';\n\nexport default function handleUserInformation({ header, body }) {\n  check(body, Object);\n  check(header, Object);\n\n  const { userInfo } = body;\n  const { userId, meetingId } = header;\n\n  check(userInfo, Array);\n  check(userId, String);\n  check(meetingId, String);\n\n  return addUserInfo(userInfo, userId, meetingId);\n}\n","import UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function removeUserInformation() {\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const selector = {\n    meetingId,\n    requesterUserId,\n  };\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Removing user information from collection: ${err}`);\n    }\n    return Logger.info(`Removed user information: requester id=${requesterUserId} meeting=${meetingId}`);\n  };\n  return UserInfos.remove(selector, cb);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function getUserInformation(externalUserId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toThirdParty;\n  const EVENT_NAME = 'LookUpUserReqMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(externalUserId, String);\n\n  const payload = {\n    externalUserId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function addUserInfo(userInfo, requesterUserId, meetingId) {\n  const info = {\n    meetingId,\n    requesterUserId,\n    userInfo,\n  };\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Adding user information to collection: ${err}`);\n    }\n    return Logger.info(`Added user information: requester id=${requesterUserId} meeting=${meetingId}`);\n  };\n\n  return UserInfos.insert(info, cb);\n}\n","import UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearUsersInfo(meetingId) {\n  return UserInfos.remove({ meetingId }, () => {\n    Logger.info(`Cleared User Infos (${meetingId})`);\n  });\n}\n","import UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearUsersInfoForRequester(meetingId, requesterUserId) {\n  return UserInfos.remove({ meetingId }, () => {\n    Logger.info(`Cleared User Infos requested by user=${requesterUserId}`);\n  });\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleUserInformation from './handlers/userInformation';\n\nRedisPubSub.on('LookUpUserRespMsg', handleUserInformation);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport requestUserInformation from './methods/requestUserInformation';\nimport removeUserInformation from './methods/removeUserInformation';\n\nMeteor.methods({\n  requestUserInformation,\n  removeUserInformation,\n});\n","import { Meteor } from 'meteor/meteor';\nimport UserInfos from '/imports/api/users-infos';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction userInfos() {\n  if (!this.userId) {\n    return UserInfos.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing user infos requested by user=${requesterUserId}`);\n\n  return UserInfos.find({ meetingId, requesterUserId });\n}\n\nfunction publish(...args) {\n  const boundUserInfos = userInfos.bind(this);\n  return boundUserInfos(...args);\n}\n\nMeteor.publish('users-infos', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst UserInfos = new Mongo.Collection('users-infos');\n\nif (Meteor.isServer) {\n  UserInfos._ensureIndex({ meetingId: 1, userId: 1 });\n}\n\nexport default UserInfos;\n","import { check } from 'meteor/check';\nimport addUserSetting from '/imports/api/users-settings/server/modifiers/addUserSetting';\nimport logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nconst oldParameters = {\n  askForFeedbackOnLogout: 'bbb_ask_for_feedback_on_logout',\n  autoJoin: 'bbb_auto_join_audio',\n  autoShareWebcam: 'bbb_auto_share_webcam',\n  autoSwapLayout: 'bbb_auto_swap_layout',\n  clientTitle: 'bbb_client_title',\n  customStyle: 'bbb_custom_style',\n  customStyleUrl: 'bbb_custom_style_url',\n  displayBrandingArea: 'bbb_display_branding_area',\n  enableScreensharing: 'bbb_enable_screen_sharing',\n  enableVideo: 'bbb_enable_video',\n  forceListenOnly: 'bbb_force_listen_only',\n  hidePresentation: 'bbb_hide_presentation',\n  listenOnlyMode: 'bbb_listen_only_mode',\n  multiUserPenOnly: 'bbb_multi_user_pen_only',\n  multiUserTools: 'bbb_multi_user_tools',\n  outsideToggleRecording: 'bbb_outside_toggle_recording',\n  outsideToggleSelfVoice: 'bbb_outside_toggle_self_voice',\n  presenterTools: 'bbb_presenter_tools',\n  shortcuts: 'bbb_shortcuts',\n  skipCheck: 'bbb_skip_check_audio',\n};\n\nconst oldParametersKeys = Object.keys(oldParameters);\n\nconst currentParameters = [\n  // APP\n  'bbb_ask_for_feedback_on_logout',\n  'bbb_auto_join_audio',\n  'bbb_client_title',\n  'bbb_force_listen_only',\n  'bbb_listen_only_mode',\n  'bbb_skip_check_audio',\n  // BRANDING\n  'bbb_display_branding_area',\n  // SHORTCUTS\n  'bbb_shortcuts',\n  // KURENTO\n  'bbb_auto_share_webcam',\n  'bbb_preferred_camera_profile',\n  'bbb_enable_screen_sharing',\n  'bbb_enable_video',\n  'bbb_record_video',\n  'bbb_skip_video_preview',\n  'bbb_mirror_own_webcam',\n  // PRESENTATION\n  'bbb_force_restore_presentation_on_new_events',\n  // WHITEBOARD\n  'bbb_multi_user_pen_only',\n  'bbb_presenter_tools',\n  'bbb_multi_user_tools',\n  // SKINNING/THEMMING\n  'bbb_custom_style',\n  'bbb_custom_style_url',\n  // LAYOUT\n  'bbb_auto_swap_layout',\n  'bbb_hide_presentation',\n  'bbb_show_participants_on_login',\n  'bbb_show_public_chat_on_login',\n  // OUTSIDE COMMANDS\n  'bbb_outside_toggle_self_voice',\n  'bbb_outside_toggle_recording',\n];\n\nfunction valueParser(val) {\n  try {\n    const parsedValue = JSON.parse(val.toLowerCase().trim());\n    return parsedValue;\n  } catch (error) {\n    logger.warn(`addUserSettings:Parameter ${val} could not be parsed (was not json)`);\n    return val;\n  }\n}\n\nexport default function addUserSettings(settings) {\n  check(settings, [Object]);\n\n  const { meetingId, requesterUserId: userId } = extractCredentials(this.userId);\n\n  let parameters = {};\n\n  settings.forEach((el) => {\n    const settingKey = Object.keys(el).shift();\n    const normalizedKey = settingKey.trim();\n\n    if (currentParameters.includes(normalizedKey)) {\n      if (!Object.keys(parameters).includes(normalizedKey)) {\n        parameters = {\n          [normalizedKey]: valueParser(el[settingKey]),\n          ...parameters,\n        };\n      } else {\n        parameters[normalizedKey] = el[settingKey];\n      }\n      return;\n    }\n\n    if (oldParametersKeys.includes(normalizedKey)) {\n      const matchingNewKey = oldParameters[normalizedKey];\n      if (!Object.keys(parameters).includes(matchingNewKey)) {\n        parameters = {\n          [matchingNewKey]: valueParser(el[settingKey]),\n          ...parameters,\n        };\n      }\n      return;\n    }\n\n    logger.warn(`Parameter ${normalizedKey} not handled`);\n  });\n\n  const settingsAdded = [];\n  Object.entries(parameters).forEach((el) => {\n    const setting = el[0];\n    const value = el[1];\n    settingsAdded.push(addUserSetting(meetingId, userId, setting, value));\n  });\n\n  return settingsAdded;\n}\n","import { check } from 'meteor/check';\nimport UserSettings from '/imports/api/users-settings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function addUserSetting(meetingId, userId, setting, value) {\n  check(meetingId, String);\n  check(userId, String);\n  check(setting, String);\n  check(value, Match.Any);\n\n  const selector = {\n    meetingId,\n    userId,\n    setting,\n  };\n  const modifier = {\n    $set: {\n      meetingId,\n      userId,\n      setting,\n      value,\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Adding user setting to collection: ${err}`);\n    }\n\n    return Logger.verbose(`Upserted user setting for meetingId=${meetingId} userId=${userId} setting=${setting}`);\n  };\n\n  return UserSettings.upsert(selector, modifier, cb);\n}\n","import UserSettings from '/imports/api/users-settings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function clearUsersSettings(meetingId) {\n  return UserSettings.remove({ meetingId }, () => {\n    Logger.info(`Cleared User Settings (${meetingId})`);\n  });\n}\n","import './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport addUserSettings from './methods/addUserSettings';\n\nMeteor.methods({\n  addUserSettings,\n});\n","import { Meteor } from 'meteor/meteor';\nimport UserSettings from '/imports/api/users-settings';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport User from '/imports/api/users';\n\nfunction userSettings() {\n  if (!this.userId) {\n    return UserSettings.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const currentUser = User.findOne({ userId: requesterUserId });\n\n  if (currentUser && currentUser.breakoutProps.isBreakoutUser) {\n    const { parentId } = currentUser.breakoutProps;\n\n    const [externalId] = currentUser.extId.split('-');\n\n    const mainRoomUserSettings = UserSettings.find({ meetingId: parentId, userId: externalId });\n\n    mainRoomUserSettings.map(({ setting, value }) => ({\n      meetingId,\n      setting,\n      userId: requesterUserId,\n      value,\n    })).forEach((doc) => {\n      const selector = {\n        meetingId,\n        setting: doc.setting,\n      };\n\n      UserSettings.upsert(selector, doc);\n    });\n\n    Logger.debug(`Publishing user settings for user=${requesterUserId}`);\n\n    return UserSettings.find({ meetingId, userId: requesterUserId });\n  }\n\n  Logger.debug(`Publishing user settings for user=${requesterUserId}`);\n\n  return UserSettings.find({ meetingId, userId: requesterUserId });\n}\n\nfunction publish(...args) {\n  const boundUserSettings = userSettings.bind(this);\n  return boundUserSettings(...args);\n}\n\nMeteor.publish('users-settings', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst UserSettings = new Mongo.Collection('users-settings');\n\nif (Meteor.isServer) {\n  UserSettings._ensureIndex({\n    meetingId: 1, userId: 1,\n  });\n}\n\nexport default UserSettings;\n","import { check } from 'meteor/check';\nimport sharedWebcam from '../modifiers/sharedWebcam';\nimport { isValidStream } from '/imports/api/video-streams/server/helpers';\n\nexport default function handleUserSharedHtml5Webcam({ header, body }, meetingId) {\n  const { userId, stream } = body;\n\n  check(header, Object);\n  check(meetingId, String);\n  check(userId, String);\n  check(stream, String);\n\n  if (!isValidStream(stream)) return false;\n\n  return sharedWebcam(meetingId, userId, stream);\n}\n","import { check } from 'meteor/check';\nimport unsharedWebcam from '../modifiers/unsharedWebcam';\nimport { isValidStream } from '/imports/api/video-streams/server/helpers';\n\nexport default function handleUserUnsharedHtml5Webcam({ header, body }, meetingId) {\n  const { userId, stream } = body;\n\n  check(header, Object);\n  check(meetingId, String);\n  check(userId, String);\n  check(stream, String);\n\n  if (!isValidStream(stream)) return false;\n\n  return unsharedWebcam(meetingId, userId, stream);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userShareWebcam(stream) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserBroadcastCamStartMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.info(`user sharing webcam: ${meetingId} ${requesterUserId}`);\n\n  check(stream, String);\n\n  // const actionName = 'joinVideo';\n  /* TODO throw an error if user has no permission to share webcam\n  if (!isAllowedTo(actionName, credentials)) {\n    throw new Meteor.Error('not-allowed', `You are not allowed to share webcam`);\n  } */\n\n  const payload = {\n    stream,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function userUnshareWebcam(stream) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'UserBroadcastCamStopMsg';\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.info(`user unsharing webcam: ${meetingId} ${requesterUserId}`);\n\n  check(stream, String);\n\n  // const actionName = 'joinVideo';\n  /* TODO throw an error if user has no permission to share webcam\n  if (!isAllowedTo(actionName, credentials)) {\n    throw new Meteor.Error('not-allowed', `You are not allowed to share webcam`);\n  } */\n\n  const payload = {\n    stream,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import Logger from '/imports/startup/server/logger';\nimport VideoStreams from '/imports/api/video-streams';\n\nexport default function clearVideoStreams(meetingId) {\n  if (meetingId) {\n    return VideoStreams.remove({ meetingId }, () => {\n      Logger.info(`Cleared VideoStreams in (${meetingId})`);\n    });\n  }\n\n  return VideoStreams.remove({}, () => {\n    Logger.info('Cleared VideoStreams in all meetings');\n  });\n}\n","import Logger from '/imports/startup/server/logger';\nimport VideoStreams from '/imports/api/video-streams';\nimport { check } from 'meteor/check';\nimport {\n  getDeviceId,\n  getUserName,\n} from '/imports/api/video-streams/server/helpers';\n\nexport default function sharedWebcam(meetingId, userId, stream) {\n  check(meetingId, String);\n  check(userId, String);\n  check(stream, String);\n\n  const deviceId = getDeviceId(stream);\n  const name = getUserName(userId);\n\n  const selector = {\n    meetingId,\n    userId,\n    deviceId,\n  };\n\n  const modifier = {\n    $set: {\n      stream,\n      name,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Error setting stream: ${err}`);\n    }\n\n    if (numChanged) {\n      return Logger.info(`Updated stream=${stream} meeting=${meetingId}`);\n    }\n  };\n\n  return VideoStreams.upsert(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport VideoStreams from '/imports/api/video-streams';\nimport { check } from 'meteor/check';\nimport { getDeviceId } from '/imports/api/video-streams/server/helpers';\n\nexport default function unsharedWebcam(meetingId, userId, stream) {\n  check(meetingId, String);\n  check(userId, String);\n  check(stream, String);\n\n  const deviceId = getDeviceId(stream);\n\n  const selector = {\n    meetingId,\n    userId,\n    deviceId,\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Error removing stream: ${err}`);\n    }\n\n    if (numChanged) {\n      return Logger.info(`Removed stream=${stream} meeting=${meetingId}`);\n    }\n  };\n\n  return VideoStreams.remove(selector, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleUserSharedHtml5Webcam from './handlers/userSharedHtml5Webcam';\nimport handleUserUnsharedHtml5Webcam from './handlers/userUnsharedHtml5Webcam';\n\nRedisPubSub.on('UserBroadcastCamStartedEvtMsg', handleUserSharedHtml5Webcam);\nRedisPubSub.on('UserBroadcastCamStoppedEvtMsg', handleUserUnsharedHtml5Webcam);\n","import Logger from '/imports/startup/server/logger';\nimport Users from '/imports/api/users';\n\nconst FLASH_STREAM_REGEX = /^([A-z0-9]+)-([A-z0-9]+)-([A-z0-9]+)(-recorded)?$/;\nconst TOKEN = '_';\n\nconst isValidStream = stream => !FLASH_STREAM_REGEX.test(stream);\nconst getDeviceId = (stream) => {\n  const splitStream = stream.split(TOKEN);\n  if (splitStream.length === 3) return splitStream[2];\n  Logger.warn(`Could not get deviceId from stream=${stream}`);\n  return stream;\n};\n\nconst getUserName = (userId) => {\n  const user = Users.findOne(\n    { userId },\n    { fields: { name: 1 } },\n  );\n  if (user) return user.name;\n  return userId;\n};\n\nexport {\n  isValidStream,\n  getDeviceId,\n  getUserName,\n};\n","import './eventHandlers';\nimport './methods';\nimport './publisher';\n","import { Meteor } from 'meteor/meteor';\nimport userShareWebcam from './methods/userShareWebcam';\nimport userUnshareWebcam from './methods/userUnshareWebcam';\n\nMeteor.methods({\n  userShareWebcam,\n  userUnshareWebcam,\n});\n","import { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport VideoStreams from '/imports/api/video-streams';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction videoStreams() {\n  if (!this.userId) {\n    return VideoStreams.find({ meetingId: '' });\n  }\n  const { meetingId } = extractCredentials(this.userId);\n\n  Logger.debug(`video users of meeting id=${meetingId}`);\n\n  const selector = {\n    meetingId,\n  };\n\n  return VideoStreams.find(selector);\n}\n\nfunction publish(...args) {\n  const boundVideoStreams = videoStreams.bind(this);\n  return boundVideoStreams(...args);\n}\n\nMeteor.publish('video-streams', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst VideoStreams = new Mongo.Collection('video-streams');\n\nif (Meteor.isServer) {\n  // types of queries for the video users:\n  // 2. meetingId\n\n  VideoStreams._ensureIndex({ meetingId: 1 });\n}\n\nexport default VideoStreams;\n","import { check } from 'meteor/check';\nimport VoiceCallState from '/imports/api/voice-call-states';\nimport Logger from '/imports/startup/server/logger';\n\n// \"CALL_STARTED\", \"IN_ECHO_TEST\", \"IN_CONFERENCE\", \"CALL_ENDED\"\n\nexport default function handleVoiceCallStateEvent({ body }, meetingId) {\n  const {\n    voiceConf,\n    clientSession,\n    userId,\n    callerName,\n    callState,\n  } = body;\n\n  check(meetingId, String);\n  check(voiceConf, String);\n  check(clientSession, String);\n  check(userId, String);\n  check(callerName, String);\n  check(callState, String);\n\n  const selector = {\n    meetingId,\n    userId,\n    clientSession,\n  };\n\n  const modifier = {\n    $set: {\n      meetingId,\n      userId,\n      voiceConf,\n      clientSession,\n      callState,\n    },\n  };\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Update voice call state=${userId}: ${err}`);\n    }\n\n    return Logger.debug(`Update voice call state=${userId} meeting=${meetingId} clientSession=${clientSession} callState=${callState}`);\n  };\n\n  return VoiceCallState.upsert(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport VoiceCallStates from '/imports/api/voice-users';\n\nexport default function clearVoiceCallStates(meetingId) {\n  if (meetingId) {\n    return VoiceCallStates.remove({ meetingId }, () => {\n      Logger.info(`Cleared VoiceCallStates in (${meetingId})`);\n    });\n  }\n\n  return VoiceCallStates.remove({}, () => {\n    Logger.info('Cleared VoiceCallStates in all meetings');\n  });\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport handleVoiceCallStateEvent from './handlers/voiceCallStateEvent';\n\nRedisPubSub.on('VoiceCallStateEvtMsg', handleVoiceCallStateEvent);\n","import './eventHandlers';\nimport './publishers';\n","import VoiceCallStates from '/imports/api/voice-call-states';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction voiceCallStates() {\n  if (!this.userId) {\n    return VoiceCallStates.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing Voice Call States for ${meetingId} ${requesterUserId}`);\n\n  return VoiceCallStates.find({ meetingId, userId: requesterUserId });\n}\n\nfunction publish(...args) {\n  const boundVoiceCallStates = voiceCallStates.bind(this);\n  return boundVoiceCallStates(...args);\n}\n\nMeteor.publish('voice-call-states', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst VoiceCallStates = new Mongo.Collection('voiceCallStates');\n\nif (Meteor.isServer) {\n  // types of queries for the voice users:\n  // 1. intId\n  // 2. meetingId, intId\n\n  VoiceCallStates._ensureIndex({ meetingId: 1, userId: 1 });\n}\n\nexport default VoiceCallStates;\n","import { check } from 'meteor/check';\nimport VoiceUsers from '/imports/api/voice-users/';\nimport Meetings from '/imports/api/meetings';\nimport addVoiceUser from '../modifiers/addVoiceUser';\nimport removeVoiceUser from '../modifiers/removeVoiceUser';\nimport updateVoiceUser from '../modifiers/updateVoiceUser';\n\nexport default function handleGetVoiceUsers({ body }, meetingId) {\n  const { users } = body;\n\n  check(meetingId, String);\n  check(users, Array);\n\n  const meeting = Meetings.findOne({ meetingId }, { fields: { 'voiceProp.voiceConf': 1 } });\n  const usersIds = users.map(m => m.intId);\n\n  const voiceUsersIdsToUpdate = VoiceUsers.find({\n    meetingId,\n    intId: { $in: usersIds },\n  }, { fields: { intId: 1 } }).fetch().map(m => m.intId);\n\n  const voiceUsersUpdated = [];\n  users.forEach((user) => {\n    if (voiceUsersIdsToUpdate.indexOf(user.intId) >= 0) {\n      // user already exist, then update\n      voiceUsersUpdated.push(updateVoiceUser(meetingId, {\n        intId: user.intId,\n        voiceUserId: user.voiceUserId,\n        talking: user.talking,\n        muted: user.muted,\n        voiceConf: meeting.voiceProp.voiceConf,\n        joined: true,\n      }));\n    } else {\n      // user doesn't exist yet, then add it\n      addVoiceUser(meetingId, {\n        voiceUserId: user.voiceUserId,\n        intId: user.intId,\n        callerName: user.callerName,\n        callerNum: user.callerNum,\n        muted: user.muted,\n        talking: user.talking,\n        callingWith: user.callingWith,\n        listenOnly: user.listenOnly,\n        voiceConf: meeting.voiceProp.voiceConf,\n        joined: true,\n      });\n    }\n  });\n\n  // removing extra users already existing in Mongo\n  const voiceUsersToRemove = VoiceUsers.find({\n    meetingId,\n    intId: { $nin: usersIds },\n  }).fetch();\n  voiceUsersToRemove.forEach(user => removeVoiceUser(meetingId, {\n    voiceConf: meeting.voiceProp.voiceConf,\n    voiceUserId: user.voiceUserId,\n    intId: user.intId,\n  }));\n\n  return voiceUsersUpdated;\n}\n","import { check } from 'meteor/check';\nimport Users from '/imports/api/users';\nimport addDialInUser from '/imports/api/users/server/modifiers/addDialInUser';\nimport addVoiceUser from '../modifiers/addVoiceUser';\n\n\nexport default function handleJoinVoiceUser({ body }, meetingId) {\n  const voiceUser = body;\n  voiceUser.joined = true;\n\n  check(meetingId, String);\n  check(voiceUser, {\n    voiceConf: String,\n    intId: String,\n    voiceUserId: String,\n    callerName: String,\n    callerNum: String,\n    muted: Boolean,\n    talking: Boolean,\n    callingWith: String,\n    listenOnly: Boolean,\n    joined: Boolean,\n  });\n\n  const {\n    intId,\n  } = voiceUser;\n\n  const User = Users.findOne({\n    meetingId,\n    intId,\n    connectionStatus: 'online',\n  });\n\n  if (!User) {\n    /* voice-only user - called into the conference */\n    addDialInUser(meetingId, voiceUser);\n  }\n\n  return addVoiceUser(meetingId, voiceUser);\n}\n","import { check } from 'meteor/check';\n\nimport removeVoiceUser from '/imports/api/voice-users/server/modifiers/removeVoiceUser';\nimport removeUser from '/imports/api/users/server/modifiers/removeUser';\nimport Users from '/imports/api/users';\n\nexport default function handleVoiceUpdate({ body }, meetingId) {\n  const voiceUser = body;\n\n  check(meetingId, String);\n  check(voiceUser, {\n    voiceConf: String,\n    intId: String,\n    voiceUserId: String,\n  });\n\n  const {\n    intId,\n    voiceUserId,\n  } = voiceUser;\n\n  const isDialInUser = (userId, meetingID) => !!Users.findOne({ meetingId: meetingID, userId, clientType: 'dial-in-user' });\n\n  // if the user is dial-in, leaving voice also means leaving userlist\n  if (isDialInUser(voiceUserId, meetingId)) removeUser(meetingId, intId);\n\n  return removeVoiceUser(meetingId, voiceUser);\n}\n","import changeMuteMeeting from '../modifiers/changeMuteMeeting';\n\nexport default function handleMeetingMuted({ body }, meetingId) {\n  return changeMuteMeeting(meetingId, body);\n}\n","import { check } from 'meteor/check';\n\nimport updateVoiceUser from '../modifiers/updateVoiceUser';\n\nexport default function handleVoiceUpdate({ body }, meetingId) {\n  const voiceUser = body;\n\n  check(meetingId, String);\n\n  // If a person is muted we have to force them to not talking\n  if (voiceUser.muted) {\n    voiceUser.talking = false;\n  }\n\n  return updateVoiceUser(meetingId, voiceUser);\n}\n","import { check } from 'meteor/check';\n\nimport updateVoiceUser from '../modifiers/updateVoiceUser';\n\nexport default function handleVoiceUpdate({ body }, meetingId) {\n  const voiceUser = body;\n\n  check(meetingId, String);\n\n  return updateVoiceUser(meetingId, voiceUser);\n}\n","import VoiceUsers from '/imports/api/voice-users/';\nimport Meetings from '/imports/api/meetings';\nimport addDialInUser from '/imports/api/users/server/modifiers/addDialInUser';\nimport removeVoiceUser from '../modifiers/removeVoiceUser';\nimport updateVoiceUser from '../modifiers/updateVoiceUser';\nimport addVoiceUser from '../modifiers/addVoiceUser';\n\n\nexport default function handleVoiceUsers({ header, body }) {\n  const { voiceUsers } = body;\n  const { meetingId } = header;\n\n  const meeting = Meetings.findOne({ meetingId }, { fields: { 'voiceProp.voiceConf': 1 } });\n  const usersIds = voiceUsers.map(m => m.intId);\n\n  const voiceUsersIdsToUpdate = VoiceUsers.find({\n    meetingId,\n    intId: { $in: usersIds },\n  }, { fields: { intId: 1 } }).fetch().map(m => m.intId);\n\n  const voiceUsersUpdated = [];\n  voiceUsers.forEach((voice) => {\n    if (voiceUsersIdsToUpdate.indexOf(voice.intId) >= 0) {\n      // user already exist, then update\n      voiceUsersUpdated.push(updateVoiceUser(meetingId, {\n        intId: voice.intId,\n        voiceUserId: voice.voiceUserId,\n        talking: voice.talking,\n        muted: voice.muted,\n        voiceConf: meeting.voiceProp.voiceConf,\n        joined: true,\n      }));\n    } else {\n      // user doesn't exist yet, then add it\n      addVoiceUser(meetingId, {\n        voiceUserId: voice.voiceUserId,\n        intId: voice.intId,\n        callerName: voice.callerName,\n        callerNum: voice.callerNum,\n        muted: voice.muted,\n        talking: voice.talking,\n        callingWith: voice.callingWith,\n        listenOnly: voice.listenOnly,\n        voiceConf: meeting.voiceProp.voiceConf,\n        joined: true,\n      });\n\n      addDialInUser(meetingId, voice);\n    }\n  });\n\n  // removing extra users already existing in Mongo\n  const voiceUsersToRemove = VoiceUsers.find({\n    meetingId,\n    intId: { $nin: usersIds },\n  }, { fields: { voiceUserId: 1, intId: 1 } }).fetch();\n  voiceUsersToRemove.forEach(user => removeVoiceUser(meetingId, {\n    voiceConf: meeting.voiceProp.voiceConf,\n    voiceUserId: user.voiceUserId,\n    intId: user.intId,\n  }));\n\n  return voiceUsersUpdated;\n}\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function ejectUserFromVoice(userId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'EjectUserFromVoiceCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  check(userId, String);\n\n  const payload = {\n    userId,\n    ejectedBy: requesterUserId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Meetings from '/imports/api/meetings';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function muteAllExceptPresenterToggle() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'MuteAllExceptPresentersCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const meeting = Meetings.findOne({ meetingId });\n  const toggleMeetingMuted = !meeting.voiceProp.muteOnStart;\n\n  const payload = {\n    mutedBy: requesterUserId,\n    mute: toggleMeetingMuted,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Meetings from '/imports/api/meetings';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function muteAllToggle() {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'MuteMeetingCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  const meeting = Meetings.findOne({ meetingId });\n  const toggleMeetingMuted = !meeting.voiceProp.muteOnStart;\n\n  const payload = {\n    mutedBy: requesterUserId,\n    mute: toggleMeetingMuted,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { Meteor } from 'meteor/meteor';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport RedisPubSub from '/imports/startup/server/redis';\nimport Users from '/imports/api/users';\nimport VoiceUsers from '/imports/api/voice-users';\nimport Meetings from '/imports/api/meetings';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function muteToggle(uId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'MuteUserCmdMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n  const userToMute = uId || requesterUserId;\n\n  const requester = Users.findOne({\n    meetingId,\n    userId: requesterUserId,\n  });\n\n  const voiceUser = VoiceUsers.findOne({\n    intId: userToMute,\n    meetingId,\n  });\n\n  if (!requester || !voiceUser) return;\n\n  const { listenOnly, muted } = voiceUser;\n  if (listenOnly) return;\n\n  // if allowModsToUnmuteUsers is false, users will be kicked out for attempting to unmute others\n  if (requesterUserId !== userToMute && muted) {\n    const meeting = Meetings.findOne({ meetingId },\n      { fields: { 'usersProp.allowModsToUnmuteUsers': 1 } });\n    if (meeting.usersProp && !meeting.usersProp.allowModsToUnmuteUsers) {\n      Logger.warn(`Attempted unmuting by another user meetingId:${meetingId} requester: ${requesterUserId} userId: ${userToMute}`);\n      return;\n    }\n  }\n\n  const payload = {\n    userId: userToMute,\n    mutedBy: requesterUserId,\n    mute: !muted,\n  };\n\n  RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport VoiceUsers from '/imports/api/voice-users';\nimport Users from '/imports/api/users';\nimport flat from 'flat';\n\nexport default function addVoiceUser(meetingId, voiceUser) {\n  check(meetingId, String);\n  check(voiceUser, {\n    voiceUserId: String,\n    intId: String,\n    callerName: String,\n    callerNum: String,\n    muted: Boolean,\n    talking: Boolean,\n    callingWith: String,\n    listenOnly: Boolean,\n    voiceConf: String,\n    joined: Boolean, // This is a HTML5 only param.\n  });\n\n  const { intId, talking } = voiceUser;\n\n  const selector = {\n    meetingId,\n    intId,\n  };\n\n  const modifier = {\n    $set: Object.assign(\n      { meetingId, spoke: talking },\n      flat(voiceUser),\n    ),\n  };\n\n  const user = Users.findOne({ meetingId, userId: intId }, {\n    fields: {\n      color: 1,\n    },\n  });\n\n  if (user) modifier.$set.color = user.color;\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Add voice user=${intId}: ${err}`);\n    }\n\n    return Logger.info(`Add voice user=${intId} meeting=${meetingId}`);\n  };\n\n  return VoiceUsers.upsert(selector, modifier, cb);\n}\n","import Meetings from '/imports/api/meetings';\nimport { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\n\nexport default function changeMuteMeeting(meetingId, payload) {\n  check(meetingId, String);\n  check(payload, {\n    muted: Boolean,\n    mutedBy: String,\n  });\n\n  const selector = {\n    meetingId,\n  };\n\n  const modifier = {\n    $set: {\n      'voiceProp.muteOnStart': payload.muted,\n    },\n  };\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      Logger.error(`Changing meeting mute status meeting={${meetingId}} ${err}`);\n      return;\n    }\n\n    if (numChanged) {\n      Logger.info(`Changed meeting mute status meeting=${meetingId}`);\n    }\n  };\n\n\n  return Meetings.upsert(selector, modifier, cb);\n}\n","import Logger from '/imports/startup/server/logger';\nimport VoiceUsers from '/imports/api/voice-users';\n\nexport default function clearVoiceUser(meetingId) {\n  if (meetingId) {\n    return VoiceUsers.remove({ meetingId }, () => {\n      Logger.info(`Cleared VoiceUsers in (${meetingId})`);\n    });\n  }\n\n  return VoiceUsers.remove({}, () => {\n    Logger.info('Cleared VoiceUsers in all meetings');\n  });\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport VoiceUsers from '/imports/api/voice-users';\nimport { clearSpokeTimeout } from '/imports/api/common/server/helpers';\n\nexport default function removeVoiceUser(meetingId, voiceUser) {\n  check(meetingId, String);\n  check(voiceUser, {\n    voiceConf: String,\n    voiceUserId: String,\n    intId: String,\n  });\n\n  const { intId } = voiceUser;\n\n  const selector = {\n    meetingId,\n    intId,\n  };\n\n  const modifier = {\n    $set: {\n      muted: false,\n      talking: false,\n      listenOnly: false,\n      joined: false,\n      spoke: false,\n    },\n  };\n\n  clearSpokeTimeout(meetingId, intId);\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Remove voiceUser=${intId}: ${err}`);\n    }\n\n    return Logger.info(`Remove voiceUser=${intId} meeting=${meetingId}`);\n  };\n\n  return VoiceUsers.update(selector, modifier, cb);\n}\n","import { Match, check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport VoiceUsers from '/imports/api/voice-users';\nimport flat from 'flat';\nimport { spokeTimeoutHandles, clearSpokeTimeout } from '/imports/api/common/server/helpers';\n\nconst TALKING_TIMEOUT = 6000;\n\nexport default function updateVoiceUser(meetingId, voiceUser) {\n  check(meetingId, String);\n  check(voiceUser, {\n    intId: String,\n    voiceUserId: String,\n    talking: Match.Maybe(Boolean),\n    muted: Match.Maybe(Boolean),\n    voiceConf: String,\n    joined: Match.Maybe(Boolean),\n  });\n\n  const { intId } = voiceUser;\n\n  const selector = {\n    meetingId,\n    intId,\n  };\n\n  const modifier = {\n    $set: Object.assign(\n      flat(voiceUser),\n    ),\n  };\n\n  if (voiceUser.talking) {\n    const user = VoiceUsers.findOne({ meetingId, intId }, {\n      fields: {\n        startTime: 1,\n      },\n    });\n\n    if (user && !user.startTime) modifier.$set.startTime = Date.now();\n    modifier.$set.spoke = true;\n    modifier.$set.endTime = null;\n    clearSpokeTimeout(meetingId, intId);\n  }\n\n  const cb = (err) => {\n    if (err) {\n      return Logger.error(`Update voiceUser=${intId}: ${err}`);\n    }\n\n    return Logger.debug(`Update voiceUser=${intId} meeting=${meetingId}`);\n  };\n\n  if (!voiceUser.talking) {\n    const timeoutHandle = Meteor.setTimeout(() => {\n      const user = VoiceUsers.findOne({ meetingId, intId }, {\n        fields: {\n          endTime: 1,\n          talking: 1,\n        },\n      });\n\n      if (user) {\n        const { endTime, talking } = user;\n        const spokeDelay = ((Date.now() - endTime) < TALKING_TIMEOUT);\n        if (talking || spokeDelay) return;\n        modifier.$set.spoke = false;\n        modifier.$set.startTime = null;\n        VoiceUsers.update(selector, modifier, cb);\n      }\n    }, TALKING_TIMEOUT);\n\n    spokeTimeoutHandles[`${meetingId}-${intId}`] = timeoutHandle;\n    modifier.$set.endTime = Date.now();\n  }\n\n  return VoiceUsers.update(selector, modifier, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\nimport handleJoinVoiceUser from './handlers/joinVoiceUser';\nimport handleLeftVoiceUser from './handlers/leftVoiceUser';\nimport handleTalkingVoiceUser from './handlers/talkingVoiceUser';\nimport handleMutedVoiceUser from './handlers/mutedVoiceUser';\nimport handleGetVoiceUsers from './handlers/getVoiceUsers';\nimport handleVoiceUsers from './handlers/voiceUsers';\nimport handleMeetingMuted from './handlers/meetingMuted';\n\nRedisPubSub.on('UserLeftVoiceConfToClientEvtMsg', handleLeftVoiceUser);\nRedisPubSub.on('UserJoinedVoiceConfToClientEvtMsg', handleJoinVoiceUser);\nRedisPubSub.on('UserTalkingVoiceEvtMsg', handleTalkingVoiceUser);\nRedisPubSub.on('UserMutedVoiceEvtMsg', handleMutedVoiceUser);\nRedisPubSub.on('GetVoiceUsersMeetingRespMsg', processForHTML5ServerOnly(handleGetVoiceUsers));\nRedisPubSub.on('SyncGetVoiceUsersRespMsg', handleVoiceUsers);\nRedisPubSub.on('MeetingMutedEvtMsg', handleMeetingMuted);\n","import './eventHandlers';\nimport './publishers';\nimport './methods';\n","import { Meteor } from 'meteor/meteor';\nimport muteToggle from './methods/muteToggle';\nimport muteAllToggle from './methods/muteAllToggle';\nimport muteAllExceptPresenterToggle from './methods/muteAllExceptPresenterToggle';\nimport ejectUserFromVoice from './methods/ejectUserFromVoice';\n\nMeteor.methods({\n  toggleVoice: muteToggle,\n  muteAllUsers: muteAllToggle,\n  muteAllExceptPresenter: muteAllExceptPresenterToggle,\n  ejectUserFromVoice,\n});\n","import VoiceUsers from '/imports/api/voice-users';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\nimport ejectUserFromVoice from './methods/ejectUserFromVoice';\n\nfunction voiceUser() {\n  if (!this.userId) {\n    return VoiceUsers.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(meetingId, String);\n  check(requesterUserId, String);\n  const onCloseConnection = Meteor.bindEnvironment(() => {\n    try {\n      // I used user because voiceUser is the function's name\n      const User = VoiceUsers.findOne({ meetingId, requesterUserId });\n      if (User) {\n        ejectUserFromVoice(requesterUserId);\n      }\n    } catch (e) {\n      Logger.error(`Exception while executing ejectUserFromVoice for ${requesterUserId}: ${e}`);\n    }\n  });\n\n  Logger.debug(`Publishing Voice User for ${meetingId} ${requesterUserId}`);\n\n  this._session.socket.on('close', _.debounce(onCloseConnection, 100));\n  return VoiceUsers.find({ meetingId });\n}\n\nfunction publish(...args) {\n  const boundVoiceUser = voiceUser.bind(this);\n  return boundVoiceUser(...args);\n}\n\nMeteor.publish('voiceUsers', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst VoiceUsers = new Mongo.Collection('voiceUsers');\n\nif (Meteor.isServer) {\n  // types of queries for the voice users:\n  // 1. intId\n  // 2. meetingId, intId\n\n  VoiceUsers._ensureIndex({ intId: 1 });\n  VoiceUsers._ensureIndex({ meetingId: 1, intId: 1 });\n}\n\nexport default VoiceUsers;\n","import { check } from 'meteor/check';\nimport modifyWhiteboardAccess from '../modifiers/modifyWhiteboardAccess';\n\nexport default function handleModifyWhiteboardAccess({ body }, meetingId) {\n  const { multiUser, whiteboardId } = body;\n\n  check(multiUser, Boolean);\n  check(whiteboardId, String);\n  check(meetingId, String);\n\n  return modifyWhiteboardAccess(meetingId, whiteboardId, multiUser);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nexport default function changeWhiteboardAccess(multiUser, whiteboardId) {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n  const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n  const EVENT_NAME = 'ModifyWhiteboardAccessPubMsg';\n\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  check(multiUser, Boolean);\n  check(whiteboardId, String);\n\n  const payload = {\n    multiUser,\n    whiteboardId,\n  };\n\n  return RedisPubSub.publishUserMessage(CHANNEL, EVENT_NAME, meetingId, requesterUserId, payload);\n}\n","import { check } from 'meteor/check';\nimport Logger from '/imports/startup/server/logger';\nimport WhiteboardMultiUser from '/imports/api/whiteboard-multi-user/';\n\n\nexport default function modifyWhiteboardAccess(meetingId, whiteboardId, multiUser) {\n  check(meetingId, String);\n  check(whiteboardId, String);\n  check(multiUser, Boolean);\n\n  const selector = {\n    meetingId,\n    whiteboardId,\n  };\n\n  const modifier = {\n    meetingId,\n    whiteboardId,\n    multiUser,\n  };\n\n\n  const cb = (err, numChanged) => {\n    if (err) {\n      return Logger.error(`Error while adding an entry to Multi-User collection: ${err}`);\n    }\n\n    const { insertedId } = numChanged;\n    if (insertedId) {\n      return Logger.info(`Added multiUser flag=${multiUser} meetingId=${meetingId} whiteboardId=${whiteboardId}`);\n    }\n\n    return Logger.info(`Upserted multiUser flag=${multiUser} meetingId=${meetingId} whiteboardId=${whiteboardId}`);\n  };\n\n  return WhiteboardMultiUser.upsert(selector, modifier, cb);\n}\n","import RedisPubSub from '/imports/startup/server/redis';\nimport { processForHTML5ServerOnly } from '/imports/api/common/server/helpers';\nimport handleGetWhiteboardAccess from './handlers/modifyWhiteboardAccess';\n\nRedisPubSub.on('GetWhiteboardAccessRespMsg', processForHTML5ServerOnly(handleGetWhiteboardAccess));\nRedisPubSub.on('SyncGetWhiteboardAccessRespMsg', handleGetWhiteboardAccess);\nRedisPubSub.on('ModifyWhiteboardAccessEvtMsg', handleGetWhiteboardAccess);\n","import './eventHandlers';\nimport './methods';\nimport './publishers';\n","import { Meteor } from 'meteor/meteor';\nimport changeWhiteboardAccess from './methods/changeWhiteboardAccess';\n\nMeteor.methods({\n  changeWhiteboardAccess,\n});\n","import WhiteboardMultiUser from '/imports/api/whiteboard-multi-user/';\nimport { Meteor } from 'meteor/meteor';\nimport Logger from '/imports/startup/server/logger';\nimport { extractCredentials } from '/imports/api/common/server/helpers';\n\nfunction whiteboardMultiUser() {\n  if (!this.userId) {\n    return WhiteboardMultiUser.find({ meetingId: '' });\n  }\n  const { meetingId, requesterUserId } = extractCredentials(this.userId);\n\n  Logger.debug(`Publishing whiteboard-multi-user for ${meetingId} ${requesterUserId}`);\n\n  return WhiteboardMultiUser.find({ meetingId });\n}\n\n\nfunction publish(...args) {\n  const boundMultiUser = whiteboardMultiUser.bind(this);\n  return boundMultiUser(...args);\n}\n\nMeteor.publish('whiteboard-multi-user', publish);\n","import { Meteor } from 'meteor/meteor';\n\nconst WhiteboardMultiUser = new Mongo.Collection('whiteboard-multi-user');\n\nif (Meteor.isServer) {\n  // types of queries for the whiteboard-multi-user:\n  // 1. meetingId\n\n  WhiteboardMultiUser._ensureIndex({ meetingId: 1 });\n}\n\nexport default WhiteboardMultiUser;\n","import Users from '/imports/api/users';\n\nconst MSG_DIRECT_TYPE = 'DIRECT';\nconst NODE_USER = 'nodeJSapp';\n\nexport const spokeTimeoutHandles = {};\nexport const clearSpokeTimeout = (meetingId, userId) => {\n  if (spokeTimeoutHandles[`${meetingId}-${userId}`]) {\n    Meteor.clearTimeout(spokeTimeoutHandles[`${meetingId}-${userId}`]);\n    delete spokeTimeoutHandles[`${meetingId}-${userId}`];\n  }\n};\n\nexport const indexOf = [].indexOf || function (item) {\n  for (let i = 0, l = this.length; i < l; i += 1) {\n    if (i in this && this[i] === item) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nexport const processForHTML5ServerOnly = fn => (message, ...args) => {\n  const { envelope } = message;\n  const { routing } = envelope;\n  const { msgType, meetingId, userId } = routing;\n\n  const selector = {\n    userId,\n    meetingId,\n  };\n\n  const user = Users.findOne(selector);\n\n  const shouldSkip = user && msgType === MSG_DIRECT_TYPE && userId !== NODE_USER && user.clientType !== 'HTML5';\n  if (shouldSkip) return () => { };\n  return fn(message, ...args);\n};\n\n/**\n * Calculate a 32 bit FNV-1a hash\n * Found here: https://gist.github.com/vaiorabbit/5657561\n * Ref.: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param {string} str the input value\n * @param {boolean} [asString=false] set to true to return the hash value as\n *     8-digit hex string instead of an integer\n * @param {integer} [seed] optionally pass the hash of the previous chunk\n * @returns {integer | string}\n */\n/* eslint-disable */\nexport const hashFNV32a = (str, asString, seed) => {\n  let hval = (seed === undefined) ? 0x811c9dc5 : seed;\n\n  for (let i = 0, l = str.length; i < l; i++) {\n    hval ^= str.charCodeAt(i);\n    hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);\n  }\n  if (asString) {\n    return (`0000000${(hval >>> 0).toString(16)}`).substr(-8);\n  }\n  return hval >>> 0;\n};\n/* eslint-enable */\n\nexport const extractCredentials = (credentials) => {\n  if (!credentials) return {};\n  const credentialsArray = credentials.split('--');\n  const meetingId = credentialsArray[0];\n  const requesterUserId = credentialsArray[1];\n  return { meetingId, requesterUserId };\n};\n","import { Meteor } from 'meteor/meteor';\nimport { WebAppInternals } from 'meteor/webapp';\nimport Langmap from 'langmap';\nimport fs from 'fs';\nimport heapdump from 'heapdump';\nimport Users from '/imports/api/users';\nimport './settings';\nimport { lookup as lookupUserAgent } from 'useragent';\nimport { check } from 'meteor/check';\nimport memwatch from 'memwatch-next';\nimport Logger from './logger';\nimport Redis from './redis';\nimport setMinBrowserVersions from './minBrowserVersion';\nimport userLeaving from '/imports/api/users/server/methods/userLeaving';\n\nconst AVAILABLE_LOCALES = fs.readdirSync('assets/app/locales');\n\nMeteor.startup(() => {\n  const APP_CONFIG = Meteor.settings.public.app;\n  const INTERVAL_IN_SETTINGS = (Meteor.settings.public.pingPong.clearUsersInSeconds) * 1000;\n  const INTERVAL_TIME = INTERVAL_IN_SETTINGS < 10000 ? 10000 : INTERVAL_IN_SETTINGS;\n  const env = Meteor.isDevelopment ? 'development' : 'production';\n  const CDN_URL = APP_CONFIG.cdn;\n  let heapDumpMbThreshold = 100;\n\n  const memoryMonitoringSettings = Meteor.settings.private.memoryMonitoring;\n  if (memoryMonitoringSettings.stat.enabled) {\n    memwatch.on('stats', (stats) => {\n      let heapDumpTriggered = false;\n\n      if (memoryMonitoringSettings.heapdump.enabled) {\n        heapDumpTriggered = (stats.current_base / 1048576) > heapDumpMbThreshold;\n      }\n      Logger.info('memwatch stats', { ...stats, heapDumpEnabled: memoryMonitoringSettings.heapdump.enabled, heapDumpTriggered });\n\n      if (heapDumpTriggered) {\n        heapdump.writeSnapshot(`./heapdump-stats-${Date.now()}.heapsnapshot`);\n        heapDumpMbThreshold += 100;\n      }\n    });\n  }\n\n  if (memoryMonitoringSettings.leak.enabled) {\n    memwatch.on('leak', (info) => {\n      Logger.info('memwatch leak', info);\n    });\n  }\n\n  if (CDN_URL.trim()) {\n    // Add CDN\n    BrowserPolicy.content.disallowEval();\n    BrowserPolicy.content.allowInlineScripts();\n    BrowserPolicy.content.allowInlineStyles();\n    BrowserPolicy.content.allowImageDataUrl(CDN_URL);\n    BrowserPolicy.content.allowFontDataUrl(CDN_URL);\n    BrowserPolicy.content.allowOriginForAll(CDN_URL);\n    WebAppInternals.setBundledJsCssPrefix(CDN_URL + APP_CONFIG.basename);\n\n    const fontRegExp = /\\.(eot|ttf|otf|woff|woff2)$/;\n\n    WebApp.rawConnectHandlers.use('/', (req, res, next) => {\n      if (fontRegExp.test(req._parsedUrl.pathname)) {\n        res.setHeader('Access-Control-Allow-Origin', '*');\n        res.setHeader('Vary', 'Origin');\n        res.setHeader('Pragma', 'public');\n        res.setHeader('Cache-Control', '\"public\"');\n      }\n      return next();\n    });\n  }\n\n  setMinBrowserVersions();\n\n  Meteor.setInterval(() => {\n    const currentTime = Date.now();\n    Logger.info('Checking for inactive users');\n    const users = Users.find({\n      connectionStatus: 'online',\n      clientType: 'HTML5',\n      lastPing: {\n        $lt: (currentTime - INTERVAL_TIME), // get user who has not pinged in the last 10 seconds\n      },\n      loginTime: {\n        $lt: (currentTime - INTERVAL_TIME),\n      },\n    }).fetch();\n    if (!users.length) return Logger.info('No inactive users');\n    Logger.info('Removing inactive users');\n    users.forEach((user) => {\n      Logger.info(`Detected inactive user, userId:${user.userId}, meetingId:${user.meetingId}`);\n      return userLeaving(user.meetingId, user.userId, user.connectionId);\n    });\n    return Logger.info('All inactive users have been removed');\n  }, INTERVAL_TIME);\n\n  Logger.warn(`SERVER STARTED.\\nENV=${env},\\nnodejs version=${process.version}\\nCDN=${CDN_URL}\\n`, APP_CONFIG);\n});\n\nWebApp.connectHandlers.use('/check', (req, res) => {\n  const payload = { html5clientStatus: 'running' };\n\n  res.setHeader('Content-Type', 'application/json');\n  res.writeHead(200);\n  res.end(JSON.stringify(payload));\n});\n\nWebApp.connectHandlers.use('/locale', (req, res) => {\n  const APP_CONFIG = Meteor.settings.public.app;\n  const fallback = APP_CONFIG.defaultSettings.application.fallbackLocale;\n  const override = APP_CONFIG.defaultSettings.application.overrideLocale;\n  const browserLocale = override && req.query.init === 'true'\n    ? override.split(/[-_]/g) : req.query.locale.split(/[-_]/g);\n\n  const localeList = [fallback];\n\n  const usableLocales = AVAILABLE_LOCALES\n    .map(file => file.replace('.json', ''))\n    .reduce((locales, locale) => (locale.match(browserLocale[0])\n      ? [...locales, locale]\n      : locales), []);\n\n  const regionDefault = usableLocales.find(locale => browserLocale[0] === locale);\n\n  if (regionDefault) localeList.push(regionDefault);\n  if (!regionDefault && usableLocales.length) localeList.push(usableLocales[0]);\n\n  let normalizedLocale;\n  let messages = {};\n\n  if (browserLocale.length > 1) {\n    normalizedLocale = `${browserLocale[0]}_${browserLocale[1].toUpperCase()}`;\n    localeList.push(normalizedLocale);\n  }\n\n  localeList.forEach((locale) => {\n    try {\n      const data = Assets.getText(`locales/${locale}.json`);\n      messages = Object.assign(messages, JSON.parse(data));\n      normalizedLocale = locale;\n    } catch (e) {\n      Logger.warn(`'Could not process locale ${locale}:${e}`);\n      // Getting here means the locale is not available in the current locale files.\n    }\n  });\n\n  res.setHeader('Content-Type', 'application/json');\n  res.end(JSON.stringify({ normalizedLocale, messages }));\n});\n\nWebApp.connectHandlers.use('/locales', (req, res) => {\n  let locales = [];\n  try {\n    locales = AVAILABLE_LOCALES\n      .map(file => file.replace('.json', ''))\n      .map(file => file.replace('_', '-'))\n      .map(locale => ({\n        locale,\n        name: Langmap[locale].nativeName,\n      }));\n  } catch (e) {\n    Logger.warn(`'Could not process locales error: ${e}`);\n  }\n\n  res.setHeader('Content-Type', 'application/json');\n  res.writeHead(200);\n  res.end(JSON.stringify(locales));\n});\n\nWebApp.connectHandlers.use('/feedback', (req, res) => {\n  req.on('data', Meteor.bindEnvironment((data) => {\n    const body = JSON.parse(data);\n    const {\n      meetingId,\n      userId,\n      authToken,\n      userName: reqUserName,\n      comment,\n      rating,\n    } = body;\n\n    check(meetingId, String);\n    check(userId, String);\n    check(authToken, String);\n    check(reqUserName, String);\n    check(comment, String);\n    check(rating, Number);\n\n    const user = Users.findOne({\n      meetingId,\n      userId,\n      connectionStatus: 'offline',\n      authToken,\n    });\n\n    if (!user) {\n      Logger.warn('Couldn\\'t find user for feedback');\n    }\n\n    res.setHeader('Content-Type', 'application/json');\n    res.writeHead(200);\n    res.end(JSON.stringify({ status: 'ok' }));\n\n    body.userName = user ? user.name : `[unconfirmed] ${reqUserName}`;\n\n    const feedback = {\n      ...body,\n    };\n    Logger.info('FEEDBACK LOG:', feedback);\n  }));\n});\n\nWebApp.connectHandlers.use('/useragent', (req, res) => {\n  const userAgent = req.headers['user-agent'];\n  let response = 'No user agent found in header';\n  if (userAgent) {\n    response = lookupUserAgent(userAgent).toString();\n  }\n\n  Logger.info(`The requesting user agent is ${response}`);\n\n  // res.setHeader('Content-Type', 'application/json');\n  res.writeHead(200);\n  res.end(response);\n});\n\nexport const eventEmitter = Redis.emitter;\n\nexport const redisPubSub = Redis;\n","import { Meteor } from 'meteor/meteor';\nimport { createLogger, format, transports } from 'winston';\n\nconst LOG_CONFIG = Meteor.settings.private.serverLog || {};\nconst { level } = LOG_CONFIG;\n\nconst Logger = createLogger({\n  level,\n  format: format.combine(\n    format.colorize({ level: true }),\n    format.splat(),\n    format.simple(),\n  ),\n  transports: [\n    // console logging\n    new transports.Console({\n      prettyPrint: false,\n      humanReadableUnhandledException: true,\n      colorize: true,\n      handleExceptions: true,\n      level,\n    }),\n  ],\n});\n\nexport default Logger;\n\nexport const logger = Logger;\n","import { Meteor } from 'meteor/meteor';\nimport { setMinimumBrowserVersions } from 'meteor/modern-browsers';\n\nconst setMinBrowserVersions = () => {\n  const { minBrowserVersions } = Meteor.settings.private;\n\n  const versions = {};\n\n  minBrowserVersions.forEach((elem) => {\n    let { version } = elem;\n    if (version === 'Infinity') version = Infinity;\n\n    versions[elem.browser] = version;\n  });\n\n  setMinimumBrowserVersions(versions, 'bbb-min');\n};\n\nexport default setMinBrowserVersions;\n","/* global PowerQueue */\nimport Redis from 'redis';\nimport { Meteor } from 'meteor/meteor';\nimport { EventEmitter2 } from 'eventemitter2';\nimport { check } from 'meteor/check';\nimport Logger from './logger';\n\n// Fake meetingId used for messages that have no meetingId\nconst NO_MEETING_ID = '_';\n\nconst makeEnvelope = (channel, eventName, header, body, routing) => {\n  const envelope = {\n    envelope: {\n      name: eventName,\n      routing: routing || {\n        sender: 'bbb-apps-akka',\n        // sender: 'html5-server', // TODO\n      },\n      timestamp: Date.now(),\n    },\n    core: {\n      header,\n      body,\n    },\n  };\n\n  return JSON.stringify(envelope);\n};\n\nconst makeDebugger = enabled => (message) => {\n  if (!enabled) return;\n  Logger.debug(`REDIS: ${message}`);\n};\n\nclass MeetingMessageQueue {\n  constructor(eventEmitter, asyncMessages = [], debug = () => { }) {\n    this.asyncMessages = asyncMessages;\n    this.emitter = eventEmitter;\n    this.queue = new PowerQueue();\n    this.debug = debug;\n\n    this.handleTask = this.handleTask.bind(this);\n    this.queue.taskHandler = this.handleTask;\n  }\n\n  handleTask(data, next) {\n    const { channel } = data;\n    const { envelope } = data.parsedMessage;\n    const { header } = data.parsedMessage.core;\n    const { body } = data.parsedMessage.core;\n    const { meetingId } = header;\n    const eventName = header.name;\n    const isAsync = this.asyncMessages.includes(channel)\n      || this.asyncMessages.includes(eventName);\n\n    let called = false;\n\n    check(eventName, String);\n    check(body, Object);\n\n    const callNext = () => {\n      if (called) return;\n      this.debug(`${eventName} completed ${isAsync ? 'async' : 'sync'}`);\n      called = true;\n      const queueLength = this.queue.length();\n      if (queueLength > 100) {\n        Logger.error(`prev queue size=${queueLength} `);\n      }\n      next();\n    };\n\n    const onError = (reason) => {\n      Logger.error(`${eventName}: ${reason.stack ? reason.stack : reason}`);\n      callNext();\n    };\n\n    try {\n      this.debug(`${JSON.stringify(data.parsedMessage.core)} emitted`);\n\n      if (isAsync) {\n        callNext();\n      }\n\n      this.emitter\n        .emitAsync(eventName, { envelope, header, body }, meetingId)\n        .then(callNext)\n        .catch(onError);\n    } catch (reason) {\n      onError(reason);\n    }\n  }\n\n  add(...args) {\n    return this.queue.add(...args);\n  }\n}\n\nclass RedisPubSub {\n  static handlePublishError(err) {\n    if (err) {\n      Logger.error(err);\n    }\n  }\n\n  constructor(config = {}) {\n    this.config = config;\n\n    this.didSendRequestEvent = false;\n    const host = process.env.REDIS_HOST || Meteor.settings.private.redis.host;\n    const redisConf = Meteor.settings.private.redis;\n    const { password, port } = redisConf;\n\n    if (password) {\n      this.pub = Redis.createClient({ host, port, password });\n      this.sub = Redis.createClient({ host, port, password });\n      this.pub.auth(password);\n      this.sub.auth(password);\n    } else {\n      this.pub = Redis.createClient({ host, port });\n      this.sub = Redis.createClient({ host, port });\n    }\n\n    this.emitter = new EventEmitter2();\n    this.mettingsQueues = {};\n\n    this.handleSubscribe = this.handleSubscribe.bind(this);\n    this.handleMessage = this.handleMessage.bind(this);\n    this.debug = makeDebugger(this.config.debug);\n  }\n\n  init() {\n    this.sub.on('psubscribe', Meteor.bindEnvironment(this.handleSubscribe));\n    this.sub.on('pmessage', Meteor.bindEnvironment(this.handleMessage));\n\n    const channelsToSubscribe = this.config.subscribeTo;\n\n    channelsToSubscribe.forEach((channel) => {\n      this.sub.psubscribe(channel);\n    });\n\n    this.debug(`Subscribed to '${channelsToSubscribe}'`);\n  }\n\n  updateConfig(config) {\n    this.config = Object.assign({}, this.config, config);\n    this.debug = makeDebugger(this.config.debug);\n  }\n\n\n  // TODO: Move this out of this class, maybe pass as a callback to init?\n  handleSubscribe() {\n    if (this.didSendRequestEvent) return;\n\n    // populate collections with pre-existing data\n    const REDIS_CONFIG = Meteor.settings.private.redis;\n    const CHANNEL = REDIS_CONFIG.channels.toAkkaApps;\n    const EVENT_NAME = 'GetAllMeetingsReqMsg';\n\n    const body = {\n      requesterId: 'nodeJSapp',\n    };\n\n    this.publishSystemMessage(CHANNEL, EVENT_NAME, body);\n    this.didSendRequestEvent = true;\n  }\n\n  handleMessage(pattern, channel, message) {\n    const parsedMessage = JSON.parse(message);\n    const { name: eventName, meetingId } = parsedMessage.core.header;\n    const { ignored: ignoredMessages, async } = this.config;\n\n    if (ignoredMessages.includes(channel)\n      || ignoredMessages.includes(eventName)) {\n      if (eventName === 'CheckAlivePongSysMsg') {\n        return;\n      }\n      this.debug(`${eventName} skipped`);\n      return;\n    }\n\n    const queueId = meetingId || NO_MEETING_ID;\n\n    if (!(queueId in this.mettingsQueues)) {\n      this.mettingsQueues[meetingId] = new MeetingMessageQueue(this.emitter, async, this.debug);\n    }\n\n    this.mettingsQueues[meetingId].add({\n      pattern,\n      channel,\n      eventName,\n      parsedMessage,\n    });\n  }\n\n  destroyMeetingQueue(id) {\n    delete this.mettingsQueues[id];\n  }\n\n  on(...args) {\n    return this.emitter.on(...args);\n  }\n\n  publishVoiceMessage(channel, eventName, voiceConf, payload) {\n    const header = {\n      name: eventName,\n      voiceConf,\n    };\n\n    const envelope = makeEnvelope(channel, eventName, header, payload);\n\n    return this.pub.publish(channel, envelope, RedisPubSub.handlePublishError);\n  }\n\n  publishSystemMessage(channel, eventName, payload) {\n    const header = {\n      name: eventName,\n    };\n\n    const envelope = makeEnvelope(channel, eventName, header, payload);\n\n    return this.pub.publish(channel, envelope, RedisPubSub.handlePublishError);\n  }\n\n  publishMeetingMessage(channel, eventName, meetingId, payload) {\n    const header = {\n      name: eventName,\n      meetingId,\n    };\n\n    const envelope = makeEnvelope(channel, eventName, header, payload);\n\n    return this.pub.publish(channel, envelope, RedisPubSub.handlePublishError);\n  }\n\n  publishUserMessage(channel, eventName, meetingId, userId, payload) {\n    const header = {\n      name: eventName,\n      meetingId,\n      userId,\n    };\n\n    if (!meetingId || !userId) {\n      Logger.warn(`Publishing ${eventName} with potentially missing data userId=${userId} meetingId=${meetingId}`);\n    }\n    const envelope = makeEnvelope(channel, eventName, header, payload, { meetingId, userId });\n\n    return this.pub.publish(channel, envelope, RedisPubSub.handlePublishError);\n  }\n}\n\nconst RedisPubSubSingleton = new RedisPubSub();\n\nMeteor.startup(() => {\n  const REDIS_CONFIG = Meteor.settings.private.redis;\n\n  RedisPubSubSingleton.updateConfig(REDIS_CONFIG);\n  RedisPubSubSingleton.init();\n});\n\nexport default RedisPubSubSingleton;\n","import { Meteor } from 'meteor/meteor';\nimport fs from 'fs';\nimport YAML from 'yaml';\n\nconst YAML_FILE_PATH = 'assets/app/config/settings.yml';\n\ntry {\n  if (fs.existsSync(YAML_FILE_PATH)) {\n    const SETTINGS = YAML.parse(fs.readFileSync(YAML_FILE_PATH, 'utf-8'));\n\n    Meteor.settings = SETTINGS;\n    __meteor_runtime_config__.PUBLIC_SETTINGS = SETTINGS.public;\n  } else {\n    throw new Error('File doesn\\'t exists');\n  }\n} catch (error) {\n  console.error('Error on load configuration file.', error);\n}\n","// Used in Flash and HTML to show a legitimate break in the line\nconst BREAK_LINE = '<br/>';\n\n// Soft return in HTML to signify a broken line without\n// displaying the escaped '<br/>' line break text\nconst CARRIAGE_RETURN = '\\r';\n\n// Handle this the same as carriage return, in case text copied has this\nconst NEW_LINE = '\\n';\n\nexport { BREAK_LINE, CARRIAGE_RETURN, NEW_LINE };\n","export const XLS = 'application/vnd.ms-excel';\nexport const XLSX = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\nexport const DOC = 'application/msword';\nexport const DOCX = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\nexport const PPT = 'application/vnd.ms-powerpoint';\nexport const PPTX = 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\nexport const ODT = 'application/vnd.oasis.opendocument.text';\nexport const RTF = 'application/rtf';\nexport const TXT = 'text/plain';\nexport const ODS = 'application/vnd.oasis.opendocument.spreadsheet';\nexport const ODP = 'application/vnd.oasis.opendocument.presentation';\nexport const PDF = 'application/pdf';\nexport const JPEG = 'image/jpeg';\nexport const PNG = 'image/png';\nexport const SVG = 'image/svg+xml';\n\nexport const UPLOAD_SUPORTED = [\n  XLS,\n  XLSX,\n  DOC,\n  DOCX,\n  PPT,\n  PPTX,\n  ODT,\n  RTF,\n  TXT,\n  ODS,\n  ODP,\n  PDF,\n  JPEG,\n  PNG,\n];\n","//\n// Regular Expression for URL validation\n//\n// Author: Diego Perini\n// Updated: 2010/12/05\n// License: MIT\n//\n// Copyright (c) 2010-2013 Diego Perini (http://www.iport.it)\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation\n// files (the \"Software\"), to deal in the Software without\n// restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n// OTHER DEALINGS IN THE SOFTWARE.\n//\n// the regular expression composed & commented\n// could be easily tweaked for RFC compliance,\n// it was expressly modified to fit & satisfy\n// these test for an URL shortener:\n//\n//   http://mathiasbynens.be/demo/url-regex\n//\n// Notes on possible differences from a standard/generic validation:\n//\n// - utf-8 char class take in consideration the full Unicode range\n// - TLDs have been made mandatory so single names like \"localhost\" fails\n// - protocols have been restricted to ftp, http and https only as requested\n//\n// Changes:\n//\n// - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255\n//   first and last IP address of each class is considered invalid\n//   (since they are broadcast/network addresses)\n//\n// - Added exclusion of private, reserved and/or local networks ranges\n//\n// - Made starting path slash optional (http://example.com?foo=bar)\n//\n// - Allow a dot (.) at the end of hostnames (http://example.com.)\n//\n// Compressed one-line versions:\n//\n// Javascript version (merge into one line)\n//\n// /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})\n// (?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})\n// (?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}\n// (?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)\n// (?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)\n// (?::\\d{2,5})?(?:[/?#]\\S*)?$/i\n//\n// PHP version (merge into one line)\n//\n// _^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)\n// (?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])\n// (?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5]))\n// {2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\x{00a1}-\\x{ffff}0-9]-*)\n// *[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}0-9]-*)*[a-z\\x{00a1}-\\x{ffff}0-9]+)\n// *(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$_iuS\n//\n\nexport default new RegExp(\n\n  // protocol identifier\n  '(?:(?:https?|ftp)://)' +\n\n  // user:pass authentication\n  '(?:\\\\S+(?::\\\\S*)?@)?' +\n  '(?:' +\n\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n  '|' +\n\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n\n    // TLD may end with dot\n    '\\\\.?' +\n  ')' +\n\n  // port number\n  '(?::\\\\d{2,5})?' +\n\n  // resource path\n  '(?:[/?#]\\\\S*)?', 'img',\n);\n","import '/imports/startup/server';\n\n// 2x\nimport '/imports/api/meetings/server';\nimport '/imports/api/users/server';\nimport '/imports/api/annotations/server';\nimport '/imports/api/cursor/server';\nimport '/imports/api/polls/server';\nimport '/imports/api/captions/server';\nimport '/imports/api/presentations/server';\nimport '/imports/api/presentation-pods/server';\nimport '/imports/api/presentation-upload-token/server';\nimport '/imports/api/slides/server';\nimport '/imports/api/breakouts/server';\nimport '/imports/api/group-chat/server';\nimport '/imports/api/group-chat-msg/server';\nimport '/imports/api/screenshare/server';\nimport '/imports/api/users-settings/server';\nimport '/imports/api/voice-users/server';\nimport '/imports/api/whiteboard-multi-user/server';\nimport '/imports/api/video-streams/server';\nimport '/imports/api/network-information/server';\nimport '/imports/api/users-infos/server';\nimport '/imports/api/note/server';\nimport '/imports/api/external-videos/server';\nimport '/imports/api/guest-users/server';\nimport '/imports/api/ping-pong/server';\nimport '/imports/api/local-settings/server';\nimport '/imports/api/voice-call-states/server';\n\n// Commons\nimport '/imports/api/log-client/server';\nimport '/imports/api/common/server/helpers';\nimport '/imports/startup/server/logger';\n\n// Needed for Atmosphere package RocketChat/meteor-streamer\n// It is out of date and was written when Meteor contained lodash\n// package. However, we now import lodash as an npm package\n// in order to control versions, update flexibly, etc..\n// Setting the global._ to utilize the npm lodash package is an interim fix\n// and its introduction was inspired by\n// https://github.com/RocketChat/meteor-streamer/issues/40#issuecomment-497627893\nimport _ from 'lodash';\n\nglobal._ = _;\n"]}