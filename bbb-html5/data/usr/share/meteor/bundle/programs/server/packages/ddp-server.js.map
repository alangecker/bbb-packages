{"version":3,"sources":["meteor://ðŸ’»app/packages/ddp-server/stream_server.js","meteor://ðŸ’»app/packages/ddp-server/livedata_server.js","meteor://ðŸ’»app/packages/ddp-server/writefence.js","meteor://ðŸ’»app/packages/ddp-server/crossbar.js","meteor://ðŸ’»app/packages/ddp-server/server_convenience.js"],"names":["url","Npm","require","websocketExtensions","_","once","extensions","websocketCompressionConfig","process","env","SERVER_WEBSOCKET_COMPRESSION","JSON","parse","push","configure","pathPrefix","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","StreamServer","self","registration_callbacks","open_sockets","prefix","RoutePolicy","declare","sockjs","serverOptions","log","heartbeat_delay","disconnect_delay","jsessionid","USE_JSESSIONID","DISABLE_WEBSOCKETS","websocket","faye_server_options","server","createServer","WebApp","httpServer","removeListener","_timeoutAdjustmentRequestCallback","installHandlers","addListener","_redirectWebsocketEndpoint","on","socket","setWebsocketTimeout","timeout","protocol","_session","recv","connection","setTimeout","send","data","write","without","stringify","server_id","each","callback","extend","prototype","register","all_sockets","values","event","oldHttpServerListeners","listeners","slice","removeAllListeners","newListener","request","args","arguments","parsedUrl","pathname","format","oldListener","apply","DDPServer","Fiber","SessionDocumentView","existsIn","Set","dataByKey","Map","_SessionDocumentView","getFields","ret","forEach","precedenceList","key","value","clearField","subscriptionHandle","changeCollector","get","removedValue","undefined","i","length","precedence","splice","delete","EJSON","equals","changeField","isAdd","clone","has","set","elt","find","SessionCollectionView","collectionName","sessionCallbacks","documents","callbacks","_SessionCollectionView","isEmpty","size","diff","previous","DiffSequence","diffMaps","both","bind","diffDocument","rightOnly","id","nowDV","added","leftOnly","prevDV","removed","fields","diffObjects","prev","now","changed","docView","add","changedResult","Error","err","Session","version","options","Random","initialized","inQueue","Meteor","_DoubleEndedQueue","blocked","workerRunning","_namedSubs","_universalSubs","userId","collectionViews","_isSending","_dontStartNewUniversalSubs","_pendingReady","_closeCallbacks","_socketUrl","_respondToPings","respondToPings","connectionHandle","close","onClose","fn","cb","bindEnvironment","defer","clientAddress","_clientAddress","httpHeaders","headers","msg","session","startUniversalSubs","run","heartbeatInterval","heartbeat","DDPCommon","Heartbeat","heartbeatTimeout","onTimeout","sendPing","start","Package","Facts","incrementServerFact","sendReady","subscriptionIds","subs","subscriptionId","sendAdded","collection","sendChanged","sendRemoved","getSendCallbacks","getCollectionView","view","handlers","universal_publish_handlers","handler","_startSubscription","stop","_meteorSession","_deactivateAllSubscriptions","_removeSession","_printSentDDP","_debug","stringifyDDP","sendError","reason","offendingMessage","processMessage","msg_in","messageReceived","processNext","shift","unblock","onMessageHook","protocol_handlers","call","sub","name","params","Array","publish_handlers","error","DDPRateLimiter","rateLimiterInput","type","connectionId","_increment","rateLimitResult","_check","allowed","getErrorMessage","timeToReset","unsub","_stopSubscription","method","randomSeed","fence","_WriteFence","onAllCommitted","retire","methods","method_handlers","arm","setUserId","_setUserId","invocation","MethodInvocation","isSimulation","promise","Promise","resolve","reject","_CurrentWriteFence","withValue","DDP","_CurrentMethodInvocation","maybeAuditArgumentChecks","finish","payload","then","result","exception","wrapInternalException","_eachSub","f","_diffCollectionViews","beforeCVs","leftValue","rightValue","doc","_deactivate","oldNamedSubs","newSub","_recreate","_runHandler","_noYieldsAllowed","subId","Subscription","subName","maybeSub","_name","_removeAllDocuments","response","httpForwardedCount","parseInt","remoteAddress","forwardedFor","isString","trim","split","_handler","_subscriptionId","_params","_subscriptionHandle","_deactivated","_stopCallbacks","_documents","_ready","_idFilter","idStringify","MongoID","idParse","res","_CurrentPublicationInvocation","e","_isDeactivated","_publishHandlerResult","isCursor","c","_publishCursor","ready","isArray","all","collectionNames","_getCollectionName","cur","_callStopCallbacks","collectionDocs","strId","onStop","ids","Server","defaults","onConnectionHook","Hook","debugPrintExceptions","sessions","stream_server","raw_msg","_printReceivedDDP","parseDDP","_handleConnect","onConnection","onMessage","support","contains","SUPPORTED_DDP_VERSIONS","calculateVersion","publish","isObject","autopublish","is_auto","warned_about_autopublish","func","pop","callAsync","applyAsync","await","currentMethodInvocation","currentPublicationInvocation","makeRpcSeed","_urlForSession","sessionId","clientSupportedVersions","serverSupportedVersions","correctVersion","_calculateVersion","context","isClientSafe","originalMessage","message","details","_expectedByTest","sanitizedError","description","Match","_failIfArgumentsAreNotAllChecked","Future","armed","fired","retired","outstanding_writes","before_fire_callbacks","completion_callbacks","EnvironmentVariable","beginWrite","committed","_maybeFire","onBeforeFire","armAndWait","future","wait","invokeCallback","_Crossbar","nextId","listenersByCollection","listenersByCollectionCount","factPackage","factName","_collectionForMessage","listen","trigger","record","fire","notification","listenersForCollection","callbackIds","l","_matches","ObjectID","triggerValue","_InvalidationCrossbar","DDP_DEFAULT_CONNECTION_URL","refresh","default_server"],"mappings":"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","file":"/packages/ddp-server.js","sourcesContent":["var url = Npm.require('url');\n\n// By default, we use the permessage-deflate extension with default\n// configuration. If $SERVER_WEBSOCKET_COMPRESSION is set, then it must be valid\n// JSON. If it represents a falsey value, then we do not use permessage-deflate\n// at all; otherwise, the JSON value is used as an argument to deflate's\n// configure method; see\n// https://github.com/faye/permessage-deflate-node/blob/master/README.md\n//\n// (We do this in an _.once instead of at startup, because we don't want to\n// crash the tool during isopacket load if your JSON doesn't parse. This is only\n// a problem because the tool has to load the DDP server code just in order to\n// be a DDP client; see https://github.com/meteor/meteor/issues/3452 .)\nvar websocketExtensions = _.once(function () {\n  var extensions = [];\n\n  var websocketCompressionConfig = process.env.SERVER_WEBSOCKET_COMPRESSION\n        ? JSON.parse(process.env.SERVER_WEBSOCKET_COMPRESSION) : {};\n  if (websocketCompressionConfig) {\n    extensions.push(Npm.require('permessage-deflate').configure(\n      websocketCompressionConfig\n    ));\n  }\n\n  return extensions;\n});\n\nvar pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX ||  \"\";\n\nStreamServer = function () {\n  var self = this;\n  self.registration_callbacks = [];\n  self.open_sockets = [];\n\n  // Because we are installing directly onto WebApp.httpServer instead of using\n  // WebApp.app, we have to process the path prefix ourselves.\n  self.prefix = pathPrefix + '/sockjs';\n  RoutePolicy.declare(self.prefix + '/', 'network');\n\n  // set up sockjs\n  var sockjs = Npm.require('sockjs');\n  var serverOptions = {\n    prefix: self.prefix,\n    log: function() {},\n    // this is the default, but we code it explicitly because we depend\n    // on it in stream_client:HEARTBEAT_TIMEOUT\n    heartbeat_delay: 45000,\n    // The default disconnect_delay is 5 seconds, but if the server ends up CPU\n    // bound for that much time, SockJS might not notice that the user has\n    // reconnected because the timer (of disconnect_delay ms) can fire before\n    // SockJS processes the new connection. Eventually we'll fix this by not\n    // combining CPU-heavy processing with SockJS termination (eg a proxy which\n    // converts to Unix sockets) but for now, raise the delay.\n    disconnect_delay: 60 * 1000,\n    // Set the USE_JSESSIONID environment variable to enable setting the\n    // JSESSIONID cookie. This is useful for setting up proxies with\n    // session affinity.\n    jsessionid: !!process.env.USE_JSESSIONID\n  };\n\n  // If you know your server environment (eg, proxies) will prevent websockets\n  // from ever working, set $DISABLE_WEBSOCKETS and SockJS clients (ie,\n  // browsers) will not waste time attempting to use them.\n  // (Your server will still have a /websocket endpoint.)\n  if (process.env.DISABLE_WEBSOCKETS) {\n    serverOptions.websocket = false;\n  } else {\n    serverOptions.faye_server_options = {\n      extensions: websocketExtensions()\n    };\n  }\n\n  self.server = sockjs.createServer(serverOptions);\n\n  // Install the sockjs handlers, but we want to keep around our own particular\n  // request handler that adjusts idle timeouts while we have an outstanding\n  // request.  This compensates for the fact that sockjs removes all listeners\n  // for \"request\" to add its own.\n  WebApp.httpServer.removeListener(\n    'request', WebApp._timeoutAdjustmentRequestCallback);\n  self.server.installHandlers(WebApp.httpServer);\n  WebApp.httpServer.addListener(\n    'request', WebApp._timeoutAdjustmentRequestCallback);\n\n  // Support the /websocket endpoint\n  self._redirectWebsocketEndpoint();\n\n  self.server.on('connection', function (socket) {\n    // We want to make sure that if a client connects to us and does the initial\n    // Websocket handshake but never gets to the DDP handshake, that we\n    // eventually kill the socket.  Once the DDP handshake happens, DDP\n    // heartbeating will work. And before the Websocket handshake, the timeouts\n    // we set at the server level in webapp_server.js will work. But\n    // faye-websocket calls setTimeout(0) on any socket it takes over, so there\n    // is an \"in between\" state where this doesn't happen.  We work around this\n    // by explicitly setting the socket timeout to a relatively large time here,\n    // and setting it back to zero when we set up the heartbeat in\n    // livedata_server.js.\n    socket.setWebsocketTimeout = function (timeout) {\n      if ((socket.protocol === 'websocket' ||\n           socket.protocol === 'websocket-raw')\n          && socket._session.recv) {\n        socket._session.recv.connection.setTimeout(timeout);\n      }\n    };\n    socket.setWebsocketTimeout(45 * 1000);\n\n    socket.send = function (data) {\n      socket.write(data);\n    };\n    socket.on('close', function () {\n      self.open_sockets = _.without(self.open_sockets, socket);\n    });\n    self.open_sockets.push(socket);\n\n    // XXX COMPAT WITH 0.6.6. Send the old style welcome message, which\n    // will force old clients to reload. Remove this once we're not\n    // concerned about people upgrading from a pre-0.7.0 release. Also,\n    // remove the clause in the client that ignores the welcome message\n    // (livedata_connection.js)\n    socket.send(JSON.stringify({server_id: \"0\"}));\n\n    // call all our callbacks when we get a new socket. they will do the\n    // work of setting up handlers and such for specific messages.\n    _.each(self.registration_callbacks, function (callback) {\n      callback(socket);\n    });\n  });\n\n};\n\n_.extend(StreamServer.prototype, {\n  // call my callback when a new socket connects.\n  // also call it for all current connections.\n  register: function (callback) {\n    var self = this;\n    self.registration_callbacks.push(callback);\n    _.each(self.all_sockets(), function (socket) {\n      callback(socket);\n    });\n  },\n\n  // get a list of all sockets\n  all_sockets: function () {\n    var self = this;\n    return _.values(self.open_sockets);\n  },\n\n  // Redirect /websocket to /sockjs/websocket in order to not expose\n  // sockjs to clients that want to use raw websockets\n  _redirectWebsocketEndpoint: function() {\n    var self = this;\n    // Unfortunately we can't use a connect middleware here since\n    // sockjs installs itself prior to all existing listeners\n    // (meaning prior to any connect middlewares) so we need to take\n    // an approach similar to overshadowListeners in\n    // https://github.com/sockjs/sockjs-node/blob/cf820c55af6a9953e16558555a31decea554f70e/src/utils.coffee\n    _.each(['request', 'upgrade'], function(event) {\n      var httpServer = WebApp.httpServer;\n      var oldHttpServerListeners = httpServer.listeners(event).slice(0);\n      httpServer.removeAllListeners(event);\n\n      // request and upgrade have different arguments passed but\n      // we only care about the first one which is always request\n      var newListener = function(request /*, moreArguments */) {\n        // Store arguments for use within the closure below\n        var args = arguments;\n\n        // Rewrite /websocket and /websocket/ urls to /sockjs/websocket while\n        // preserving query string.\n        var parsedUrl = url.parse(request.url);\n        if (parsedUrl.pathname === pathPrefix + '/websocket' ||\n            parsedUrl.pathname === pathPrefix + '/websocket/') {\n          parsedUrl.pathname = self.prefix + '/websocket';\n          request.url = url.format(parsedUrl);\n        }\n        _.each(oldHttpServerListeners, function(oldListener) {\n          oldListener.apply(httpServer, args);\n        });\n      };\n      httpServer.addListener(event, newListener);\n    });\n  }\n});\n","DDPServer = {};\n\nvar Fiber = Npm.require('fibers');\n\n// This file contains classes:\n// * Session - The server's connection to a single DDP client\n// * Subscription - A single subscription for a single client\n// * Server - An entire server that may talk to > 1 client. A DDP endpoint.\n//\n// Session and Subscription are file scope. For now, until we freeze\n// the interface, Server is package scope (in the future it should be\n// exported.)\n\n// Represents a single document in a SessionCollectionView\nvar SessionDocumentView = function () {\n  var self = this;\n  self.existsIn = new Set(); // set of subscriptionHandle\n  self.dataByKey = new Map(); // key-> [ {subscriptionHandle, value} by precedence]\n};\n\nDDPServer._SessionDocumentView = SessionDocumentView;\n\n\n_.extend(SessionDocumentView.prototype, {\n\n  getFields: function () {\n    var self = this;\n    var ret = {};\n    self.dataByKey.forEach(function (precedenceList, key) {\n      ret[key] = precedenceList[0].value;\n    });\n    return ret;\n  },\n\n  clearField: function (subscriptionHandle, key, changeCollector) {\n    var self = this;\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\")\n      return;\n    var precedenceList = self.dataByKey.get(key);\n\n    // It's okay to clear fields that didn't exist. No need to throw\n    // an error.\n    if (!precedenceList)\n      return;\n\n    var removedValue = undefined;\n    for (var i = 0; i < precedenceList.length; i++) {\n      var precedence = precedenceList[i];\n      if (precedence.subscriptionHandle === subscriptionHandle) {\n        // The view's value can only change if this subscription is the one that\n        // used to have precedence.\n        if (i === 0)\n          removedValue = precedence.value;\n        precedenceList.splice(i, 1);\n        break;\n      }\n    }\n    if (precedenceList.length === 0) {\n      self.dataByKey.delete(key);\n      changeCollector[key] = undefined;\n    } else if (removedValue !== undefined &&\n               !EJSON.equals(removedValue, precedenceList[0].value)) {\n      changeCollector[key] = precedenceList[0].value;\n    }\n  },\n\n  changeField: function (subscriptionHandle, key, value,\n                         changeCollector, isAdd) {\n    var self = this;\n    // Publish API ignores _id if present in fields\n    if (key === \"_id\")\n      return;\n\n    // Don't share state with the data passed in by the user.\n    value = EJSON.clone(value);\n\n    if (!self.dataByKey.has(key)) {\n      self.dataByKey.set(key, [{subscriptionHandle: subscriptionHandle,\n                                value: value}]);\n      changeCollector[key] = value;\n      return;\n    }\n    var precedenceList = self.dataByKey.get(key);\n    var elt;\n    if (!isAdd) {\n      elt = precedenceList.find(function (precedence) {\n          return precedence.subscriptionHandle === subscriptionHandle;\n      });\n    }\n\n    if (elt) {\n      if (elt === precedenceList[0] && !EJSON.equals(value, elt.value)) {\n        // this subscription is changing the value of this field.\n        changeCollector[key] = value;\n      }\n      elt.value = value;\n    } else {\n      // this subscription is newly caring about this field\n      precedenceList.push({subscriptionHandle: subscriptionHandle, value: value});\n    }\n\n  }\n});\n\n/**\n * Represents a client's view of a single collection\n * @param {String} collectionName Name of the collection it represents\n * @param {Object.<String, Function>} sessionCallbacks The callbacks for added, changed, removed\n * @class SessionCollectionView\n */\nvar SessionCollectionView = function (collectionName, sessionCallbacks) {\n  var self = this;\n  self.collectionName = collectionName;\n  self.documents = new Map();\n  self.callbacks = sessionCallbacks;\n};\n\nDDPServer._SessionCollectionView = SessionCollectionView;\n\n\n_.extend(SessionCollectionView.prototype, {\n\n  isEmpty: function () {\n    var self = this;\n    return self.documents.size === 0;\n  },\n\n  diff: function (previous) {\n    var self = this;\n    DiffSequence.diffMaps(previous.documents, self.documents, {\n      both: _.bind(self.diffDocument, self),\n\n      rightOnly: function (id, nowDV) {\n        self.callbacks.added(self.collectionName, id, nowDV.getFields());\n      },\n\n      leftOnly: function (id, prevDV) {\n        self.callbacks.removed(self.collectionName, id);\n      }\n    });\n  },\n\n  diffDocument: function (id, prevDV, nowDV) {\n    var self = this;\n    var fields = {};\n    DiffSequence.diffObjects(prevDV.getFields(), nowDV.getFields(), {\n      both: function (key, prev, now) {\n        if (!EJSON.equals(prev, now))\n          fields[key] = now;\n      },\n      rightOnly: function (key, now) {\n        fields[key] = now;\n      },\n      leftOnly: function(key, prev) {\n        fields[key] = undefined;\n      }\n    });\n    self.callbacks.changed(self.collectionName, id, fields);\n  },\n\n  added: function (subscriptionHandle, id, fields) {\n    var self = this;\n    var docView = self.documents.get(id);\n    var added = false;\n    if (!docView) {\n      added = true;\n      docView = new SessionDocumentView();\n      self.documents.set(id, docView);\n    }\n    docView.existsIn.add(subscriptionHandle);\n    var changeCollector = {};\n    _.each(fields, function (value, key) {\n      docView.changeField(\n        subscriptionHandle, key, value, changeCollector, true);\n    });\n    if (added)\n      self.callbacks.added(self.collectionName, id, changeCollector);\n    else\n      self.callbacks.changed(self.collectionName, id, changeCollector);\n  },\n\n  changed: function (subscriptionHandle, id, changed) {\n    var self = this;\n    var changedResult = {};\n    var docView = self.documents.get(id);\n    if (!docView)\n      throw new Error(\"Could not find element with id \" + id + \" to change\");\n    _.each(changed, function (value, key) {\n      if (value === undefined)\n        docView.clearField(subscriptionHandle, key, changedResult);\n      else\n        docView.changeField(subscriptionHandle, key, value, changedResult);\n    });\n    self.callbacks.changed(self.collectionName, id, changedResult);\n  },\n\n  removed: function (subscriptionHandle, id) {\n    var self = this;\n    var docView = self.documents.get(id);\n    if (!docView) {\n      var err = new Error(\"Removed nonexistent document \" + id);\n      throw err;\n    }\n    docView.existsIn.delete(subscriptionHandle);\n    if (docView.existsIn.size === 0) {\n      // it is gone from everyone\n      self.callbacks.removed(self.collectionName, id);\n      self.documents.delete(id);\n    } else {\n      var changed = {};\n      // remove this subscription from every precedence list\n      // and record the changes\n      docView.dataByKey.forEach(function (precedenceList, key) {\n        docView.clearField(subscriptionHandle, key, changed);\n      });\n\n      self.callbacks.changed(self.collectionName, id, changed);\n    }\n  }\n});\n\n/******************************************************************************/\n/* Session                                                                    */\n/******************************************************************************/\n\nvar Session = function (server, version, socket, options) {\n  var self = this;\n  self.id = Random.id();\n\n  self.server = server;\n  self.version = version;\n\n  self.initialized = false;\n  self.socket = socket;\n\n  // set to null when the session is destroyed. multiple places below\n  // use this to determine if the session is alive or not.\n  self.inQueue = new Meteor._DoubleEndedQueue();\n\n  self.blocked = false;\n  self.workerRunning = false;\n\n  // Sub objects for active subscriptions\n  self._namedSubs = new Map();\n  self._universalSubs = [];\n\n  self.userId = null;\n\n  self.collectionViews = new Map();\n\n  // Set this to false to not send messages when collectionViews are\n  // modified. This is done when rerunning subs in _setUserId and those messages\n  // are calculated via a diff instead.\n  self._isSending = true;\n\n  // If this is true, don't start a newly-created universal publisher on this\n  // session. The session will take care of starting it when appropriate.\n  self._dontStartNewUniversalSubs = false;\n\n  // when we are rerunning subscriptions, any ready messages\n  // we want to buffer up for when we are done rerunning subscriptions\n  self._pendingReady = [];\n\n  // List of callbacks to call when this connection is closed.\n  self._closeCallbacks = [];\n\n\n  // XXX HACK: If a sockjs connection, save off the URL. This is\n  // temporary and will go away in the near future.\n  self._socketUrl = socket.url;\n\n  // Allow tests to disable responding to pings.\n  self._respondToPings = options.respondToPings;\n\n  // This object is the public interface to the session. In the public\n  // API, it is called the `connection` object.  Internally we call it\n  // a `connectionHandle` to avoid ambiguity.\n  self.connectionHandle = {\n    id: self.id,\n    close: function () {\n      self.close();\n    },\n    onClose: function (fn) {\n      var cb = Meteor.bindEnvironment(fn, \"connection onClose callback\");\n      if (self.inQueue) {\n        self._closeCallbacks.push(cb);\n      } else {\n        // if we're already closed, call the callback.\n        Meteor.defer(cb);\n      }\n    },\n    clientAddress: self._clientAddress(),\n    httpHeaders: self.socket.headers\n  };\n\n  self.send({ msg: 'connected', session: self.id });\n\n  // On initial connect, spin up all the universal publishers.\n  Fiber(function () {\n    self.startUniversalSubs();\n  }).run();\n\n  if (version !== 'pre1' && options.heartbeatInterval !== 0) {\n    // We no longer need the low level timeout because we have heartbeating.\n    socket.setWebsocketTimeout(0);\n\n    self.heartbeat = new DDPCommon.Heartbeat({\n      heartbeatInterval: options.heartbeatInterval,\n      heartbeatTimeout: options.heartbeatTimeout,\n      onTimeout: function () {\n        self.close();\n      },\n      sendPing: function () {\n        self.send({msg: 'ping'});\n      }\n    });\n    self.heartbeat.start();\n  }\n\n  Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n    \"livedata\", \"sessions\", 1);\n};\n\n_.extend(Session.prototype, {\n\n  sendReady: function (subscriptionIds) {\n    var self = this;\n    if (self._isSending)\n      self.send({msg: \"ready\", subs: subscriptionIds});\n    else {\n      _.each(subscriptionIds, function (subscriptionId) {\n        self._pendingReady.push(subscriptionId);\n      });\n    }\n  },\n\n  sendAdded: function (collectionName, id, fields) {\n    var self = this;\n    if (self._isSending)\n      self.send({msg: \"added\", collection: collectionName, id: id, fields: fields});\n  },\n\n  sendChanged: function (collectionName, id, fields) {\n    var self = this;\n    if (_.isEmpty(fields))\n      return;\n\n    if (self._isSending) {\n      self.send({\n        msg: \"changed\",\n        collection: collectionName,\n        id: id,\n        fields: fields\n      });\n    }\n  },\n\n  sendRemoved: function (collectionName, id) {\n    var self = this;\n    if (self._isSending)\n      self.send({msg: \"removed\", collection: collectionName, id: id});\n  },\n\n  getSendCallbacks: function () {\n    var self = this;\n    return {\n      added: _.bind(self.sendAdded, self),\n      changed: _.bind(self.sendChanged, self),\n      removed: _.bind(self.sendRemoved, self)\n    };\n  },\n\n  getCollectionView: function (collectionName) {\n    var self = this;\n    var ret = self.collectionViews.get(collectionName);\n    if (!ret) {\n      ret = new SessionCollectionView(collectionName,\n                                        self.getSendCallbacks());\n      self.collectionViews.set(collectionName, ret);\n    }\n    return ret;\n  },\n\n  added: function (subscriptionHandle, collectionName, id, fields) {\n    var self = this;\n    var view = self.getCollectionView(collectionName);\n    view.added(subscriptionHandle, id, fields);\n  },\n\n  removed: function (subscriptionHandle, collectionName, id) {\n    var self = this;\n    var view = self.getCollectionView(collectionName);\n    view.removed(subscriptionHandle, id);\n    if (view.isEmpty()) {\n       self.collectionViews.delete(collectionName);\n    }\n  },\n\n  changed: function (subscriptionHandle, collectionName, id, fields) {\n    var self = this;\n    var view = self.getCollectionView(collectionName);\n    view.changed(subscriptionHandle, id, fields);\n  },\n\n  startUniversalSubs: function () {\n    var self = this;\n    // Make a shallow copy of the set of universal handlers and start them. If\n    // additional universal publishers start while we're running them (due to\n    // yielding), they will run separately as part of Server.publish.\n    var handlers = _.clone(self.server.universal_publish_handlers);\n    _.each(handlers, function (handler) {\n      self._startSubscription(handler);\n    });\n  },\n\n  // Destroy this session and unregister it at the server.\n  close: function () {\n    var self = this;\n\n    // Destroy this session, even if it's not registered at the\n    // server. Stop all processing and tear everything down. If a socket\n    // was attached, close it.\n\n    // Already destroyed.\n    if (! self.inQueue)\n      return;\n\n    // Drop the merge box data immediately.\n    self.inQueue = null;\n    self.collectionViews = new Map();\n\n    if (self.heartbeat) {\n      self.heartbeat.stop();\n      self.heartbeat = null;\n    }\n\n    if (self.socket) {\n      self.socket.close();\n      self.socket._meteorSession = null;\n    }\n\n    Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n      \"livedata\", \"sessions\", -1);\n\n    Meteor.defer(function () {\n      // stop callbacks can yield, so we defer this on close.\n      // sub._isDeactivated() detects that we set inQueue to null and\n      // treats it as semi-deactivated (it will ignore incoming callbacks, etc).\n      self._deactivateAllSubscriptions();\n\n      // Defer calling the close callbacks, so that the caller closing\n      // the session isn't waiting for all the callbacks to complete.\n      _.each(self._closeCallbacks, function (callback) {\n        callback();\n      });\n    });\n\n    // Unregister the session.\n    self.server._removeSession(self);\n  },\n\n  // Send a message (doing nothing if no socket is connected right now.)\n  // It should be a JSON object (it will be stringified.)\n  send: function (msg) {\n    var self = this;\n    if (self.socket) {\n      if (Meteor._printSentDDP)\n        Meteor._debug(\"Sent DDP\", DDPCommon.stringifyDDP(msg));\n      self.socket.send(DDPCommon.stringifyDDP(msg));\n    }\n  },\n\n  // Send a connection error.\n  sendError: function (reason, offendingMessage) {\n    var self = this;\n    var msg = {msg: 'error', reason: reason};\n    if (offendingMessage)\n      msg.offendingMessage = offendingMessage;\n    self.send(msg);\n  },\n\n  // Process 'msg' as an incoming message. (But as a guard against\n  // race conditions during reconnection, ignore the message if\n  // 'socket' is not the currently connected socket.)\n  //\n  // We run the messages from the client one at a time, in the order\n  // given by the client. The message handler is passed an idempotent\n  // function 'unblock' which it may call to allow other messages to\n  // begin running in parallel in another fiber (for example, a method\n  // that wants to yield.) Otherwise, it is automatically unblocked\n  // when it returns.\n  //\n  // Actually, we don't have to 'totally order' the messages in this\n  // way, but it's the easiest thing that's correct. (unsub needs to\n  // be ordered against sub, methods need to be ordered against each\n  // other.)\n  processMessage: function (msg_in) {\n    var self = this;\n    if (!self.inQueue) // we have been destroyed.\n      return;\n\n    // Respond to ping and pong messages immediately without queuing.\n    // If the negotiated DDP version is \"pre1\" which didn't support\n    // pings, preserve the \"pre1\" behavior of responding with a \"bad\n    // request\" for the unknown messages.\n    //\n    // Fibers are needed because heartbeat uses Meteor.setTimeout, which\n    // needs a Fiber. We could actually use regular setTimeout and avoid\n    // these new fibers, but it is easier to just make everything use\n    // Meteor.setTimeout and not think too hard.\n    //\n    // Any message counts as receiving a pong, as it demonstrates that\n    // the client is still alive.\n    if (self.heartbeat) {\n      Fiber(function () {\n        self.heartbeat.messageReceived();\n      }).run();\n    }\n\n    if (self.version !== 'pre1' && msg_in.msg === 'ping') {\n      if (self._respondToPings)\n        self.send({msg: \"pong\", id: msg_in.id});\n      return;\n    }\n    if (self.version !== 'pre1' && msg_in.msg === 'pong') {\n      // Since everything is a pong, nothing to do\n      return;\n    }\n\n    self.inQueue.push(msg_in);\n    if (self.workerRunning)\n      return;\n    self.workerRunning = true;\n\n    var processNext = function () {\n      var msg = self.inQueue && self.inQueue.shift();\n      if (!msg) {\n        self.workerRunning = false;\n        return;\n      }\n\n      Fiber(function () {\n        var blocked = true;\n\n        var unblock = function () {\n          if (!blocked)\n            return; // idempotent\n          blocked = false;\n          processNext();\n        };\n\n        self.server.onMessageHook.each(function (callback) {\n          callback(msg, self);\n          return true;\n        });\n\n        if (_.has(self.protocol_handlers, msg.msg))\n          self.protocol_handlers[msg.msg].call(self, msg, unblock);\n        else\n          self.sendError('Bad request', msg);\n        unblock(); // in case the handler didn't already do it\n      }).run();\n    };\n\n    processNext();\n  },\n\n  protocol_handlers: {\n    sub: function (msg) {\n      var self = this;\n\n      // reject malformed messages\n      if (typeof (msg.id) !== \"string\" ||\n          typeof (msg.name) !== \"string\" ||\n          (('params' in msg) && !(msg.params instanceof Array))) {\n        self.sendError(\"Malformed subscription\", msg);\n        return;\n      }\n\n      if (!self.server.publish_handlers[msg.name]) {\n        self.send({\n          msg: 'nosub', id: msg.id,\n          error: new Meteor.Error(404, `Subscription '${msg.name}' not found`)});\n        return;\n      }\n\n      if (self._namedSubs.has(msg.id))\n        // subs are idempotent, or rather, they are ignored if a sub\n        // with that id already exists. this is important during\n        // reconnect.\n        return;\n\n      // XXX It'd be much better if we had generic hooks where any package can\n      // hook into subscription handling, but in the mean while we special case\n      // ddp-rate-limiter package. This is also done for weak requirements to\n      // add the ddp-rate-limiter package in case we don't have Accounts. A\n      // user trying to use the ddp-rate-limiter must explicitly require it.\n      if (Package['ddp-rate-limiter']) {\n        var DDPRateLimiter = Package['ddp-rate-limiter'].DDPRateLimiter;\n        var rateLimiterInput = {\n          userId: self.userId,\n          clientAddress: self.connectionHandle.clientAddress,\n          type: \"subscription\",\n          name: msg.name,\n          connectionId: self.id\n        };\n\n        DDPRateLimiter._increment(rateLimiterInput);\n        var rateLimitResult = DDPRateLimiter._check(rateLimiterInput);\n        if (!rateLimitResult.allowed) {\n          self.send({\n            msg: 'nosub', id: msg.id,\n            error: new Meteor.Error(\n              'too-many-requests',\n              DDPRateLimiter.getErrorMessage(rateLimitResult),\n              {timeToReset: rateLimitResult.timeToReset})\n          });\n          return;\n        }\n      }\n\n      var handler = self.server.publish_handlers[msg.name];\n\n      self._startSubscription(handler, msg.id, msg.params, msg.name);\n\n    },\n\n    unsub: function (msg) {\n      var self = this;\n\n      self._stopSubscription(msg.id);\n    },\n\n    method: function (msg, unblock) {\n      var self = this;\n\n      // reject malformed messages\n      // For now, we silently ignore unknown attributes,\n      // for forwards compatibility.\n      if (typeof (msg.id) !== \"string\" ||\n          typeof (msg.method) !== \"string\" ||\n          (('params' in msg) && !(msg.params instanceof Array)) ||\n          (('randomSeed' in msg) && (typeof msg.randomSeed !== \"string\"))) {\n        self.sendError(\"Malformed method invocation\", msg);\n        return;\n      }\n\n      var randomSeed = msg.randomSeed || null;\n\n      // set up to mark the method as satisfied once all observers\n      // (and subscriptions) have reacted to any writes that were\n      // done.\n      var fence = new DDPServer._WriteFence;\n      fence.onAllCommitted(function () {\n        // Retire the fence so that future writes are allowed.\n        // This means that callbacks like timers are free to use\n        // the fence, and if they fire before it's armed (for\n        // example, because the method waits for them) their\n        // writes will be included in the fence.\n        fence.retire();\n        self.send({\n          msg: 'updated', methods: [msg.id]});\n      });\n\n      // find the handler\n      var handler = self.server.method_handlers[msg.method];\n      if (!handler) {\n        self.send({\n          msg: 'result', id: msg.id,\n          error: new Meteor.Error(404, `Method '${msg.method}' not found`)});\n        fence.arm();\n        return;\n      }\n\n      var setUserId = function(userId) {\n        self._setUserId(userId);\n      };\n\n      var invocation = new DDPCommon.MethodInvocation({\n        isSimulation: false,\n        userId: self.userId,\n        setUserId: setUserId,\n        unblock: unblock,\n        connection: self.connectionHandle,\n        randomSeed: randomSeed\n      });\n\n      const promise = new Promise((resolve, reject) => {\n        // XXX It'd be better if we could hook into method handlers better but\n        // for now, we need to check if the ddp-rate-limiter exists since we\n        // have a weak requirement for the ddp-rate-limiter package to be added\n        // to our application.\n        if (Package['ddp-rate-limiter']) {\n          var DDPRateLimiter = Package['ddp-rate-limiter'].DDPRateLimiter;\n          var rateLimiterInput = {\n            userId: self.userId,\n            clientAddress: self.connectionHandle.clientAddress,\n            type: \"method\",\n            name: msg.method,\n            connectionId: self.id\n          };\n          DDPRateLimiter._increment(rateLimiterInput);\n          var rateLimitResult = DDPRateLimiter._check(rateLimiterInput)\n          if (!rateLimitResult.allowed) {\n            reject(new Meteor.Error(\n              \"too-many-requests\",\n              DDPRateLimiter.getErrorMessage(rateLimitResult),\n              {timeToReset: rateLimitResult.timeToReset}\n            ));\n            return;\n          }\n        }\n\n        resolve(DDPServer._CurrentWriteFence.withValue(\n          fence,\n          () => DDP._CurrentMethodInvocation.withValue(\n            invocation,\n            () => maybeAuditArgumentChecks(\n              handler, invocation, msg.params,\n              \"call to '\" + msg.method + \"'\"\n            )\n          )\n        ));\n      });\n\n      function finish() {\n        fence.arm();\n        unblock();\n      }\n\n      const payload = {\n        msg: \"result\",\n        id: msg.id\n      };\n\n      promise.then((result) => {\n        finish();\n        if (result !== undefined) {\n          payload.result = result;\n        }\n        self.send(payload);\n      }, (exception) => {\n        finish();\n        payload.error = wrapInternalException(\n          exception,\n          `while invoking method '${msg.method}'`\n        );\n        self.send(payload);\n      });\n    }\n  },\n\n  _eachSub: function (f) {\n    var self = this;\n    self._namedSubs.forEach(f);\n    self._universalSubs.forEach(f);\n  },\n\n  _diffCollectionViews: function (beforeCVs) {\n    var self = this;\n    DiffSequence.diffMaps(beforeCVs, self.collectionViews, {\n      both: function (collectionName, leftValue, rightValue) {\n        rightValue.diff(leftValue);\n      },\n      rightOnly: function (collectionName, rightValue) {\n        rightValue.documents.forEach(function (docView, id) {\n          self.sendAdded(collectionName, id, docView.getFields());\n        });\n      },\n      leftOnly: function (collectionName, leftValue) {\n        leftValue.documents.forEach(function (doc, id) {\n          self.sendRemoved(collectionName, id);\n        });\n      }\n    });\n  },\n\n  // Sets the current user id in all appropriate contexts and reruns\n  // all subscriptions\n  _setUserId: function(userId) {\n    var self = this;\n\n    if (userId !== null && typeof userId !== \"string\")\n      throw new Error(\"setUserId must be called on string or null, not \" +\n                      typeof userId);\n\n    // Prevent newly-created universal subscriptions from being added to our\n    // session; they will be found below when we call startUniversalSubs.\n    //\n    // (We don't have to worry about named subscriptions, because we only add\n    // them when we process a 'sub' message. We are currently processing a\n    // 'method' message, and the method did not unblock, because it is illegal\n    // to call setUserId after unblock. Thus we cannot be concurrently adding a\n    // new named subscription.)\n    self._dontStartNewUniversalSubs = true;\n\n    // Prevent current subs from updating our collectionViews and call their\n    // stop callbacks. This may yield.\n    self._eachSub(function (sub) {\n      sub._deactivate();\n    });\n\n    // All subs should now be deactivated. Stop sending messages to the client,\n    // save the state of the published collections, reset to an empty view, and\n    // update the userId.\n    self._isSending = false;\n    var beforeCVs = self.collectionViews;\n    self.collectionViews = new Map();\n    self.userId = userId;\n\n    // _setUserId is normally called from a Meteor method with\n    // DDP._CurrentMethodInvocation set. But DDP._CurrentMethodInvocation is not\n    // expected to be set inside a publish function, so we temporary unset it.\n    // Inside a publish function DDP._CurrentPublicationInvocation is set.\n    DDP._CurrentMethodInvocation.withValue(undefined, function () {\n      // Save the old named subs, and reset to having no subscriptions.\n      var oldNamedSubs = self._namedSubs;\n      self._namedSubs = new Map();\n      self._universalSubs = [];\n\n      oldNamedSubs.forEach(function (sub, subscriptionId) {\n        var newSub = sub._recreate();\n        self._namedSubs.set(subscriptionId, newSub);\n        // nb: if the handler throws or calls this.error(), it will in fact\n        // immediately send its 'nosub'. This is OK, though.\n        newSub._runHandler();\n      });\n\n      // Allow newly-created universal subs to be started on our connection in\n      // parallel with the ones we're spinning up here, and spin up universal\n      // subs.\n      self._dontStartNewUniversalSubs = false;\n      self.startUniversalSubs();\n    });\n\n    // Start sending messages again, beginning with the diff from the previous\n    // state of the world to the current state. No yields are allowed during\n    // this diff, so that other changes cannot interleave.\n    Meteor._noYieldsAllowed(function () {\n      self._isSending = true;\n      self._diffCollectionViews(beforeCVs);\n      if (!_.isEmpty(self._pendingReady)) {\n        self.sendReady(self._pendingReady);\n        self._pendingReady = [];\n      }\n    });\n  },\n\n  _startSubscription: function (handler, subId, params, name) {\n    var self = this;\n\n    var sub = new Subscription(\n      self, handler, subId, params, name);\n    if (subId)\n      self._namedSubs.set(subId, sub);\n    else\n      self._universalSubs.push(sub);\n\n    sub._runHandler();\n  },\n\n  // tear down specified subscription\n  _stopSubscription: function (subId, error) {\n    var self = this;\n\n    var subName = null;\n    if (subId) {\n      var maybeSub = self._namedSubs.get(subId);\n      if (maybeSub) {\n        subName = maybeSub._name;\n        maybeSub._removeAllDocuments();\n        maybeSub._deactivate();\n        self._namedSubs.delete(subId);\n      }\n    }\n\n    var response = {msg: 'nosub', id: subId};\n\n    if (error) {\n      response.error = wrapInternalException(\n        error,\n        subName ? (\"from sub \" + subName + \" id \" + subId)\n          : (\"from sub id \" + subId));\n    }\n\n    self.send(response);\n  },\n\n  // tear down all subscriptions. Note that this does NOT send removed or nosub\n  // messages, since we assume the client is gone.\n  _deactivateAllSubscriptions: function () {\n    var self = this;\n\n    self._namedSubs.forEach(function (sub, id) {\n      sub._deactivate();\n    });\n    self._namedSubs = new Map();\n\n    self._universalSubs.forEach(function (sub) {\n      sub._deactivate();\n    });\n    self._universalSubs = [];\n  },\n\n  // Determine the remote client's IP address, based on the\n  // HTTP_FORWARDED_COUNT environment variable representing how many\n  // proxies the server is behind.\n  _clientAddress: function () {\n    var self = this;\n\n    // For the reported client address for a connection to be correct,\n    // the developer must set the HTTP_FORWARDED_COUNT environment\n    // variable to an integer representing the number of hops they\n    // expect in the `x-forwarded-for` header. E.g., set to \"1\" if the\n    // server is behind one proxy.\n    //\n    // This could be computed once at startup instead of every time.\n    var httpForwardedCount = parseInt(process.env['HTTP_FORWARDED_COUNT']) || 0;\n\n    if (httpForwardedCount === 0)\n      return self.socket.remoteAddress;\n\n    var forwardedFor = self.socket.headers[\"x-forwarded-for\"];\n    if (! _.isString(forwardedFor))\n      return null;\n    forwardedFor = forwardedFor.trim().split(/\\s*,\\s*/);\n\n    // Typically the first value in the `x-forwarded-for` header is\n    // the original IP address of the client connecting to the first\n    // proxy.  However, the end user can easily spoof the header, in\n    // which case the first value(s) will be the fake IP address from\n    // the user pretending to be a proxy reporting the original IP\n    // address value.  By counting HTTP_FORWARDED_COUNT back from the\n    // end of the list, we ensure that we get the IP address being\n    // reported by *our* first proxy.\n\n    if (httpForwardedCount < 0 || httpForwardedCount > forwardedFor.length)\n      return null;\n\n    return forwardedFor[forwardedFor.length - httpForwardedCount];\n  }\n});\n\n/******************************************************************************/\n/* Subscription                                                               */\n/******************************************************************************/\n\n// ctor for a sub handle: the input to each publish function\n\n// Instance name is this because it's usually referred to as this inside a\n// publish\n/**\n * @summary The server's side of a subscription\n * @class Subscription\n * @instanceName this\n * @showInstanceName true\n */\nvar Subscription = function (\n    session, handler, subscriptionId, params, name) {\n  var self = this;\n  self._session = session; // type is Session\n\n  /**\n   * @summary Access inside the publish function. The incoming [connection](#meteor_onconnection) for this subscription.\n   * @locus Server\n   * @name  connection\n   * @memberOf Subscription\n   * @instance\n   */\n  self.connection = session.connectionHandle; // public API object\n\n  self._handler = handler;\n\n  // my subscription ID (generated by client, undefined for universal subs).\n  self._subscriptionId = subscriptionId;\n  // undefined for universal subs\n  self._name = name;\n\n  self._params = params || [];\n\n  // Only named subscriptions have IDs, but we need some sort of string\n  // internally to keep track of all subscriptions inside\n  // SessionDocumentViews. We use this subscriptionHandle for that.\n  if (self._subscriptionId) {\n    self._subscriptionHandle = 'N' + self._subscriptionId;\n  } else {\n    self._subscriptionHandle = 'U' + Random.id();\n  }\n\n  // has _deactivate been called?\n  self._deactivated = false;\n\n  // stop callbacks to g/c this sub.  called w/ zero arguments.\n  self._stopCallbacks = [];\n\n  // the set of (collection, documentid) that this subscription has\n  // an opinion about\n  self._documents = new Map();\n\n  // remember if we are ready.\n  self._ready = false;\n\n  // Part of the public API: the user of this sub.\n\n  /**\n   * @summary Access inside the publish function. The id of the logged-in user, or `null` if no user is logged in.\n   * @locus Server\n   * @memberOf Subscription\n   * @name  userId\n   * @instance\n   */\n  self.userId = session.userId;\n\n  // For now, the id filter is going to default to\n  // the to/from DDP methods on MongoID, to\n  // specifically deal with mongo/minimongo ObjectIds.\n\n  // Later, you will be able to make this be \"raw\"\n  // if you want to publish a collection that you know\n  // just has strings for keys and no funny business, to\n  // a ddp consumer that isn't minimongo\n\n  self._idFilter = {\n    idStringify: MongoID.idStringify,\n    idParse: MongoID.idParse\n  };\n\n  Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n    \"livedata\", \"subscriptions\", 1);\n};\n\n_.extend(Subscription.prototype, {\n  _runHandler: function () {\n    // XXX should we unblock() here? Either before running the publish\n    // function, or before running _publishCursor.\n    //\n    // Right now, each publish function blocks all future publishes and\n    // methods waiting on data from Mongo (or whatever else the function\n    // blocks on). This probably slows page load in common cases.\n\n    var self = this;\n    try {\n      var res = DDP._CurrentPublicationInvocation.withValue(\n        self,\n        () => maybeAuditArgumentChecks(\n          self._handler, self, EJSON.clone(self._params),\n          // It's OK that this would look weird for universal subscriptions,\n          // because they have no arguments so there can never be an\n          // audit-argument-checks failure.\n          \"publisher '\" + self._name + \"'\"\n        )\n      );\n    } catch (e) {\n      self.error(e);\n      return;\n    }\n\n    // Did the handler call this.error or this.stop?\n    if (self._isDeactivated())\n      return;\n\n    self._publishHandlerResult(res);\n  },\n\n  _publishHandlerResult: function (res) {\n    // SPECIAL CASE: Instead of writing their own callbacks that invoke\n    // this.added/changed/ready/etc, the user can just return a collection\n    // cursor or array of cursors from the publish function; we call their\n    // _publishCursor method which starts observing the cursor and publishes the\n    // results. Note that _publishCursor does NOT call ready().\n    //\n    // XXX This uses an undocumented interface which only the Mongo cursor\n    // interface publishes. Should we make this interface public and encourage\n    // users to implement it themselves? Arguably, it's unnecessary; users can\n    // already write their own functions like\n    //   var publishMyReactiveThingy = function (name, handler) {\n    //     Meteor.publish(name, function () {\n    //       var reactiveThingy = handler();\n    //       reactiveThingy.publishMe();\n    //     });\n    //   };\n\n    var self = this;\n    var isCursor = function (c) {\n      return c && c._publishCursor;\n    };\n    if (isCursor(res)) {\n      try {\n        res._publishCursor(self);\n      } catch (e) {\n        self.error(e);\n        return;\n      }\n      // _publishCursor only returns after the initial added callbacks have run.\n      // mark subscription as ready.\n      self.ready();\n    } else if (_.isArray(res)) {\n      // check all the elements are cursors\n      if (! _.all(res, isCursor)) {\n        self.error(new Error(\"Publish function returned an array of non-Cursors\"));\n        return;\n      }\n      // find duplicate collection names\n      // XXX we should support overlapping cursors, but that would require the\n      // merge box to allow overlap within a subscription\n      var collectionNames = {};\n      for (var i = 0; i < res.length; ++i) {\n        var collectionName = res[i]._getCollectionName();\n        if (_.has(collectionNames, collectionName)) {\n          self.error(new Error(\n            \"Publish function returned multiple cursors for collection \" +\n              collectionName));\n          return;\n        }\n        collectionNames[collectionName] = true;\n      };\n\n      try {\n        _.each(res, function (cur) {\n          cur._publishCursor(self);\n        });\n      } catch (e) {\n        self.error(e);\n        return;\n      }\n      self.ready();\n    } else if (res) {\n      // truthy values other than cursors or arrays are probably a\n      // user mistake (possible returning a Mongo document via, say,\n      // `coll.findOne()`).\n      self.error(new Error(\"Publish function can only return a Cursor or \"\n                           + \"an array of Cursors\"));\n    }\n  },\n\n  // This calls all stop callbacks and prevents the handler from updating any\n  // SessionCollectionViews further. It's used when the user unsubscribes or\n  // disconnects, as well as during setUserId re-runs. It does *NOT* send\n  // removed messages for the published objects; if that is necessary, call\n  // _removeAllDocuments first.\n  _deactivate: function() {\n    var self = this;\n    if (self._deactivated)\n      return;\n    self._deactivated = true;\n    self._callStopCallbacks();\n    Package['facts-base'] && Package['facts-base'].Facts.incrementServerFact(\n      \"livedata\", \"subscriptions\", -1);\n  },\n\n  _callStopCallbacks: function () {\n    var self = this;\n    // tell listeners, so they can clean up\n    var callbacks = self._stopCallbacks;\n    self._stopCallbacks = [];\n    _.each(callbacks, function (callback) {\n      callback();\n    });\n  },\n\n  // Send remove messages for every document.\n  _removeAllDocuments: function () {\n    var self = this;\n    Meteor._noYieldsAllowed(function () {\n      self._documents.forEach(function (collectionDocs, collectionName) {\n        collectionDocs.forEach(function (strId) {\n          self.removed(collectionName, self._idFilter.idParse(strId));\n        });\n      });\n    });\n  },\n\n  // Returns a new Subscription for the same session with the same\n  // initial creation parameters. This isn't a clone: it doesn't have\n  // the same _documents cache, stopped state or callbacks; may have a\n  // different _subscriptionHandle, and gets its userId from the\n  // session, not from this object.\n  _recreate: function () {\n    var self = this;\n    return new Subscription(\n      self._session, self._handler, self._subscriptionId, self._params,\n      self._name);\n  },\n\n  /**\n   * @summary Call inside the publish function.  Stops this client's subscription, triggering a call on the client to the `onStop` callback passed to [`Meteor.subscribe`](#meteor_subscribe), if any. If `error` is not a [`Meteor.Error`](#meteor_error), it will be [sanitized](#meteor_error).\n   * @locus Server\n   * @param {Error} error The error to pass to the client.\n   * @instance\n   * @memberOf Subscription\n   */\n  error: function (error) {\n    var self = this;\n    if (self._isDeactivated())\n      return;\n    self._session._stopSubscription(self._subscriptionId, error);\n  },\n\n  // Note that while our DDP client will notice that you've called stop() on the\n  // server (and clean up its _subscriptions table) we don't actually provide a\n  // mechanism for an app to notice this (the subscribe onError callback only\n  // triggers if there is an error).\n\n  /**\n   * @summary Call inside the publish function.  Stops this client's subscription and invokes the client's `onStop` callback with no error.\n   * @locus Server\n   * @instance\n   * @memberOf Subscription\n   */\n  stop: function () {\n    var self = this;\n    if (self._isDeactivated())\n      return;\n    self._session._stopSubscription(self._subscriptionId);\n  },\n\n  /**\n   * @summary Call inside the publish function.  Registers a callback function to run when the subscription is stopped.\n   * @locus Server\n   * @memberOf Subscription\n   * @instance\n   * @param {Function} func The callback function\n   */\n  onStop: function (callback) {\n    var self = this;\n    callback = Meteor.bindEnvironment(callback, 'onStop callback', self);\n    if (self._isDeactivated())\n      callback();\n    else\n      self._stopCallbacks.push(callback);\n  },\n\n  // This returns true if the sub has been deactivated, *OR* if the session was\n  // destroyed but the deferred call to _deactivateAllSubscriptions hasn't\n  // happened yet.\n  _isDeactivated: function () {\n    var self = this;\n    return self._deactivated || self._session.inQueue === null;\n  },\n\n  /**\n   * @summary Call inside the publish function.  Informs the subscriber that a document has been added to the record set.\n   * @locus Server\n   * @memberOf Subscription\n   * @instance\n   * @param {String} collection The name of the collection that contains the new document.\n   * @param {String} id The new document's ID.\n   * @param {Object} fields The fields in the new document.  If `_id` is present it is ignored.\n   */\n  added: function (collectionName, id, fields) {\n    var self = this;\n    if (self._isDeactivated())\n      return;\n    id = self._idFilter.idStringify(id);\n    let ids = self._documents.get(collectionName);\n    if (ids == null) {\n      ids = new Set();\n      self._documents.set(collectionName, ids);\n    }\n    ids.add(id);\n    self._session.added(self._subscriptionHandle, collectionName, id, fields);\n  },\n\n  /**\n   * @summary Call inside the publish function.  Informs the subscriber that a document in the record set has been modified.\n   * @locus Server\n   * @memberOf Subscription\n   * @instance\n   * @param {String} collection The name of the collection that contains the changed document.\n   * @param {String} id The changed document's ID.\n   * @param {Object} fields The fields in the document that have changed, together with their new values.  If a field is not present in `fields` it was left unchanged; if it is present in `fields` and has a value of `undefined` it was removed from the document.  If `_id` is present it is ignored.\n   */\n  changed: function (collectionName, id, fields) {\n    var self = this;\n    if (self._isDeactivated())\n      return;\n    id = self._idFilter.idStringify(id);\n    self._session.changed(self._subscriptionHandle, collectionName, id, fields);\n  },\n\n  /**\n   * @summary Call inside the publish function.  Informs the subscriber that a document has been removed from the record set.\n   * @locus Server\n   * @memberOf Subscription\n   * @instance\n   * @param {String} collection The name of the collection that the document has been removed from.\n   * @param {String} id The ID of the document that has been removed.\n   */\n  removed: function (collectionName, id) {\n    var self = this;\n    if (self._isDeactivated())\n      return;\n    id = self._idFilter.idStringify(id);\n    // We don't bother to delete sets of things in a collection if the\n    // collection is empty.  It could break _removeAllDocuments.\n    self._documents.get(collectionName).delete(id);\n    self._session.removed(self._subscriptionHandle, collectionName, id);\n  },\n\n  /**\n   * @summary Call inside the publish function.  Informs the subscriber that an initial, complete snapshot of the record set has been sent.  This will trigger a call on the client to the `onReady` callback passed to  [`Meteor.subscribe`](#meteor_subscribe), if any.\n   * @locus Server\n   * @memberOf Subscription\n   * @instance\n   */\n  ready: function () {\n    var self = this;\n    if (self._isDeactivated())\n      return;\n    if (!self._subscriptionId)\n      return;  // unnecessary but ignored for universal sub\n    if (!self._ready) {\n      self._session.sendReady([self._subscriptionId]);\n      self._ready = true;\n    }\n  }\n});\n\n/******************************************************************************/\n/* Server                                                                     */\n/******************************************************************************/\n\nServer = function (options) {\n  var self = this;\n\n  // The default heartbeat interval is 30 seconds on the server and 35\n  // seconds on the client.  Since the client doesn't need to send a\n  // ping as long as it is receiving pings, this means that pings\n  // normally go from the server to the client.\n  //\n  // Note: Troposphere depends on the ability to mutate\n  // Meteor.server.options.heartbeatTimeout! This is a hack, but it's life.\n  self.options = _.defaults(options || {}, {\n    heartbeatInterval: 15000,\n    heartbeatTimeout: 15000,\n    // For testing, allow responding to pings to be disabled.\n    respondToPings: true\n  });\n\n  // Map of callbacks to call when a new connection comes in to the\n  // server and completes DDP version negotiation. Use an object instead\n  // of an array so we can safely remove one from the list while\n  // iterating over it.\n  self.onConnectionHook = new Hook({\n    debugPrintExceptions: \"onConnection callback\"\n  });\n\n  // Map of callbacks to call when a new message comes in.\n  self.onMessageHook = new Hook({\n    debugPrintExceptions: \"onMessage callback\"\n  });\n\n  self.publish_handlers = {};\n  self.universal_publish_handlers = [];\n\n  self.method_handlers = {};\n\n  self.sessions = new Map(); // map from id to session\n\n  self.stream_server = new StreamServer;\n\n  self.stream_server.register(function (socket) {\n    // socket implements the SockJSConnection interface\n    socket._meteorSession = null;\n\n    var sendError = function (reason, offendingMessage) {\n      var msg = {msg: 'error', reason: reason};\n      if (offendingMessage)\n        msg.offendingMessage = offendingMessage;\n      socket.send(DDPCommon.stringifyDDP(msg));\n    };\n\n    socket.on('data', function (raw_msg) {\n      if (Meteor._printReceivedDDP) {\n        Meteor._debug(\"Received DDP\", raw_msg);\n      }\n      try {\n        try {\n          var msg = DDPCommon.parseDDP(raw_msg);\n        } catch (err) {\n          sendError('Parse error');\n          return;\n        }\n        if (msg === null || !msg.msg) {\n          sendError('Bad request', msg);\n          return;\n        }\n\n        if (msg.msg === 'connect') {\n          if (socket._meteorSession) {\n            sendError(\"Already connected\", msg);\n            return;\n          }\n          Fiber(function () {\n            self._handleConnect(socket, msg);\n          }).run();\n          return;\n        }\n\n        if (!socket._meteorSession) {\n          sendError('Must connect first', msg);\n          return;\n        }\n        socket._meteorSession.processMessage(msg);\n      } catch (e) {\n        // XXX print stack nicely\n        Meteor._debug(\"Internal exception while processing message\", msg, e);\n      }\n    });\n\n    socket.on('close', function () {\n      if (socket._meteorSession) {\n        Fiber(function () {\n          socket._meteorSession.close();\n        }).run();\n      }\n    });\n  });\n};\n\n_.extend(Server.prototype, {\n\n  /**\n   * @summary Register a callback to be called when a new DDP connection is made to the server.\n   * @locus Server\n   * @param {function} callback The function to call when a new DDP connection is established.\n   * @memberOf Meteor\n   * @importFromPackage meteor\n   */\n  onConnection: function (fn) {\n    var self = this;\n    return self.onConnectionHook.register(fn);\n  },\n\n  /**\n   * @summary Register a callback to be called when a new DDP message is received.\n   * @locus Server\n   * @param {function} callback The function to call when a new DDP message is received.\n   * @memberOf Meteor\n   * @importFromPackage meteor\n   */\n  onMessage: function (fn) {\n    var self = this;\n    return self.onMessageHook.register(fn);\n  },\n\n  _handleConnect: function (socket, msg) {\n    var self = this;\n\n    // The connect message must specify a version and an array of supported\n    // versions, and it must claim to support what it is proposing.\n    if (!(typeof (msg.version) === 'string' &&\n          _.isArray(msg.support) &&\n          _.all(msg.support, _.isString) &&\n          _.contains(msg.support, msg.version))) {\n      socket.send(DDPCommon.stringifyDDP({msg: 'failed',\n                                version: DDPCommon.SUPPORTED_DDP_VERSIONS[0]}));\n      socket.close();\n      return;\n    }\n\n    // In the future, handle session resumption: something like:\n    //  socket._meteorSession = self.sessions[msg.session]\n    var version = calculateVersion(msg.support, DDPCommon.SUPPORTED_DDP_VERSIONS);\n\n    if (msg.version !== version) {\n      // The best version to use (according to the client's stated preferences)\n      // is not the one the client is trying to use. Inform them about the best\n      // version to use.\n      socket.send(DDPCommon.stringifyDDP({msg: 'failed', version: version}));\n      socket.close();\n      return;\n    }\n\n    // Yay, version matches! Create a new session.\n    // Note: Troposphere depends on the ability to mutate\n    // Meteor.server.options.heartbeatTimeout! This is a hack, but it's life.\n    socket._meteorSession = new Session(self, version, socket, self.options);\n    self.sessions.set(socket._meteorSession.id, socket._meteorSession);\n    self.onConnectionHook.each(function (callback) {\n      if (socket._meteorSession)\n        callback(socket._meteorSession.connectionHandle);\n      return true;\n    });\n  },\n  /**\n   * Register a publish handler function.\n   *\n   * @param name {String} identifier for query\n   * @param handler {Function} publish handler\n   * @param options {Object}\n   *\n   * Server will call handler function on each new subscription,\n   * either when receiving DDP sub message for a named subscription, or on\n   * DDP connect for a universal subscription.\n   *\n   * If name is null, this will be a subscription that is\n   * automatically established and permanently on for all connected\n   * client, instead of a subscription that can be turned on and off\n   * with subscribe().\n   *\n   * options to contain:\n   *  - (mostly internal) is_auto: true if generated automatically\n   *    from an autopublish hook. this is for cosmetic purposes only\n   *    (it lets us determine whether to print a warning suggesting\n   *    that you turn off autopublish.)\n   */\n\n  /**\n   * @summary Publish a record set.\n   * @memberOf Meteor\n   * @importFromPackage meteor\n   * @locus Server\n   * @param {String|Object} name If String, name of the record set.  If Object, publications Dictionary of publish functions by name.  If `null`, the set has no name, and the record set is automatically sent to all connected clients.\n   * @param {Function} func Function called on the server each time a client subscribes.  Inside the function, `this` is the publish handler object, described below.  If the client passed arguments to `subscribe`, the function is called with the same arguments.\n   */\n  publish: function (name, handler, options) {\n    var self = this;\n\n    if (! _.isObject(name)) {\n      options = options || {};\n\n      if (name && name in self.publish_handlers) {\n        Meteor._debug(\"Ignoring duplicate publish named '\" + name + \"'\");\n        return;\n      }\n\n      if (Package.autopublish && !options.is_auto) {\n        // They have autopublish on, yet they're trying to manually\n        // picking stuff to publish. They probably should turn off\n        // autopublish. (This check isn't perfect -- if you create a\n        // publish before you turn on autopublish, it won't catch\n        // it. But this will definitely handle the simple case where\n        // you've added the autopublish package to your app, and are\n        // calling publish from your app code.)\n        if (!self.warned_about_autopublish) {\n          self.warned_about_autopublish = true;\n          Meteor._debug(\n    \"** You've set up some data subscriptions with Meteor.publish(), but\\n\" +\n    \"** you still have autopublish turned on. Because autopublish is still\\n\" +\n    \"** on, your Meteor.publish() calls won't have much effect. All data\\n\" +\n    \"** will still be sent to all clients.\\n\" +\n    \"**\\n\" +\n    \"** Turn off autopublish by removing the autopublish package:\\n\" +\n    \"**\\n\" +\n    \"**   $ meteor remove autopublish\\n\" +\n    \"**\\n\" +\n    \"** .. and make sure you have Meteor.publish() and Meteor.subscribe() calls\\n\" +\n    \"** for each collection that you want clients to see.\\n\");\n        }\n      }\n\n      if (name)\n        self.publish_handlers[name] = handler;\n      else {\n        self.universal_publish_handlers.push(handler);\n        // Spin up the new publisher on any existing session too. Run each\n        // session's subscription in a new Fiber, so that there's no change for\n        // self.sessions to change while we're running this loop.\n        self.sessions.forEach(function (session) {\n          if (!session._dontStartNewUniversalSubs) {\n            Fiber(function() {\n              session._startSubscription(handler);\n            }).run();\n          }\n        });\n      }\n    }\n    else{\n      _.each(name, function(value, key) {\n        self.publish(key, value, {});\n      });\n    }\n  },\n\n  _removeSession: function (session) {\n    var self = this;\n    self.sessions.delete(session.id);\n  },\n\n  /**\n   * @summary Defines functions that can be invoked over the network by clients.\n   * @locus Anywhere\n   * @param {Object} methods Dictionary whose keys are method names and values are functions.\n   * @memberOf Meteor\n   * @importFromPackage meteor\n   */\n  methods: function (methods) {\n    var self = this;\n    _.each(methods, function (func, name) {\n      if (typeof func !== 'function')\n        throw new Error(\"Method '\" + name + \"' must be a function\");\n      if (self.method_handlers[name])\n        throw new Error(\"A method named '\" + name + \"' is already defined\");\n      self.method_handlers[name] = func;\n    });\n  },\n\n  call: function (name, ...args) {\n    if (args.length && typeof args[args.length - 1] === \"function\") {\n      // If it's a function, the last argument is the result callback, not\n      // a parameter to the remote method.\n      var callback = args.pop();\n    }\n\n    return this.apply(name, args, callback);\n  },\n\n  // A version of the call method that always returns a Promise.\n  callAsync: function (name, ...args) {\n    return this.applyAsync(name, args);\n  },\n\n  apply: function (name, args, options, callback) {\n    // We were passed 3 arguments. They may be either (name, args, options)\n    // or (name, args, callback)\n    if (! callback && typeof options === 'function') {\n      callback = options;\n      options = {};\n    } else {\n      options = options || {};\n    }\n\n    const promise = this.applyAsync(name, args, options);\n\n    // Return the result in whichever way the caller asked for it. Note that we\n    // do NOT block on the write fence in an analogous way to how the client\n    // blocks on the relevant data being visible, so you are NOT guaranteed that\n    // cursor observe callbacks have fired when your callback is invoked. (We\n    // can change this if there's a real use case.)\n    if (callback) {\n      promise.then(\n        result => callback(undefined, result),\n        exception => callback(exception)\n      );\n    } else {\n      return promise.await();\n    }\n  },\n\n  // @param options {Optional Object}\n  applyAsync: function (name, args, options) {\n    // Run the handler\n    var handler = this.method_handlers[name];\n    if (! handler) {\n      return Promise.reject(\n        new Meteor.Error(404, `Method '${name}' not found`)\n      );\n    }\n\n    // If this is a method call from within another method or publish function,\n    // get the user state from the outer method or publish function, otherwise\n    // don't allow setUserId to be called\n    var userId = null;\n    var setUserId = function() {\n      throw new Error(\"Can't call setUserId on a server initiated method call\");\n    };\n    var connection = null;\n    var currentMethodInvocation = DDP._CurrentMethodInvocation.get();\n    var currentPublicationInvocation = DDP._CurrentPublicationInvocation.get();\n    var randomSeed = null;\n    if (currentMethodInvocation) {\n      userId = currentMethodInvocation.userId;\n      setUserId = function(userId) {\n        currentMethodInvocation.setUserId(userId);\n      };\n      connection = currentMethodInvocation.connection;\n      randomSeed = DDPCommon.makeRpcSeed(currentMethodInvocation, name);\n    } else if (currentPublicationInvocation) {\n      userId = currentPublicationInvocation.userId;\n      setUserId = function(userId) {\n        currentPublicationInvocation._session._setUserId(userId);\n      };\n      connection = currentPublicationInvocation.connection;\n    }\n\n    var invocation = new DDPCommon.MethodInvocation({\n      isSimulation: false,\n      userId,\n      setUserId,\n      connection,\n      randomSeed\n    });\n\n    return new Promise(resolve => resolve(\n      DDP._CurrentMethodInvocation.withValue(\n        invocation,\n        () => maybeAuditArgumentChecks(\n          handler, invocation, EJSON.clone(args),\n          \"internal call to '\" + name + \"'\"\n        )\n      )\n    )).then(EJSON.clone);\n  },\n\n  _urlForSession: function (sessionId) {\n    var self = this;\n    var session = self.sessions.get(sessionId);\n    if (session)\n      return session._socketUrl;\n    else\n      return null;\n  }\n});\n\nvar calculateVersion = function (clientSupportedVersions,\n                                 serverSupportedVersions) {\n  var correctVersion = _.find(clientSupportedVersions, function (version) {\n    return _.contains(serverSupportedVersions, version);\n  });\n  if (!correctVersion) {\n    correctVersion = serverSupportedVersions[0];\n  }\n  return correctVersion;\n};\n\nDDPServer._calculateVersion = calculateVersion;\n\n\n// \"blind\" exceptions other than those that were deliberately thrown to signal\n// errors to the client\nvar wrapInternalException = function (exception, context) {\n  if (!exception) return exception;\n\n  // To allow packages to throw errors intended for the client but not have to\n  // depend on the Meteor.Error class, `isClientSafe` can be set to true on any\n  // error before it is thrown.\n  if (exception.isClientSafe) {\n    if (!(exception instanceof Meteor.Error)) {\n      const originalMessage = exception.message;\n      exception = new Meteor.Error(exception.error, exception.reason, exception.details);\n      exception.message = originalMessage;\n    }\n    return exception;\n  }\n\n  // Tests can set the '_expectedByTest' flag on an exception so it won't go to\n  // the server log.\n  if (!exception._expectedByTest) {\n    Meteor._debug(\"Exception \" + context, exception);\n    if (exception.sanitizedError) {\n      Meteor._debug(\"Sanitized and reported to the client as:\", exception.sanitizedError);\n      Meteor._debug();\n    }\n  }\n\n  // Did the error contain more details that could have been useful if caught in\n  // server code (or if thrown from non-client-originated code), but also\n  // provided a \"sanitized\" version with more context than 500 Internal server\n  // error? Use that.\n  if (exception.sanitizedError) {\n    if (exception.sanitizedError.isClientSafe)\n      return exception.sanitizedError;\n    Meteor._debug(\"Exception \" + context + \" provides a sanitizedError that \" +\n                  \"does not have isClientSafe property set; ignoring\");\n  }\n\n  return new Meteor.Error(500, \"Internal server error\");\n};\n\n\n// Audit argument checks, if the audit-argument-checks package exists (it is a\n// weak dependency of this package).\nvar maybeAuditArgumentChecks = function (f, context, args, description) {\n  args = args || [];\n  if (Package['audit-argument-checks']) {\n    return Match._failIfArgumentsAreNotAllChecked(\n      f, context, args, description);\n  }\n  return f.apply(context, args);\n};\n","var Future = Npm.require('fibers/future');\n\n// A write fence collects a group of writes, and provides a callback\n// when all of the writes are fully committed and propagated (all\n// observers have been notified of the write and acknowledged it.)\n//\nDDPServer._WriteFence = function () {\n  var self = this;\n\n  self.armed = false;\n  self.fired = false;\n  self.retired = false;\n  self.outstanding_writes = 0;\n  self.before_fire_callbacks = [];\n  self.completion_callbacks = [];\n};\n\n// The current write fence. When there is a current write fence, code\n// that writes to databases should register their writes with it using\n// beginWrite().\n//\nDDPServer._CurrentWriteFence = new Meteor.EnvironmentVariable;\n\n_.extend(DDPServer._WriteFence.prototype, {\n  // Start tracking a write, and return an object to represent it. The\n  // object has a single method, committed(). This method should be\n  // called when the write is fully committed and propagated. You can\n  // continue to add writes to the WriteFence up until it is triggered\n  // (calls its callbacks because all writes have committed.)\n  beginWrite: function () {\n    var self = this;\n\n    if (self.retired)\n      return { committed: function () {} };\n\n    if (self.fired)\n      throw new Error(\"fence has already activated -- too late to add writes\");\n\n    self.outstanding_writes++;\n    var committed = false;\n    return {\n      committed: function () {\n        if (committed)\n          throw new Error(\"committed called twice on the same write\");\n        committed = true;\n        self.outstanding_writes--;\n        self._maybeFire();\n      }\n    };\n  },\n\n  // Arm the fence. Once the fence is armed, and there are no more\n  // uncommitted writes, it will activate.\n  arm: function () {\n    var self = this;\n    if (self === DDPServer._CurrentWriteFence.get())\n      throw Error(\"Can't arm the current fence\");\n    self.armed = true;\n    self._maybeFire();\n  },\n\n  // Register a function to be called once before firing the fence.\n  // Callback function can add new writes to the fence, in which case\n  // it won't fire until those writes are done as well.\n  onBeforeFire: function (func) {\n    var self = this;\n    if (self.fired)\n      throw new Error(\"fence has already activated -- too late to \" +\n                      \"add a callback\");\n    self.before_fire_callbacks.push(func);\n  },\n\n  // Register a function to be called when the fence fires.\n  onAllCommitted: function (func) {\n    var self = this;\n    if (self.fired)\n      throw new Error(\"fence has already activated -- too late to \" +\n                      \"add a callback\");\n    self.completion_callbacks.push(func);\n  },\n\n  // Convenience function. Arms the fence, then blocks until it fires.\n  armAndWait: function () {\n    var self = this;\n    var future = new Future;\n    self.onAllCommitted(function () {\n      future['return']();\n    });\n    self.arm();\n    future.wait();\n  },\n\n  _maybeFire: function () {\n    var self = this;\n    if (self.fired)\n      throw new Error(\"write fence already activated?\");\n    if (self.armed && !self.outstanding_writes) {\n      function invokeCallback (func) {\n        try {\n          func(self);\n        } catch (err) {\n          Meteor._debug(\"exception in write fence callback\", err);\n        }\n      }\n\n      self.outstanding_writes++;\n      while (self.before_fire_callbacks.length > 0) {\n        var callbacks = self.before_fire_callbacks;\n        self.before_fire_callbacks = [];\n        _.each(callbacks, invokeCallback);\n      }\n      self.outstanding_writes--;\n\n      if (!self.outstanding_writes) {\n        self.fired = true;\n        var callbacks = self.completion_callbacks;\n        self.completion_callbacks = [];\n        _.each(callbacks, invokeCallback);\n      }\n    }\n  },\n\n  // Deactivate this fence so that adding more writes has no effect.\n  // The fence must have already fired.\n  retire: function () {\n    var self = this;\n    if (! self.fired)\n      throw new Error(\"Can't retire a fence that hasn't fired.\");\n    self.retired = true;\n  }\n});\n","// A \"crossbar\" is a class that provides structured notification registration.\n// See _match for the definition of how a notification matches a trigger.\n// All notifications and triggers must have a string key named 'collection'.\n\nDDPServer._Crossbar = function (options) {\n  var self = this;\n  options = options || {};\n\n  self.nextId = 1;\n  // map from collection name (string) -> listener id -> object. each object has\n  // keys 'trigger', 'callback'.  As a hack, the empty string means \"no\n  // collection\".\n  self.listenersByCollection = {};\n  self.listenersByCollectionCount = {};\n  self.factPackage = options.factPackage || \"livedata\";\n  self.factName = options.factName || null;\n};\n\n_.extend(DDPServer._Crossbar.prototype, {\n  // msg is a trigger or a notification\n  _collectionForMessage: function (msg) {\n    var self = this;\n    if (! _.has(msg, 'collection')) {\n      return '';\n    } else if (typeof(msg.collection) === 'string') {\n      if (msg.collection === '')\n        throw Error(\"Message has empty collection!\");\n      return msg.collection;\n    } else {\n      throw Error(\"Message has non-string collection!\");\n    }\n  },\n\n  // Listen for notification that match 'trigger'. A notification\n  // matches if it has the key-value pairs in trigger as a\n  // subset. When a notification matches, call 'callback', passing\n  // the actual notification.\n  //\n  // Returns a listen handle, which is an object with a method\n  // stop(). Call stop() to stop listening.\n  //\n  // XXX It should be legal to call fire() from inside a listen()\n  // callback?\n  listen: function (trigger, callback) {\n    var self = this;\n    var id = self.nextId++;\n\n    var collection = self._collectionForMessage(trigger);\n    var record = {trigger: EJSON.clone(trigger), callback: callback};\n    if (! _.has(self.listenersByCollection, collection)) {\n      self.listenersByCollection[collection] = {};\n      self.listenersByCollectionCount[collection] = 0;\n    }\n    self.listenersByCollection[collection][id] = record;\n    self.listenersByCollectionCount[collection]++;\n\n    if (self.factName && Package['facts-base']) {\n      Package['facts-base'].Facts.incrementServerFact(\n        self.factPackage, self.factName, 1);\n    }\n\n    return {\n      stop: function () {\n        if (self.factName && Package['facts-base']) {\n          Package['facts-base'].Facts.incrementServerFact(\n            self.factPackage, self.factName, -1);\n        }\n        delete self.listenersByCollection[collection][id];\n        self.listenersByCollectionCount[collection]--;\n        if (self.listenersByCollectionCount[collection] === 0) {\n          delete self.listenersByCollection[collection];\n          delete self.listenersByCollectionCount[collection];\n        }\n      }\n    };\n  },\n\n  // Fire the provided 'notification' (an object whose attribute\n  // values are all JSON-compatibile) -- inform all matching listeners\n  // (registered with listen()).\n  //\n  // If fire() is called inside a write fence, then each of the\n  // listener callbacks will be called inside the write fence as well.\n  //\n  // The listeners may be invoked in parallel, rather than serially.\n  fire: function (notification) {\n    var self = this;\n\n    var collection = self._collectionForMessage(notification);\n\n    if (! _.has(self.listenersByCollection, collection)) {\n      return;\n    }\n\n    var listenersForCollection = self.listenersByCollection[collection];\n    var callbackIds = [];\n    _.each(listenersForCollection, function (l, id) {\n      if (self._matches(notification, l.trigger)) {\n        callbackIds.push(id);\n      }\n    });\n\n    // Listener callbacks can yield, so we need to first find all the ones that\n    // match in a single iteration over self.listenersByCollection (which can't\n    // be mutated during this iteration), and then invoke the matching\n    // callbacks, checking before each call to ensure they haven't stopped.\n    // Note that we don't have to check that\n    // self.listenersByCollection[collection] still === listenersForCollection,\n    // because the only way that stops being true is if listenersForCollection\n    // first gets reduced down to the empty object (and then never gets\n    // increased again).\n    _.each(callbackIds, function (id) {\n      if (_.has(listenersForCollection, id)) {\n        listenersForCollection[id].callback(notification);\n      }\n    });\n  },\n\n  // A notification matches a trigger if all keys that exist in both are equal.\n  //\n  // Examples:\n  //  N:{collection: \"C\"} matches T:{collection: \"C\"}\n  //    (a non-targeted write to a collection matches a\n  //     non-targeted query)\n  //  N:{collection: \"C\", id: \"X\"} matches T:{collection: \"C\"}\n  //    (a targeted write to a collection matches a non-targeted query)\n  //  N:{collection: \"C\"} matches T:{collection: \"C\", id: \"X\"}\n  //    (a non-targeted write to a collection matches a\n  //     targeted query)\n  //  N:{collection: \"C\", id: \"X\"} matches T:{collection: \"C\", id: \"X\"}\n  //    (a targeted write to a collection matches a targeted query targeted\n  //     at the same document)\n  //  N:{collection: \"C\", id: \"X\"} does not match T:{collection: \"C\", id: \"Y\"}\n  //    (a targeted write to a collection does not match a targeted query\n  //     targeted at a different document)\n  _matches: function (notification, trigger) {\n    // Most notifications that use the crossbar have a string `collection` and\n    // maybe an `id` that is a string or ObjectID. We're already dividing up\n    // triggers by collection, but let's fast-track \"nope, different ID\" (and\n    // avoid the overly generic EJSON.equals). This makes a noticeable\n    // performance difference; see https://github.com/meteor/meteor/pull/3697\n    if (typeof(notification.id) === 'string' &&\n        typeof(trigger.id) === 'string' &&\n        notification.id !== trigger.id) {\n      return false;\n    }\n    if (notification.id instanceof MongoID.ObjectID &&\n        trigger.id instanceof MongoID.ObjectID &&\n        ! notification.id.equals(trigger.id)) {\n      return false;\n    }\n\n    return _.all(trigger, function (triggerValue, key) {\n      return !_.has(notification, key) ||\n        EJSON.equals(triggerValue, notification[key]);\n    });\n  }\n});\n\n// The \"invalidation crossbar\" is a specific instance used by the DDP server to\n// implement write fence notifications. Listener callbacks on this crossbar\n// should call beginWrite on the current write fence before they return, if they\n// want to delay the write fence from firing (ie, the DDP method-data-updated\n// message from being sent).\nDDPServer._InvalidationCrossbar = new DDPServer._Crossbar({\n  factName: \"invalidation-crossbar-listeners\"\n});\n","if (process.env.DDP_DEFAULT_CONNECTION_URL) {\n  __meteor_runtime_config__.DDP_DEFAULT_CONNECTION_URL =\n    process.env.DDP_DEFAULT_CONNECTION_URL;\n}\n\nMeteor.server = new Server;\n\nMeteor.refresh = function (notification) {\n  DDPServer._InvalidationCrossbar.fire(notification);\n};\n\n// Proxy the public methods of Meteor.server so they can\n// be called directly on Meteor.\n_.each(['publish', 'methods', 'call', 'apply', 'onConnection', 'onMessage'],\n       function (name) {\n         Meteor[name] = _.bind(Meteor.server[name], Meteor.server);\n       });\n\n// Meteor.server used to be called Meteor.default_server. Provide\n// backcompat as a courtesy even though it was never documented.\n// XXX COMPAT WITH 0.6.4\nMeteor.default_server = Meteor.server;\n"]}